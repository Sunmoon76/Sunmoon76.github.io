<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>清风的博客</title>
  
  <subtitle>山水有相逢，山不动，水不停</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://sunmoon.com/"/>
  <updated>2020-09-04T10:27:51.488Z</updated>
  <id>http://sunmoon.com/</id>
  
  <author>
    <name>Sunmoon</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>MySQL函数&amp;权限操作&amp;索引&amp;性能</title>
    <link href="http://sunmoon.com/2020/09/03/MySQL%E5%87%BD%E6%95%B0-%E6%9D%83%E9%99%90%E6%93%8D%E4%BD%9C-%E7%B4%A2%E5%BC%95-%E6%80%A7%E8%83%BD/"/>
    <id>http://sunmoon.com/2020/09/03/MySQL%E5%87%BD%E6%95%B0-%E6%9D%83%E9%99%90%E6%93%8D%E4%BD%9C-%E7%B4%A2%E5%BC%95-%E6%80%A7%E8%83%BD/</id>
    <published>2020-09-03T10:07:51.000Z</published>
    <updated>2020-09-04T10:27:51.488Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、MySQL函数"><a href="#一、MySQL函数" class="headerlink" title="一、MySQL函数"></a>一、MySQL函数</h2><p>为了简化操作，<strong>mysql提供</strong>了大量的函数给程序员使用（比如你想输入当前时间，可以调用now()函数）</p><p>函数可以出现的位置：插入语句的values()中，更新语句中，删除语句中，查询语句及其子句中。</p><blockquote><p>菜鸟教程：<a href="https://www.runoob.com/mysql/mysql-functions.html" target="_blank" rel="noopener">https://www.runoob.com/mysql/mysql-functions.html</a></p></blockquote><a id="more"></a><ul><li>准备数据</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">CREATE DATABASE mysql_fun;</span><br><span class="line">USE mysql_fun;</span><br><span class="line"></span><br><span class="line">CREATE TABLE &#96;dept&#96; (</span><br><span class="line">    &#96;id&#96; INT(11) NOT NULL,</span><br><span class="line">    &#96;dname&#96; VARCHAR(50) DEFAULT NULL,</span><br><span class="line">    &#96;loc&#96; VARCHAR(50) DEFAULT NULL,</span><br><span class="line">    PRIMARY KEY (&#96;id&#96;)</span><br><span class="line">);</span><br><span class="line">INSERT  INTO &#96;dept&#96;(&#96;id&#96;,&#96;dname&#96;,&#96;loc&#96;) VALUES (10,&#39;教研部&#39;,&#39;北京&#39;),(20,&#39;学工部&#39;,&#39;上海&#39;),(30,&#39;销售部&#39;,&#39;广州&#39;),(40,&#39;财务部&#39;,&#39;深圳&#39;);</span><br><span class="line"></span><br><span class="line">CREATE TABLE &#96;emp&#96; (</span><br><span class="line">    &#96;id&#96; INT(11) NOT NULL,</span><br><span class="line">    &#96;ename&#96; VARCHAR(50) DEFAULT NULL,</span><br><span class="line">    &#96;job_id&#96; INT(11) DEFAULT NULL,</span><br><span class="line">    &#96;mgr&#96; INT(11) DEFAULT NULL,</span><br><span class="line">    &#96;joindate&#96; DATE DEFAULT NULL,</span><br><span class="line">    &#96;salary&#96; DECIMAL(7,2) DEFAULT NULL,</span><br><span class="line">    &#96;bonus&#96; DECIMAL(7,2) DEFAULT NULL,</span><br><span class="line">    &#96;dept_id&#96; INT(11) DEFAULT NULL,</span><br><span class="line">    &#96;nickname&#96; VARCHAR(32) DEFAULT NULL,</span><br><span class="line">    PRIMARY KEY (&#96;id&#96;)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">INSERT  INTO </span><br><span class="line">&#96;emp&#96;(&#96;id&#96;,&#96;ename&#96;,&#96;job_id&#96;,&#96;mgr&#96;,&#96;joindate&#96;,&#96;salary&#96;,&#96;bonus&#96;,&#96;dept_id&#96;,&#96;nickname&#96;)</span><br><span class="line">VALUES </span><br><span class="line">(1001,&#39;孙悟空&#39;,4,1004,&#39;2010-12-17&#39;,&#39;8000.00&#39;,NULL,20,&#39;sunwukong&#39;),</span><br><span class="line">(1002,&#39;卢俊义&#39;,3,1006,&#39;2011-02-20&#39;,&#39;16000.00&#39;,&#39;3000.00&#39;,30,&#39;lujunyi&#39;),</span><br><span class="line">(1003,&#39;林冲&#39;,3,1006,&#39;2011-02-22&#39;,&#39;12500.00&#39;,&#39;5000.00&#39;,30,&#39;linchong&#39;),</span><br><span class="line">(1004,&#39;唐僧&#39;,2,1009,&#39;2011-04-02&#39;,&#39;29750.00&#39;,NULL,20,&#39;tangseng&#39;),</span><br><span class="line">(1005,&#39;李逵&#39;,4,1006,&#39;2011-09-28&#39;,&#39;12500.00&#39;,&#39;14000.00&#39;,30,&#39;likui&#39;),</span><br><span class="line">(1006,&#39;宋江&#39;,2,1009,&#39;2011-05-01&#39;,&#39;28500.00&#39;,NULL,30,&#39;songjiang&#39;),</span><br><span class="line">(1007,&#39;刘备&#39;,2,1009,&#39;2011-09-01&#39;,&#39;24500.00&#39;,NULL,10,&#39;liubei&#39;),</span><br><span class="line">(1008,&#39;猪八戒&#39;,4,1004,&#39;2007-04-19&#39;,&#39;30000.00&#39;,NULL,20,&#39;zhubajie&#39;),</span><br><span class="line">(1009,&#39;罗贯中&#39;,1,NULL,&#39;2001-02-17&#39;,&#39;50000.00&#39;,NULL,10,&#39;luoguanzhong&#39;),</span><br><span class="line">(1010,&#39;吴用&#39;,3,1006,&#39;2008-09-08&#39;,&#39;15000.00&#39;,&#39;5000.00&#39;,30,&#39;wuyong&#39;),</span><br><span class="line">(1011,&#39;沙僧&#39;,4,1004,&#39;2009-05-23&#39;,&#39;11000.00&#39;,&#39;3000.00&#39;,20,&#39;shaseng&#39;),</span><br><span class="line">(1012,&#39;李逵&#39;,4,1006,&#39;2015-12-03&#39;,&#39;9500.00&#39;,&#39;5000.00&#39;,30,&#39;likui&#39;),</span><br><span class="line">(1013,&#39;小白龙&#39;,4,1004,&#39;2013-12-03&#39;,&#39;30000.00&#39;,&#39;3000.00&#39;,20,&#39;xiaobailong&#39;),</span><br><span class="line">(1014,&#39;关羽&#39;,4,1007,&#39;2002-02-23&#39;,&#39;13000.00&#39;,NULL,10,&#39;guanyu&#39;);</span><br><span class="line"></span><br><span class="line">CREATE TABLE &#96;job&#96; (</span><br><span class="line">    &#96;id&#96; INT(11) NOT NULL,</span><br><span class="line">    &#96;jname&#96; VARCHAR(20) DEFAULT NULL,</span><br><span class="line">    &#96;description&#96; VARCHAR(50) DEFAULT NULL,</span><br><span class="line">    PRIMARY KEY (&#96;id&#96;)</span><br><span class="line">) ;</span><br><span class="line">INSERT  INTO &#96;job&#96;(&#96;id&#96;,&#96;jname&#96;,&#96;description&#96;) VALUES (1,&#39;董事长&#39;,&#39;管理整个公司，接单&#39;),(2,&#39;经理&#39;,&#39;管理部门员工&#39;),(3,&#39;销售员&#39;,&#39;向客人推销产品&#39;),(4,&#39;文员&#39;,&#39;使用办公软件&#39;);</span><br><span class="line"></span><br><span class="line">CREATE TABLE &#96;salarygrade&#96; (</span><br><span class="line">    &#96;grade&#96; INT(11) NOT NULL,</span><br><span class="line">    &#96;losalary&#96; INT(11) DEFAULT NULL,</span><br><span class="line">    &#96;hisalary&#96; INT(11) DEFAULT NULL,</span><br><span class="line">    PRIMARY KEY (&#96;grade&#96;)</span><br><span class="line">) ;</span><br><span class="line"></span><br><span class="line">INSERT  INTO &#96;salarygrade&#96;(&#96;grade&#96;,&#96;losalary&#96;,&#96;hisalary&#96;) VALUES (1,7000,12000),(2,12010,14000),(3,14010,20000),(4,20010,30000),(5,30010,99990);</span><br></pre></td></tr></table></figure><h3 id="1-1-字符串函数"><a href="#1-1-字符串函数" class="headerlink" title="1.1 字符串函数"></a>1.1 字符串函数</h3><ul><li>常用</li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1.  </span>函数：CONCAT(s1,s2...sn)</span><br><span class="line"><span class="code">描述：字符串 s1,s2 等多个字符串合并为一个字符串</span></span><br><span class="line"><span class="code">实例：select concat("hello",'world');</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">2.  </span>函数：CHAR_LENGTH(str)</span><br><span class="line"><span class="code">描述：返回字符串 str 的字符数</span></span><br><span class="line"><span class="code">实例：select char_length('helloworld');</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">3.  </span>函数：LENGTH(str)</span><br><span class="line"><span class="code">描述：返回字符串 s 的字节数</span></span><br><span class="line"><span class="code">字符集：UTF8（一个中文字符占3个字节）</span></span><br><span class="line"><span class="code">实例：select length('hello,world');</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">4.  </span>函数：LCASE(s) | UCASE(s)</span><br><span class="line"><span class="code">描述：将字符串转换为大小写</span></span><br><span class="line"><span class="code">实例：select ucase('hello');</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">5.  </span>函数：LOCATE(s1,str)</span><br><span class="line"><span class="code">描述：从字符串 str 中获取 s1 的开始位置</span></span><br><span class="line"><span class="code">注意：从1开始</span></span><br><span class="line"><span class="code">实例：select locate('e','hello');</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">6.  </span>函数：TRIM(str) | LTRIM(str) | RTRIM(str)</span><br><span class="line"><span class="code">描述：字符串去空格</span></span><br><span class="line"><span class="code">实例：select trim('   java    ');</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">7.  </span>函数：REPLACE(s,s1,s2)</span><br><span class="line"><span class="code">描述：将字符串 s2 替代字符串 s 中的字符串 s1</span></span><br><span class="line"><span class="code">实例：select replace('你大爷的','大爷','**');</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">8.  </span>函数：SUBSTR(s, start, length)</span><br><span class="line"><span class="code">描述：从字符串 s 的 start 位置截取长度为 length 的子字符串</span></span><br><span class="line"><span class="code">注意：从1开始截取</span></span><br><span class="line"><span class="code">实例：select substr('itheima','3');</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">9. </span>函数：STRCMP(str1,str2)</span><br><span class="line"><span class="code">描述：比较字符串大小,左大于右时返回1，左等于右时返回0，，左小于于右时返回-1，</span></span><br><span class="line"><span class="code">实例：select strcmp('a','b');</span></span><br></pre></td></tr></table></figure><ul><li>练习</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">-- 1.将所有员工的昵称改为大写</span><br><span class="line">SELECT UCASE(nickname) FROM emp;</span><br><span class="line"></span><br><span class="line">-- 2.显示所有员工的姓氏，截取</span><br><span class="line">SELECT SUBSTR(ename,1,1) FROM emp;</span><br><span class="line"></span><br><span class="line">-- 3.显示所有员工姓名字符长度</span><br><span class="line">SELECT ename,CHAR_LENGTH(ename) FROM emp;</span><br><span class="line"></span><br><span class="line">-- 4.显示所有员工姓名字节长度</span><br><span class="line">SELECT ename,LENGTH(ename) FROM emp;</span><br><span class="line"></span><br><span class="line">-- 5.将所有姓李的员工，姓氏替换为li</span><br><span class="line">SELECT REPLACE(ename,&#39;李&#39;,&#39;li&#39;) FROM emp;</span><br><span class="line"></span><br><span class="line">-- 6.将所有员工的姓名和昵称拼接在一起 注意事项，mysql这个函数是一个可变参数，oracle只能传递二个参数</span><br><span class="line">SELECT CONCAT(CONCAT(ename,nickname),salary) FROM emp;</span><br></pre></td></tr></table></figure><h3 id="1-2-日期函数"><a href="#1-2-日期函数" class="headerlink" title="1.2 日期函数"></a>1.2 日期函数</h3><ul><li>常用</li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1.  </span>函数：NOW() | CURDATE() | CURTIME()</span><br><span class="line"><span class="code">描述：获取系统当前日期时间、日期、时间</span></span><br><span class="line"><span class="code">实例：select now();</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">2.  </span>函数：YEAR(DATE) | MONTH(DATE) | DAY(DATE)</span><br><span class="line"><span class="code">描述：从日期中选择出年、月、日</span></span><br><span class="line"><span class="code">实例：select MONTH(now());</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">3.  </span>函数：LAST_DAY(DATE)</span><br><span class="line"><span class="code">描述：返回月份的最后一天</span></span><br><span class="line"><span class="code">实例：select last_day(now());</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">4.  </span>函数：ADDDATE(DATE,n) | SUBDATE(DATE,n)</span><br><span class="line"><span class="code">描述：计算起始日期 DATE 加（减） n 天的日期</span></span><br><span class="line"><span class="code">实例：select adddate(now(),10);</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">5.  </span>函数：QUARTER(DATE)</span><br><span class="line"><span class="code">描述：返回日期 DATE 是第几季节，返回 1 到 4</span></span><br><span class="line"><span class="code">实例：select quarter(now());</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">6.  </span>函数：DATEDIFF(d1,d2)</span><br><span class="line"><span class="code">描述：计算日期 d1-&gt;d2 之间相隔的天数</span></span><br><span class="line"><span class="code">实例：select datediff(now(),'2020-08-11');</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">7.  </span>函数：DATE_FORMAT(d,f)</span><br><span class="line"><span class="code">描述：按表达式 f的要求显示日期 d</span></span><br><span class="line"><span class="code">实例：select date_format(now(),'%Y年%m月%d日');</span></span><br></pre></td></tr></table></figure><ul><li>练习</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">-- 1.统计每个员工入职的天数</span><br><span class="line">SELECT ename,DATEDIFF(NOW(),joindate) FROM emp;</span><br><span class="line"></span><br><span class="line">-- 2.统计每个员工的工龄</span><br><span class="line">SELECT ename,DATEDIFF(NOW(),joindate)&#x2F;365 FROM emp;</span><br><span class="line"></span><br><span class="line">-- 3.查询2011年入职的员工</span><br><span class="line">SELECT * FROM emp WHERE YEAR(joindate) &#x3D; 2011;</span><br><span class="line"></span><br><span class="line">-- 4.统计入职10年以上的员工信息</span><br><span class="line">SELECT * FROM emp WHERE DATEDIFF(NOW(),joindate)&#x2F;365  &gt; 10;</span><br></pre></td></tr></table></figure><h3 id="1-3-数字函数"><a href="#1-3-数字函数" class="headerlink" title="1.3 数字函数"></a>1.3 数字函数</h3><ul><li>常用</li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1.  </span>函数：ABS(x)</span><br><span class="line"><span class="code">描述：返回 x 的绝对值　　</span></span><br><span class="line"><span class="code">实例：select abs(-5);</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">2.  </span>函数：CEIL(x) | FLOOR(x)</span><br><span class="line"><span class="code">描述：向上（下）取整</span></span><br><span class="line"><span class="code">实例：select ceil(-13.3);</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">3.  </span>函数：MOD(x,y)</span><br><span class="line"><span class="code">描述：返回x mod y的结果，取余</span></span><br><span class="line"><span class="code">实例：select mod (5,4);</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">4.  </span>函数：RAND()</span><br><span class="line"><span class="code">描述：返回 0 到 1 的随机数</span></span><br><span class="line"><span class="code">实例：select rand();</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">5.  </span>函数：ROUND(x)</span><br><span class="line"><span class="code">描述：四舍五入</span></span><br><span class="line"><span class="code">实例：select round(3.14);</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">6.  </span>函数：TRUNCATE(x,y)</span><br><span class="line"><span class="code">描述：返回数值 x 保留到小数点后 y 位的值</span></span><br><span class="line"><span class="code">实例：select truncate(3.1415926,2);</span></span><br></pre></td></tr></table></figure><ul><li>练习</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">-- 1.统计每个员工的工龄，超过半年的算一年</span><br><span class="line">SELECT ename, ROUND(DATEDIFF(NOW(),joindate)&#x2F;365) FROM emp;</span><br><span class="line"></span><br><span class="line">-- 2.统计每个部门的平均薪资,保留2位小数</span><br><span class="line">SELECT dept_id, TRUNCATE(AVG(salary),2) FROM emp GROUP BY dept_id;</span><br><span class="line"></span><br><span class="line">-- 3.统计每个部门的平均薪资,小数向上取整</span><br><span class="line">SELECT dept_id, CEIL(AVG(salary)) FROM emp GROUP BY dept_id;</span><br><span class="line"></span><br><span class="line">-- 4.统计每个部门的平均薪资,小数向下取整</span><br><span class="line">SELECT dept_id, FLOOR(AVG(salary)) FROM emp GROUP BY dept_id</span><br></pre></td></tr></table></figure><h3 id="1-4-高级函数"><a href="#1-4-高级函数" class="headerlink" title="1.4 高级函数"></a>1.4 高级函数</h3><h4 id="1-4-1-CASE表达式"><a href="#1-4-1-CASE表达式" class="headerlink" title="1.4.1 CASE表达式"></a>1.4.1 CASE表达式</h4><blockquote><p>相当于Java中的switch语句</p></blockquote><ul><li>语法</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">SELECT </span><br><span class="line">CASE [字段,值] </span><br><span class="line">WHEN 判断条件1 </span><br><span class="line">THEN 希望的到的值1</span><br><span class="line">WHEN 判断条件2 </span><br><span class="line">THEN 希望的到的值2</span><br><span class="line">ELSE 前面条件都没有满足情况下得到的值 </span><br><span class="line">END</span><br><span class="line">FROM</span><br><span class="line">table_name;</span><br></pre></td></tr></table></figure><ul><li>练习</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">-- 查询每个员工的工资等级并排序</span><br><span class="line">-- 工资等级在1显示为 &#39;努力赚钱&#39;</span><br><span class="line">-- 工资等级在2显示为 &#39;小康生活&#39;</span><br><span class="line">-- 工资等级在3显示为 &#39;可以娶媳妇&#39;</span><br><span class="line">-- 工资等级在4显示为 &#39;可以买车&#39;</span><br><span class="line">-- 工资等级在5显示为 &#39;可以买房&#39;</span><br><span class="line">-- 工资等级不在以上列表中显示为  &#39;土豪&#39;</span><br><span class="line"></span><br><span class="line">-- 1.确定表连接关系</span><br><span class="line">SELECT * FROM emp e INNER JOIN salarygrade sg ON e.salary BETWEEN sg.losalary AND sg.hisalary;</span><br><span class="line">-- 2.确定显示字段</span><br><span class="line">SELECT e.ename,e.salary,sg.grade FROM emp e INNER JOIN salarygrade sg ON e.salary BETWEEN sg.losalary AND sg.hisalary;</span><br><span class="line">-- 3.确定业务条件</span><br><span class="line">SELECT </span><br><span class="line">  e.ename,</span><br><span class="line">  e.salary,</span><br><span class="line">  CASE sg.grade </span><br><span class="line">WHEN 1 THEN &#39;努力赚钱&#39;</span><br><span class="line">WHEN 2 THEN &#39;小康生活&#39;</span><br><span class="line">WHEN 3 THEN &#39;可以娶媳妇&#39;</span><br><span class="line">WHEN 4 THEN &#39;可以买车&#39;</span><br><span class="line">WHEN 5 THEN &#39;可以买房&#39;</span><br><span class="line">ELSE &#39;土豪&#39;</span><br><span class="line">  END AS &#39;生活状态&#39;</span><br><span class="line">FROM</span><br><span class="line">  emp e </span><br><span class="line">  INNER JOIN salarygrade sg </span><br><span class="line">    ON e.salary BETWEEN sg.losalary </span><br><span class="line">    AND sg.hisalary ;</span><br></pre></td></tr></table></figure><h4 id="1-4-2-IF表达式"><a href="#1-4-2-IF表达式" class="headerlink" title="1.4.2 IF表达式"></a>1.4.2 IF表达式</h4><blockquote><p>相当于Java中的三元运算符</p></blockquote><ul><li>语法</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT IF(1 &gt; 0,&#39;真&#39;,&#39;假&#39;) from 表名;</span><br></pre></td></tr></table></figure><ul><li>练习</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-- 工资+奖金大于20000的员工 显示家有娇妻，否则显示单身狗</span><br><span class="line">SELECT ename, IF((salary +IFNULL(bonus,0))&gt;20000,&#39;买车买房&#39;,&#39;吃糠咽菜&#39;) FROM emp;</span><br></pre></td></tr></table></figure><h2 id="二、MySQL综合练习"><a href="#二、MySQL综合练习" class="headerlink" title="二、MySQL综合练习"></a>二、MySQL综合练习</h2><p><img data-src="/img/mysql%E5%87%BD%E6%95%B0%E7%BB%BC%E5%90%88%E7%BB%83%E4%B9%A0.png" alt="mysql函数综合练习"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line">-- 1.计算员工的日薪(按22天)，保留二位小数</span><br><span class="line">SELECT ename, TRUNCATE((salary + IFNULL(bonus,0))&#x2F;22,2) AS 日薪 FROM emp;</span><br><span class="line"></span><br><span class="line">-- 2.计算出员工的年薪，并且以年薪排序 降序</span><br><span class="line">SELECT ename,((salary + IFNULL(bonus,0) )*12) AS 年薪 FROM emp ORDER BY 年薪 DESC;</span><br><span class="line"></span><br><span class="line">-- 3.找出奖金少于5000或者没有获得奖金的员工的信息</span><br><span class="line">SELECT * FROM emp WHERE IFNULL(bonus,0)&lt; 5000;</span><br><span class="line"></span><br><span class="line">-- 4.返回员工职务名称及其从事此职务的最低工资</span><br><span class="line">-- 4.1 确定表和连接条件</span><br><span class="line">SELECT * FROM emp e INNER JOIN job j ON e.job_id &#x3D; j.id;</span><br><span class="line">-- 4.2 分组</span><br><span class="line">SELECT j.jname,MIN(e.salary) FROM emp e INNER JOIN job j ON e.job_id &#x3D; j.id GROUP BY j.jname;</span><br><span class="line"></span><br><span class="line">-- 5.返回工龄超过10年，且2月份入职的员工信息</span><br><span class="line">SELECT * FROM emp WHERE DATEDIFF(NOW(),joindate)&#x2F;365 &gt; 10 AND MONTH(joindate) &#x3D; 2;</span><br><span class="line"></span><br><span class="line">-- 6.返回与 林冲 同一年入职的员工</span><br><span class="line">-- 6.1 求出林冲入职时间</span><br><span class="line">SELECT YEAR(joindate) FROM emp WHERE ename &#x3D; &#39;林冲&#39;;</span><br><span class="line">-- 6.2 在查询同年入职员工 </span><br><span class="line">SELECT * FROM emp WHERE YEAR(joindate) &#x3D; (SELECT YEAR(joindate) FROM emp WHERE ename &#x3D; &#39;林冲&#39;);</span><br><span class="line"></span><br><span class="line">-- 7.返回每个员工的名称及其上级领导的名称</span><br><span class="line">SELECT e.ename,m.ename FROM emp e LEFT OUTER JOIN emp m ON e.mgr &#x3D; m.id;</span><br><span class="line"></span><br><span class="line">-- 8.返回工资为二等级（工资等级表）的职员名字（员工表）、部门名称（部门表）</span><br><span class="line">-- 8.1 确定表和连接条件</span><br><span class="line">SELECT * FROM emp e </span><br><span class="line">INNER JOIN salarygrade sg ON e.salary BETWEEN sg.losalary AND sg.hisalary</span><br><span class="line">INNER JOIN dept d ON e.dept_id &#x3D; d.id;</span><br><span class="line">-- 8.2 确定显示字段</span><br><span class="line">SELECT </span><br><span class="line">e.ename,</span><br><span class="line">sg.grade,</span><br><span class="line">d.dname</span><br><span class="line">FROM emp e </span><br><span class="line">INNER JOIN salarygrade sg ON e.salary BETWEEN sg.losalary AND sg.hisalary</span><br><span class="line">INNER JOIN dept d ON e.dept_id &#x3D; d.id;</span><br><span class="line">-- 8.3 确定业务条件</span><br><span class="line">SELECT </span><br><span class="line">e.ename,</span><br><span class="line">sg.grade,</span><br><span class="line">d.dname</span><br><span class="line">FROM emp e </span><br><span class="line">INNER JOIN salarygrade sg ON e.salary BETWEEN sg.losalary AND sg.hisalary</span><br><span class="line">INNER JOIN dept d ON e.dept_id &#x3D; d.id</span><br><span class="line">WHERE sg.grade &#x3D; 2;</span><br><span class="line"></span><br><span class="line">-- 9.涨工资：董事长2000 经理1500 其他800</span><br><span class="line">-- 9.1 确定几张表和连接条件</span><br><span class="line">SELECT * FROM emp e INNER JOIN job j ON e.job_id &#x3D; j.id;</span><br><span class="line">-- 9.2 确定显示字段</span><br><span class="line">SELECT </span><br><span class="line">e.ename,</span><br><span class="line">j.jname,</span><br><span class="line">e.salary AS 涨前,</span><br><span class="line">CASE j.jname</span><br><span class="line">WHEN &#39;董事长&#39; THEN e.salary+2000</span><br><span class="line">WHEN &#39;经理&#39; THEN e.salary+1500</span><br><span class="line">ELSE e.salary+800</span><br><span class="line">END AS 涨后</span><br><span class="line"> FROM emp e INNER JOIN job j ON e.job_id &#x3D; j.id;</span><br></pre></td></tr></table></figure><h2 id="三、用户权限DCL"><a href="#三、用户权限DCL" class="headerlink" title="三、用户权限DCL"></a>三、用户权限DCL</h2><blockquote><p>操作用户权限的职责一般有DBA（DataBase  Adminisitrator）完成</p></blockquote><ul><li>权限操作相关操作</li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1. </span>创建用户</span><br><span class="line"><span class="code">语法：</span></span><br><span class="line"><span class="code">create user '用户名'@'主机名' identified by '密码';</span></span><br><span class="line"><span class="code">注意：</span></span><br><span class="line"><span class="code">主机名</span></span><br><span class="line"><span class="code">指定ip地址</span></span><br><span class="line"><span class="code">%：任意地址都可以访问</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">2. </span>授权用户</span><br><span class="line"><span class="code">语法：</span></span><br><span class="line"><span class="code">grant 权限1,权限2... on 数据库名.表名 to '用户名'@'主机名';</span></span><br><span class="line"><span class="code">注意：</span></span><br><span class="line"><span class="code">权限：</span></span><br><span class="line"><span class="code">select、insert、update、delete、alter、create....</span></span><br><span class="line"><span class="code">all</span></span><br><span class="line"><span class="code">数据库名.*</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">3. </span>查看权限</span><br><span class="line"><span class="code">语法：</span></span><br><span class="line"><span class="code">show grants for '用户名'@'主机名'; </span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">4. </span>撤销授权</span><br><span class="line"><span class="code">语法：</span></span><br><span class="line"><span class="code">revoke 权限1,权限2... on 数据库名.表名 from '用户名'@'主机名'; </span></span><br><span class="line"><span class="code">注意：</span></span><br><span class="line"><span class="code">权限：</span></span><br><span class="line"><span class="code">select、insert、update、delete、alter、create....</span></span><br><span class="line"><span class="code">all</span></span><br><span class="line"><span class="code">数据库名.*</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">5. </span>删除用户</span><br><span class="line"><span class="code">语法：</span></span><br><span class="line"><span class="code">drop user '用户名'@'主机名';</span></span><br><span class="line"><span class="bullet">6. </span>密码管理</span><br><span class="line"><span class="code">1.超级管理员</span></span><br><span class="line"><span class="code">set password for '用户名'@'主机名'=password('新密码');</span></span><br><span class="line"><span class="code">2.普通用户</span></span><br><span class="line"><span class="code">set password=password('新密码');</span></span><br></pre></td></tr></table></figure><ul><li>操作演示</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">-- 创建一个用户</span><br><span class="line">CREATE USER &#39;ss&#39;@&#39;%&#39;  IDENTIFIED BY &#39;123&#39;;</span><br><span class="line"></span><br><span class="line">-- 授权</span><br><span class="line">GRANT SELECT ON tcldb.emp TO &#39;ss&#39;@&#39;%&#39;;</span><br><span class="line"></span><br><span class="line">-- 查看权限</span><br><span class="line">SHOW GRANTS FOR &#39;ss&#39;@&#39;%&#39;;</span><br><span class="line"></span><br><span class="line">-- 撤销权限</span><br><span class="line">REVOKE ALL ON tcldb.emp FROM &#39;ss&#39;@&#39;%&#39;;</span><br><span class="line"></span><br><span class="line">-- 帮ss用户修改密码</span><br><span class="line">SET PASSWORD FOR &#39;ss&#39;@&#39;%&#39; &#x3D; PASSWORD(&#39;333&#39;);</span><br><span class="line"></span><br><span class="line">-- 删除用户</span><br><span class="line">DROP USER &#39;ss&#39;@&#39;%&#39;;</span><br></pre></td></tr></table></figure><h2 id="四、MySQL性能"><a href="#四、MySQL性能" class="headerlink" title="四、MySQL性能"></a>四、MySQL性能</h2><h3 id="4-1-分析-数据库查询效率低下"><a href="#4-1-分析-数据库查询效率低下" class="headerlink" title="4.1 分析-数据库查询效率低下"></a>4.1 分析-数据库查询效率低下</h3><p>进入企业后通常只关注业务和功能，反而忽略了性能，随着系统运行时间增加，数据库数据也在增长，那么执行数据库查询的时候性能会越来越慢。</p><blockquote><p>两个方面优化数据库的方式</p><ul><li>硬件优化</li><li>软件优化：单体应用架构（索引）、分库分片、读写分离</li></ul></blockquote><h3 id="4-2-分析-效率低下的sql"><a href="#4-2-分析-效率低下的sql" class="headerlink" title="4.2 分析-效率低下的sql"></a>4.2 分析-效率低下的sql</h3><p>MySQL有记录sql执行时长的能力，我们只需要设置一个阈值，一旦某条SQL执行时间大于了这个阈值，MySQL就会将其记录到日志文件中，称为慢日志。</p><blockquote><p>企业开发时通常使用第三方技术来监控sql的慢查询日志…</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">-- 1 查看慢查询日志开启情况（mysql默认是关闭）</span><br><span class="line">show variables like &#39;%slow_query_log%&#39;;</span><br><span class="line"></span><br><span class="line">-- 2 开启慢查询日志</span><br><span class="line">set global slow_query_log &#x3D; on;</span><br><span class="line"></span><br><span class="line">-- 3 查看慢查询时间配置(MySQL默认慢查询的记录时间为10秒)</span><br><span class="line">show variables like &#39;%long_query_time%&#39;;</span><br><span class="line"></span><br><span class="line">-- 4 修改慢查询的记录时间【临时修改】</span><br><span class="line">set long_query_time&#x3D;3;</span><br></pre></td></tr></table></figure><p><img data-src="/img/%E5%BC%80%E5%90%AFmysql%E7%9A%84%E6%85%A2%E6%9F%A5%E8%AF%A2%E6%97%A5%E5%BF%97.png" alt="开启mysql的慢查询日志"></p><h3 id="4-3-监控-效率低的sql"><a href="#4-3-监控-效率低的sql" class="headerlink" title="4.3 监控-效率低的sql"></a>4.3 监控-效率低的sql</h3><ul><li>数据准备：插入千万数据</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">create database mysql_performance;</span><br><span class="line">use mysql_performance;</span><br><span class="line">-- 1. 准备表</span><br><span class="line">CREATE TABLE &#96;user&#96;(</span><br><span class="line">id INT,</span><br><span class="line">username VARCHAR(32),</span><br><span class="line">&#96;password&#96; VARCHAR(32),</span><br><span class="line">sex VARCHAR(6),</span><br><span class="line">email VARCHAR(50)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">-- 2. 创建存储过程，实现批量插入记录</span><br><span class="line">DELIMITER $$ -- 声明存储过程的结束符号为$$</span><br><span class="line">CREATE PROCEDURE auto_insert()</span><br><span class="line">BEGIN</span><br><span class="line">    DECLARE i INT DEFAULT 1;</span><br><span class="line">START TRANSACTION; -- 开启事务</span><br><span class="line">    WHILE(i&lt;&#x3D;10000000)DO</span><br><span class="line">        INSERT INTO &#96;user&#96; VALUES(i,CONCAT(&#39;jack&#39;,i),MD5(i),&#39;male&#39;,CONCAT(&#39;jack&#39;,i,&#39;@itcast.cn&#39;));</span><br><span class="line">        SET i&#x3D;i+1;</span><br><span class="line">    END WHILE;</span><br><span class="line">COMMIT; -- 提交</span><br><span class="line">END$$ -- 声明结束</span><br><span class="line">DELIMITER ; -- 重新声明分号为结束符号</span><br><span class="line"></span><br><span class="line">-- 3. 查看存储过程</span><br><span class="line">SHOW CREATE PROCEDURE auto_insert;</span><br><span class="line"></span><br><span class="line">-- 4. 调用存储过程</span><br><span class="line">CALL auto_insert();</span><br></pre></td></tr></table></figure><blockquote><p>执行sql，耗时</p></blockquote><p><img data-src="/img/%E6%8F%92%E5%85%A5%E5%8D%83%E4%B8%87%E6%95%B0%E6%8D%AE%E8%80%97%E6%97%B6.png" alt="插入千万数据耗时"></p><blockquote><p>测试千万记录的查询耗时</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-- 根据id查询</span><br><span class="line">select * from user where id &#x3D; 9999;</span><br></pre></td></tr></table></figure><p><img data-src="/img/%E6%B5%8B%E8%AF%95%E5%8D%83%E4%B8%87%E8%AE%B0%E5%BD%95%E6%9F%A5%E8%AF%A2%E8%80%97%E6%97%B6.png" alt="测试千万记录查询耗时"></p><blockquote><p>慢查询日志文件分析</p></blockquote><p><img data-src="/img/%E6%85%A2%E6%9F%A5%E8%AF%A2%E6%97%A5%E5%BF%97%E5%88%86%E6%9E%90.png" alt="慢查询日志分析"></p><h2 id="五、MySQL索引"><a href="#五、MySQL索引" class="headerlink" title="五、MySQL索引"></a>五、MySQL索引</h2><h3 id="5-1-什么是索引"><a href="#5-1-什么是索引" class="headerlink" title="5.1 什么是索引"></a>5.1 什么是索引</h3><p>在现实生活中，我们都去过图书馆查阅图书。</p><p>现在我们将所有图书杂乱无章的摆放在一起，那么找一本书就像大海捞针一样效率非常低。</p><p>如果我们按分类整理排序后，根据类别去找对应的图书那么效率就很高了。其实这个整理排序的过程就是<span style="color:red">索引</span>。</p><p><img data-src="/img/mysql%E7%B4%A2%E5%BC%951.png" alt="mysql索引1"></p><p>MySQL索引的建立对于MySQL的高效运行是很重要的，索引可以大大提高MySQL的检索速度。</p><p>如果合理的设计且使用索引的MySQL是兰博基尼的话，那么没有设计和使用索引的MySQL就是人力三轮车。</p><p><img data-src="/img/mysql%E7%B4%A2%E5%BC%952.png" alt="mysql索引2"></p><h3 id="5-2-索引分类"><a href="#5-2-索引分类" class="headerlink" title="5.2 索引分类"></a>5.2 索引分类</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">* </span>主键（约束）索引</span><br><span class="line"><span class="code">主键字段 要求：唯一且非空，增加查询速度</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">* </span>唯一（约束）索引</span><br><span class="line"><span class="code">唯一字段 要求：唯一，增加查询速度</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">* </span>普通索引</span><br><span class="line"><span class="code">仅提高查询速度</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">* </span>组合索引</span><br><span class="line"><span class="code">相当于联合主键，将多个字段组成一个索引，提高查询速度</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">* </span>hash索引（了解）</span><br><span class="line"><span class="code">提高查询速度</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">* </span>倒排索引</span><br></pre></td></tr></table></figure><h3 id="5-3-MySQL索引语法"><a href="#5-3-MySQL索引语法" class="headerlink" title="5.3 MySQL索引语法"></a>5.3 MySQL索引语法</h3><h4 id="5-3-1-创建索引"><a href="#5-3-1-创建索引" class="headerlink" title="5.3.1 创建索引"></a>5.3.1 创建索引</h4><h5 id="①-直接创建"><a href="#①-直接创建" class="headerlink" title="① 直接创建"></a>① 直接创建</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">-- 创建普通索引</span><br><span class="line">create index 索引名 on 表名(字段);</span><br><span class="line"></span><br><span class="line">-- 创建唯一索引</span><br><span class="line">create unique index 索引名 on 表名(字段);</span><br><span class="line"></span><br><span class="line">-- 创建普通组合索引</span><br><span class="line">create index 索引名 on 表名(字段1,字段2);</span><br><span class="line"></span><br><span class="line">-- 创建唯一组合索引</span><br><span class="line">create unique index 索引名 on 表名(字段1,字段2);</span><br></pre></td></tr></table></figure><blockquote><p>演示</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE student1(</span><br><span class="line">  id INT,</span><br><span class="line">  username VARCHAR(30),</span><br><span class="line">  telephone VARCHAR(30),</span><br><span class="line">  sex VARCHAR(5)</span><br><span class="line">);</span><br><span class="line">-- 为username创建普通索引</span><br><span class="line">CREATE INDEX username_idx ON student1(username);</span><br><span class="line"></span><br><span class="line">-- 为telephone创建唯一索引</span><br><span class="line">CREATE UNIQUE INDEX tel_un_idx ON student1(telephone);</span><br><span class="line"></span><br><span class="line">-- 为username  telephone  sex 设置唯一联合索引</span><br><span class="line">CREATE UNIQUE INDEX uts_un_idx ON student1(username,telephone,sex);</span><br></pre></td></tr></table></figure><h5 id="②-修改表时指定"><a href="#②-修改表时指定" class="headerlink" title="② 修改表时指定"></a>② 修改表时指定</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">-- 添加主键索引</span><br><span class="line">alter table 表名 add primary key(字段);  -- 默认索引名：primary</span><br><span class="line"></span><br><span class="line">-- 添加唯一索引</span><br><span class="line">alter table 表名 add unique(字段);  -- 默认索引名：字段名</span><br><span class="line"></span><br><span class="line">-- 添加普通索引</span><br><span class="line">alter table 表名 add index(字段); -- 默认索引名：字段名</span><br></pre></td></tr></table></figure><blockquote><p>演示</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE student2(</span><br><span class="line">  id INT,</span><br><span class="line">  username VARCHAR(30),</span><br><span class="line">  telephone VARCHAR(30),</span><br><span class="line">  sex CHAR(2)</span><br><span class="line">);</span><br><span class="line">-- 为id设置主键索引</span><br><span class="line">ALTER TABLE student2 ADD PRIMARY KEY (id);</span><br><span class="line"></span><br><span class="line">-- 为telephone设置唯一索引</span><br><span class="line">ALTER TABLE student2 ADD UNIQUE (telephone);</span><br><span class="line"></span><br><span class="line">-- 为username 设置普通索引</span><br><span class="line">ALTER TABLE student2 ADD INDEX(username);</span><br></pre></td></tr></table></figure><h5 id="③-创建表时指定"><a href="#③-创建表时指定" class="headerlink" title="③ 创建表时指定"></a>③ 创建表时指定</h5><blockquote><p>演示</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">-- 创建表并指定合理的索引字段</span><br><span class="line">CREATE TABLE teacher(</span><br><span class="line"> id INT PRIMARY KEY AUTO_INCREMENT, -- 主键索引</span><br><span class="line"> username VARCHAR(32), </span><br><span class="line"> telephone VARCHAR(11) UNIQUE, -- 唯一索引</span><br><span class="line"> sex VARCHAR(5),</span><br><span class="line"> INDEX(username) -- 普通索引</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="5-4-索引效果演示"><a href="#5-4-索引效果演示" class="headerlink" title="5.4 索引效果演示"></a>5.4 索引效果演示</h3><p>查询千万记录有无索引对比</p><blockquote><p>无索引</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">-- 根据id </span><br><span class="line">select * from user where id &#x3D; 1234567;</span><br><span class="line">-- 根据用户名</span><br><span class="line">select * from user where username &#x3D; &#39;jack1234567&#39;;</span><br><span class="line">-- 根据邮箱模糊查询</span><br><span class="line">select * from user where email like &#39;jack123456%&#39;;</span><br></pre></td></tr></table></figure><p><img data-src="/img/%E6%97%A0%E7%B4%A2%E5%BC%95%E6%A3%80%E7%B4%A2%E5%8D%83%E4%B8%87%E8%AE%B0%E5%BD%95.png" alt="无索引检索千万记录"></p><blockquote><p>添加索引，再次测试</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">-- id 使用主键索引</span><br><span class="line">ALTER TABLE &#96;user&#96; ADD PRIMARY KEY(id);</span><br><span class="line">-- username 普通索引</span><br><span class="line">ALTER TABLE &#96;user&#96; ADD INDEX(username);</span><br><span class="line">-- email 使用唯一索引</span><br><span class="line">ALTER TABLE &#96;user&#96; ADD  UNIQUE(email);</span><br></pre></td></tr></table></figure><p><img data-src="/img/%E6%9C%89%E7%B4%A2%E5%BC%95%E6%A3%80%E7%B4%A2%E5%8D%83%E4%B8%87%E8%AE%B0%E5%BD%95.png" alt="有索引检索千万记录"></p><h3 id="5-5-索引的优缺点"><a href="#5-5-索引的优缺点" class="headerlink" title="5.5 索引的优缺点"></a>5.5 索引的优缺点</h3><p><strong>优点</strong></p><ul><li>类似大学图书馆建书目索引，提高数据检索的效率，降低数据库的IO成本。</li><li>通过索引列对数据进行排序，降低数据排序的成本，降低CPU的消耗。</li></ul><p><strong>缺点</strong></p><ul><li>实际上索引也是表中的一部分，所以索引列也是要占用空间</li><li>虽然索引大大提高了查询速度，同时却会降低更新表的速度，如对表进行INSERT、UPDATE和DELETE时，需要重写对索引进行排序整理</li></ul><h3 id="5-6-索引创建原则"><a href="#5-6-索引创建原则" class="headerlink" title="5.6 索引创建原则"></a>5.6 索引创建原则</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1. </span>经常搜索的字段，where</span><br><span class="line"></span><br><span class="line"><span class="bullet">2. </span>经常排序的字段，order by</span><br><span class="line"></span><br><span class="line"><span class="bullet">3. </span>经常分组的字段，group by （内容可识别率不能低于70%）</span><br><span class="line"></span><br><span class="line"><span class="bullet">4. </span>多表连接的字段，主键 和 外键</span><br></pre></td></tr></table></figure><h3 id="5-7-常见索引失效情况"><a href="#5-7-常见索引失效情况" class="headerlink" title="5.7 常见索引失效情况"></a>5.7 常见索引失效情况</h3><ul><li>使用like模糊匹配，%通配符在最左侧使用时</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-- 1.使用like模糊匹配，%通配符在最左侧使用时</span><br><span class="line">select * from user where username like &#39;jack123456%&#39;;</span><br><span class="line">select * from user where username like &#39;%jack123456&#39;; -- 全表扫描</span><br></pre></td></tr></table></figure><ul><li>尽量避免使用or，如果条件有一个没有索引，那么会进行全表扫描</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-- 2.尽量避免使用or，如果条件有一个没有索引，那么会进行全表扫描</span><br><span class="line">select * from user where username &#x3D; &#39;jack123&#39; or password &#x3D; &#39;d8e423a9d5eb97da9e2d58cd57b92808&#39;;</span><br></pre></td></tr></table></figure><ul><li>在索引列上进行计算</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-- 3.在索引列上进行计算</span><br><span class="line">select * from user where id + 1 &#x3D; 10;</span><br></pre></td></tr></table></figure><ul><li>使用 !=、 &lt;&gt;、 not in、is not null时</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-- 4.使用 !&#x3D;、 &lt;&gt;、 not in、is not null时</span><br><span class="line">select * from user where id is not null;</span><br></pre></td></tr></table></figure><ul><li>组合索引，最左优先原则</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">-- 5.组合索引，最左优先原则</span><br><span class="line">alter table user add unique(id,password);</span><br><span class="line"></span><br><span class="line">select * from user where id &#x3D; 1 and password &#x3D; &#39;c4ca4238a0b923820dcc509a6f75849b&#39;; -- 有效</span><br><span class="line">select * from user where id &#x3D; 1 ; -- 有效</span><br><span class="line">select * from user where  password &#x3D; &#39;c4ca4238a0b923820dcc509a6f75849b&#39;; -- 失效</span><br></pre></td></tr></table></figure><h3 id="5-8-索引的数据结构"><a href="#5-8-索引的数据结构" class="headerlink" title="5.8 索引的数据结构"></a>5.8 索引的数据结构</h3><h4 id="5-8-1-概述"><a href="#5-8-1-概述" class="headerlink" title="5.8.1 概述"></a>5.8.1 概述</h4><p>我们知道<strong>索引</strong>是帮助MySQL高效获取<strong>排好序</strong>的<strong>数据结构</strong>。</p><p>为什么使用索引后查询效率提高很多呢？接下来我们来了解下：</p><p><img data-src="/img/%E7%B4%A2%E5%BC%95%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E6%A6%82%E8%BF%B01.png" alt="索引数据结构概述1"></p><p>在没有索引的情况下我们执行一条sql语句，那么是表进行全局遍历，磁盘寻址（注意逻辑上相邻的记录在磁盘上也并不是一定物理相邻的）。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select  * from user where col1&#x3D;6;</span><br></pre></td></tr></table></figure><p><img data-src="/img/%E7%B4%A2%E5%BC%95%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E6%A6%82%E8%BF%B02.png" alt="索引数据结构概述2"></p><p>为了加快的查找效率，可以维护一个右边所示的二叉查找树，每个节点分别包含索引键值和一个指向对应数据记录物理地址的指针，这样就可以运用二叉查找快速获取到相应数据。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select  * from user where col2&#x3D;59;</span><br></pre></td></tr></table></figure><h4 id="5-8-2-索引的数据结构"><a href="#5-8-2-索引的数据结构" class="headerlink" title="5.8.2 索引的数据结构"></a>5.8.2 索引的数据结构</h4><ul><li>二叉树：对于当前父节点，左分支节点元素小，右分支节点元素大</li></ul><p><img data-src="/img/%E7%B4%A2%E5%BC%95%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E2%80%94%E2%80%94%E4%BA%8C%E5%8F%89%E6%A0%91.png" alt="索引数据结构——二叉树"></p><ul><li>红黑树：红黑树是一种平衡二叉树，目的是寻求左右分支长度的平衡（左旋、右旋）</li></ul><p><img data-src="/img/%E7%B4%A2%E5%BC%95%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E2%80%94%E2%80%94%E7%BA%A2%E9%BB%91%E6%A0%91.png" alt="索引数据结构——红黑树"></p><ul><li>BTree：多叉平衡查找树，每个节点都可以存放多个数据，可以有效减少层数</li></ul><p><img data-src="/img/%E7%B4%A2%E5%BC%95%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E2%80%94%E2%80%94BTree.png" alt="索引数据结构——BTree"></p><ul><li>B+Tree：针对于BTree的优化，数据只存储在叶子节点上，非叶子节点只存储索引和指针</li></ul><p><img data-src="/img/%E7%B4%A2%E5%BC%95%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E2%80%94%E2%80%94B+Tree.png" alt="索引数据结构——B+Tree"></p><ul><li>Hash（了解）：单值查询速度极快，不能实现排序和范围查找</li></ul><p><img data-src="/img/%E7%B4%A2%E5%BC%95%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E2%80%94%E2%80%94hash.png" alt="索引数据结构——hash"></p><blockquote><p>小贴士：</p><ul><li>数据结构学习网站：<a href="https://www.cs.usfca.edu/~galles/visualization/Algorithms.html" target="_blank" rel="noopener">https://www.cs.usfca.edu/~galles/visualization/Algorithms.html</a></li></ul></blockquote><h4 id="5-8-3-MySQL中的B-Tree"><a href="#5-8-3-MySQL中的B-Tree" class="headerlink" title="5.8.3 MySQL中的B+Tree"></a>5.8.3 MySQL中的B+Tree</h4><blockquote><p>MySQL数据库默认将所有表的顶级节点加载内存，所以进一步减少了磁盘IO</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查看mysql索引节点大小</span></span><br><span class="line"><span class="keyword">show</span> <span class="keyword">global</span> <span class="keyword">status</span> <span class="keyword">like</span> <span class="string">'innodb_page_size'</span>;</span><br></pre></td></tr></table></figure><p>MySQL中的 B+Tree 索引结构示意图：</p><p><img data-src="/img/mysql%E4%B8%AD%E7%9A%84B+Tree.png" alt="mysql中的B+Tree"></p><h3 id="5-9-数据库（表）的存储引擎"><a href="#5-9-数据库（表）的存储引擎" class="headerlink" title="5.9 数据库（表）的存储引擎"></a>5.9 数据库（表）的存储引擎</h3><p>MySQL存储引擎的不同，那么索引文件保存的方式也有所不同，常见的有二种存储引擎<strong>MyISAM</strong>和<strong>InnoDB</strong>。</p><ul><li>可以通过查看mysql的配置文件my.ini，查询默认的存储引擎：</li></ul><p><img data-src="/img/%E6%9F%A5%E7%9C%8Bmysql%E9%BB%98%E8%AE%A4%E5%AD%98%E5%82%A8%E5%BC%95%E6%93%8E.png" alt="查看mysql默认存储引擎"></p><h4 id="5-9-1-MyISAM"><a href="#5-9-1-MyISAM" class="headerlink" title="5.9.1 MyISAM"></a>5.9.1 MyISAM</h4><p>MySQL5.5之前默认使用的存储引擎，不支持事务和外键约束</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> haha(</span><br><span class="line"> <span class="keyword">id</span> <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span> AUTO_INCREMENT,</span><br><span class="line"> <span class="string">`name`</span> <span class="built_in">VARCHAR</span>(<span class="number">32</span>)</span><br><span class="line">)<span class="keyword">ENGINE</span>=MYISAM;</span><br></pre></td></tr></table></figure><blockquote><p>MyISAM存储引擎表的文件</p></blockquote><p><img data-src="/img/MyISAM%E5%AD%98%E5%82%A8%E5%BC%95%E6%93%8E%E8%A1%A8%E7%9A%84%E6%96%87%E4%BB%B6.png" alt="MyISAM存储引擎表的文件"></p><blockquote><p>MyISAM存储索引方式</p></blockquote><p><img data-src="/img/MyISAM%E5%AD%98%E5%82%A8%E7%B4%A2%E5%BC%95%E6%96%B9%E5%BC%8F.png" alt="MyISAM存储索引方式"></p><h4 id="5-9-2-InnoDB"><a href="#5-9-2-InnoDB" class="headerlink" title="5.9.2 InnoDB"></a>5.9.2 InnoDB</h4><p>MySQL5.5之后默认使用的存储引擎，支持事务和外键约束</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> hehe(</span><br><span class="line"> <span class="keyword">id</span> <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span> AUTO_INCREMENT,</span><br><span class="line"> <span class="string">`name`</span> <span class="built_in">VARCHAR</span>(<span class="number">32</span>)</span><br><span class="line">)<span class="keyword">ENGINE</span>=<span class="keyword">INNODB</span>;</span><br></pre></td></tr></table></figure><blockquote><p>InnoDB存储引擎表的文件</p></blockquote><p><img data-src="/img/InnoDB%E5%AD%98%E5%82%A8%E5%BC%95%E6%93%8E%E8%A1%A8%E7%9A%84%E6%96%87%E4%BB%B6.png" alt="InnoDB存储引擎表的文件"></p><blockquote><p>InnoFB存储索引方式——主键索引</p></blockquote><p><img data-src="/img/InnoDB%E5%AD%98%E5%82%A8%E7%B4%A2%E5%BC%95%E6%96%B9%E5%BC%8F%E2%80%94%E2%80%94%E4%B8%BB%E9%94%AE%E7%B4%A2%E5%BC%95.png" alt="InnoDB存储索引方式"></p><blockquote><p>普通索引依赖于主键索引</p></blockquote><p><img data-src="/img/InnoDB%E5%AD%98%E5%82%A8%E7%B4%A2%E5%BC%95%E6%96%B9%E5%BC%8F%E2%80%94%E2%80%94%E6%99%AE%E9%80%9A%E7%B4%A2%E5%BC%95.png" alt="InnoDB存储索引方式——普通索引"></p><h3 id="5-10-MySQL面试题"><a href="#5-10-MySQL面试题" class="headerlink" title="5.10 MySQL面试题"></a>5.10 MySQL面试题</h3><p><strong>为什么InnoDB表必须有主键，并且推荐使用整型的自增主键？</strong></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1. </span>innodb保存数据时必须依赖B+Tree 如果不指定主键索引，自动生成一个，浪费磁盘空间，也没有提高查询效率</span><br><span class="line"></span><br><span class="line"><span class="bullet">2. </span>主键使用整型且自增，整型比较速度快，插入数据时，减少树的裂变，提高插入效率....</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、MySQL函数&quot;&gt;&lt;a href=&quot;#一、MySQL函数&quot; class=&quot;headerlink&quot; title=&quot;一、MySQL函数&quot;&gt;&lt;/a&gt;一、MySQL函数&lt;/h2&gt;&lt;p&gt;为了简化操作，&lt;strong&gt;mysql提供&lt;/strong&gt;了大量的函数给程序员使用（比如你想输入当前时间，可以调用now()函数）&lt;/p&gt;
&lt;p&gt;函数可以出现的位置：插入语句的values()中，更新语句中，删除语句中，查询语句及其子句中。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;菜鸟教程：&lt;a href=&quot;https://www.runoob.com/mysql/mysql-functions.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.runoob.com/mysql/mysql-functions.html&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="数据库" scheme="http://sunmoon.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="MySQL" scheme="http://sunmoon.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL/"/>
    
    
      <category term="MySQL函数" scheme="http://sunmoon.com/tags/MySQL%E5%87%BD%E6%95%B0/"/>
    
      <category term="用户权限操作" scheme="http://sunmoon.com/tags/%E7%94%A8%E6%88%B7%E6%9D%83%E9%99%90%E6%93%8D%E4%BD%9C/"/>
    
      <category term="MySQL性能" scheme="http://sunmoon.com/tags/MySQL%E6%80%A7%E8%83%BD/"/>
    
      <category term="MySQL索引" scheme="http://sunmoon.com/tags/MySQL%E7%B4%A2%E5%BC%95/"/>
    
      <category term="MySQL索引的数据结构" scheme="http://sunmoon.com/tags/MySQL%E7%B4%A2%E5%BC%95%E7%9A%84%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="MySQL表的存储引擎" scheme="http://sunmoon.com/tags/MySQL%E8%A1%A8%E7%9A%84%E5%AD%98%E5%82%A8%E5%BC%95%E6%93%8E/"/>
    
  </entry>
  
  <entry>
    <title>MySQL多表查询&amp;子查询&amp;事务</title>
    <link href="http://sunmoon.com/2020/09/02/MySQL%E5%A4%9A%E8%A1%A8%E6%9F%A5%E8%AF%A2-%E5%AD%90%E6%9F%A5%E8%AF%A2-%E4%BA%8B%E5%8A%A1/"/>
    <id>http://sunmoon.com/2020/09/02/MySQL%E5%A4%9A%E8%A1%A8%E6%9F%A5%E8%AF%A2-%E5%AD%90%E6%9F%A5%E8%AF%A2-%E4%BA%8B%E5%8A%A1/</id>
    <published>2020-09-02T13:52:08.000Z</published>
    <updated>2020-09-03T10:17:47.610Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、表关系"><a href="#一、表关系" class="headerlink" title="一、表关系"></a>一、表关系</h2><h3 id="1-1-概述"><a href="#1-1-概述" class="headerlink" title="1.1 概述"></a>1.1 概述</h3><p>现实生活中，（班级）实体与（学生）实体之间肯定是有关系的，那么我们在设计表的时候，就应该体现出（班级）表与（学生）表之间的这种关系！</p><p>我们把这种数据库称为<span style="color:red">关系型数据库（RDBMS）</span>，在数据库设计上，表关系分为三种：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1. </span>一对多（多对一）</span><br><span class="line"><span class="code">应用场景：</span></span><br><span class="line"><span class="code">班级和学生、部门和员工</span></span><br><span class="line"><span class="code">解释：</span></span><br><span class="line"><span class="code">一个班级内有多名同学，多名同学都属于某一个班级</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">2. </span>多对多</span><br><span class="line"><span class="code">应用场景：</span></span><br><span class="line"><span class="code">学生和课程、学生和老师</span></span><br><span class="line"><span class="code">解释：</span></span><br><span class="line"><span class="code">一名同学可以选修多门课程，一门课程可以被多名同学选修</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"></span><br><span class="line"><span class="bullet">3. </span>一对一（一般情况下可以单表实现，有时候需要进行抽取）</span><br><span class="line"><span class="code">应用场景：</span></span><br><span class="line"><span class="code">公民和身份证号、商品和详情</span></span><br><span class="line"><span class="code">解释：</span></span><br><span class="line"><span class="code">一个公民只有一个对应的身份证号、一个身份证号只对应一个公民</span></span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="1-2-实现"><a href="#1-2-实现" class="headerlink" title="1.2 实现"></a>1.2 实现</h3><h4 id="1-2-1-一对多"><a href="#1-2-1-一对多" class="headerlink" title="1.2.1 一对多"></a>1.2.1 一对多</h4><blockquote><p>班级和学生</p></blockquote><p><strong>关系图</strong></p><p><img data-src="/img/%E4%B8%80%E5%AF%B9%E5%A4%9A%E5%85%B3%E7%B3%BB.png" alt="一对多关系"></p><p>表关系描述：</p><ul><li>通常把一的一方称为：<code>主表</code>或<code>一表</code></li><li>通常把多的一方称为：<code>从表</code>或<code>多表</code></li></ul><p><strong>一对多关系建表原则：</strong></p><ul><li>在从表中，田间一个字段(主表_id)类型与主表的主键一致，这个字段我们称之为外键，通过主外键关联，建立两张表的<code>一对多关系</code>。</li></ul><p>sql实现</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">#-- 一对多 （班级——学生）--#</span><br><span class="line">CREATE DATABASE mysql_1;</span><br><span class="line">USE mysql_1;</span><br><span class="line">-- 班级表：主表(一)</span><br><span class="line">CREATE TABLE class(</span><br><span class="line">  id INT PRIMARY KEY AUTO_INCREMENT,</span><br><span class="line">  &#96;name&#96; VARCHAR(32)</span><br><span class="line">);</span><br><span class="line">INSERT INTO class VALUES(1,&#39;一班&#39;);</span><br><span class="line">INSERT INTO class VALUES(2,&#39;二班&#39;);</span><br><span class="line">-- 学生表：从表(多)</span><br><span class="line">CREATE TABLE stu(</span><br><span class="line">  id INT PRIMARY KEY AUTO_INCREMENT,</span><br><span class="line">  &#96;name&#96; VARCHAR(32),</span><br><span class="line">  class_id INT -- 外键字段</span><br><span class="line">);</span><br><span class="line">-- 插入数据</span><br><span class="line">INSERT INTO stu VALUES(1,&#39;张三&#39;,1);</span><br><span class="line">INSERT INTO stu VALUES(2,&#39;李四&#39;,1);</span><br><span class="line">INSERT INTO stu VALUES(3,&#39;王五&#39;,2);</span><br><span class="line">INSERT INTO stu VALUES(4,&#39;赵六&#39;,1);</span><br><span class="line"></span><br><span class="line">-- 给学生表，添加外键约束</span><br><span class="line">ALTER TABLE student ADD CONSTRAINT class_id_fk FOREIGN KEY(class_id) REFERENCES class(id);</span><br><span class="line"></span><br><span class="line">-- 删除学生表的外键约束</span><br><span class="line">ALTER TABLE student DROP FOREIGN KEY class_id_fk;</span><br><span class="line"></span><br><span class="line">#-- 一对多 （班级——学生）--#</span><br></pre></td></tr></table></figure><h4 id="1-2-2-多对多"><a href="#1-2-2-多对多" class="headerlink" title="1.2.2 多对多"></a>1.2.2 多对多</h4><blockquote><p>举例：学生和课程</p></blockquote><p><strong>关系图</strong></p><p><img data-src="/img/%E5%A4%9A%E5%AF%B9%E5%A4%9A%E5%85%B3%E7%B3%BB.png" alt="多对多关系"></p><p><strong>多对多关系建表原则：</strong></p><ul><li>建立多对多的关系时，需要创建第三张表，又称为中间表，至少要有两个外键字段，分别指向各自主表的主键，通常还会把两个字段设置成联合主键，建立两张表的<code>多对多关系</code>。</li></ul><p>sql实现</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">#-- 多对多（学生——课程） --#</span><br><span class="line">-- 学生表（主表，已存在）</span><br><span class="line">-- 课程表：主表</span><br><span class="line">CREATE TABLE course(</span><br><span class="line">  id INT PRIMARY KEY AUTO_INCREMENT,</span><br><span class="line">  NAME VARCHAR(32)</span><br><span class="line">);</span><br><span class="line">INSERT INTO course VALUES(NULL,&#39;java&#39;);</span><br><span class="line">INSERT INTO course VALUES(NULL,&#39;php&#39;);</span><br><span class="line">INSERT INTO course VALUES(NULL,&#39;python&#39;);</span><br><span class="line">INSERT INTO course VALUES(NULL,&#39;javascript&#39;);</span><br><span class="line"></span><br><span class="line">-- 中间表：从表</span><br><span class="line">CREATE TABLE sc(</span><br><span class="line"> s_id INT,</span><br><span class="line"> c_id INT,</span><br><span class="line"> PRIMARY KEY(s_id,c_id),-- 联合主键</span><br><span class="line"> CONSTRAINT s_id_fk FOREIGN KEY(s_id) REFERENCES stu(id),-- 学生表外键约束</span><br><span class="line"> CONSTRAINT c_id_fk FOREIGN KEY(c_id) REFERENCES course(id)-- 课程表外键约束</span><br><span class="line">);</span><br><span class="line">-- 插入数据</span><br><span class="line">INSERT INTO sc VALUES(1,1);</span><br><span class="line">INSERT INTO sc VALUES(1,3);</span><br><span class="line">INSERT INTO sc VALUES(2,2);</span><br><span class="line">INSERT INTO sc VALUES(2,5);</span><br><span class="line">INSERT INTO sc VALUES(3,4);</span><br><span class="line">INSERT INTO sc VALUES(4,1);</span><br><span class="line">INSERT INTO sc VALUES(4,5);</span><br><span class="line">INSERT INTO sc VALUES(5,2);</span><br><span class="line">#-- 多对多（学生——课程） --#</span><br></pre></td></tr></table></figure><h4 id="1-2-3-一对一"><a href="#1-2-3-一对一" class="headerlink" title="1.2.3 一对一"></a>1.2.3 一对一</h4><blockquote><p>一般情况下，一对一其实可以设计为一张表来实现，个别字段过大，影响查询性能，我们才会拆分二张表，建立一一对应关系</p></blockquote><blockquote><p>举例：商品和详情</p></blockquote><p><strong>关系图</strong></p><p>两种建立一对一方式：</p><p><img data-src="/img/%E4%B8%80%E5%AF%B9%E4%B8%80%E5%85%B3%E7%B3%BB1.png" alt="一对一关系1"></p><p><img data-src="/img/%E4%B8%80%E5%AF%B9%E4%B8%80%E5%85%B3%E7%B3%BB2.png" alt="一对一关系2"></p><blockquote><p>推荐第二种，主键字段当作外键来使用</p></blockquote><p>sql实现</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">#-- 一对一（商品——商品描述） --#</span><br><span class="line">-- 商品表（主表）</span><br><span class="line">CREATE TABLE product(</span><br><span class="line">  id INT PRIMARY KEY AUTO_INCREMENT,</span><br><span class="line">  NAME VARCHAR(32)</span><br><span class="line">);</span><br><span class="line">INSERT INTO product VALUES(NULL,&#39;MI10&#39;);</span><br><span class="line">INSERT INTO product VALUES(NULL,&#39;MInote3&#39;);</span><br><span class="line">INSERT INTO product VALUES(NULL,&#39;HuaweiP40&#39;);</span><br><span class="line">INSERT INTO product VALUES(NULL,&#39;VivoX20&#39;);</span><br><span class="line">-- 详情表（从表）</span><br><span class="line">CREATE TABLE p_desc(</span><br><span class="line">  id INT PRIMARY KEY AUTO_INCREMENT,-- 主键作为外键</span><br><span class="line">  description VARCHAR(255),</span><br><span class="line">  CONSTRAINT id_fk FOREIGN KEY(id) REFERENCES product(id)-- 外键约束</span><br><span class="line">);</span><br><span class="line">INSERT INTO p_desc VALUES(1,&#39;为发烧而生&#39;);</span><br><span class="line">INSERT INTO p_desc VALUES(2,&#39;永远相信美好的事情即将发生&#39;);</span><br><span class="line">INSERT INTO p_desc VALUES(3,&#39;华为...&#39;);</span><br><span class="line">INSERT INTO p_desc VALUES(4,&#39;Vivo...&#39;);</span><br><span class="line">#-- 一对一（商品——商品描述） --#</span><br></pre></td></tr></table></figure><h3 id="1-3-外键约束"><a href="#1-3-外键约束" class="headerlink" title="1.3 外键约束"></a>1.3 外键约束</h3><p><strong>功能</strong>：限定二张表有关系的数据，保证数据的正确性、有效性和完整性</p><p><strong>外键约束相关语法：</strong>（在从表中设置）</p><ul><li>创建表指定外键字段</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">create table 表名(</span><br><span class="line">    字段名 数据类型,</span><br><span class="line">    ....</span><br><span class="line">    [constraint] [约束名] foreign key(外键字段) references 主表(主键字段)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><ul><li>修改表指定外键</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table 表名 add [constraint] [约束名] foreign key(外键) references 主表(主键)</span><br></pre></td></tr></table></figure><ul><li>删除外键约束</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table 表名 drop foreign key 约束名;</span><br></pre></td></tr></table></figure><p><strong>外键约束的特点：</strong></p><ul><li>主表不能删除从表已引用的数据</li><li>从表不能添加主表未拥有的数据</li><li>先删除从表数据再删除主表数据</li><li>先添加主表数据在添加从表数据</li><li>外键字段可以为空但不能非法关联</li></ul><blockquote><p>小贴士：</p><ul><li>外键约束虽然功能强大，但是在互联网项目中不会使用，我们可以通过后台代码实现数据的校验…</li></ul></blockquote><h2 id="二、多表查询"><a href="#二、多表查询" class="headerlink" title="二、多表查询"></a>二、多表查询</h2><p>在企业开发中, 我们一个业务需要的数据往往是来自多张表的, 所以这时候就需要多表联合查询。</p><p>所谓的多表联合查询就是使用一条SQL语句将多张表的数据一起查询展示出来。</p><p><strong>准备数据</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">#--多表查询--#</span><br><span class="line">-- 准备数据</span><br><span class="line">CREATE DATABASE mysql_2;</span><br><span class="line">USE mysql_2;</span><br><span class="line"></span><br><span class="line">-- 创建部门表(主表)</span><br><span class="line">CREATE TABLE dept(</span><br><span class="line">  id INT PRIMARY KEY AUTO_INCREMENT,</span><br><span class="line">  NAME VARCHAR(32)</span><br><span class="line">);</span><br><span class="line">INSERT INTO dept VALUES(NULL,&#39;开发部&#39;);</span><br><span class="line">INSERT INTO dept VALUES(NULL,&#39;市场部&#39;);</span><br><span class="line">INSERT INTO dept VALUES(NULL,&#39;财务部&#39;);</span><br><span class="line">INSERT INTO dept VALUES(NULL,&#39;销售部&#39;);</span><br><span class="line"></span><br><span class="line">-- 创建员工表（从表）</span><br><span class="line">CREATE TABLE emp(</span><br><span class="line">  id INT PRIMARY KEY AUTO_INCREMENT,</span><br><span class="line">  NAME VARCHAR(32),</span><br><span class="line">  gender CHAR(1),</span><br><span class="line">  salary DOUBLE,</span><br><span class="line">  join_date DATE,</span><br><span class="line">  dept_id INT,</span><br><span class="line">  CONSTRAINT dept_id_fk FOREIGN KEY(dept_id) REFERENCES dept(id)</span><br><span class="line">);</span><br><span class="line">INSERT INTO emp(NAME,gender,salary,join_date,dept_id) VALUES(&#39;孙悟空&#39;,&#39;男&#39;,7200,&#39;2013-02-24&#39;,1);</span><br><span class="line">INSERT INTO emp(NAME,gender,salary,join_date,dept_id) VALUES(&#39;猪八戒&#39;,&#39;男&#39;,3600,&#39;2010-12-02&#39;,2);</span><br><span class="line">INSERT INTO emp(NAME,gender,salary,join_date,dept_id) VALUES(&#39;唐僧&#39;,&#39;男&#39;,9000,&#39;2008-08-08&#39;,2);</span><br><span class="line">INSERT INTO emp(NAME,gender,salary,join_date,dept_id) VALUES(&#39;白骨精&#39;,&#39;女&#39;,5000,&#39;2015-10-07&#39;,3);</span><br><span class="line">INSERT INTO emp(NAME,gender,salary,join_date,dept_id) VALUES(&#39;蜘蛛精&#39;,&#39;女&#39;,4500,&#39;2011-03-14&#39;,1);</span><br><span class="line">INSERT INTO emp(NAME,gender,salary,join_date,dept_id) VALUES(&#39;沙僧&#39;,&#39;男&#39;,6666,&#39;2017-03-04&#39;,NULL);</span><br></pre></td></tr></table></figure><p><img data-src="/img/%E5%A4%9A%E8%A1%A8%E6%9F%A5%E8%AF%A2%E2%80%94%E2%80%94%E6%95%B0%E6%8D%AE%E5%87%86%E5%A4%87.png" alt="多表查询——数据准备"></p><h3 id="2-1-笛卡尔积"><a href="#2-1-笛卡尔积" class="headerlink" title="2.1 笛卡尔积"></a>2.1 笛卡尔积</h3><p>功能：<strong>将二张表的记录进行拼接，产生了笛卡尔积</strong>（又称为：交叉连接）</p><p>语法：<code>SELECT * FROM dept , emp;</code></p><p><img data-src="/img/%E7%AC%9B%E5%8D%A1%E5%B0%94%E7%A7%AF.png" alt="笛卡尔积"></p><h3 id="2-2-内连接"><a href="#2-2-内连接" class="headerlink" title="2.2 内连接"></a>2.2 内连接</h3><p><img data-src="/img/%E5%86%85%E8%BF%9E%E6%8E%A5.png" alt="内连接"></p><ul><li><p>功能：拿A表的记录去匹配B表的记录，若匹配到就显示（查询二张表的交集）</p></li><li><p>语法：</p><ul><li><p>隐式内连接</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from A表,B表 where 连接条件;</span><br></pre></td></tr></table></figure></li><li><p>显示内连接</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from A表 [inner] join B表 on 连接条件;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>练习：</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">-- 隐式内连接</span><br><span class="line">SELECT * FROM dept d ,emp e WHERE d.id &#x3D; e.dept_id ;</span><br><span class="line"></span><br><span class="line">-- 显示内连接</span><br><span class="line">SELECT * FROM dept d INNER JOIN emp e ON e.dept_id &#x3D; d.id;</span><br><span class="line"></span><br><span class="line">-- 小练习:  查询猪八戒的性别，工资和所在部门名称</span><br><span class="line">-- 1.确定几张表</span><br><span class="line">SELECT * FROM emp e INNER JOIN dept d;</span><br><span class="line">-- 2.确定连接条件</span><br><span class="line">SELECT * FROM emp e INNER JOIN dept d ON e.dept_id &#x3D; d.id;</span><br><span class="line">-- 3.查询指定字段</span><br><span class="line">SELECT e.gender,e.salary,d.name FROM emp e INNER JOIN dept d ON e.dept_id &#x3D; d.id;</span><br><span class="line">-- 4.确定业务条件</span><br><span class="line">SELECT e.gender,e.salary,d.name FROM emp e INNER JOIN dept d ON e.dept_id &#x3D; d.id WHERE e.name &#x3D; &#39;猪八戒&#39;;</span><br></pre></td></tr></table></figure><h3 id="2-3-外连接"><a href="#2-3-外连接" class="headerlink" title="2.3 外连接"></a>2.3 外连接</h3><h4 id="2-3-1-左外连接"><a href="#2-3-1-左外连接" class="headerlink" title="2.3.1 左外连接"></a>2.3.1 左外连接</h4><p><img data-src="/img/%E5%A4%96%E8%BF%9E%E6%8E%A5_%E5%B7%A6%E5%A4%96%E8%BF%9E%E6%8E%A5.png" alt="外连接_左外连接"></p><ul><li><p>功能：展示A表的全部，再去匹配B表，有就展示，没有就显示NULL</p></li><li><p>语法：</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from A表 left [outer] join B表 on 连接条件;</span><br></pre></td></tr></table></figure></li></ul><ul><li>练习：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-- 左外连接</span><br><span class="line">-- 小练习: 查询所有员工信息及对应的部门名称</span><br><span class="line">SELECT * FROM emp e LEFT OUTER JOIN dept d ON e.dept_id &#x3D; d.id;</span><br><span class="line">-- 小练习: 查询所有部门及对应的员工信息</span><br><span class="line">SELECT * FROM dept d LEFT OUTER JOIN emp e ON e.dept_id &#x3D; d.id;</span><br></pre></td></tr></table></figure><h4 id="2-3-2-右外连接"><a href="#2-3-2-右外连接" class="headerlink" title="2.3.2 右外连接"></a>2.3.2 右外连接</h4><p><img data-src="/img/%E5%A4%96%E8%BF%9E%E6%8E%A5_%E5%8F%B3%E5%A4%96%E8%BF%9E%E6%8E%A5.png" alt="外连接_右外连接"></p><ul><li><p>功能：展示B表的全部，再去匹配A表，有就展示，没有就显示NULL</p></li><li><p>语法</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from A表 right [outer] join B表 on 连接条件;</span><br></pre></td></tr></table></figure></li></ul><ul><li>练习：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-- 右外连接</span><br><span class="line">-- 小练习: 查询所有部门及对应的员工信息</span><br><span class="line">SELECT * FROM emp e RIGHT OUTER JOIN dept d ON e.dept_id &#x3D; d.id;</span><br></pre></td></tr></table></figure><h3 id="2-4-子查询"><a href="#2-4-子查询" class="headerlink" title="2.4 子查询"></a>2.4 子查询</h3><ul><li>问题引入：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-- 引入:查询工资最高的员工是谁？</span><br><span class="line">-- 1.先查询最高工资</span><br><span class="line">SELECT MAX(salary) FROM emp;</span><br><span class="line">-- 2.在根据工资作为条件查询员工基本信息</span><br><span class="line">SELECT * FROM emp WHERE salary &#x3D; (SELECT MAX(salary) FROM emp);</span><br></pre></td></tr></table></figure><ul><li><p>功能：一条sql语句的执行结果，作为另一条sql语法的一部分</p></li><li><p>语法：</p><ul><li><p>查询结果为单列单值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT MAX(salary) FROM emp;</span><br></pre></td></tr></table></figure></li><li><p>查询结果为单列多行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT salary FROM emp;</span><br></pre></td></tr></table></figure></li><li><p>查询结果为多列多行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM emp;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>总结：</p><ul><li><p>子查询结果为单列（单值或多值），通常作为条件，在where后面使用</p></li><li><p>子查询结果多列多行，通常作为虚拟（临时）表使用</p><blockquote><p>注意：如果一个需求能通过表连接解决，就尽量不要使用子查询</p></blockquote></li></ul></li><li><p>练习：</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">-- 小练习1: 查询工资小于平均工资的员工有哪些？(子查询结果为单列单值)</span><br><span class="line">-- 1.先查询出平均工资</span><br><span class="line">SELECT AVG(salary) FROM emp;</span><br><span class="line">-- 2.再查询出小于平均工资的员工信息</span><br><span class="line">SELECT * FROM emp WHERE salary &lt; (SELECT AVG(salary) FROM emp);</span><br><span class="line"></span><br><span class="line">-- 小练习2: 查询工资大于5000的员工，来自于哪些部门的名字 (子查询结果为单列多行)</span><br><span class="line">-- 1.查询工资大于5000的员工</span><br><span class="line">SELECT dept_id FROM emp WHERE salary &gt; 5000;</span><br><span class="line">-- 2.再根据员工表部门外键查询对应部门名称</span><br><span class="line">SELECT * FROM dept WHERE id IN(SELECT dept_id FROM emp WHERE salary &gt; 5000);</span><br><span class="line"></span><br><span class="line">-- 补充：查询出：开发部和财务部员工的信息</span><br><span class="line">-- 1. 查询开发部和财务的信息</span><br><span class="line">SELECT id FROM dept WHERE &#96;name&#96; IN(&#39;开发部&#39;,&#39;财务部&#39;);</span><br><span class="line">-- 2.再根据部门的id主键查询对应员工信息</span><br><span class="line">SELECT * FROM emp WHERE dept_id IN (SELECT id FROM dept WHERE &#96;name&#96; IN(&#39;开发部&#39;,&#39;财务部&#39;));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- 小练习3: 查询出2011年以后入职的员工信息，包括部门信息 (子查询结果为多列多行)</span><br><span class="line">-- 1.查询出2011年以后入职的员工信息</span><br><span class="line">SELECT * FROM emp WHERE join_date &gt;&#x3D; &#39;2011-1-1&#39;;</span><br><span class="line">-- 2.将查询结果作为临时表关联部门表</span><br><span class="line">SELECT e.name,d.name FROM (SELECT * FROM emp WHERE join_date &gt;&#x3D; &#39;2011-1-1&#39;) AS e INNER JOIN dept d ON e.dept_id &#x3D; d.id;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- 这个需求除了子查询，也可以使用内连接完成（推荐）</span><br><span class="line">-- 1.先关联二张表</span><br><span class="line">SELECT * FROM emp e INNER JOIN dept d ON e.dept_id &#x3D; d.id;</span><br><span class="line">-- 2.再筛选条件</span><br><span class="line">SELECT  e.name,d.name FROM emp e INNER JOIN dept d ON e.dept_id &#x3D; d.id WHERE e.join_date &gt;&#x3D; &#39;2011-1-1&#39;;</span><br></pre></td></tr></table></figure><p><img data-src="/img/%E5%AD%90%E6%9F%A5%E8%AF%A2.png" alt="子查询"></p><h2 id="三、多表查询案例"><a href="#三、多表查询案例" class="headerlink" title="三、多表查询案例"></a>三、多表查询案例</h2><p>我们在企业开发时，根据不同的业务需求往往需要通过2张及以上的表中去查询需要的数据。其实不管是几张表的查询，都是有规律可循的。 </p><p><img data-src="/img/%E5%A4%9A%E8%A1%A8%E6%A1%88%E4%BE%8B.png" alt="多表案例"></p><h4 id="准备数据"><a href="#准备数据" class="headerlink" title="准备数据"></a>准备数据</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line">-- 多表案例</span><br><span class="line">create database mysql_3;</span><br><span class="line">use mysql_3;</span><br><span class="line"></span><br><span class="line">-- 部门表</span><br><span class="line">CREATE TABLE dept (</span><br><span class="line">  id INT PRIMARY KEY auto_increment, -- 部门id</span><br><span class="line">  dname VARCHAR(50), -- 部门名称</span><br><span class="line">  loc VARCHAR(50) -- 部门位置</span><br><span class="line">);</span><br><span class="line">-- 添加4个部门</span><br><span class="line">INSERT INTO dept(id,dname,loc) VALUES </span><br><span class="line">(10,&#39;教研部&#39;,&#39;北京&#39;),</span><br><span class="line">(20,&#39;学工部&#39;,&#39;上海&#39;),</span><br><span class="line">(30,&#39;销售部&#39;,&#39;广州&#39;),</span><br><span class="line">(40,&#39;财务部&#39;,&#39;深圳&#39;);</span><br><span class="line"></span><br><span class="line">-- 职务表</span><br><span class="line">CREATE TABLE job (</span><br><span class="line">  id INT PRIMARY KEY,</span><br><span class="line">  jname VARCHAR(20), -- 职务名称</span><br><span class="line">  description VARCHAR(50) -- 职务描述</span><br><span class="line">);</span><br><span class="line">-- 添加4个职务</span><br><span class="line">INSERT INTO job (id, jname, description) VALUES</span><br><span class="line">(1, &#39;董事长&#39;, &#39;管理整个公司，接单&#39;),</span><br><span class="line">(2, &#39;经理&#39;, &#39;管理部门员工&#39;),</span><br><span class="line">(3, &#39;销售员&#39;, &#39;向客人推销产品&#39;),</span><br><span class="line">(4, &#39;文员&#39;, &#39;使用办公软件&#39;);</span><br><span class="line"></span><br><span class="line">-- 员工表</span><br><span class="line">CREATE TABLE emp (</span><br><span class="line">  id INT PRIMARY KEY, -- 员工id</span><br><span class="line">  ename VARCHAR(50), -- 员工姓名</span><br><span class="line">  job_id INT, -- 职务id  外键</span><br><span class="line">  mgr INT , -- 上级领导</span><br><span class="line">  joindate DATE, -- 入职日期</span><br><span class="line">  salary DECIMAL(7,2), -- 工资 99999.99</span><br><span class="line">  bonus DECIMAL(7,2), -- 奖金 99999.99</span><br><span class="line">  dept_id INT, -- 所在部门编号  外键</span><br><span class="line">  CONSTRAINT emp_jobid_ref_job_id_fk FOREIGN KEY (job_id) REFERENCES job (id),</span><br><span class="line">  CONSTRAINT emp_deptid_ref_dept_id_fk FOREIGN KEY (dept_id) REFERENCES dept (id)</span><br><span class="line">);</span><br><span class="line">-- 添加员工</span><br><span class="line">INSERT INTO emp(id,ename,job_id,mgr,joindate,salary,bonus,dept_id) VALUES </span><br><span class="line">(1001,&#39;孙悟空&#39;,4,1004,&#39;2000-12-17&#39;,&#39;8000.00&#39;,NULL,20),</span><br><span class="line">(1002,&#39;卢俊义&#39;,3,1006,&#39;2001-02-20&#39;,&#39;16000.00&#39;,&#39;3000.00&#39;,30),</span><br><span class="line">(1003,&#39;林冲&#39;,3,1006,&#39;2001-02-22&#39;,&#39;12500.00&#39;,&#39;5000.00&#39;,30),</span><br><span class="line">(1004,&#39;唐僧&#39;,2,1009,&#39;2001-04-02&#39;,&#39;29750.00&#39;,NULL,20),</span><br><span class="line">(1005,&#39;李逵&#39;,4,1006,&#39;2001-09-28&#39;,&#39;12500.00&#39;,&#39;14000.00&#39;,30),</span><br><span class="line">(1006,&#39;宋江&#39;,2,1009,&#39;2001-05-01&#39;,&#39;28500.00&#39;,NULL,30),</span><br><span class="line">(1007,&#39;刘备&#39;,2,1009,&#39;2001-09-01&#39;,&#39;24500.00&#39;,NULL,10),</span><br><span class="line">(1008,&#39;猪八戒&#39;,4,1004,&#39;2007-04-19&#39;,&#39;30000.00&#39;,NULL,20),</span><br><span class="line">(1009,&#39;罗贯中&#39;,1,NULL,&#39;2001-11-17&#39;,&#39;50000.00&#39;,NULL,10),</span><br><span class="line">(1010,&#39;吴用&#39;,3,1006,&#39;2001-09-08&#39;,&#39;15000.00&#39;,&#39;0.00&#39;,30),</span><br><span class="line">(1011,&#39;沙僧&#39;,4,1004,&#39;2007-05-23&#39;,&#39;11000.00&#39;,NULL,20),</span><br><span class="line">(1012,&#39;李逵&#39;,4,1006,&#39;2001-12-03&#39;,&#39;9500.00&#39;,NULL,30),</span><br><span class="line">(1013,&#39;小白龙&#39;,4,1004,&#39;2001-12-03&#39;,&#39;30000.00&#39;,NULL,20),</span><br><span class="line">(1014,&#39;关羽&#39;,4,1007,&#39;2002-01-23&#39;,&#39;13000.00&#39;,NULL,10);</span><br><span class="line"></span><br><span class="line">-- 工资等级表</span><br><span class="line">CREATE TABLE salarygrade (</span><br><span class="line">  grade INT PRIMARY KEY,  -- 等级</span><br><span class="line">  losalary INT, -- 最低工资</span><br><span class="line">  hisalary INT -- 最高工资</span><br><span class="line">);</span><br><span class="line">-- 添加5个工资等级</span><br><span class="line">INSERT INTO salarygrade(grade,losalary,hisalary) VALUES </span><br><span class="line">(1,7000,12000),</span><br><span class="line">(2,12010,14000),</span><br><span class="line">(3,14010,20000),</span><br><span class="line">(4,20010,30000),</span><br><span class="line">(5,30010,99990);</span><br></pre></td></tr></table></figure><h4 id="问题一"><a href="#问题一" class="headerlink" title="问题一"></a>问题一</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">-- 1 查询所有员工信息。显示员工编号，员工姓名，工资，职务名称，职务描述</span><br><span class="line">-- 1. 确定几张表</span><br><span class="line">SELECT * FROM emp e INNER JOIN job j;</span><br><span class="line">-- 2. 确定连接条件</span><br><span class="line">SELECT * FROM emp e INNER JOIN job j ON e.job_id &#x3D; j.id;</span><br><span class="line">-- 3. 确定显示字段</span><br><span class="line">SELECT e.id,e.ename,e.salary,j.jname,j.description FROM emp e INNER JOIN job j ON e.job_id &#x3D; j.id;</span><br></pre></td></tr></table></figure><h4 id="问题二"><a href="#问题二" class="headerlink" title="问题二"></a>问题二</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">-- 2 查询所有员工信息。显示员工编号，员工姓名，工资，职务名称，职务描述，部门名称，部门位置</span><br><span class="line">-- 1.确定几张表</span><br><span class="line">SELECT * FROM emp e</span><br><span class="line">INNER JOIN job j</span><br><span class="line">INNER JOIN dept d;</span><br><span class="line">-- 2.确定连接条件</span><br><span class="line">SELECT * FROM emp e</span><br><span class="line">INNER JOIN job j ON e.job_id &#x3D; j.id</span><br><span class="line">INNER JOIN dept d ON e.dept_id &#x3D; d.id;</span><br><span class="line">-- 3.确定显示字段</span><br><span class="line">SELECT </span><br><span class="line">  e.id,</span><br><span class="line">  e.ename,</span><br><span class="line">  e.salary,</span><br><span class="line">  j.jname,</span><br><span class="line">  j.description,</span><br><span class="line">  d.dname,</span><br><span class="line">  d.loc </span><br><span class="line">FROM</span><br><span class="line">  emp e </span><br><span class="line">  INNER JOIN job j </span><br><span class="line">    ON e.job_id &#x3D; j.id </span><br><span class="line">  INNER JOIN dept d </span><br><span class="line">    ON e.dept_id &#x3D; d.id ;</span><br></pre></td></tr></table></figure><h4 id="问题三"><a href="#问题三" class="headerlink" title="问题三"></a>问题三</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">-- 3 查询所有员工信息。显示员工姓名，工资，职务名称，职务描述，部门名称，部门位置，工资等级</span><br><span class="line">-- 1.确定几张表</span><br><span class="line">SELECT * FROM emp e</span><br><span class="line">INNER JOIN job j</span><br><span class="line">INNER JOIN dept d</span><br><span class="line">INNER JOIN salarygrade sg;</span><br><span class="line">-- 2.确定连接条件</span><br><span class="line">SELECT * FROM emp e</span><br><span class="line">INNER JOIN job j ON e.job_id &#x3D; j.id</span><br><span class="line">INNER JOIN dept d ON e.dept_id &#x3D; d.id</span><br><span class="line">INNER JOIN salarygrade sg ON e.salary BETWEEN sg.losalary AND sg.hisalary;</span><br><span class="line">-- 3.确定显示字段</span><br><span class="line">SELECT  </span><br><span class="line">  e.id,</span><br><span class="line">  e.ename,</span><br><span class="line">  e.salary,</span><br><span class="line">  j.jname,</span><br><span class="line">  j.description,</span><br><span class="line">  d.dname,</span><br><span class="line">  d.loc,</span><br><span class="line">  sg.grade</span><br><span class="line">FROM emp e</span><br><span class="line">INNER JOIN job j ON e.job_id &#x3D; j.id</span><br><span class="line">INNER JOIN dept d ON e.dept_id &#x3D; d.id</span><br><span class="line">INNER JOIN salarygrade sg ON e.salary BETWEEN sg.losalary AND sg.hisalary;</span><br></pre></td></tr></table></figure><h4 id="问题四"><a href="#问题四" class="headerlink" title="问题四"></a>问题四</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">-- 4 查询经理的信息。显示员工姓名，工资，职务名称，职务描述，部门名称，部门位置，工资等级</span><br><span class="line">SELECT  </span><br><span class="line">  e.id,</span><br><span class="line">  e.ename,</span><br><span class="line">  e.salary,</span><br><span class="line">  j.jname,</span><br><span class="line">  j.description,</span><br><span class="line">  d.dname,</span><br><span class="line">  d.loc,</span><br><span class="line">  sg.grade</span><br><span class="line">FROM emp e</span><br><span class="line">INNER JOIN job j ON e.job_id &#x3D; j.id</span><br><span class="line">INNER JOIN dept d ON e.dept_id &#x3D; d.id</span><br><span class="line">INNER JOIN salarygrade sg ON e.salary BETWEEN sg.losalary AND sg.hisalary</span><br><span class="line">WHERE j.jname &#x3D; &#39;经理&#39;;</span><br></pre></td></tr></table></figure><h4 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h4><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1. </span>多表查询会出现笛卡尔积</span><br><span class="line"></span><br><span class="line"><span class="bullet">2. </span>消除笛卡尔的规律</span><br><span class="line"><span class="code">连接（过滤）条件 = 表个数 -1</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">3. </span>编写sql步骤</span><br><span class="line"><span class="code">a）确定几张表</span></span><br><span class="line"><span class="code">b）确定连接条件  on</span></span><br><span class="line"><span class="code">c）确定显示字段</span></span><br><span class="line"><span class="code">d）确定业务条件  where</span></span><br></pre></td></tr></table></figure><h4 id="问题五"><a href="#问题五" class="headerlink" title="问题五"></a>问题五</h4><p><img data-src="/img/%E5%A4%9A%E8%A1%A8%E6%A1%88%E4%BE%8B%E9%97%AE%E9%A2%98%E4%BA%94.png" alt="多表案例问题五"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">-- 5 查询出部门编号、部门名称、部门位置、部门人数（至少三遍）</span><br><span class="line">-- 1.求出每个部门人数</span><br><span class="line">SELECT dept_id,COUNT(*) AS total FROM emp GROUP BY dept_id;</span><br><span class="line">-- 2.把部门人数作为虚拟表关联部门表</span><br><span class="line">SELECT d.id,d.dname,d.loc,e.total FROM (SELECT dept_id,COUNT(*) AS total FROM emp GROUP BY dept_id) AS e</span><br><span class="line">INNER JOIN dept d ON e.dept_id &#x3D; d.id;</span><br></pre></td></tr></table></figure><h4 id="问题六"><a href="#问题六" class="headerlink" title="问题六"></a>问题六</h4><p>如果一张表的字段存在上下级关系，这张表就可以成为自关联表（一对多的思想）</p><p><img data-src="/img/%E5%A4%9A%E8%A1%A8%E6%A1%88%E4%BE%8B%E9%97%AE%E9%A2%98%E5%85%AD.png" alt="多表案例问题六"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-- 查询所有员工的姓名及上级领导的姓名</span><br><span class="line">SELECT e.id,e.ename,m.id,m.ename FROM emp e LEFT OUTER JOIN emp m ON e.mgr &#x3D; m.id;</span><br></pre></td></tr></table></figure><h2 id="四、事务安全"><a href="#四、事务安全" class="headerlink" title="四、事务安全"></a>四、事务安全</h2><h3 id="4-1-概述"><a href="#4-1-概述" class="headerlink" title="4.1 概述"></a>4.1 概述</h3><h4 id="4-1-1-转账案例"><a href="#4-1-1-转账案例" class="headerlink" title="4.1.1 转账案例"></a>4.1.1 转账案例</h4><p><strong>准备数据</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">create database mysql_4;</span><br><span class="line">use mysql_4;</span><br><span class="line">-- 创建账户表</span><br><span class="line">CREATE TABLE account (</span><br><span class="line">id INT PRIMARY KEY AUTO_INCREMENT,</span><br><span class="line">NAME VARCHAR(32),</span><br><span class="line">money DOUBLE </span><br><span class="line">);</span><br><span class="line">INSERT INTO account (NAME, money) VALUES (&#39;许幻山&#39;, 1000), (&#39;林有有&#39;, 1000);</span><br></pre></td></tr></table></figure><p>模拟转账</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">-- 许幻山扣钱（招商）</span><br><span class="line">UPDATE account SET money &#x3D; money - 100 WHERE id &#x3D; 1;</span><br><span class="line"></span><br><span class="line">-- 网络或机器故障...</span><br><span class="line"></span><br><span class="line">-- 林有有加钱（建设）</span><br><span class="line">UPDATE account SET money &#x3D; money + 100 WHERE id &#x3D; 2;</span><br></pre></td></tr></table></figure><h4 id="4-1-2-事务解释"><a href="#4-1-2-事务解释" class="headerlink" title="4.1.2 事务解释"></a>4.1.2 事务解释</h4><p>如果一个包含多个步骤的业务操作，被事务管理，那么这些操作要么同时成功，要么同时失败。</p><p><img data-src="/img/%E4%BA%8B%E5%8A%A1%E8%A7%A3%E9%87%8A.png" alt="事务解释"></p><h3 id="4-2-事务操作"><a href="#4-2-事务操作" class="headerlink" title="4.2 事务操作"></a>4.2 事务操作</h3><h3 id="4-2-1-手动提交事务【mysql】"><a href="#4-2-1-手动提交事务【mysql】" class="headerlink" title="4.2.1 手动提交事务【mysql】"></a>4.2.1 手动提交事务【mysql】</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1. </span>开启事务</span><br><span class="line"><span class="code">begin | start transaction</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">2. </span>提交事务</span><br><span class="line"><span class="code">commit</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">3. </span>回滚事务</span><br><span class="line"><span class="code">rollback</span></span><br></pre></td></tr></table></figure><p><strong>模拟转账</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">-- 1.开启事务</span><br><span class="line">begin;</span><br><span class="line"></span><br><span class="line">-- 2.许幻山扣钱</span><br><span class="line">UPDATE account SET money &#x3D; money - 100 WHERE id &#x3D; 1;</span><br><span class="line"></span><br><span class="line">-- 机器故障</span><br><span class="line"></span><br><span class="line">-- 3.林有有加钱</span><br><span class="line">UPDATE account SET money &#x3D; money + 100 WHERE id &#x3D; 2;</span><br><span class="line"></span><br><span class="line">-- 4.提交事务</span><br><span class="line">commit;</span><br></pre></td></tr></table></figure><h3 id="4-2-2-自动提交事务【JDBC】"><a href="#4-2-2-自动提交事务【JDBC】" class="headerlink" title="4.2.2 自动提交事务【JDBC】"></a>4.2.2 自动提交事务【JDBC】</h3><blockquote><p>MySQL默认情况下一条DML语句，就是一个独立的事务</p></blockquote><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1. </span>查看MySQL是否开启自动提交事务</span><br><span class="line"><span class="code">show variables like 'autocommit';</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">2. </span>临时关闭自动提交</span><br><span class="line"><span class="code">set autocommit = off;</span></span><br></pre></td></tr></table></figure><p><img data-src="/img/mysql%E8%87%AA%E5%8A%A8%E6%8F%90%E4%BA%A4%E4%BA%8B%E5%8A%A1%E4%BF%AE%E6%94%B9.png" alt="mysql自动提交事务修改"></p><p>模拟转账</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-- 1.许幻山扣钱</span><br><span class="line">UPDATE account SET money &#x3D; money - 100 WHERE id &#x3D; 1;</span><br><span class="line"></span><br><span class="line">-- 只有commit时，才会同步到数据库磁盘文件</span><br></pre></td></tr></table></figure><h3 id="4-3-事务工作原理"><a href="#4-3-事务工作原理" class="headerlink" title="4.3 事务工作原理"></a>4.3 事务工作原理</h3><p><img data-src="/img/%E4%BA%8B%E5%8A%A1%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86.png" alt="事务工作原理"></p><h3 id="4-4-保存-回滚-点"><a href="#4-4-保存-回滚-点" class="headerlink" title="4.4 保存(回滚)点"></a>4.4 保存(回滚)点</h3><p>当事务开启后，一部分sql执行成功，添加一个保存点，后续操作报错了，回滚到保存点，保证之前的操作可以成功提交。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1. 设置保存点</span><br><span class="line"><span class="keyword">savepoint</span> 保存点名称;</span><br><span class="line"></span><br><span class="line">2. 回滚到指定保存点</span><br><span class="line"><span class="keyword">rollback</span> <span class="keyword">to</span> 保存点名称;</span><br></pre></td></tr></table></figure><blockquote><p>演示保存点功能</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">-- 1.开启事务</span><br><span class="line">begin;</span><br><span class="line">-- 2.许幻山扣钱 如花</span><br><span class="line">UPDATE account SET money &#x3D; money - 100 WHERE id &#x3D; 1;</span><br><span class="line">-- 3.许幻山扣钱 凤姐</span><br><span class="line">UPDATE account SET money &#x3D; money - 100 WHERE id &#x3D; 1;</span><br><span class="line"></span><br><span class="line">-- 保存点</span><br><span class="line">savepoint ol;</span><br><span class="line"></span><br><span class="line">-- 4.许幻山扣钱 芙蓉姐姐</span><br><span class="line">UPDATE account SET money &#x3D; money - 100 WHERE id &#x3D; 1;</span><br><span class="line"></span><br><span class="line">-- 机器故障..</span><br><span class="line"></span><br><span class="line">-- 回滚到保存点</span><br><span class="line">rollback to ol;</span><br><span class="line"></span><br><span class="line">-- 提交事务</span><br><span class="line">commit;</span><br><span class="line"></span><br><span class="line">-- 5. 许幻山扣钱 乔碧萝</span><br><span class="line"></span><br><span class="line">-- 6. 许幻山扣钱 石榴姐</span><br></pre></td></tr></table></figure><h3 id="4-5-事务特性-ACID"><a href="#4-5-事务特性-ACID" class="headerlink" title="4.5 事务特性[ACID]"></a>4.5 事务特性[ACID]</h3><p>原子性：atomicity</p><ul><li>如果一个包含多个步骤的业务操作，被事务管理，那么这些操作要么同时成功，要么同时失败。</li></ul><p>一致性：consistency</p><ul><li>事务执行前后，保证数据完整性(数据总量)一致</li></ul><p>隔离性：isolation【并发】</p><ul><li>多个事务之间要求隔离，互不干扰</li></ul><p>持久性：durability</p><ul><li>事务一旦成功提交，持久化到磁盘，即使数据库出现问题也不会对数据不会产生影响</li></ul><h3 id="4-6-事务隔离性-并发"><a href="#4-6-事务隔离性-并发" class="headerlink" title="4.6 事务隔离性[并发]"></a>4.6 事务隔离性[并发]</h3><p>多个事务之间隔离的，相互独立的。但是如果多个事务操作同一批数据，则会引发一些问题，设置不同的隔离级别就可以解决这些问题。</p><blockquote><p>事务A、事务B  同时操作（并发）</p></blockquote><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1. </span>脏读</span><br><span class="line"><span class="code">事务A读取到事务B中操作的数据了，如果事务B进行了回滚，这部分内容就称为脏读</span></span><br><span class="line"><span class="code">一个事务读取到另一个事务，未提交的数据就称为脏读...</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">2. </span>不可重复读</span><br><span class="line"><span class="code">事务A读取了部分数据，此时事务B也操作了这部分数据进行了修改，然后事务A再次查询这部分数据，发生不一致，这就称为不可重复读</span></span><br><span class="line"><span class="code">一个事务二次读取的内容不一致，被事务B的update影响，就称为不可重复读</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">3. </span>幻读（虚读）</span><br><span class="line"><span class="code">事务A和事务B同时查询数据（id：10）不存在，此时事务A添加使用id10，事务B添加使用id10，事务A成功了，事务B失败了，这种现象就称为幻读</span></span><br></pre></td></tr></table></figure><h4 id="4-6-1-MySQL数据库隔离级别"><a href="#4-6-1-MySQL数据库隔离级别" class="headerlink" title="4.6.1 MySQL数据库隔离级别"></a>4.6.1 MySQL数据库隔离级别</h4><table><thead><tr><th>级别</th><th>名字</th><th>隔离级别</th><th>脏读</th><th>不可重复读</th><th>幻读</th><th>数据库默认隔离级别</th></tr></thead><tbody><tr><td>1</td><td>读未提交</td><td>read uncommitted</td><td>是</td><td>是</td><td>是</td><td></td></tr><tr><td>2</td><td>读已提交</td><td>read committed</td><td>否</td><td>是</td><td>是</td><td>Oracle和SQL Server</td></tr><tr><td>3</td><td>可重复读</td><td>repeatable read</td><td>否</td><td>否</td><td>是</td><td>MySQL</td></tr><tr><td>4</td><td>串行化</td><td>serializable</td><td>否</td><td>否</td><td>否</td><td></td></tr></tbody></table><blockquote><p>设置数据库的隔离级别的不同考虑，选择不同的隔离级别：</p><ul><li><p>考虑性能： 1 &gt; 2 &gt; 3 &gt; 4</p></li><li><p>考虑安全：4 &gt; 3 &gt; 2 &gt; 1</p></li><li><p>综合考虑：2 、3</p></li></ul></blockquote><h4 id="4-6-2-演示隔离级别产生的问题"><a href="#4-6-2-演示隔离级别产生的问题" class="headerlink" title="4.6.2 演示隔离级别产生的问题"></a>4.6.2 演示隔离级别产生的问题</h4><p>相关语法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1. 查看当前数据库隔离级别</span><br><span class="line">show variables like &#39;%isolation%&#39;;</span><br><span class="line">2. 临时修改隔离级别</span><br><span class="line">set session transaction isolation level 级别字符串;</span><br></pre></td></tr></table></figure><blockquote><p>模拟创建两个事务：事务A、事务B</p></blockquote><h5 id="演示脏读"><a href="#演示脏读" class="headerlink" title="演示脏读"></a>演示脏读</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1. 设置事务的隔离级别为 read uncommitted</span><br><span class="line">set session transaction isolation level read uncommitted;</span><br></pre></td></tr></table></figure><p><img data-src="/img/%E6%BC%94%E7%A4%BA%E8%84%8F%E8%AF%BB.png" alt="演示脏读"></p><h5 id="解决脏读（产生了不可重复读的问题）"><a href="#解决脏读（产生了不可重复读的问题）" class="headerlink" title="解决脏读（产生了不可重复读的问题）"></a>解决脏读（产生了不可重复读的问题）</h5><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1. </span>设置事务的隔离级别为 read committed</span><br><span class="line"><span class="code">set session transaction isolation level read committed;</span></span><br></pre></td></tr></table></figure><p><img data-src="/img/%E8%A7%A3%E5%86%B3%E8%84%8F%E8%AF%BB.png" alt="解决脏读"></p><h5 id="解决不可重复读"><a href="#解决不可重复读" class="headerlink" title="解决不可重复读"></a>解决不可重复读</h5><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1. </span>设置事务的隔离级别为 repeatable read</span><br><span class="line"><span class="code">set session transaction isolation level repeatable read;</span></span><br></pre></td></tr></table></figure><p><img data-src="/img/%E8%A7%A3%E5%86%B3%E4%B8%8D%E5%8F%AF%E9%87%8D%E5%A4%8D%E8%AF%BB.png" alt="解决不可重复读"></p><h5 id="演示幻读"><a href="#演示幻读" class="headerlink" title="演示幻读"></a>演示幻读</h5><p><img data-src="/img/%E6%BC%94%E7%A4%BA%E5%B9%BB%E8%AF%BB.png" alt="演示幻读"></p><h5 id="解决幻读"><a href="#解决幻读" class="headerlink" title="解决幻读"></a>解决幻读</h5><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1. </span>设置事务的隔离级别为 serializable</span><br><span class="line"><span class="code">set session transaction isolation level serializable;</span></span><br></pre></td></tr></table></figure><p><img data-src="/img/%E8%A7%A3%E5%86%B3%E5%B9%BB%E8%AF%BB.png" alt="解决幻读"></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、表关系&quot;&gt;&lt;a href=&quot;#一、表关系&quot; class=&quot;headerlink&quot; title=&quot;一、表关系&quot;&gt;&lt;/a&gt;一、表关系&lt;/h2&gt;&lt;h3 id=&quot;1-1-概述&quot;&gt;&lt;a href=&quot;#1-1-概述&quot; class=&quot;headerlink&quot; title=&quot;1.1 概述&quot;&gt;&lt;/a&gt;1.1 概述&lt;/h3&gt;&lt;p&gt;现实生活中，（班级）实体与（学生）实体之间肯定是有关系的，那么我们在设计表的时候，就应该体现出（班级）表与（学生）表之间的这种关系！&lt;/p&gt;
&lt;p&gt;我们把这种数据库称为&lt;span style=&quot;color:red&quot;&gt;关系型数据库（RDBMS）&lt;/span&gt;，在数据库设计上，表关系分为三种：&lt;/p&gt;
&lt;figure class=&quot;highlight markdown&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;bullet&quot;&gt;1. &lt;/span&gt;一对多（多对一）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;code&quot;&gt;	应用场景：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;code&quot;&gt;		班级和学生、部门和员工&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;code&quot;&gt;	解释：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;code&quot;&gt;		一个班级内有多名同学，多名同学都属于某一个班级&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;bullet&quot;&gt;2. &lt;/span&gt;多对多&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;code&quot;&gt;	应用场景：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;code&quot;&gt;		学生和课程、学生和老师&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;code&quot;&gt;	解释：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;code&quot;&gt;		一名同学可以选修多门课程，一门课程可以被多名同学选修&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;code&quot;&gt;		&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;bullet&quot;&gt;3. &lt;/span&gt;一对一（一般情况下可以单表实现，有时候需要进行抽取）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;code&quot;&gt;	应用场景：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;code&quot;&gt;		公民和身份证号、商品和详情&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;code&quot;&gt;	解释：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;code&quot;&gt;		一个公民只有一个对应的身份证号、一个身份证号只对应一个公民&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="数据库" scheme="http://sunmoon.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="MySQL" scheme="http://sunmoon.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL/"/>
    
    
      <category term="表关系" scheme="http://sunmoon.com/tags/%E8%A1%A8%E5%85%B3%E7%B3%BB/"/>
    
      <category term="外键约束" scheme="http://sunmoon.com/tags/%E5%A4%96%E9%94%AE%E7%BA%A6%E6%9D%9F/"/>
    
      <category term="多表查询" scheme="http://sunmoon.com/tags/%E5%A4%9A%E8%A1%A8%E6%9F%A5%E8%AF%A2/"/>
    
      <category term="表连接" scheme="http://sunmoon.com/tags/%E8%A1%A8%E8%BF%9E%E6%8E%A5/"/>
    
      <category term="子查询" scheme="http://sunmoon.com/tags/%E5%AD%90%E6%9F%A5%E8%AF%A2/"/>
    
      <category term="事务安全" scheme="http://sunmoon.com/tags/%E4%BA%8B%E5%8A%A1%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>MySQL基础</title>
    <link href="http://sunmoon.com/2020/09/01/MySQL%E5%9F%BA%E7%A1%80/"/>
    <id>http://sunmoon.com/2020/09/01/MySQL%E5%9F%BA%E7%A1%80/</id>
    <published>2020-09-01T10:47:58.000Z</published>
    <updated>2020-09-03T10:14:22.526Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、数据库介绍"><a href="#一、数据库介绍" class="headerlink" title="一、数据库介绍"></a>一、数据库介绍</h2><h3 id="1-1-什么是数据库"><a href="#1-1-什么是数据库" class="headerlink" title="1.1 什么是数据库"></a>1.1 什么是数据库</h3><p><strong>数据库：</strong>存储数据的仓库,本质上就是存储数据的文件系统，方便我们管理数据。</p><h3 id="1-2-数据库管理系统层次"><a href="#1-2-数据库管理系统层次" class="headerlink" title="1.2 数据库管理系统层次"></a>1.2 数据库管理系统层次</h3><p>数据库管理系统（Database Management System[DBMS]）：指一种操作和管理数据库的大型软件。</p><a id="more"></a><blockquote><p>MySQL软件–&gt;仓库—&gt;表–&gt;记录（数据）</p></blockquote><p><img data-src="/img/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E5%B1%82%E6%AC%A1.png" alt="数据库管理系统层次"></p><h3 id="1-3-实体和表的关系"><a href="#1-3-实体和表的关系" class="headerlink" title="1.3 实体和表的关系"></a>1.3 实体和表的关系</h3><p><img data-src="/img/%E5%AE%9E%E4%BD%93%E5%92%8C%E8%A1%A8%E7%9A%84%E5%85%B3%E7%B3%BB.png" alt="实体和表的关系"></p><h3 id="1-4-常见的关系型数据库"><a href="#1-4-常见的关系型数据库" class="headerlink" title="1.4 常见的关系型数据库"></a>1.4 常见的关系型数据库</h3><ul><li><p>MYSQL：开源免费的数据库，小型的数据库.已经被Oracle收购了.MySQL6.x（商业、社区）版本也开始收费。</p></li><li><p>Oracle：收费的大型数据库，Oracle公司的产品。Oracle收购SUN公司，收购MYSQL。</p></li><li><p>DB2：IBM公司的数据库产品,收费的。常应用在银行系统中。</p></li><li><p>SQLServer：MicroSoft 公司收费的中型的数据库。C#、.net等语言常使用。</p></li><li><p>SyBase：已经淡出历史舞台。提供了一个非常专业数据建模的工具PowerDesigner。</p></li><li><p>SQLite: 嵌入式的小型数据库，应用在手机端。</p></li><li><p>OceanBase：阿里巴巴提供的数据库产品，国货之光…</p></li></ul><h2 id="二、MySQL使用"><a href="#二、MySQL使用" class="headerlink" title="二、MySQL使用"></a>二、MySQL使用</h2><h3 id="2-1-安装"><a href="#2-1-安装" class="headerlink" title="2.1 安装"></a>2.1 安装</h3><p>略…</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">+ </span>安装成功后，通过DOS命令行验证</span><br><span class="line"><span class="code">mysql --version</span></span><br></pre></td></tr></table></figure><h3 id="2-2-使用"><a href="#2-2-使用" class="headerlink" title="2.2 使用"></a>2.2 使用</h3><p><strong>启动和关闭</strong></p><blockquote><p>MySQL软件默认开启自启动</p></blockquote><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1. </span>windows服务窗口</span><br><span class="line"><span class="code">计算机右键管理，选择服务，搜索MySQL</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">2. </span>DOS命令行（超级管理员）</span><br><span class="line"><span class="code">net start mysql</span></span><br><span class="line"><span class="code">net stop  mysql</span></span><br></pre></td></tr></table></figure><p><strong>登录</strong></p><blockquote><p>dos命令行方式</p></blockquote><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1. </span>本机登录</span><br><span class="line"><span class="code">mysql -u用户名 -p密码</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">2. </span>远程登录</span><br><span class="line"><span class="code">mysql -h主机地址 -u用户名 -p密码</span></span><br></pre></td></tr></table></figure><p><strong>退出</strong></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">exit</span><br><span class="line">quit</span><br></pre></td></tr></table></figure><h2 id="三、SQL"><a href="#三、SQL" class="headerlink" title="三、SQL"></a>三、SQL</h2><h3 id="3-1-概述"><a href="#3-1-概述" class="headerlink" title="3.1 概述"></a>3.1 概述</h3><p>SQL：结构化查询语言（Structured Query Language）</p><ul><li>通过sql语句，可以实现对数据库的增删改查</li><li>CRUD：create 创建、 retrieve(read) 检索、update 更新、delete 删除</li></ul><h3 id="3-2-SQL方言"><a href="#3-2-SQL方言" class="headerlink" title="3.2 SQL方言"></a>3.2 SQL方言</h3><p>SQL是一套标准，所有的数据库厂商都实现了此标准；但是各自厂商在此标准上增加了特有的语句，这部分内容我们称为方言。</p><blockquote><p>方言举例：</p><ul><li>MySQL注释 #  </li><li>MySQL分页 limit</li></ul></blockquote><h3 id="3-3-SQL书写规范"><a href="#3-3-SQL书写规范" class="headerlink" title="3.3 SQL书写规范"></a>3.3 SQL书写规范</h3><ul><li>SQL语句可以单行或多行书写，最后以分号结束</li><li>SQL语句在windows平台下不区分大小写，关键字大写</li><li>SQL的注释：<ul><li>单行注释：<code>-- 注释内容</code></li><li>多行注释：<code>/* 注释内容 */</code></li></ul></li></ul><h3 id="3-4-SQL分类"><a href="#3-4-SQL分类" class="headerlink" title="3.4 SQL分类"></a>3.4 SQL分类</h3><ul><li>DDL：(Data Definition Language)数据定义语言 <ul><li>用来定义数据库对象：数据库，表，列等。关键字：create,drop,alter等</li></ul></li><li>DML：(Data Manipulation Language)数据操作语言 <ul><li>用来对数据库中表的数据进行增删改。关键字：insert,delete, update等</li></ul></li><li>DQL：(Data Query Language) 数据查询语言<ul><li>用来查询数据库中表的记录(数据)。关键字：select, where等</li></ul></li><li>DCL：(Data Control Language)数据控制语言<ul><li>用来定义数据库的访问权限和安全级别，及创建用户。关键字：grant,revoke等</li></ul></li><li>TCL：(Transaction Control Language) 事务控制语言<ul><li>用于控制数据库的事务操作，关键字; commit,savepoint,rollback等</li></ul></li></ul><h2 id="四、SQL的基础操作"><a href="#四、SQL的基础操作" class="headerlink" title="四、SQL的基础操作"></a>四、SQL的基础操作</h2><h3 id="4-1-DDL"><a href="#4-1-DDL" class="headerlink" title="4.1 DDL"></a>4.1 DDL</h3><h4 id="4-1-1-操作数据库"><a href="#4-1-1-操作数据库" class="headerlink" title="4.1.1 操作数据库"></a>4.1.1 操作数据库</h4><h5 id="C：创建"><a href="#C：创建" class="headerlink" title="C：创建"></a>C：创建</h5><ul><li><strong>直接创建数据库</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 语法</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> 数据库名;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 示例</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> mydb;</span><br></pre></td></tr></table></figure><ul><li><strong>创建数据库并指定字符集</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 语法</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> 数据库名 <span class="keyword">charset</span> 字符集;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 示例</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> mydb <span class="keyword">charset</span> utf8;</span><br></pre></td></tr></table></figure><h5 id="R：查询"><a href="#R：查询" class="headerlink" title="R：查询"></a>R：查询</h5><ul><li><strong>查看所有数据库</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 语法</span></span><br><span class="line"><span class="keyword">show</span> <span class="keyword">databases</span>;</span><br></pre></td></tr></table></figure><ul><li><strong>查看建库语句</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 语法</span></span><br><span class="line"><span class="keyword">show</span> <span class="keyword">create</span> <span class="keyword">database</span> 数据库名;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 示例</span></span><br><span class="line"><span class="keyword">show</span> <span class="keyword">create</span> <span class="keyword">database</span> mydb;</span><br></pre></td></tr></table></figure><h5 id="U：修改"><a href="#U：修改" class="headerlink" title="U：修改"></a>U：修改</h5><ul><li><strong>修改数据库的字符集</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 语法</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">database</span> 数据库名 <span class="keyword">charset</span> 字符集；</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 示例</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">database</span> mydb <span class="keyword">charset</span> gbk;</span><br></pre></td></tr></table></figure><h5 id="D：删除"><a href="#D：删除" class="headerlink" title="D：删除"></a>D：删除</h5><ul><li><strong>删除指定的数据库</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 语法</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">database</span> 数据库名;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 示例</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">database</span> mydb;</span><br></pre></td></tr></table></figure><h5 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h5><ul><li><strong>查看当前正在使用的数据库</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">database</span>();</span><br></pre></td></tr></table></figure><ul><li><strong>使用数据库</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 语法</span></span><br><span class="line"><span class="keyword">use</span> 数据库名；</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 示例</span></span><br><span class="line"><span class="keyword">use</span> mydb;</span><br></pre></td></tr></table></figure><h4 id="4-1-2-操作表"><a href="#4-1-2-操作表" class="headerlink" title="4.1.2 操作表"></a>4.1.2 操作表</h4><h5 id="C：创建-1"><a href="#C：创建-1" class="headerlink" title="C：创建"></a>C：创建</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 语法</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> 表名(</span><br><span class="line">字段名 数据类型,</span><br><span class="line">    字段名 数据类型,</span><br><span class="line">    ...</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 示例</span></span><br><span class="line"><span class="comment">-- 需求：创建一张student表，表中字段有id、name、birthday</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> student(</span><br><span class="line"><span class="keyword">id</span> <span class="built_in">int</span>,</span><br><span class="line">    <span class="keyword">name</span> <span class="built_in">varchar</span>(<span class="number">32</span>),</span><br><span class="line">    birthday <span class="built_in">date</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><p><strong>MySQL中常见的数据类型</strong></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">* </span>int      整型</span><br><span class="line"></span><br><span class="line"><span class="bullet">* </span>double   浮点型</span><br><span class="line"></span><br><span class="line"><span class="bullet">* </span>decimal  高精度浮点型</span><br><span class="line"><span class="code">decimal(m,n)</span></span><br><span class="line"><span class="code">m：总长度</span></span><br><span class="line"><span class="code">n：小数位长度</span></span><br><span class="line"><span class="code">举例</span></span><br><span class="line"><span class="code">decimal(5,2)</span></span><br><span class="line"><span class="code">最大值：999.99</span></span><br><span class="line"><span class="code">最小值：0.01</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">* </span>varchar  可变长度字符串</span><br><span class="line"><span class="code">varchar(m) </span></span><br><span class="line"><span class="code">m取值范围：1~21841 字符</span></span><br><span class="line"><span class="code">举例：</span></span><br><span class="line"><span class="code">varchar(10)</span></span><br><span class="line"><span class="code">最大值：10个字符（中英文及标点符号）</span></span><br><span class="line"><span class="code">最小值：1个字符</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">* </span>char     固定长度字符串</span><br><span class="line"><span class="code">char(m)</span></span><br><span class="line"><span class="code">m取值范围：1~257</span></span><br><span class="line"><span class="code">举例：</span></span><br><span class="line"><span class="code">char(10)</span></span><br><span class="line"><span class="code">最大值：10个字符</span></span><br><span class="line"><span class="code">最小值：10个字符</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">* </span>text   文本</span><br><span class="line"></span><br><span class="line"><span class="bullet">* </span>date     日期，格式：yyyy-MM-dd</span><br><span class="line"></span><br><span class="line"><span class="bullet">* </span>datetime 日期时间，格式：yyyy-MM-dd HH:mm:ss</span><br></pre></td></tr></table></figure><p><strong>克隆表</strong></p><blockquote><p>为了简化表的创建，在创建的表的时候，可以使用已有表的结构</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 语法</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> 新表 <span class="keyword">like</span> 旧表;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 实例</span></span><br><span class="line"><span class="comment">-- 需求：利用student表的结构快速复制出一张teacher表</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> teacher <span class="keyword">like</span> student;</span><br></pre></td></tr></table></figure><h5 id="R：查询-1"><a href="#R：查询-1" class="headerlink" title="R：查询"></a>R：查询</h5><ul><li><strong>查询当前库中所有的数据表</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 语法</span></span><br><span class="line"><span class="keyword">show</span> <span class="keyword">tables</span>;</span><br></pre></td></tr></table></figure><ul><li><strong>查看建表语句</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 语法 </span></span><br><span class="line"><span class="keyword">show</span> <span class="keyword">create</span> <span class="keyword">table</span> 表名;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 实例 </span></span><br><span class="line"><span class="keyword">show</span> <span class="keyword">create</span> <span class="keyword">table</span> teacher;</span><br></pre></td></tr></table></figure><ul><li><strong>查看表结构</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 语法</span></span><br><span class="line">desc 表名;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 实例</span></span><br><span class="line">desc student;</span><br><span class="line">desc teacher;</span><br></pre></td></tr></table></figure><h5 id="U：修改-1"><a href="#U：修改-1" class="headerlink" title="U：修改"></a>U：修改</h5><ul><li><strong>添加一列</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 语法</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">add</span> 列名 数据类型;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 实例</span></span><br><span class="line"><span class="comment">-- 需求：修改teacher表中添加一列jieshao</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> teacher <span class="keyword">add</span> jieshao <span class="built_in">varchar</span>(<span class="number">30</span>);</span><br></pre></td></tr></table></figure><ul><li><strong>修改列类型</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 语法</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">modify</span> 列名 新数据类型;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 实例</span></span><br><span class="line"><span class="comment">-- 需求：修改teacher表jieshao列的字符长度为99</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> teacher <span class="keyword">modify</span> jieshao <span class="built_in">varchar</span>(<span class="number">99</span>);</span><br></pre></td></tr></table></figure><ul><li><strong>修改列名</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 语法</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">change</span> 旧列名 新列名 新数据类型;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 实例</span></span><br><span class="line"><span class="comment">-- 需求：修改teacher表jieshao列名为intro</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> teacher <span class="keyword">change</span> jieshao intro <span class="built_in">varchar</span>(<span class="number">256</span>);</span><br></pre></td></tr></table></figure><ul><li><strong>删除指定列</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 语法</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">drop</span> 列名;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 实例</span></span><br><span class="line"><span class="comment">-- 需求：删除teacher表的intro列</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> teacher <span class="keyword">drop</span> intro;</span><br></pre></td></tr></table></figure><ul><li><strong>修改表名</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 语法</span></span><br><span class="line"><span class="keyword">rename</span> <span class="keyword">table</span> 旧表名 <span class="keyword">to</span>  新表名;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 实例</span></span><br><span class="line"><span class="comment">-- 需求：修改teacher表的名称为tch</span></span><br><span class="line"><span class="keyword">rename</span> <span class="keyword">table</span> teacher <span class="keyword">to</span>  tch;</span><br></pre></td></tr></table></figure><h5 id="D：删除-1"><a href="#D：删除-1" class="headerlink" title="D：删除"></a>D：删除</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 语法</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> 表名;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 实例</span></span><br><span class="line"><span class="comment">-- 需求：删除tch表</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> tch;</span><br></pre></td></tr></table></figure><h3 id="4-2-图形化工具"><a href="#4-2-图形化工具" class="headerlink" title="4..2 图形化工具"></a>4..2 图形化工具</h3><blockquote><p>这里介绍SQLyog软件</p></blockquote><p><strong>安装：略…</strong></p><blockquote><p>登录（远程连接）</p></blockquote><p><img data-src="/img/sqlyog%E7%99%BB%E5%BD%95.png" alt="sqlyog登录"></p><blockquote><p>代替DDL操作库</p></blockquote><p><img data-src="/img/sqlyog%E6%93%8D%E4%BD%9C%E5%BA%93.png" alt="sqlyog操作库"></p><blockquote><p>代替DDL操作表</p></blockquote><p><img data-src="/img/sqlyog%E6%93%8D%E4%BD%9C%E8%A1%A8.png" alt="sqlyog操作表"></p><h3 id="4-3-DML"><a href="#4-3-DML" class="headerlink" title="4.3 DML"></a>4.3 DML</h3><h4 id="4-3-1-添加记录"><a href="#4-3-1-添加记录" class="headerlink" title="4.3.1 添加记录"></a>4.3.1 添加记录</h4><p>需求：在student表中添加如下数据：</p><table><thead><tr><th>id</th><th>name</th><th>birthday</th></tr></thead><tbody><tr><td>1</td><td>工藤</td><td>1990-01-01</td></tr><tr><td>5</td><td>小兰</td><td>1990-01-01</td></tr><tr><td>6</td><td>小五郎</td><td></td></tr></tbody></table><p><strong>方式一：完整语法</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 语法</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> 表名(列名<span class="number">1</span>,列名<span class="number">2.</span>...) <span class="keyword">values</span>(值<span class="number">1</span>,值<span class="number">2.</span>..);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 实例</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student(<span class="keyword">id</span>,<span class="keyword">name</span>,birthday)<span class="keyword">values</span>(<span class="string">'1'</span>,<span class="string">'工藤'</span>,<span class="string">'1990-01-01'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> student(<span class="keyword">id</span>,<span class="string">`name`</span>)<span class="keyword">VALUES</span>(<span class="number">6</span>,<span class="string">'小五郎'</span>);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">注意:</span></span><br><span class="line"><span class="comment">1.字符串类型可以使用 单引号或者双引号，推荐使用单引号</span></span><br><span class="line"><span class="comment">2.字符串可以插入一切类型，数据库底层进行了因式转换</span></span><br><span class="line"><span class="comment">3.类的类型必须跟值类型，还有个数，需要一一对应</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p><strong>方式二：简化语法</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 语法</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> 表名 <span class="keyword">values</span>(值<span class="number">1</span>,值<span class="number">2.</span>..);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 实例</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student <span class="keyword">values</span>(<span class="number">5</span>,<span class="string">'小兰'</span>,<span class="string">'1993-2-2'</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student <span class="keyword">values</span>(<span class="number">7</span>,<span class="string">'灰原哀'</span>,<span class="literal">null</span>);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">注意：</span></span><br><span class="line"><span class="comment">1.插入值的顺序必须跟字段顺一致，补充查看字段顺序：desc 表名</span></span><br><span class="line"><span class="comment">2.对于不需要插入真实数据的列（字段），使用null填补位置</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">-- 扩展：一条命令插入多条记录</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student <span class="keyword">values</span>(<span class="number">8</span>,<span class="string">'阿里博士'</span>,<span class="literal">null</span>),(<span class="number">9</span>,<span class="string">'木木景观'</span>,<span class="literal">null</span>);</span><br></pre></td></tr></table></figure><h4 id="4-3-2-修改记录"><a href="#4-3-2-修改记录" class="headerlink" title="4.3.2 修改记录"></a>4.3.2 修改记录</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 语法</span></span><br><span class="line"><span class="keyword">update</span> 表名 <span class="keyword">set</span> 列<span class="number">1</span>=新值<span class="number">1</span>,列<span class="number">2</span>=新值<span class="number">2</span> <span class="keyword">where</span> 条件;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 实例</span></span><br><span class="line"><span class="comment">-- 需求：修改工藤的name为柯南,birthday为2000-01-01</span></span><br><span class="line"><span class="keyword">update</span> student <span class="keyword">set</span> <span class="keyword">name</span>=<span class="string">'柯南'</span>,birthday=<span class="string">'2000-01-01'</span> <span class="keyword">where</span> <span class="keyword">id</span> = <span class="number">1</span>;</span><br></pre></td></tr></table></figure><h4 id="4-3-3-删除记录"><a href="#4-3-3-删除记录" class="headerlink" title="4.3.3 删除记录"></a>4.3.3 删除记录</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 语法</span></span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> 表名 <span class="keyword">where</span> 条件;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 实例</span></span><br><span class="line"><span class="comment">-- 需求：删除student中name=木木景观的记录</span></span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> student <span class="keyword">where</span> <span class="keyword">id</span> = <span class="number">9</span>;</span><br></pre></td></tr></table></figure><h4 id="4-3-4-蠕虫复制"><a href="#4-3-4-蠕虫复制" class="headerlink" title="4.3.4 蠕虫复制"></a>4.3.4 蠕虫复制</h4><p>作用：将一张表的记录，快速复制到另外一张表</p><ul><li>前提：二张表结构一致</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 准备条件 克隆学生表</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> stu <span class="keyword">like</span> student;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 蠕虫复制</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> stu <span class="keyword">select</span> * <span class="keyword">from</span> student;</span><br></pre></td></tr></table></figure><h3 id="4-4-DQL"><a href="#4-4-DQL" class="headerlink" title="4.4 DQL"></a>4.4 DQL</h3><p><strong>准备数据</strong></p><ul><li>创建表</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> student1(</span><br><span class="line"><span class="keyword">id</span> <span class="built_in">int</span>,<span class="comment">-- 学号</span></span><br><span class="line">    <span class="keyword">name</span> <span class="built_in">varchar</span>(<span class="number">20</span>),<span class="comment">-- 姓名</span></span><br><span class="line">    chinese <span class="keyword">double</span>,<span class="comment">-- 语文成绩</span></span><br><span class="line">    english <span class="keyword">double</span>,<span class="comment">-- 英语成绩</span></span><br><span class="line">    math <span class="keyword">double</span><span class="comment">-- 数学成绩</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><ul><li>向表中插入数据</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 插入记录</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student1(<span class="keyword">id</span>,<span class="keyword">name</span>,chinese,english,math) <span class="keyword">values</span>(<span class="number">1</span>,<span class="string">'tom'</span>,<span class="number">89</span>,<span class="number">78</span>,<span class="number">90</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student1(<span class="keyword">id</span>,<span class="keyword">name</span>,chinese,english,math) <span class="keyword">values</span>(<span class="number">2</span>,<span class="string">'jack'</span>,<span class="number">67</span>,<span class="number">98</span>,<span class="number">56</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student1(<span class="keyword">id</span>,<span class="keyword">name</span>,chinese,english,math) <span class="keyword">values</span>(<span class="number">3</span>,<span class="string">'jerry'</span>,<span class="number">87</span>,<span class="number">78</span>,<span class="number">77</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student1(<span class="keyword">id</span>,<span class="keyword">name</span>,chinese,english,math) <span class="keyword">values</span>(<span class="number">4</span>,<span class="string">'lucy'</span>,<span class="number">88</span>,<span class="literal">NULL</span>,<span class="number">90</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student1(<span class="keyword">id</span>,<span class="keyword">name</span>,chinese,english,math) <span class="keyword">values</span>(<span class="number">5</span>,<span class="string">'james'</span>,<span class="number">82</span>,<span class="number">84</span>,<span class="number">77</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student1(<span class="keyword">id</span>,<span class="keyword">name</span>,chinese,english,math) <span class="keyword">values</span>(<span class="number">6</span>,<span class="string">'jack'</span>,<span class="number">55</span>,<span class="number">85</span>,<span class="number">45</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student1(<span class="keyword">id</span>,<span class="keyword">name</span>,chinese,english,math) <span class="keyword">values</span>(<span class="number">7</span>,<span class="string">'tom'</span>,<span class="number">89</span>,<span class="number">65</span>,<span class="number">30</span>);</span><br></pre></td></tr></table></figure><p><strong>基本查询语法</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询全部的字段</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> 表名;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询指定的字段</span></span><br><span class="line"><span class="keyword">select</span> 列名<span class="number">1</span>,列名<span class="number">2.</span>.. <span class="keyword">from</span> 表名;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 去重</span></span><br><span class="line"><span class="keyword">select</span> distnct 列名 <span class="keyword">from</span> 表名;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- null值处理</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">ifnull</span>(列名,默认值) <span class="keyword">from</span> 表名;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 别名</span></span><br><span class="line"><span class="keyword">select</span> 列名 [<span class="keyword">as</span>] 列别名,列名 [<span class="keyword">as</span>] 列别名 <span class="keyword">from</span> 表名 [<span class="keyword">as</span>] 表别名;</span><br></pre></td></tr></table></figure><p><strong>示例：</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询表中所有学生的信息</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student1;</span><br><span class="line"><span class="comment">-- 查询表中所有学生的姓名和对应的语文成绩</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="string">`name`</span>,chinese <span class="keyword">FROM</span> student1;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询表中学生姓名（去重）</span></span><br><span class="line"><span class="comment">-- distinct 去重关键字，多字段去重，要求内容完全一致</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> <span class="string">`name`</span> <span class="keyword">FROM</span> student1;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> <span class="string">`name`</span>,chinese <span class="keyword">FROM</span> student1;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 在查询的所有学生数学分数上加10分特长分</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="string">`name`</span>,math <span class="keyword">FROM</span> student1;</span><br><span class="line"><span class="comment">-- 注意只是查询时，增加了10分，表中原有记录不会受到影响</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="string">`name`</span>,math +<span class="number">10</span> <span class="keyword">FROM</span> student1;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 统计每个学生的总分</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="string">`name`</span>,chinese + english + math <span class="keyword">FROM</span> student1;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> null与其他数据进行数学运算都为null</span></span><br><span class="line"><span class="comment"> 解决：ifnull(列名,默认值)，作用：如果该列的值为null，就使用你指定的默认值</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">IFNULL</span>(english,<span class="number">0</span>) <span class="keyword">FROM</span> student1;</span><br><span class="line"><span class="comment">-- 修复</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="string">`name`</span>,chinese + <span class="keyword">IFNULL</span>(english,<span class="number">0</span>) + math <span class="keyword">FROM</span> student1;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 使用别名表示学生总分</span></span><br><span class="line"><span class="comment">-- 语法：select 列名 [as] 列别名 from 表名 [as] 表别名</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="string">`name`</span> <span class="keyword">AS</span> 姓名,(chinese + <span class="keyword">IFNULL</span>(english,<span class="number">0</span>) + math) <span class="keyword">AS</span> 总分 <span class="keyword">FROM</span> student1;</span><br></pre></td></tr></table></figure><h2 id="五、DQL单表高级查询"><a href="#五、DQL单表高级查询" class="headerlink" title="五、DQL单表高级查询"></a>五、DQL单表高级查询</h2><p><strong>准备数据</strong></p><ul><li>创建表</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> student2(</span><br><span class="line"><span class="keyword">id</span> <span class="built_in">int</span>, <span class="comment">-- 学号</span></span><br><span class="line">    <span class="keyword">name</span> <span class="built_in">varchar</span>(<span class="number">20</span>), <span class="comment">-- 姓名</span></span><br><span class="line">    age <span class="built_in">int</span>, <span class="comment">-- 年龄</span></span><br><span class="line">    sex <span class="built_in">varchar</span>(<span class="number">5</span>), <span class="comment">-- 性别</span></span><br><span class="line">    address <span class="built_in">varchar</span>(<span class="number">100</span>),<span class="comment">-- 地址</span></span><br><span class="line">    math <span class="built_in">int</span>, <span class="comment">-- 数学成绩</span></span><br><span class="line">    english <span class="built_in">int</span> <span class="comment">-- 英语成绩</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><ul><li>插入记录</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 插入记录</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> student2(<span class="keyword">id</span>,<span class="keyword">NAME</span>,age,sex,address,math,english) <span class="keyword">VALUES</span> </span><br><span class="line">(<span class="number">1</span>,<span class="string">'马云'</span>,<span class="number">55</span>,<span class="string">'男'</span>,<span class="string">'杭州'</span>,<span class="number">66</span>,<span class="number">78</span>),</span><br><span class="line">(<span class="number">2</span>,<span class="string">'马化腾'</span>,<span class="number">45</span>,<span class="string">'女'</span>,<span class="string">'深圳'</span>,<span class="number">98</span>,<span class="number">87</span>),</span><br><span class="line">(<span class="number">3</span>,<span class="string">'马景涛'</span>,<span class="number">55</span>,<span class="string">'男'</span>,<span class="string">'香港'</span>,<span class="number">56</span>,<span class="number">77</span>),</span><br><span class="line">(<span class="number">4</span>,<span class="string">'柳岩'</span>,<span class="number">20</span>,<span class="string">'女'</span>,<span class="string">'湖南'</span>,<span class="number">76</span>,<span class="number">65</span>),</span><br><span class="line">(<span class="number">5</span>,<span class="string">'柳青'</span>,<span class="number">20</span>,<span class="string">'男'</span>,<span class="string">'湖南'</span>,<span class="number">86</span>,<span class="literal">NULL</span>),</span><br><span class="line">(<span class="number">6</span>,<span class="string">'刘德华'</span>,<span class="number">57</span>,<span class="string">'男'</span>,<span class="string">'香港'</span>,<span class="number">99</span>,<span class="number">99</span>),</span><br><span class="line">(<span class="number">7</span>,<span class="string">'马德'</span>,<span class="number">22</span>,<span class="string">'女'</span>,<span class="string">'香港'</span>,<span class="number">99</span>,<span class="number">99</span>),</span><br><span class="line">(<span class="number">8</span>,<span class="string">'德玛西亚'</span>,<span class="number">18</span>,<span class="string">'男'</span>,<span class="string">'南京'</span>,<span class="number">56</span>,<span class="number">65</span>);</span><br></pre></td></tr></table></figure><h3 id="5-1-条件查询"><a href="#5-1-条件查询" class="headerlink" title="5.1 条件查询"></a>5.1 条件查询</h3><p><strong>条件查询语法</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> 表名 <span class="keyword">where</span> 条件;</span><br></pre></td></tr></table></figure><h4 id="5-1-1-关系运算符"><a href="#5-1-1-关系运算符" class="headerlink" title="5.1.1 关系运算符"></a>5.1.1 关系运算符</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">&gt; &lt; &gt;= &lt;= = !=(&lt;&gt;) </span><br><span class="line">实例：</span><br><span class="line"><span class="comment">-- 查询age等于20岁的学生</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student2 <span class="keyword">WHERE</span> age = <span class="number">20</span>;</span><br><span class="line"><span class="comment">-- 查询age不等于20岁的学生</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student2 <span class="keyword">WHERE</span> age != <span class="number">20</span>;</span><br><span class="line"><span class="comment">-- 查询math分数大于80分的学生</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student2 <span class="keyword">WHERE</span> math &gt; <span class="number">80</span>;</span><br><span class="line"><span class="comment">-- 查询english分数小于或等于80分的学生</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student2 <span class="keyword">WHERE</span> english &lt;= <span class="number">80</span>;</span><br></pre></td></tr></table></figure><h4 id="5-1-2-逻辑运算符"><a href="#5-1-2-逻辑运算符" class="headerlink" title="5.1.2 逻辑运算符"></a>5.1.2 逻辑运算符</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">&amp;&amp;(and) ||(or) !(not)</span><br><span class="line">in关键字</span><br><span class="line">指定字段，多个条件查询</span><br><span class="line">between关键字</span><br><span class="line">指定字段，范围查询</span><br><span class="line">实例：</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询age大于35且性别为男的学生(两个条件同时满足)</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student2 <span class="keyword">WHERE</span> age &gt;<span class="number">35</span> <span class="keyword">AND</span> sex = <span class="string">'男'</span>;</span><br><span class="line"><span class="comment">-- 查询age大于35或性别为男的学生(两个条件其中一个满足)</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student2 <span class="keyword">WHERE</span> age &gt;<span class="number">35</span> <span class="keyword">OR</span> sex = <span class="string">'男'</span>;</span><br><span class="line"><span class="comment">-- 查询id是1或3或5的学生</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student2 <span class="keyword">WHERE</span> <span class="keyword">id</span> =<span class="number">1</span> <span class="keyword">OR</span> <span class="keyword">id</span> =<span class="number">3</span> <span class="keyword">OR</span> <span class="keyword">id</span> =<span class="number">5</span>;</span><br><span class="line"><span class="comment">-- in关键字</span></span><br><span class="line"><span class="comment">-- 字段 in(条件1，条件2，条件3);</span></span><br><span class="line"><span class="comment">-- 再次查询id是1或3或5的学生</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student2 <span class="keyword">WHERE</span> <span class="keyword">id</span> <span class="keyword">IN</span>(<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>);</span><br><span class="line"><span class="comment">-- 查询id不是1或3或5的学生</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student2 <span class="keyword">WHERE</span> <span class="keyword">id</span> <span class="keyword">NOT</span> <span class="keyword">IN</span>(<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询english成绩大于等于77，且小于等于87的学生</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student2 <span class="keyword">WHERE</span> english&gt;=<span class="number">77</span> <span class="keyword">AND</span> english&lt;=<span class="number">87</span>;</span><br><span class="line"><span class="comment">-- between关键字</span></span><br><span class="line"><span class="comment">-- 字段 between较小的值 and 较大的值;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 再次查询english成绩大于等于77，且小于等于87的学生</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student2 <span class="keyword">WHERE</span> english <span class="keyword">BETWEEN</span> <span class="number">77</span> <span class="keyword">AND</span> <span class="number">87</span>;</span><br></pre></td></tr></table></figure><h4 id="5-1-3-NULL值判断"><a href="#5-1-3-NULL值判断" class="headerlink" title="5.1.3 NULL值判断"></a>5.1.3 NULL值判断</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">为空：is null</span><br><span class="line">非空：is not null</span><br><span class="line">实例：</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询英语成绩为null的学生</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student2 <span class="keyword">WHERE</span> english <span class="keyword">IS</span> <span class="literal">NULL</span>;</span><br><span class="line"><span class="comment">-- 查询英语成绩不为null的学生</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student2 <span class="keyword">WHERE</span> english <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>;</span><br></pre></td></tr></table></figure><h4 id="5-1-4-模糊查询"><a href="#5-1-4-模糊查询" class="headerlink" title="5.1.4 模糊查询"></a>5.1.4 模糊查询</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">字段 like '字符串通配符'</span><br><span class="line">_ 表示单个任意字符</span><br><span class="line">% 表示多个任意字符</span><br><span class="line">实例：</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询姓马的学生</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student2 <span class="keyword">WHERE</span> <span class="string">`name`</span> <span class="keyword">LIKE</span> <span class="string">'马%'</span>;</span><br><span class="line"><span class="comment">-- 查询姓名中包含'德'字的学生</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student2 <span class="keyword">WHERE</span> <span class="string">`name`</span> <span class="keyword">LIKE</span> <span class="string">'%德%'</span>;</span><br><span class="line"><span class="comment">-- 查询姓马，且姓名有三个字的学生</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student2 <span class="keyword">WHERE</span> <span class="string">`name`</span> <span class="keyword">LIKE</span>  <span class="string">'马__'</span>;</span><br></pre></td></tr></table></figure><h3 id="5-2-排序"><a href="#5-2-排序" class="headerlink" title="5.2 排序"></a>5.2 排序</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">语法： </span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> 表名 <span class="keyword">order</span> <span class="keyword">by</span> 字段 [<span class="keyword">asc</span> | <span class="keyword">desc</span>] ,字段 [<span class="keyword">asc</span> | <span class="keyword">desc</span>]</span><br><span class="line"><span class="keyword">asc</span> 升序（默认值）</span><br><span class="line"><span class="keyword">desc</span> 降序</span><br><span class="line">注意：多字段排序后的排序结果，是在前面排序基础之上实现</span><br><span class="line"><span class="comment">-- 实例：</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询所有数据,使用年龄降序排序</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student2 <span class="keyword">ORDER</span> <span class="keyword">BY</span> age <span class="keyword">DESC</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询所有数据,在年龄降序排序的基础上，如果年龄相同再以数学成绩降序排序</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student2 <span class="keyword">ORDER</span> <span class="keyword">BY</span> age <span class="keyword">DESC</span>,math <span class="keyword">DESC</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 排序有null值的列</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student2 <span class="keyword">ORDER</span> <span class="keyword">BY</span> english <span class="keyword">DESC</span>;</span><br></pre></td></tr></table></figure><h3 id="5-3-聚合-分组-函数"><a href="#5-3-聚合-分组-函数" class="headerlink" title="5.3 聚合(分组)函数"></a>5.3 聚合(分组)函数</h3><p>作用：对一列数据进行计算，返回一个结果，忽略null值</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">语法： </span><br><span class="line">count(列) 统计，建议使用 count(*)</span><br><span class="line">sum(列)   求和</span><br><span class="line">max(列)   最大值</span><br><span class="line">min(列)   最小值</span><br><span class="line">avg(列)   平均值</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 实例：</span></span><br><span class="line"><span class="comment">-- 查询学生总数</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">COUNT</span>(*) <span class="keyword">FROM</span> student2;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询数学成绩总分</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">SUM</span>(math) <span class="keyword">FROM</span> student2;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询数学成绩平均分</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">AVG</span>(math) <span class="keyword">FROM</span> student2;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询数学成绩最高分</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">MAX</span>(math) <span class="keyword">FROM</span> student2;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询数学成绩最低分</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">MIN</span>(math) <span class="keyword">FROM</span> student2;</span><br></pre></td></tr></table></figure><h3 id="5-4-分组"><a href="#5-4-分组" class="headerlink" title="5.4 分组"></a>5.4 分组</h3><p>作用：对一列数据进行分组，相同的数据分为一组，通常与聚合函数一起使用，完成统计工作。</p><p><img data-src="/img/%E5%8D%95%E8%A1%A8%E9%AB%98%E7%BA%A7%E6%9F%A5%E8%AF%A2%E2%80%94%E2%80%94%E5%88%86%E7%BB%84.png" alt="单表高级查询——分组"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 语法：</span></span><br><span class="line"><span class="keyword">select</span> 分组字段 <span class="keyword">from</span> 表名 <span class="keyword">group</span> <span class="keyword">by</span> 分组字段 <span class="keyword">having</span> 分组后的条件过滤;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 实例：</span></span><br><span class="line"><span class="comment">-- 查询所有学生, 按性别分组, 统计每组的人数</span></span><br><span class="line"><span class="keyword">SELECT</span> sex,<span class="keyword">COUNT</span>(*) <span class="keyword">FROM</span> student2 <span class="keyword">GROUP</span> <span class="keyword">BY</span> sex;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询年龄大于25岁的人,按性别分组,统计每组的人数</span></span><br><span class="line"><span class="comment">-- 1.查询年龄大于25岁的人</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student2 <span class="keyword">WHERE</span> age &gt;<span class="number">25</span>;</span><br><span class="line"><span class="comment">-- 2.按性别分组</span></span><br><span class="line"><span class="keyword">SELECT</span> sex <span class="keyword">FROM</span> student2 <span class="keyword">WHERE</span> age &gt;<span class="number">25</span> <span class="keyword">GROUP</span> <span class="keyword">BY</span> sex;</span><br><span class="line"><span class="comment">-- 3.统计每组的人数</span></span><br><span class="line"><span class="keyword">SELECT</span> sex,<span class="keyword">COUNT</span>(*) <span class="keyword">FROM</span> student2 <span class="keyword">WHERE</span> age &gt;<span class="number">25</span> <span class="keyword">GROUP</span> <span class="keyword">BY</span> sex;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询年龄大于25岁的人,按性别分组,统计每组的人数，显示人数大于2的信息</span></span><br><span class="line"><span class="keyword">SELECT</span> sex,<span class="keyword">COUNT</span>(*) <span class="keyword">FROM</span> student2 <span class="keyword">WHERE</span> age &gt;<span class="number">25</span> <span class="keyword">AND</span>  <span class="keyword">COUNT</span>(*) &gt;<span class="number">2</span> <span class="keyword">GROUP</span> <span class="keyword">BY</span> sex; <span class="comment">-- Invalid use of group function 错误语法</span></span><br><span class="line"><span class="keyword">SELECT</span> sex,<span class="keyword">COUNT</span>(*) <span class="keyword">FROM</span> student2 <span class="keyword">WHERE</span> age &gt;<span class="number">25</span> <span class="keyword">GROUP</span> <span class="keyword">BY</span> sex <span class="keyword">HAVING</span> <span class="keyword">COUNT</span>(*) &gt;<span class="number">2</span>;</span><br></pre></td></tr></table></figure><blockquote><p>where 和 having 区别:</p><ul><li><p>where是分组前进行条件过滤，不支持聚合函数</p></li><li><p>having是分组后进行条件过滤，支持聚合函数</p></li></ul></blockquote><h3 id="5-5-分页-MySQL方言"><a href="#5-5-分页-MySQL方言" class="headerlink" title="5.5 分页(MySQL方言)"></a>5.5 分页(MySQL方言)</h3><p><strong>向表中添加数据，方便展示分页效果</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> student2(<span class="keyword">id</span>,<span class="keyword">NAME</span>,age,sex,address,math,english) <span class="keyword">VALUES</span> </span><br><span class="line">(<span class="number">9</span>,<span class="string">'唐僧'</span>,<span class="number">25</span>,<span class="string">'男'</span>,<span class="string">'长安'</span>,<span class="number">87</span>,<span class="number">78</span>),</span><br><span class="line">(<span class="number">10</span>,<span class="string">'孙悟空'</span>,<span class="number">18</span>,<span class="string">'男'</span>,<span class="string">'花果山'</span>,<span class="number">100</span>,<span class="number">66</span>),</span><br><span class="line">(<span class="number">11</span>,<span class="string">'猪八戒'</span>,<span class="number">22</span>,<span class="string">'男'</span>,<span class="string">'高老庄'</span>,<span class="number">58</span>,<span class="number">78</span>),</span><br><span class="line">(<span class="number">12</span>,<span class="string">'沙僧'</span>,<span class="number">50</span>,<span class="string">'男'</span>,<span class="string">'流沙河'</span>,<span class="number">77</span>,<span class="number">88</span>),</span><br><span class="line">(<span class="number">13</span>,<span class="string">'白骨精'</span>,<span class="number">22</span>,<span class="string">'女'</span>,<span class="string">'白虎岭'</span>,<span class="number">66</span>,<span class="number">66</span>),</span><br><span class="line">(<span class="number">14</span>,<span class="string">'蜘蛛精'</span>,<span class="number">23</span>,<span class="string">'女'</span>,<span class="string">'盘丝洞'</span>,<span class="number">88</span>,<span class="number">88</span>);</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> 表名 <span class="keyword">limit</span> 起始索引,显示个数</span><br><span class="line">起始索引：从<span class="number">0</span>开始</span><br><span class="line">显示个数：一页展示多少条</span><br><span class="line">索引公式：</span><br><span class="line">开始索引=（当前页<span class="number">-1</span>）× 每页个数</span><br><span class="line"></span><br><span class="line">实例：</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询学生表中数据，显示前4条</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student2 <span class="keyword">LIMIT</span> <span class="number">0</span>,<span class="number">4</span>;</span><br><span class="line"><span class="comment">-- 补充：查询前XX条，起始索引可以省略</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student2 <span class="keyword">LIMIT</span> <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询学生表中数据，从第三条开始显示，显示4条</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student2 <span class="keyword">LIMIT</span> <span class="number">2</span>,<span class="number">4</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 模拟百度分页，共有14条记录，一页展示5条</span></span><br><span class="line"><span class="comment">-- 第一页</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student2 <span class="keyword">LIMIT</span> <span class="number">0</span>,<span class="number">5</span>;</span><br><span class="line"><span class="comment">-- 第二页</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student2 <span class="keyword">LIMIT</span> <span class="number">5</span>,<span class="number">5</span>;</span><br><span class="line"><span class="comment">-- 第三页</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student2 <span class="keyword">LIMIT</span> <span class="number">10</span>,<span class="number">5</span>;</span><br></pre></td></tr></table></figure><h3 id="5-6-高级查询的顺序"><a href="#5-6-高级查询的顺序" class="headerlink" title="5.6 高级查询的顺序"></a>5.6 高级查询的顺序</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> 表名 <span class="keyword">where</span> 条件 <span class="keyword">group</span> <span class="keyword">by</span> 分组 <span class="keyword">having</span> 条件 <span class="keyword">order</span> <span class="keyword">by</span> 排序 <span class="keyword">limit</span> 分页;</span><br></pre></td></tr></table></figure><h2 id="六、数据库约束"><a href="#六、数据库约束" class="headerlink" title="六、数据库约束"></a>六、数据库约束</h2><h3 id="6-1-概述"><a href="#6-1-概述" class="headerlink" title="6.1 概述"></a>6.1 概述</h3><p><strong>作用</strong></p><p>对表中的数据进行限定，保证数据的正确性、有效性和完整性。    </p><p><strong>分类</strong></p><ol><li>主键约束：表示当前记录的（唯一+非空）标识。类似于人类的身份证号</li><li>唯一约束：表示当前记录的唯一性</li><li>非空约束：表示当前记录不能为空</li><li>默认值：我们可以为当前字段指定默认值，如果未指定，默认值就为null</li><li>外键约束：限定二张表数据的正确性、有效性和完整性</li></ol><h3 id="6-2-实现"><a href="#6-2-实现" class="headerlink" title="6.2 实现"></a>6.2 实现</h3><h4 id="6-2-1-主键约束"><a href="#6-2-1-主键约束" class="headerlink" title="6.2.1 主键约束"></a>6.2.1 主键约束</h4><p>作用：限定某一列的值非空且唯一， 主键就是表中记录的唯一标识。<span style="color:red">通常使用id作为主键</span></p><p><strong>一张表只能有一个主键，但是一个主键可以包含多个字段</strong></p><blockquote><p>方式一：在建表的时候,在字段名后面通过primary key 声明</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 语法：</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> 表名(</span><br><span class="line"><span class="keyword">id</span> <span class="built_in">int</span> primary <span class="keyword">key</span>,</span><br><span class="line">    ....</span><br><span class="line">    ....</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 实例：</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> pk1(</span><br><span class="line">    <span class="keyword">id</span> <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span>,</span><br><span class="line">    <span class="string">`name`</span> <span class="built_in">VARCHAR</span>(<span class="number">32</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><blockquote><p>方式二：在建表的时候,在约束区域通过primary key 声明</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 语法：</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> 表名(</span><br><span class="line"><span class="keyword">id</span> <span class="built_in">int</span>,</span><br><span class="line">    字段名 数据类型,</span><br><span class="line">    primay <span class="keyword">key</span>(<span class="keyword">id</span>)</span><br><span class="line">      </span><br><span class="line">);</span><br><span class="line"><span class="comment">-- 实例：</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> pk2(</span><br><span class="line">    <span class="keyword">id</span> <span class="built_in">INT</span>,</span><br><span class="line">    <span class="string">`name`</span> <span class="built_in">VARCHAR</span>(<span class="number">32</span>),</span><br><span class="line">    PRIMARY <span class="keyword">KEY</span>(<span class="keyword">id</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 联合主键</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> pk3(</span><br><span class="line"> <span class="keyword">id</span> <span class="built_in">INT</span> ,</span><br><span class="line"> <span class="string">`name`</span> <span class="built_in">VARCHAR</span>(<span class="number">32</span>),</span><br><span class="line"> PRIMARY <span class="keyword">KEY</span>(<span class="keyword">id</span>,<span class="string">`name`</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><blockquote><p>方式三：通过修改表结构,添加主键约束 </p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 语法：</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> 表名(</span><br><span class="line"><span class="keyword">id</span> <span class="built_in">int</span> primary <span class="keyword">key</span> auto_increment,</span><br><span class="line">    ....</span><br><span class="line">    ....</span><br><span class="line">);</span><br><span class="line"><span class="comment">-- 实例：</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> pk4(</span><br><span class="line"> <span class="keyword">id</span> <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span> AUTO_INCREMENT,</span><br><span class="line"> <span class="string">`name`</span> <span class="built_in">VARCHAR</span>(<span class="number">32</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><blockquote><p>小贴士：</p><ul><li>如果要设置主键的字段存在重复数据，将设置失败…</li></ul></blockquote><h5 id="扩展"><a href="#扩展" class="headerlink" title="扩展"></a>扩展</h5><blockquote><p>主键自增：要求主键类型支持自增，一张表只能指定一个自增器</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 语法：</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> 表名(</span><br><span class="line"><span class="keyword">id</span> <span class="built_in">int</span> primary <span class="keyword">key</span> auto_increment,</span><br><span class="line">    ....</span><br><span class="line">    ....</span><br><span class="line">);</span><br><span class="line"><span class="comment">-- 实例：</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> pk4(</span><br><span class="line"> <span class="keyword">id</span> <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span> AUTO_INCREMENT,</span><br><span class="line"> <span class="string">`name`</span> <span class="built_in">VARCHAR</span>(<span class="number">32</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><blockquote><p>truncate：摧毁表，重构表</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 语法：</span></span><br><span class="line"><span class="keyword">truncate</span> <span class="keyword">table</span> 表名;</span><br><span class="line"><span class="comment">-- 实例：</span></span><br><span class="line"><span class="keyword">truncate</span> <span class="keyword">table</span> pk4;</span><br></pre></td></tr></table></figure><blockquote><p><code>truncate table 表名</code> 和 <code>delete from 表名</code> 区别是什么?</p><ul><li><p>DML分类:delete from，相当于橡皮擦，一条条记录抹除，保留痕迹</p></li><li><p>DDL分类：truncate table，相当于摧毁表，重构表，不保留痕迹，数据量大，性能更好</p></li></ul></blockquote><h4 id="6-2-2-唯一约束"><a href="#6-2-2-唯一约束" class="headerlink" title="6.2.2 唯一约束"></a>6.2.2 唯一约束</h4><p>作用：限定某一列的值不能重复</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 语法：</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> 表名(</span><br><span class="line"><span class="keyword">id</span> <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span> AUTO_INCREMENT,</span><br><span class="line">    字段名 数据类型 <span class="keyword">unique</span><span class="comment">--unique:限定当前字段不能重复</span></span><br><span class="line">);</span><br><span class="line"><span class="comment">-- 实例：</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> un1(</span><br><span class="line"> <span class="keyword">id</span> <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span> AUTO_INCREMENT,</span><br><span class="line"> <span class="string">`name`</span> <span class="built_in">VARCHAR</span>(<span class="number">32</span>) <span class="keyword">UNIQUE</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><blockquote><p>小贴士</p><ul><li>唯一约束，可以出现多个null…</li></ul></blockquote><h4 id="6-2-3-非空约束"><a href="#6-2-3-非空约束" class="headerlink" title="6.2.3 非空约束"></a>6.2.3 非空约束</h4><p>作用：限定某一列的值不能为null</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 语法：</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> 表名(</span><br><span class="line"><span class="keyword">id</span> <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span> AUTO_INCREMENT,</span><br><span class="line">    字段名 数据类型 <span class="keyword">not</span> <span class="literal">null</span></span><br><span class="line">);</span><br><span class="line"><span class="comment">-- 实例：</span></span><br><span class="line"><span class="comment">-- 一般情况下 唯一和非空是一起使用...</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> nn1(</span><br><span class="line">  <span class="keyword">id</span> <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span> AUTO_INCREMENT,</span><br><span class="line">  <span class="string">`name`</span> <span class="built_in">VARCHAR</span>(<span class="number">32</span>) <span class="keyword">UNIQUE</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="comment">-- 唯一 + 非空</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><blockquote><p>小贴士：</p><ul><li>虽然给 name字段设置了 二个约束（unique + not null），功能类似，但它并不是主键约束</li></ul></blockquote><h4 id="6-2-4-默认值"><a href="#6-2-4-默认值" class="headerlink" title="6.2.4 默认值"></a>6.2.4 默认值</h4><p>作用：限定某一列的默认值，在没有指定的情况下所有列的默认值为null</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 语法：</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> 表名(</span><br><span class="line">  <span class="keyword">id</span> <span class="built_in">int</span> primary <span class="keyword">key</span> auto_increment,</span><br><span class="line">  字段名 数据类型 <span class="keyword">default</span> 默认值</span><br><span class="line">);</span><br><span class="line"><span class="comment">-- 实例：</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> df1(</span><br><span class="line"> <span class="string">`id`</span> <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span> AUTO_INCREMENT,</span><br><span class="line"> <span class="string">`name`</span> <span class="built_in">VARCHAR</span>(<span class="number">32</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line"> <span class="string">`sex`</span> <span class="built_in">VARCHAR</span>(<span class="number">5</span>) <span class="keyword">DEFAULT</span> <span class="string">'男'</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h2 id="七、数据库的备份和还原"><a href="#七、数据库的备份和还原" class="headerlink" title="七、数据库的备份和还原"></a>七、数据库的备份和还原</h2><h3 id="7-1-命令行方式"><a href="#7-1-命令行方式" class="headerlink" title="7.1 命令行方式"></a>7.1 命令行方式</h3><ul><li>导出(备份)</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">mysqldump -u用户名 -p密码 导出的数据库名 &gt; 导出文件路径(*.sql)</span><br><span class="line">实例：</span><br><span class="line">mysqldump -uroot -proot web12 &gt; d:\bak.sql</span><br><span class="line">mysqldump -uroot -p web12 &gt; d:\bak.sql</span><br></pre></td></tr></table></figure><ul><li>导入</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">mysql -u用户名 -p密码 &lt; 导入文件路径(*.sql)</span><br><span class="line">实例：</span><br><span class="line">mysql -uroot -p &lt; d:\bak.sql</span><br></pre></td></tr></table></figure><h3 id="7-2-图形化工具"><a href="#7-2-图形化工具" class="headerlink" title="7.2 图形化工具"></a>7.2 图形化工具</h3><ul><li>导出</li></ul><p><img data-src="/img/%E5%9B%BE%E5%BD%A2%E5%8C%96%E5%B7%A5%E5%85%B7%E5%A4%87%E4%BB%BD%E6%95%B0%E6%8D%AE%E5%BA%93.png" alt="图形化工具备份数据库"></p><ul><li>导入</li></ul><p><img data-src="/img/%E5%9B%BE%E5%BD%A2%E5%8C%96%E5%B7%A5%E5%85%B7%E8%BF%98%E5%8E%9F%E6%95%B0%E6%8D%AE%E5%BA%93.png" alt="图形化工具还原数据库"></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、数据库介绍&quot;&gt;&lt;a href=&quot;#一、数据库介绍&quot; class=&quot;headerlink&quot; title=&quot;一、数据库介绍&quot;&gt;&lt;/a&gt;一、数据库介绍&lt;/h2&gt;&lt;h3 id=&quot;1-1-什么是数据库&quot;&gt;&lt;a href=&quot;#1-1-什么是数据库&quot; class=&quot;headerlink&quot; title=&quot;1.1 什么是数据库&quot;&gt;&lt;/a&gt;1.1 什么是数据库&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;数据库：&lt;/strong&gt;存储数据的仓库,本质上就是存储数据的文件系统，方便我们管理数据。&lt;/p&gt;
&lt;h3 id=&quot;1-2-数据库管理系统层次&quot;&gt;&lt;a href=&quot;#1-2-数据库管理系统层次&quot; class=&quot;headerlink&quot; title=&quot;1.2 数据库管理系统层次&quot;&gt;&lt;/a&gt;1.2 数据库管理系统层次&lt;/h3&gt;&lt;p&gt;数据库管理系统（Database Management System[DBMS]）：指一种操作和管理数据库的大型软件。&lt;/p&gt;
    
    </summary>
    
    
      <category term="数据库" scheme="http://sunmoon.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="MySQL" scheme="http://sunmoon.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL/"/>
    
    
      <category term="MySQL数据库" scheme="http://sunmoon.com/tags/MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="SQL语法" scheme="http://sunmoon.com/tags/SQL%E8%AF%AD%E6%B3%95/"/>
    
      <category term="MySQL单表查询" scheme="http://sunmoon.com/tags/MySQL%E5%8D%95%E8%A1%A8%E6%9F%A5%E8%AF%A2/"/>
    
      <category term="数据库约束" scheme="http://sunmoon.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%BA%A6%E6%9D%9F/"/>
    
      <category term="数据库备份和还原" scheme="http://sunmoon.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%A4%87%E4%BB%BD%E5%92%8C%E8%BF%98%E5%8E%9F/"/>
    
  </entry>
  
  <entry>
    <title>Filter&amp;Listener</title>
    <link href="http://sunmoon.com/2020/08/28/Filter-Listener/"/>
    <id>http://sunmoon.com/2020/08/28/Filter-Listener/</id>
    <published>2020-08-28T14:11:04.000Z</published>
    <updated>2020-08-28T14:22:20.396Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、Filter概述"><a href="#一、Filter概述" class="headerlink" title="一、Filter概述"></a>一、Filter概述</h2><p><strong>生活中的过滤器</strong></p><ul><li>净水器、空气净化器、地铁安检、山大王</li></ul><p><strong>web中的过滤器</strong></p><ul><li>当用户访问服务器资源时，过滤器将请求拦截下来，完成一些通用的操作</li></ul><p><strong>应用场景</strong></p><ul><li>如：登录验证、统一编码处理、敏感字符过滤</li></ul><a id="more"></a><p><img data-src="/img/Filter%E6%A6%82%E8%BF%B0.png" alt="Filter概述"></p><h2 id="二、Filter快速入门"><a href="#二、Filter快速入门" class="headerlink" title="二、Filter快速入门"></a>二、Filter快速入门</h2><p>目标资源：quick.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;quick&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h3&gt;quick.jsp 目标资源&lt;/h3&gt;</span><br><span class="line">    &lt;%</span><br><span class="line">        System.out.println(<span class="string">"quick.jsp 目标资源"</span>);</span><br><span class="line">    %&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h3 id="①-xml版本"><a href="#①-xml版本" class="headerlink" title="① xml版本"></a>① xml版本</h3><p>定义普通类，实现Fileter接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">QuickFilter</span> <span class="keyword">implements</span> <span class="title">Filter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(FilterConfig filterConfig)</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 实现拦截的方法...</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> servletRequest：请求</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> servletResponse：响应</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> filterChain：过滤器链（放行）</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"QuickFilter拦截了请求..."</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 放行</span></span><br><span class="line">        filterChain.doFilter(servletRequest, servletResponse);</span><br><span class="line">        </span><br><span class="line">        System.out.println(<span class="string">"QuickFilter对响应增强..."</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>配置XML</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns</span>=<span class="string">"http://xmlns.jcp.org/xml/ns/javaee"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">version</span>=<span class="string">"3.1"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--filter快速入门--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>QuickFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>com.itheima.a_quick.QuickFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>QuickFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/quick.jsp<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="②-注解版本"><a href="#②-注解版本" class="headerlink" title="② 注解版本"></a>② 注解版本</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// @WebFilter(filterName = "QuickFilter",urlPatterns ="/quick.jsp" )</span></span><br><span class="line"><span class="comment">// @WebFilter(urlPatterns ="/quick.jsp" )</span></span><br><span class="line"><span class="comment">// @WebFilter(value ="/quick.jsp" )</span></span><br><span class="line"><span class="meta">@WebFilter</span>(<span class="string">"/quick.jsp"</span> )</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">QuickFilter</span> <span class="keyword">implements</span> <span class="title">Filter</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 内容参考xml版本代码</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="三、Filter工作原理"><a href="#三、Filter工作原理" class="headerlink" title="三、Filter工作原理"></a>三、Filter工作原理</h2><p>图解：</p><p><img data-src="/img/Filter%E5%B7%A5%E4%BD%9C%E6%B5%81%E7%A8%8B.png" alt="Filter工作流程"></p><h2 id="四、Filter使用细节"><a href="#四、Filter使用细节" class="headerlink" title="四、Filter使用细节"></a>四、Filter使用细节</h2><h3 id="4-1-生命周期"><a href="#4-1-生命周期" class="headerlink" title="4.1 生命周期"></a>4.1 生命周期</h3><p>生命周期：指的是一个对象从生（创建）到死（销毁）的一个过程</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 创建时，执行init方法</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(FilterConfig config)</span></span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 用户访问被拦截资源时，执行doFilter方法</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(ServletRequest request, ServletResponse response,FilterChain chain)</span></span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 销毁时，执行destroy方法</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure><blockquote><p>小结：</p><ul><li>创建：服务器启动时创建filter对象，并优于servlet资源的创建</li><li>运行(过滤拦截)：用户每次访问被拦截资源时</li><li>销毁：服务器关闭后，销毁filter对象</li></ul></blockquote><p><strong>在执行init()方法执行时，会携带一个FilterConfig过滤器配置对象，可以使用它加载一些配置信息</strong></p><p>代码演示：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    生命周期</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LifeFilter</span> <span class="keyword">implements</span> <span class="title">Filter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> FilterConfig filterConfig;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建时，执行</span></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">        FilterConfig：过滤器配置对象</span></span><br><span class="line"><span class="comment">            加载一些配置信息...</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(FilterConfig filterConfig)</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"LifeFilter创建了..."</span>);</span><br><span class="line">        <span class="keyword">this</span>.filterConfig=filterConfig;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 拦截时，执行</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"LifeFilter拦截了..."</span>);</span><br><span class="line"></span><br><span class="line">        String encoding = filterConfig.getInitParameter(<span class="string">"encoding"</span>);</span><br><span class="line">        <span class="comment">// servletRequest.setCharacterEncoding(encoding);</span></span><br><span class="line">        System.out.println(encoding);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 放行</span></span><br><span class="line">        filterChain.doFilter(servletRequest, servletResponse);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 销毁时，执行</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"LifeFilter销毁了..."</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>xml配置：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--filter生命周期--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>LifeFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>com.itheima.b_detail.LifeFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>GBK<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>LifeFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/show.jsp<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><p>使用注解实现：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebFilter</span>(value = <span class="string">"/show.jsp"</span>,</span><br><span class="line">           initParams = &#123;<span class="meta">@WebInitParam</span>(name = <span class="string">"encoding"</span>,value = <span class="string">"GBK"</span>)&#125;)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LifeFilter</span> <span class="keyword">implements</span> <span class="title">Filter</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-2-拦截路径"><a href="#4-2-拦截路径" class="headerlink" title="4.2 拦截路径"></a>4.2 拦截路径</h3><p>在开发时，可以指定过滤器的拦截路径来定义拦截目标资源的范围</p><p><strong>路径匹配规则：</strong></p><ul><li><p>精准匹配：配置一个指定（/show.jsp）的拦截资源</p></li><li><p>目录匹配：配置一个指定目录（/user/*）下的资源</p></li><li><p>后缀名匹配：配置一个指定后缀名（<em>.html、</em>.jsp、*.jpg….）的资源</p></li><li><p>匹配所有：配置拦截所有（/*）的资源</p></li></ul><p>代码演示：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 目录匹配</span></span><br><span class="line"><span class="comment">// @WebFilter("/user/*")</span></span><br><span class="line"><span class="comment">// 后缀名匹配</span></span><br><span class="line"><span class="comment">// @WebFilter("*.html")</span></span><br><span class="line"><span class="comment">// 拦截所有</span></span><br><span class="line"><span class="meta">@WebFilter</span>(<span class="string">"/*"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UrlPatternFilter</span> <span class="keyword">implements</span> <span class="title">Filter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(FilterConfig config)</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain chain)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"UrlPatternFilter拦截了请求..."</span>);</span><br><span class="line">        <span class="comment">// 向下转型</span></span><br><span class="line">        HttpServletRequest request = (HttpServletRequest) servletRequest;</span><br><span class="line">        HttpServletResponse response = (HttpServletResponse) servletResponse;</span><br><span class="line">        <span class="comment">// 放行</span></span><br><span class="line">        chain.doFilter(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-3-拦截方式"><a href="#4-3-拦截方式" class="headerlink" title="4.3 拦截方式"></a>4.3 拦截方式</h3><p>在开发时，可以指定过滤器的拦截方式来处理不同的应用场景。</p><ul><li>比如：只拦截从浏览器直接发送过来的请求，或者拦截内部转发的请求</li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1. </span>拦截外部请求（默认拦截方式）</span><br><span class="line"><span class="code">用户通过浏览器发送请求时，进行拦截</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">2. </span>拦截内部转发(forword)</span><br><span class="line"><span class="code">资源a转发到资源b时，拦截</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">3. </span>过滤器可以同时配置多种拦截方式</span><br><span class="line"><span class="code">forward、request</span></span><br></pre></td></tr></table></figure><p><strong>代码演示：</strong></p><p>注解配置：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    指定过滤器的拦截方式</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">// @WebFilter(value = "/BServlet", dispatcherTypes = &#123;DispatcherType.FORWARD&#125;) // 内部转发时，进行拦截</span></span><br><span class="line"><span class="meta">@WebFilter</span>(value = <span class="string">"/BServlet"</span>, dispatcherTypes = &#123;DispatcherType.REQUEST,DispatcherType.FORWARD&#125;) <span class="comment">// 外部请求和内部转发时，都会拦截</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ModelFilter</span> <span class="keyword">implements</span> <span class="title">Filter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(FilterConfig config)</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain chain)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"ModelFilter拦截了..."</span>);</span><br><span class="line">        <span class="comment">// 向下转型</span></span><br><span class="line">        HttpServletRequest request = (HttpServletRequest) servletRequest;</span><br><span class="line">        HttpServletResponse response = (HttpServletResponse) servletResponse;</span><br><span class="line">        <span class="comment">// 放行</span></span><br><span class="line">        chain.doFilter(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>xml配置演示：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--过滤器的拦截方式--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>ModelFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>com.itheima.b_detail.ModelFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>ModelFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/BServlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dispatcher</span>&gt;</span>REQUEST<span class="tag">&lt;/<span class="name">dispatcher</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dispatcher</span>&gt;</span>FORWARD<span class="tag">&lt;/<span class="name">dispatcher</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="4-4-过滤器链"><a href="#4-4-过滤器链" class="headerlink" title="4.4 过滤器链"></a>4.4 过滤器链</h3><p>在一次请求中,若我们请求匹配到了多个filter,通过请求就相当于把这些filter串起来了，形成了过滤器链。</p><p><img data-src="/img/%E8%BF%87%E6%BB%A4%E5%99%A8%E9%93%BE.png" alt="过滤器链"></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">* </span>执行顺序（先进后出）</span><br><span class="line"><span class="code">        1.用户发送请求</span></span><br><span class="line"><span class="code">        2.FilterA拦截请求</span></span><br><span class="line"><span class="code">        3.FilterB拦截请求</span></span><br><span class="line"><span class="code">        4.show.jsp 执行了</span></span><br><span class="line"><span class="code">        5.FilterB响应增强</span></span><br><span class="line"><span class="code">        6.FilterA响应增强</span></span><br><span class="line"><span class="code">        7.服务器响应结果</span></span><br><span class="line"><span class="code">        </span></span><br><span class="line"><span class="bullet">* </span>拦截先后问题</span><br><span class="line"><span class="code">xml</span></span><br><span class="line"><span class="code">&lt;filter-mapping&gt; 谁先声明，谁先拦截</span></span><br><span class="line"><span class="code">注解</span></span><br><span class="line"><span class="code">根据类名的大小进行先后的排序，值小的先执行...</span></span><br><span class="line"><span class="code">FilterA和FilterB进行对比，所以A先执行</span></span><br></pre></td></tr></table></figure><h2 id="五、Filter案例练习"><a href="#五、Filter案例练习" class="headerlink" title="五、Filter案例练习"></a>五、Filter案例练习</h2><p>需求：用户访问某论坛网站，可以对文章比赛等内容进行留言，在用户点击提交留言，发送请求时，使用过滤器对请求进行拦截，统一编码，防止出现乱码，并且对一些敏感词进行拦截或者过滤。</p><p>代码实现：</p><p><strong>word.jsp</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;留言板&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h2&gt;留言板&lt;/h2&gt;</span><br><span class="line">&lt;div style=<span class="string">"border: 1px solid red; width: 200px; height: 200px"</span>&gt;</span><br><span class="line">    $&#123;requestScope.message&#125;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;h2&gt;留言&lt;/h2&gt;</span><br><span class="line">&lt;h3&gt;</span><br><span class="line">    &lt;span style=<span class="string">"color:red "</span>&gt;</span><br><span class="line">        $&#123;requestScope.info&#125;</span><br><span class="line">    &lt;/span&gt;</span><br><span class="line">&lt;/h3&gt;</span><br><span class="line">&lt;form action=<span class="string">"$&#123;pageContext.request.contextPath&#125;/MessageServlet"</span> method=<span class="string">"post"</span>&gt;</span><br><span class="line">    &lt;textarea name="message"  cols="30" rows="5"&gt;&lt;/textarea&gt;</span><br><span class="line">    &lt;br&gt;</span><br><span class="line">    &lt;input type=<span class="string">"submit"</span> value=<span class="string">"发布"</span>&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p><strong>MessageServlet</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/MessageServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MessageServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        String message = request.getParameter(<span class="string">"message"</span>);</span><br><span class="line">        request.setAttribute(<span class="string">"message"</span>,message);</span><br><span class="line">        request.getRequestDispatcher(<span class="string">"word.jsp"</span>).forward(request,response);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>统一编码过滤器EncodingFilter</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EncodingFilter</span> <span class="keyword">implements</span> <span class="title">Filter</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> FilterConfig config;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(ServletRequest req, ServletResponse resp, FilterChain chain)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">        HttpServletRequest request = (HttpServletRequest) req;</span><br><span class="line">        HttpServletResponse response = (HttpServletResponse) resp;</span><br><span class="line">        <span class="keyword">if</span> (<span class="string">"post"</span>.equalsIgnoreCase(request.getMethod())) &#123;</span><br><span class="line">            <span class="comment">//System.out.println(config.getInitParameter("encoding"));</span></span><br><span class="line">            request.setCharacterEncoding(config.getInitParameter(<span class="string">"encoding"</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//放行</span></span><br><span class="line">        chain.doFilter(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(FilterConfig config)</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.config = config;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>敏感词拦截KeyWordsFilter</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">KeyWordsFilter</span> <span class="keyword">implements</span> <span class="title">Filter</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String[] words;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(ServletRequest req, ServletResponse resp, FilterChain chain)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">        HttpServletRequest request = (HttpServletRequest) req;</span><br><span class="line">        HttpServletResponse response = (HttpServletResponse) resp;</span><br><span class="line">        String message = request.getParameter(<span class="string">"message"</span>);</span><br><span class="line">        <span class="keyword">for</span> (String word : words) &#123;</span><br><span class="line">            <span class="keyword">if</span> (message.contains(word))&#123;</span><br><span class="line">                request.setAttribute(<span class="string">"info"</span>,<span class="string">"您的言论涉嫌违规..."</span>);</span><br><span class="line">                request.getRequestDispatcher(<span class="string">"/word.jsp"</span>).forward(request,response);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//放行</span></span><br><span class="line">        chain.doFilter(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(FilterConfig config)</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line">        <span class="comment">// 1.专门加载src目录下的properties配置文件，sun公司提供了一个工具类（ResourceBundle）</span></span><br><span class="line">        ResourceBundle bundle = ResourceBundle.getBundle(<span class="string">"keywords"</span>);</span><br><span class="line">        <span class="comment">// 2.获取关键字的词库信息</span></span><br><span class="line">        String keywords = bundle.getString(<span class="string">"keyword"</span>);</span><br><span class="line">        <span class="comment">// 3.转为数组</span></span><br><span class="line">        <span class="keyword">this</span>.words = keywords.split(<span class="string">","</span>);;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>xml配置</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns</span>=<span class="string">"http://xmlns.jcp.org/xml/ns/javaee"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">version</span>=<span class="string">"3.1"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>EncodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>com.sun.web.filter.EncodingFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--全局参数配置，统一字符集--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>utf-8<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>EncodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>KeyWordsFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>com.sun.web.filter.KeyWordsFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>KeyWordsFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/MessageServlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure><p>敏感词库：</p><p>keywords.properties</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">keyword</span>=<span class="string">傻子,笨蛋,憨批</span></span><br></pre></td></tr></table></figure><h3 id="5-1-敏感词替换"><a href="#5-1-敏感词替换" class="headerlink" title="5.1 敏感词替换"></a>5.1 敏感词替换</h3><p>当用户发出非法言论的时候，在servlet中输出的时候:用”*” 替代</p><ul><li>你是个笨蛋 –&gt; 你是个**</li></ul><h4 id="5-1-1-技术分析"><a href="#5-1-1-技术分析" class="headerlink" title="5.1.1 技术分析"></a>5.1.1 技术分析</h4><p>通过对<code>request.getParameter(String name);</code>方法进行增强的方式，在获取参数时就对敏感词进行替换</p><blockquote><p>对方法增强的方式</p><p>1）子类继承：如果被增强的类是一个接口，无法实现</p><p>2）代理模式：一般使用动态代理，这是使用最普遍的方案</p><p>3）装饰器模式： 一般在io流中大量使用，案例使用这种方案</p></blockquote><p>使用装饰器模式要求：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1. </span>装饰类和被装饰类，需要实现同一个接口（或者继承同一个类）</span><br><span class="line"></span><br><span class="line"><span class="bullet">2. </span>装饰类需要有被装饰类的，对象引用</span><br><span class="line"></span><br><span class="line"><span class="bullet">3. </span>装饰类需要重写增强的方法，完成具体的功能</span><br><span class="line"></span><br><span class="line"><span class="bullet">4. </span>装饰类对不需要增强的方法，调用原有的功能</span><br></pre></td></tr></table></figure><h4 id="5-1-2-需求分析"><a href="#5-1-2-需求分析" class="headerlink" title="5.1.2 需求分析"></a>5.1.2 需求分析</h4><p><img data-src="/img/%E6%A1%88%E4%BE%8B_%E6%95%8F%E6%84%9F%E8%AF%8D%E6%9B%BF%E6%8D%A2_%E8%A3%85%E9%A5%B0%E5%99%A8%E6%A8%A1%E5%BC%8F.png" alt="案例_敏感词替换_装饰器模式"></p><h4 id="5-1-3-代码实现"><a href="#5-1-3-代码实现" class="headerlink" title="5.1.3 代码实现"></a>5.1.3 代码实现</h4><p><strong>① MyRequest</strong></p><blockquote><p>装饰类，增强getParameter方法</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyRequest</span> <span class="keyword">extends</span> <span class="title">HttpServletRequestWrapper</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String[] words;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyRequest</span><span class="params">(HttpServletRequest request , String[] words)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(request);</span><br><span class="line">        <span class="keyword">this</span>.words = words;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 重写方法，进行敏感词过滤</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> name</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getParameter</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        String parameter = <span class="keyword">super</span>.getParameter(name);</span><br><span class="line">        <span class="keyword">for</span> (String word : words) &#123;</span><br><span class="line">            parameter = parameter.replaceAll(word, <span class="string">"***"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> parameter;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>② KeyWordsProFilter</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">KeyWordsProFilter</span> <span class="keyword">implements</span> <span class="title">Filter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String[] words;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(ServletRequest req, ServletResponse resp, FilterChain chain)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">        HttpServletRequest request = (HttpServletRequest) req;</span><br><span class="line">        HttpServletResponse response = (HttpServletResponse) resp;</span><br><span class="line">        <span class="comment">//对request的getParameter方法进行增强，过滤敏感词</span></span><br><span class="line">        HttpServletRequest myRequest = <span class="keyword">new</span> MyRequest(request, words);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//放行</span></span><br><span class="line">        chain.doFilter(myRequest, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(FilterConfig config)</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line">        ResourceBundle bundle = ResourceBundle.getBundle(<span class="string">"keywords"</span>);</span><br><span class="line">        String keywords = bundle.getString(<span class="string">"keyword"</span>);</span><br><span class="line">        <span class="keyword">this</span>.words = keywords.split(<span class="string">","</span>);;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>③ xml配置</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>KeyWordsProFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>com.sun.web.filter.KeyWordsProFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>KeyWordsProFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/MessageServlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="六、Listener"><a href="#六、Listener" class="headerlink" title="六、Listener"></a>六、Listener</h2><h3 id="6-1-概述"><a href="#6-1-概述" class="headerlink" title="6.1 概述"></a>6.1 概述</h3><p><strong>生活中的监听器</strong></p><p>我们很多商场有摄像头，监视着客户的一举一动。如果客户有违法行为，商场可以采取相应的措施。</p><p><strong>javaweb中的监听器</strong></p><p>在我们的java程序中，有时也需要监视某些事情，一旦被监视的对象发生相应的变化，我们应该采取相应的操作。</p><p>监听web三大域对象：HttpServletRequest、HttpSession、ServletContext  </p><p><strong>场景</strong></p><p>历史访问次数、统计在线人数、系统启动时初始化配置信息</p><h3 id="6-2-快速入门"><a href="#6-2-快速入门" class="headerlink" title="6.2 快速入门"></a>6.2 快速入门</h3><p>监听器在web开发中使用的比较少,见的机会就更少了,今天我们使用<strong>ServletContextListenner</strong>来带领大家学习下监听器,因为这个监听器是监听器中使用率最高的一个,且监听器的使用方式都差不多。</p><blockquote><p>我们使用这个监听器可以在项目启动和销毁的时候做一些事情,例如,在项目启动的时候加载配置文件。</p></blockquote><h4 id="①-xml版本-1"><a href="#①-xml版本-1" class="headerlink" title="① xml版本"></a>① xml版本</h4><blockquote><p>普通Java类，实现ServletContextListenner接口</p><p>重写：监听ServletContext创建、监听ServletContext销毁</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyListener</span> <span class="keyword">implements</span> <span class="title">ServletContextListener</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">        监听：ServletContext创建</span></span><br><span class="line"><span class="comment">            servletContextEvent：监听器事件对象..可以获取servletContext域对象</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">contextInitialized</span><span class="params">(ServletContextEvent servletContextEvent)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"ServletContext创建啦...."</span>);</span><br><span class="line">        ServletContext servletContext = servletContextEvent.getServletContext();</span><br><span class="line">    &#125;yi</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">        监听：ServletContext销毁</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">contextDestroyed</span><span class="params">(ServletContextEvent servletContextEvent)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"ServletContext销毁啦..."</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--配置listener监听器--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">listener</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">listener-class</span>&gt;</span>com.itheima.a_listener.MyListener<span class="tag">&lt;/<span class="name">listener-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">listener</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="②-注解版本-1"><a href="#②-注解版本-1" class="headerlink" title="② 注解版本"></a>② 注解版本</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebListener</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyListener</span> <span class="keyword">implements</span> <span class="title">ServletContextListener</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 代码，省略</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-3-案例：统计在线人数"><a href="#6-3-案例：统计在线人数" class="headerlink" title="6.3 案例：统计在线人数"></a>6.3 案例：统计在线人数</h3><p><strong>需求</strong></p><ul><li>有用户使用网站,在线人数就+1;用户退出网站,在线人数就-1</li></ul><h4 id="6-3-1需求分析"><a href="#6-3-1需求分析" class="headerlink" title="6.3.1需求分析"></a>6.3.1需求分析</h4><p><img data-src="/img/%E7%BB%9F%E8%AE%A1%E5%9C%A8%E7%BA%BF%E4%BA%BA%E6%95%B0%E6%A1%88%E4%BE%8B.png" alt="统计在线人数案例"></p><h4 id="6-3-2-代码实现"><a href="#6-3-2-代码实现" class="headerlink" title="6.3.2 代码实现"></a>6.3.2 代码实现</h4><p><strong>① InintCountPersonListener</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 初始化在线人数</span></span><br><span class="line"><span class="meta">@WebListener</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">InintCountPersonListener</span> <span class="keyword">implements</span> <span class="title">ServletContextListener</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">contextInitialized</span><span class="params">(ServletContextEvent servletContextEvent)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 获取servletContext对象</span></span><br><span class="line">        ServletContext servletContext = servletContextEvent.getServletContext();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 初始化人数0</span></span><br><span class="line">        servletContext.setAttribute(<span class="string">"countPerson"</span>, <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">contextDestroyed</span><span class="params">(ServletContextEvent servletContextEvent)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="②-ChangeCountPersonListener"><a href="#②-ChangeCountPersonListener" class="headerlink" title="② ChangeCountPersonListener"></a>② ChangeCountPersonListener</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebListener</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ChangeCountPersonListener</span> <span class="keyword">implements</span> <span class="title">HttpSessionListener</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 会话建立，人数+1</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sessionCreated</span><span class="params">(HttpSessionEvent httpSessionEvent)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 获取最大的域对象</span></span><br><span class="line">        ServletContext servletContext = httpSessionEvent.getSession().getServletContext();</span><br><span class="line">        <span class="comment">// 取出原来人数</span></span><br><span class="line">        Integer oldCountPerson = (Integer) servletContext.getAttribute(<span class="string">"countPerson"</span>);</span><br><span class="line">        <span class="comment">// 加一并覆盖</span></span><br><span class="line">        servletContext.setAttribute(<span class="string">"countPerson"</span>, oldCountPerson + <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 会话关闭，人数-1</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sessionDestroyed</span><span class="params">(HttpSessionEvent httpSessionEvent)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 获取最大的域对象</span></span><br><span class="line">        ServletContext servletContext = httpSessionEvent.getSession().getServletContext();</span><br><span class="line">        <span class="comment">// 取出原来人数</span></span><br><span class="line">        Integer oldCountPerson = (Integer) servletContext.getAttribute(<span class="string">"countPerson"</span>);</span><br><span class="line">        <span class="comment">// 减一并覆盖</span></span><br><span class="line">        servletContext.setAttribute(<span class="string">"countPerson"</span>, oldCountPerson - <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>③ index.jsp</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;$&#123;NAME&#125;&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h3&gt;当前在线人数：$&#123;applicationScope.countPerson&#125;&lt;/h3&gt;</span><br><span class="line"></span><br><span class="line">&lt;a href="$&#123;pageContext.request.contextPath&#125;/LogoutServlet"&gt;退出&lt;/a&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p> <strong>④ LogoutServlet</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/LogoutServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LogoutServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">// 获取当前session，自杀</span></span><br><span class="line">        request.getSession().invalidate();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="七、装饰器模式"><a href="#七、装饰器模式" class="headerlink" title="七、装饰器模式"></a>七、装饰器模式</h2><p><strong>使用装饰器模式的要求：</strong></p><ol><li>装饰类和被装饰类，需要实现同一个接口（或者继承同一个类）</li><li>装饰类需要有被装饰类的，对象引用</li><li>装饰类需要重写增强的方法，完成具体的功能</li><li>装饰类对不需要增强的方法，调用原有的功能</li></ol><p>装饰器图解：</p><p><img data-src="/img/%E8%A3%85%E9%A5%B0%E5%99%A8%E6%A8%A1%E5%BC%8F.png" alt="装饰器模式"></p><p>代码实现：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestDecorator</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 多态（面向接口）</span></span><br><span class="line">        Phone phone = <span class="keyword">new</span> Lvjing(<span class="keyword">new</span> Meiyan(<span class="keyword">new</span> Huawei()));</span><br><span class="line">        phone.take();</span><br><span class="line">        System.out.println(<span class="string">"-------------"</span>);</span><br><span class="line">        phone.call();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Phone接口</span></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Phone</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 拍照</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">take</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 打电话</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">call</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 华为厂商实现类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Huawei</span> <span class="keyword">implements</span> <span class="title">Phone</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">take</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"3200W高清摄像"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">call</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"5G视频通话"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 抽取PhoneWrapper包装类</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PhoneWrapper</span> <span class="keyword">implements</span> <span class="title">Phone</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Phone phone;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">PhoneWrapper</span><span class="params">(Phone phone)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.phone = phone;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">take</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.phone.take();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">call</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.phone.take();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 美颜增强</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Meiyan</span> <span class="keyword">extends</span> <span class="title">PhoneWrapper</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Meiyan</span><span class="params">(Phone phone)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(phone);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 对拍照增强</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">take</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.take();</span><br><span class="line">        System.out.println(<span class="string">"磨皮、瘦脸、大眼、美白"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 滤镜增强</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Lvjing</span> <span class="keyword">implements</span> <span class="title">Phone</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Phone phone;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Lvjing</span><span class="params">(Phone phone)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.phone = phone;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">take</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.phone.take();</span><br><span class="line">        System.out.println(<span class="string">"对背景虚化..."</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">call</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.phone.call();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、Filter概述&quot;&gt;&lt;a href=&quot;#一、Filter概述&quot; class=&quot;headerlink&quot; title=&quot;一、Filter概述&quot;&gt;&lt;/a&gt;一、Filter概述&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;生活中的过滤器&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;净水器、空气净化器、地铁安检、山大王&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;web中的过滤器&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;当用户访问服务器资源时，过滤器将请求拦截下来，完成一些通用的操作&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;应用场景&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如：登录验证、统一编码处理、敏感字符过滤&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="JavaWeb" scheme="http://sunmoon.com/categories/JavaWeb/"/>
    
    
      <category term="学习" scheme="http://sunmoon.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="设计模式" scheme="http://sunmoon.com/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
      <category term="Listener" scheme="http://sunmoon.com/tags/Listener/"/>
    
      <category term="Filter" scheme="http://sunmoon.com/tags/Filter/"/>
    
      <category term="装饰器模式" scheme="http://sunmoon.com/tags/%E8%A3%85%E9%A5%B0%E5%99%A8%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>JSP&amp;EL&amp;JSTL&amp;MVC思想</title>
    <link href="http://sunmoon.com/2020/08/27/JSP-EL-JSTL-MVC%E6%80%9D%E6%83%B3/"/>
    <id>http://sunmoon.com/2020/08/27/JSP-EL-JSTL-MVC%E6%80%9D%E6%83%B3/</id>
    <published>2020-08-27T13:23:40.000Z</published>
    <updated>2020-08-27T13:29:19.113Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、JSP"><a href="#一、JSP" class="headerlink" title="一、JSP"></a>一、JSP</h2><h3 id="1-1-概述"><a href="#1-1-概述" class="headerlink" title="1.1 概述"></a>1.1 概述</h3><p>在很多动态网页中，绝大部分内容都是固定不变的，只有局部内容需要动态产生和改变。 为了弥补 Servlet的缺陷，SUN公司在Servlet的基础上推出了JSP（Java Server Pages）。</p><p>JSP是简化Servlet编写的一种技术，它将Java代码和HTML语句混合在同一个文件中编写，页面动态资源 使用java代码，页面静态资源使用html标签。 </p><p><strong>简单来说：可以在html标签中嵌套java代码</strong> </p><p><strong>作用：简化书写，展示动态页面</strong></p><a id="more"></a><h3 id="1-2-快速入门"><a href="#1-2-快速入门" class="headerlink" title="1.2 快速入门"></a>1.2 快速入门</h3><p><strong>需求</strong></p><ul><li>在JSP页面，动态展示当前时间。</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">"java.time.LocalDateTime"</span> %&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h3&gt;</span><br><span class="line">&lt;%</span><br><span class="line">LocalDateTime now = LocalDateTime.now();</span><br><span class="line">out.write(<span class="string">"当前时间："</span> + now);</span><br><span class="line">%&gt;</span><br><span class="line">&lt;/h3&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h3 id="1-3-工作原理"><a href="#1-3-工作原理" class="headerlink" title="1.3 工作原理"></a>1.3 工作原理</h3><blockquote><p>JSP的本质就是一个Servlet…</p></blockquote><p><img data-src="/img/JSP%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86.png" alt="JSP工作原理"></p><h3 id="1-4-脚本和注释"><a href="#1-4-脚本和注释" class="headerlink" title="1.4 脚本和注释"></a>1.4 脚本和注释</h3><h4 id="1-4-1-脚本"><a href="#1-4-1-脚本" class="headerlink" title="1.4.1  脚本"></a>1.4.1  脚本</h4><p><strong>JSP通过脚本方式来定义Java代码</strong></p><p>三种脚本：</p><ul><li><code>&lt;% 代码 %&gt;</code>：脚本片段，生成在java文件中service方法中,每次请求的时候都会执行</li><li><code>&lt;%! 代码 %&gt;</code>：声明片段，生成在java文件中的成员位置</li><li><code>&lt;%= 代码%&gt;</code>：输出脚本片段,相当于 out.print(“代码”)方法，输出到JSP页面</li></ul><h4 id="1-4-2-注释"><a href="#1-4-2-注释" class="headerlink" title="1.4.2 注释"></a>1.4.2 注释</h4><ul><li><p>html注释</p><ul><li><code>&lt;!-- 注释静态资源 --&gt;</code></li></ul></li><li><p>JSP注释（JSP页面中都可以使用）</p><ul><li><code>&lt;%-- 注释所有 --%&gt;</code></li></ul></li><li><p>java注释（JSP脚本内使用）</p><ul><li><code>// 单行注释</code></li><li><code>/* 多行注释 */</code></li><li><code>/**文档注释 */</code></li></ul></li></ul><h5 id="注释的作用范围"><a href="#注释的作用范围" class="headerlink" title="注释的作用范围"></a>注释的作用范围</h5><table><thead><tr><th>注释</th><th>JSP源码</th><th>Java源码</th><th>Html源码</th></tr></thead><tbody><tr><td>HTML</td><td>可见</td><td>可见</td><td>可见</td></tr><tr><td>Java</td><td>可见</td><td>可见</td><td>不可见</td></tr><tr><td>JSP</td><td>可见</td><td>不可见</td><td>不可见</td></tr></tbody></table><blockquote><p>小贴士</p><ul><li>注释是给开发者看的，可见的范围越小，安全级别就越高…</li></ul></blockquote><h3 id="1-5-指令"><a href="#1-5-指令" class="headerlink" title="1.5 指令"></a>1.5 指令</h3><p><strong>指令的作用：</strong></p><ul><li>用于配置JSP页面，导入资源文件</li></ul><p><strong>格式：</strong></p><ul><li><code>&lt;%@ 指令名称 属性名1=&quot;属性值1&quot; 属性名2=&quot;属性值2&quot; ...%&gt;</code></li></ul><p><strong>JSP中的三大指令：</strong></p><ul><li><code>page</code>：配置JSP页面</li><li><code>include</code>：页面包含(静态包含)</li><li><code>taglib</code>：导入资源文件</li></ul><h4 id="1-5-1-page指令"><a href="#1-5-1-page指令" class="headerlink" title="1.5.1 page指令"></a>1.5.1 page指令</h4><p>例如：<code>&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;</code></p><p>page中的常用属性：</p><ul><li><code>contentType</code>：就相当于response.setContentType();<ul><li>用于设置响应体的类型和MIME类型</li></ul></li><li><code>language</code>：指定jsp模板的编程语言<ul><li>属性值非常鸡肋，就是java</li></ul></li><li><code>import</code>：导包，可以单独使用此属性<ul><li>例如：&lt;%@ page import=”java.util.*” %&gt;</li></ul></li><li><code>errorPage</code>：当前页面报错后，可以跳转到指定页面<ul><li>例如：errorPage=”500.jsp”</li></ul></li><li><code>isErrorPage</code>：当前页面升级为错误处理页面，可以获取exception异常捕获信息<ul><li>例如：isErrorPage=”true” (默认是关闭的…值=false)</li></ul></li></ul><p>代码演示：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">"java.util.*"</span> %&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> errorPage=<span class="string">"500.jsp"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">    &lt;head&gt;</span><br><span class="line">    &lt;title&gt;demo2&lt;/title&gt;</span><br><span class="line">    &lt;/head&gt;</span><br><span class="line">    &lt;body&gt;</span><br><span class="line">        &lt;h3&gt;page指令&lt;/h3&gt;</span><br><span class="line">        &lt;%</span><br><span class="line">            Date date = <span class="keyword">new</span> Date();</span><br><span class="line">            ArrayList&lt;Object&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">            <span class="keyword">int</span> a = <span class="number">1</span> / <span class="number">0</span>;</span><br><span class="line">        %&gt;</span><br><span class="line">    &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p><strong>发生错误跳转到500.jsp</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> isErrorPage=<span class="string">"true"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;500&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h3&gt;服务器繁忙，请稍后重试&lt;/h3&gt;</span><br><span class="line">    &lt;%</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">            try&#123;</span></span><br><span class="line"><span class="comment">            &#125;catch(Execption e)&#123;</span></span><br><span class="line"><span class="comment">            &#125;</span></span><br><span class="line"><span class="comment">        * */</span></span><br><span class="line">        System.out.println(exception.getMessage());</span><br><span class="line">    %&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><blockquote><p>小贴士：</p><ul><li>当指定当前jsp页面为错误页面时，就会产生一个jsp的内置对象，exception异常对象…</li></ul></blockquote><h4 id="1-5-2-include指令"><a href="#1-5-2-include指令" class="headerlink" title="1.5.2 include指令"></a>1.5.2 include指令</h4><p>include指令表示包含(静态包含)。</p><p>语法：<code>&lt;%@include file=&quot;被包含的页面&quot; %&gt;</code></p><p><img data-src="/img/imclude%E6%8C%87%E4%BB%A4.png" alt="imclude指令"></p><p>代码示例：</p><ul><li><strong>herder.jsp</strong></li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;header&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;h3&gt;头部&lt;/h3&gt;</span><br><span class="line">    &lt;div&gt;logo&lt;/div&gt;</span><br><span class="line">    &lt;div&gt;banner&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><ul><li>主页面</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;demo3&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;%<span class="meta">@include</span> file=<span class="string">"header.jsp"</span>%&gt;</span><br><span class="line">    &lt;h3&gt;include指令，页面（静态）包含&lt;/h3&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h4 id="1-5-3-taglib指令"><a href="#1-5-3-taglib指令" class="headerlink" title="1.5.3 taglib指令"></a>1.5.3 taglib指令</h4><p>用于导入apache提供l标签库</p><p>语法：导入jstl标签库</p><ul><li><code>&lt;%@ taglib prefix=&quot;c&quot; uri=&quot;http://java.sun.com/jsp/jstl/core&quot; %&gt;</code></li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">![动态包含和静态包含的区别](C:\Users\Sunmoon\Desktop\就业班\笔记\JavaWeb\img\动态包含和静态包含的区别.png)&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;%@ taglib prefix=<span class="string">"c"</span> uri=<span class="string">"http://java.sun.com/jsp/jstl/core"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;demo4&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;c:if test="false"&gt;内容&lt;/c:if&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h4 id="1-5-4-指令小结"><a href="#1-5-4-指令小结" class="headerlink" title="1.5.4 指令小结"></a>1.5.4 指令小结</h4><ul><li><p>page指令</p><ul><li>contentType：指定响应体类型和MIME类型 </li><li>language：仅支持java语言</li><li>import：导入jar包</li></ul></li><li><p>include指令</p><ul><li>用于指定静态包含页面资源</li></ul></li><li><p>taglib指令</p><ul><li>用于导入标签库</li></ul></li></ul><h3 id="1-6-内置对象"><a href="#1-6-内置对象" class="headerlink" title="1.6 内置对象"></a>1.6 内置对象</h3><p>作用：在JSP页面中不需要获取和创建， 可以直接使用的对象。</p><p>JSP中一共有9个内置对象。</p><table><thead><tr><th>变量名</th><th>真实类型</th><th>作用</th></tr></thead><tbody><tr><td>pageContext</td><td>PageContext</td><td>当前页面中共享数据</td></tr><tr><td>request</td><td>HttpServletRequest</td><td>一次请求中共享数据</td></tr><tr><td>session</td><td>HttpSession</td><td>一次会话中共享数据</td></tr><tr><td>application</td><td>ServletContext</td><td>整个web应用共享数据</td></tr><tr><td>response</td><td>HttpServletResponse</td><td>响应对象</td></tr><tr><td>page</td><td>Object</td><td>当前页面(servlet)对象</td></tr><tr><td>out</td><td>JSPWriter</td><td>输出对象</td></tr><tr><td>config</td><td>ServletConfig</td><td>servlet配置对象</td></tr><tr><td>exception</td><td>Throwable</td><td>异常对象【默认关闭】</td></tr></tbody></table><p>常用：</p><ul><li>pageContext<ul><li>当前页面共享数据，域对象</li><li>可以获取其他八个内置对象</li></ul></li><li>request<ul><li>接收请求</li><li>一次请求中，共享数据</li></ul></li><li>response<ul><li>响应结果</li></ul></li><li>out<ul><li>jsp页面特有的字符输出对象</li></ul></li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;demo5&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h3&gt;jsp内置对象&lt;/h3&gt;</span><br><span class="line">    &lt;%</span><br><span class="line">        <span class="comment">// pageContext域对象</span></span><br><span class="line">        pageContext.setAttribute(<span class="string">"username"</span>, <span class="string">"lucy"</span>);</span><br><span class="line">        <span class="comment">// pageContext获取其他八个内置对象</span></span><br><span class="line">    %&gt;</span><br><span class="line">    &lt;%=pageContext.getAttribute(<span class="string">"username"</span>)%&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h3 id="1-7-动作标签"><a href="#1-7-动作标签" class="headerlink" title="1.7 动作标签"></a>1.7 动作标签</h3><p>作用：简化JSP页面java代码</p><p>常用：</p><ul><li><code>&lt;jsp:include&gt;</code>：页面包含（动态）<ul><li>request.getRequestDispatcher(“footer”).include(request, response);</li></ul></li><li><code>&lt;jsp:forward&gt;</code>：请求转发（页面跳转）<ul><li>request.getRequestDispatcher(“b.jsp”).forward(request, response);</li></ul></li><li><code>&lt;jsp:param&gt;</code>：参数传递</li></ul><h4 id="1-7-1-动态包含"><a href="#1-7-1-动态包含" class="headerlink" title="1.7.1 动态包含"></a>1.7.1 动态包含</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;demo6&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;h3&gt;jsp的include标签，页面（动态）包含&lt;/h3&gt;</span><br><span class="line">    &lt;jsp:include page="footer.jsp"&gt;&lt;/jsp:include&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;footer&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;h3&gt;尾部&lt;/h3&gt;</span><br><span class="line">    &lt;div&gt;友情链接&lt;/div&gt;</span><br><span class="line">    &lt;div&gt;公司版权&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h5 id="动态包含和静态包含的区别"><a href="#动态包含和静态包含的区别" class="headerlink" title="动态包含和静态包含的区别"></a>动态包含和静态包含的区别</h5><p><img data-src="/img/%E5%8A%A8%E6%80%81%E5%8C%85%E5%90%AB%E5%92%8C%E9%9D%99%E6%80%81%E5%8C%85%E5%90%AB%E7%9A%84%E5%8C%BA%E5%88%AB.png" alt="动态包含和静态包含的区别"></p><blockquote><p>特点：在开发中jsp页面使用静态包含，性能好</p><p>注意：使用静态包含，多个jsp页面变量不能重名…</p></blockquote><h4 id="1-7-2-请求转发"><a href="#1-7-2-请求转发" class="headerlink" title="1.7.2 请求转发"></a>1.7.2 请求转发</h4><p><strong>a.jsp</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;a&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;%</span><br><span class="line">    request.setCharacterEncoding(<span class="string">"utf-8"</span>);</span><br><span class="line">        System.out.println(<span class="string">"a.jsp执行了..."</span>);</span><br><span class="line">    <span class="comment">// 请求转发</span></span><br><span class="line">    <span class="comment">// request.getRequestDispatcher("b.jsp").forward(request, response);</span></span><br><span class="line">    %&gt;</span><br><span class="line">    &lt;jsp:forward page=<span class="string">"b.jsp"</span>&gt;</span><br><span class="line">        &lt;jsp:param name="name" value="呵呵"&gt;&lt;/jsp:param&gt;</span><br><span class="line">        &lt;jsp:param name="age" value="18"&gt;&lt;/jsp:param&gt;</span><br><span class="line">    &lt;/jsp:forward&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p><strong>b.jsp</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;b&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;%</span><br><span class="line">    System.out.println(<span class="string">"b.jsp执行了..."</span>);</span><br><span class="line">    System.out.println(request.getParameter(<span class="string">"name"</span>));</span><br><span class="line">    System.out.println(request.getParameter(<span class="string">"age"</span>));</span><br><span class="line">    %&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><blockquote><p>注意：<code>jsp:forward</code>内 不允许出现注释，而且传递的<code>jsp:param</code>编码应该在，a.jsp 处理</p></blockquote><h2 id="二、MVC模式"><a href="#二、MVC模式" class="headerlink" title="二、MVC模式"></a>二、MVC模式</h2><h3 id="2-1-JSP发展史"><a href="#2-1-JSP发展史" class="headerlink" title="2.1 JSP发展史"></a>2.1 JSP发展史</h3><ul><li>早期只有servlet，只能使用response输出html标签，非常麻烦。</li></ul><p><img data-src="/img/jsp%E5%8F%91%E5%B1%95%E5%8F%B21.png" alt="jsp发展史1"></p><ul><li>后来有了JSP，简化了servlet开发；如果过度使用JSP，在JSP页面中写了大量的java代码和html标签，造成难于维护，难于分工协作的场景。</li></ul><p><img data-src="/img/jsp%E5%8F%91%E5%B1%95%E5%8F%B22.png" alt="jsp发展史2"></p><ul><li>再后来为了弥补过度使用jsp的问题，我们使用servlet+jsp这套组合拳，利于分工协作。</li></ul><p><img data-src="/img/jsp%E5%8F%91%E5%B1%95%E5%8F%B23.png" alt="jsp发展史3"></p><h3 id="2-2-MVC介绍"><a href="#2-2-MVC介绍" class="headerlink" title="2.2 MVC介绍"></a>2.2 MVC介绍</h3><p><strong>MVC设计模式： Model-View-Controller简写。</strong></p><ul><li><p>MVC是软件工程中的一种软件架构模式，它是一种分离业务逻辑与显示界面的设计方法。</p><ul><li>M：model（模型）<ul><li>JavaBean（普通java类）<ul><li>处理业务逻辑</li><li>封装实体</li></ul></li></ul></li><li>V：view（视图）<ul><li>Jsp：展示数据（动态资源）</li></ul></li><li>C：controller（控制器）<ul><li>Servlet<ul><li>接收请求</li><li>调用模型</li><li>转发视图</li></ul></li></ul></li></ul></li></ul><p><strong>优缺点：</strong></p><ul><li>优点：降低耦合性，方便维护和拓展，利于分工协作</li><li>缺点：使得项目架构变得复杂，对开发人员要求高</li></ul><p><img data-src="/img/MVC.png" alt="MVC"></p><h2 id="三、EL表达式"><a href="#三、EL表达式" class="headerlink" title="三、EL表达式"></a>三、EL表达式</h2><h3 id="3-1-概述"><a href="#3-1-概述" class="headerlink" title="3.1 概述"></a>3.1 概述</h3><p>表达式语言（Expression Language）</p><p><strong>作用</strong>：主要用来代替jsp中脚本的功能，简化对java代码的操作。 </p><p><strong>语法</strong>：${表达式}</p><h3 id="3-2-使用"><a href="#3-2-使用" class="headerlink" title="3.2 使用"></a>3.2 使用</h3><h4 id="3-2-1-获取值"><a href="#3-2-1-获取值" class="headerlink" title="3.2.1 获取值"></a>3.2.1 获取值</h4><blockquote><p>EL表达式：只能从域对象（4个域）中获取数据</p></blockquote><p><strong>EL表达式语法：</strong></p><ul><li><p>标准语法</p><ul><li><code>${pageScope.键名}</code> ：从page域中获取指定键名对应的值</li><li><code>${requestScope.键名}</code>：从request域中获取指定键名对应的值</li><li><code>${sessionScope.键名}</code>：从session域中获取指定键名对应的值</li><li><code>${applicationScope.键名}</code>：从ServletContext域中获取指定键名对应的值</li></ul></li><li><p>简化语法</p><ul><li><code>${键名}</code></li></ul></li></ul><blockquote><p>小贴士：</p><ul><li><p>使用EL表达式的简化语法，将从最小的域中开始匹配键名，匹配成功后直接返回数据</p></li><li><p>注意：使用这种方式，尽量避免四大域的键名重复，否则匹配到的将是最小域中的值…</p></li></ul></blockquote><p>代码演示：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;demo1&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1&gt;EL表达式只能从域对象中获取数据...&lt;/h1&gt;</span><br><span class="line">&lt;%</span><br><span class="line">    <span class="comment">// 模拟servlet，向四个域存值</span></span><br><span class="line">    pageContext.setAttribute(<span class="string">"username"</span>, <span class="string">"苍老师"</span>); <span class="comment">// 仅jsp中存在...</span></span><br><span class="line">    pageContext.setAttribute(<span class="string">"age"</span>, <span class="number">22</span>);</span><br><span class="line">    request.setAttribute(<span class="string">"age"</span>, <span class="number">18</span>);</span><br><span class="line">    session.setAttribute(<span class="string">"sex"</span>, <span class="string">"女"</span>);</span><br><span class="line">    application.setAttribute(<span class="string">"address"</span>, <span class="string">"日本"</span>);</span><br><span class="line">%&gt;</span><br><span class="line">    &lt;h3&gt;el标准语法&lt;/h3&gt;</span><br><span class="line">    $&#123;pageScope.username&#125; &lt;br&gt; &lt;%--EL底层进行<span class="keyword">null</span>值处理..--%&gt;</span><br><span class="line">    $&#123;requestScope.age&#125; &lt;br&gt;</span><br><span class="line">    $&#123;sessionScope.sex&#125; &lt;br&gt;</span><br><span class="line">    $&#123;applicationScope.address&#125; &lt;br&gt;</span><br><span class="line"></span><br><span class="line">    &lt;h3&gt;el简单语法&lt;/h3&gt;</span><br><span class="line">    $&#123;username&#125; &lt;br&gt;</span><br><span class="line">    $&#123;age&#125;&lt;br&gt;</span><br><span class="line">    $&#123;sex&#125;&lt;br&gt;</span><br><span class="line">    $&#123;address&#125; &lt;br&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h4 id="3-2-2-执行运算"><a href="#3-2-2-执行运算" class="headerlink" title="3.2.2 执行运算"></a>3.2.2 执行运算</h4><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">* </span>算数运算符</span><br><span class="line"><span class="code">语法： + - * /(div) %(mod)</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">* </span>比较运算符</span><br><span class="line"><span class="code">语法：&gt; &lt; &gt;= &lt;= ==(eq) !=(ne)</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">* </span>逻辑运算符</span><br><span class="line"><span class="code">语法：&amp;&amp;(and) ||(or) !(not)</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">* </span>三元运算符</span><br><span class="line"><span class="code">语法：$&#123;条件表达式？为真:为假&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">* </span>空运算符</span><br><span class="line"> 语法：$&#123;not empty 对象&#125;</span><br><span class="line"> 功能：</span><br><span class="line"> 可以判断字符串和对象是否为空</span><br><span class="line"> 可以判断一个集合的长度是否为0</span><br></pre></td></tr></table></figure><p>空运算符演示：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">"com.itheima.domain.User"</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">"java.util.List"</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">"java.util.ArrayList"</span> %&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;demo3&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h3&gt;空运算符&lt;/h3&gt;</span><br><span class="line"></span><br><span class="line">&lt;%</span><br><span class="line">    Integer a = <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">    Integer b = <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line">    request.setAttribute(<span class="string">"a"</span>, a);</span><br><span class="line">    request.setAttribute(<span class="string">"b"</span>, b);</span><br><span class="line"></span><br><span class="line">    User user = <span class="keyword">new</span> User();</span><br><span class="line">    request.setAttribute(<span class="string">"user"</span>, user);</span><br><span class="line"></span><br><span class="line">    List list = <span class="keyword">new</span> ArrayList();</span><br><span class="line">    list.add(<span class="string">"哈哈"</span>);</span><br><span class="line">    request.setAttribute(<span class="string">"list"</span>, list);</span><br><span class="line"></span><br><span class="line">%&gt;</span><br><span class="line"></span><br><span class="line">    $&#123;a&gt;b?<span class="string">'哈哈a大'</span>:<span class="string">'呵呵b大'</span>&#125;</span><br><span class="line"></span><br><span class="line">    &lt;h3&gt;非空判断&lt;/h3&gt;</span><br><span class="line">    $&#123;not empty user&#125; &lt;br&gt; &lt;%-- <span class="keyword">if</span>(user != <span class="keyword">null</span>)&#123;xxx&#125; --%&gt;</span><br><span class="line">    $&#123;not empty list&#125; &lt;br&gt; &lt;%-- <span class="keyword">if</span>(list !=<span class="keyword">null</span> &amp;&amp; list.size() &gt; <span class="number">0</span> )&#123;xxx&#125; --%&gt;</span><br><span class="line"></span><br><span class="line">    &lt;h3&gt;空值判断&lt;/h3&gt;</span><br><span class="line">    $&#123;empty user&#125; &lt;br&gt;&lt;%-- <span class="keyword">if</span>(user == <span class="keyword">null</span>)&#123;xxx&#125; --%&gt;</span><br><span class="line">    $&#123;empty list&#125; &lt;br&gt;&lt;%-- <span class="keyword">if</span>(list ==<span class="keyword">null</span> || list.size() &lt; <span class="number">1</span> )&#123;xxx&#125; --%&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h4 id="3-2-3-隐式对象"><a href="#3-2-3-隐式对象" class="headerlink" title="3.2.3 隐式对象"></a>3.2.3 隐式对象</h4><p>el表达式中有11个隐式对象</p><p>常用</p><ul><li>pageContext</li><li>他也是jsp的九大内置对象之一，可以获得其他八个内置对象</li></ul><blockquote><p>使用pageContext动态的获取项目的网络地址</p><ul><li>${pageContext.request.contextPath}</li></ul></blockquote><h4 id="3-2-4-EL扩展"><a href="#3-2-4-EL扩展" class="headerlink" title="3.2.4 EL扩展"></a>3.2.4 EL扩展</h4><p>JSP在2.5之后，默认支持el表达式</p><ul><li>如果想要在2.5版本之后忽略EL表达式<ul><li>忽略当前jsp页面中所有的el表达式<ul><li>设置jsp的page指令中：<code>isELIgnored=&quot;true&quot;</code> (属性)</li></ul></li><li>忽略单个el表达式<ul><li><code>\${表达式}</code></li></ul></li></ul></li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> isELIgnored=<span class="string">"false"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;demo4&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">\$&#123;pageContext.request.contextPath&#125; &lt;br&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">// 我们在es6中讲过模板字符串</span></span><br><span class="line">    let a = <span class="number">10</span>;</span><br><span class="line">    let str = `哈哈，您购买了\$&#123;a&#125;件商品.....`</span><br><span class="line">    document.write(str)</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h2 id="四、JSTL"><a href="#四、JSTL" class="headerlink" title="四、JSTL"></a>四、JSTL</h2><h3 id="4-1-概述"><a href="#4-1-概述" class="headerlink" title="4.1 概述"></a>4.1 概述</h3><p>JSP 标准标签库（Jsp Standard Tag Library），是由Apache组织提供的开源的jsp标签库</p><p>作用：替换和简化jsp页面中java代码的编写</p><p>JSTL标准标签库有5个子库，但随着发展，目前常使用的是它的核心库</p><table><thead><tr><th><strong>标签库</strong></th><th><strong>标签库的URI</strong></th><th><strong>前缀</strong></th></tr></thead><tbody><tr><td><strong>Core</strong></td><td><a href="http://java.sun.com/jsp/jstl/core" target="_blank" rel="noopener">http://java.sun.com/jsp/jstl/core</a></td><td>c</td></tr><tr><td>国际化(过时)</td><td><a href="http://java.sun.com/jsp/jstl/fmt" target="_blank" rel="noopener">http://java.sun.com/jsp/jstl/fmt</a></td><td>fmt</td></tr><tr><td>SQL(过时)</td><td><a href="http://java.sun.com/jsp/jstl/sql" target="_blank" rel="noopener">http://java.sun.com/jsp/jstl/sql</a></td><td>sql</td></tr><tr><td>XML(过时)</td><td><a href="http://java.sun.com/jsp/jstl/xml" target="_blank" rel="noopener">http://java.sun.com/jsp/jstl/xml</a></td><td>x</td></tr><tr><td>Functions(几乎不用)</td><td><a href="http://java.sun.com/jsp/jstl/functions" target="_blank" rel="noopener">http://java.sun.com/jsp/jstl/functions</a></td><td>fn</td></tr></tbody></table><h3 id="4-2-Core标签的使用"><a href="#4-2-Core标签的使用" class="headerlink" title="4.2 Core标签的使用"></a>4.2 Core标签的使用</h3><blockquote><p>JSTL属于第三方jsr包,在使用之前需要先导入jsr包</p></blockquote><p><strong>① 导入jar包</strong></p><p><strong>② 在jsp页面引入JSTL标签库</strong></p><ul><li><code>&lt;%@ taglib prefix=&quot;c&quot; uri=&quot;http://java.sun.com/jsp/jstl/core&quot; %&gt;</code></li></ul><blockquote><p>在page指令下引入</p></blockquote><p><strong>③ 使用</strong></p><h4 id="4-2-1-常用标签"><a href="#4-2-1-常用标签" class="headerlink" title="4.2.1 常用标签"></a>4.2.1 常用标签</h4><h5 id="①-c-if-标签"><a href="#①-c-if-标签" class="headerlink" title="① c:if 标签"></a>① c:if 标签</h5><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">* </span>相当于java中: if(表达式内容)&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="bullet">* </span>语法：</span><br><span class="line"><span class="code">&lt;c:if test="表达式内容"&gt;&lt;/c:if&gt;</span></span><br><span class="line"><span class="code">jstl标签库通常结合el一起使用，完成动态判断功能</span></span><br><span class="line"><span class="code">注意：c:if标签没有else功能，想要实现取反的效果，需要重写c:if标签，条件进行取反...</span></span><br></pre></td></tr></table></figure><p>使用演示：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">"com.itheima.domain.User"</span> %&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;%@ taglib prefix=<span class="string">"c"</span> uri=<span class="string">"http://java.sun.com/jsp/jstl/core"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;demo1&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h3&gt;jstl的if标签&lt;/h3&gt;</span><br><span class="line"></span><br><span class="line">&lt;%</span><br><span class="line">    User user = <span class="keyword">new</span> User();</span><br><span class="line">    user.setUsername(<span class="string">"lucy"</span>);</span><br><span class="line">    session.setAttribute(<span class="string">"user"</span>, <span class="keyword">null</span>);</span><br><span class="line">%&gt;</span><br><span class="line"></span><br><span class="line">&lt;c:if test="$&#123;not empty user&#125;"&gt;欢迎您：$&#123;user.username&#125;&lt;/c:if&gt;</span><br><span class="line">&lt;c:if test="$&#123;empty user&#125;"&gt;登录 |注册...&lt;/c:if&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h5 id="②-c-forEach-标签"><a href="#②-c-forEach-标签" class="headerlink" title="② c:forEach 标签"></a>② c:forEach 标签</h5><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">* </span>普通for</span><br><span class="line"><span class="code">java语法：</span></span><br><span class="line"><span class="code">for(int i=1;i&lt;=5;i++)&#123;</span></span><br><span class="line"><span class="code">i</span></span><br><span class="line"><span class="code">&#125;</span></span><br><span class="line"><span class="code">jstl语法：</span></span><br><span class="line"><span class="code">&lt;c:forEach begin="1" end="5" step="1" var="i"&gt;</span></span><br><span class="line"><span class="code">$&#123;i&#125;</span></span><br><span class="line"><span class="code">&lt;/c:forEach&gt;</span></span><br><span class="line"><span class="code">begin：起始值</span></span><br><span class="line"><span class="code">end：结束值</span></span><br><span class="line"><span class="code">step：步长</span></span><br><span class="line"><span class="code">var：当前遍历的临时变量名</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="bullet">* </span>增强for</span><br><span class="line"><span class="code">java语法：</span></span><br><span class="line"><span class="code">for(User user : list)&#123;</span></span><br><span class="line"><span class="code">user</span></span><br><span class="line"><span class="code">&#125;</span></span><br><span class="line"><span class="code">jstl语法：</span></span><br><span class="line"><span class="code">&lt;c:forEach items="$&#123;list&#125;" var="user" varStatus="vs"&gt;</span></span><br><span class="line"><span class="code">$&#123;user&#125;</span></span><br><span class="line"><span class="code">&lt;/c:forEach&gt;</span></span><br><span class="line"><span class="code">items：需要遍历的集合</span></span><br><span class="line"><span class="code">var：当前遍历的临时变量名</span></span><br><span class="line"><span class="code">varStatus：当前遍历元素的状态</span></span><br><span class="line"><span class="code">index：索引</span></span><br><span class="line"><span class="code">count：计数器</span></span><br></pre></td></tr></table></figure><p>使用演示</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">"java.util.List"</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">"com.itheima.domain.User"</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">"java.util.ArrayList"</span> %&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;%<span class="meta">@taglib</span> prefix=<span class="string">"c"</span> uri=<span class="string">"http://java.sun.com/jsp/jstl/core"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;demo2&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h3&gt;普通for循环&lt;/h3&gt;</span><br><span class="line">&lt;%--</span><br><span class="line">    jstl就使用pageContext这个域对象了...</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;c:forEach begin=<span class="string">"1"</span> end=<span class="string">"5"</span> step=<span class="string">"1"</span> <span class="keyword">var</span>=<span class="string">"i"</span>&gt;</span><br><span class="line">    &lt;div&gt;$&#123;i&#125;&lt;/div&gt;</span><br><span class="line">&lt;/c:forEach&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;h3&gt;增强for循环&lt;/h3&gt;</span><br><span class="line">&lt;%</span><br><span class="line">    List&lt;User&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    list.add(<span class="keyword">new</span> User(<span class="string">"王昭君"</span>, <span class="number">18</span>, <span class="string">"峡谷"</span>));</span><br><span class="line">    list.add(<span class="keyword">new</span> User(<span class="string">"电耗子"</span>, <span class="number">22</span>, <span class="string">"祖安"</span>));</span><br><span class="line">    list.add(<span class="keyword">new</span> User(<span class="string">"李白"</span>, <span class="number">39</span>, <span class="string">"大唐"</span>));</span><br><span class="line"></span><br><span class="line">    request.setAttribute(<span class="string">"list"</span>, list);</span><br><span class="line">%&gt;</span><br><span class="line"></span><br><span class="line">&lt;c:forEach items=<span class="string">"$&#123;list&#125;"</span> <span class="keyword">var</span>=<span class="string">"user"</span> varStatus=<span class="string">"vs"</span>&gt;</span><br><span class="line">    &lt;div&gt;$&#123;user.username&#125; | 索引：$&#123;vs.index&#125; | 计数器： $&#123;vs.count&#125;&lt;/div&gt;</span><br><span class="line">&lt;/c:forEach&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><blockquote><p>切记，在jsp当中使用jstl标签，务必先引入 core核心标签库</p></blockquote><h2 id="五、三层架构"><a href="#五、三层架构" class="headerlink" title="五、三层架构"></a>五、三层架构</h2><h3 id="5-1-概述"><a href="#5-1-概述" class="headerlink" title="5.1 概述"></a>5.1 概述</h3><p>通常意义上的三层架构就是将整个业务应用划分为：表示层、业务逻辑层、数据访问层。</p><p>区分层次的目的：为了<strong>高内聚低耦合</strong>的思想</p><blockquote><p>表示层：又称为 web层，与浏览器（用户）进行数据交互的。</p><p>业务逻辑层：又称为service层，用于处理业务功能的。 </p><p>数据访问层：又称为dao层，与数据库进行数据交互的</p></blockquote><p><img data-src="/img/%E4%B8%89%E5%B1%82%E6%9E%B6%E6%9E%84.png" alt="三层架构"></p><p><strong>包命名规则：</strong></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">* </span>com.sun 公司域名倒写</span><br><span class="line"></span><br><span class="line"><span class="bullet">* </span>com.sun.dao 持久层</span><br><span class="line"></span><br><span class="line"><span class="bullet">* </span>com.sun.service 业务层</span><br><span class="line"></span><br><span class="line"><span class="bullet">* </span>ccom.sun.web 表示层</span><br><span class="line"></span><br><span class="line"><span class="bullet">* </span>com.sun.domain 实体（JavaBean）</span><br><span class="line"></span><br><span class="line"><span class="bullet">* </span>com.sun.util 工具包</span><br></pre></td></tr></table></figure><h2 id="六、用户信息列表展示"><a href="#六、用户信息列表展示" class="headerlink" title="六、用户信息列表展示"></a>六、用户信息列表展示</h2><p>使用三层架构开发代码，完成用户显示列表功能</p><h3 id="6-1-分析"><a href="#6-1-分析" class="headerlink" title="6.1 分析"></a>6.1 分析</h3><p><img data-src="/img/%E7%94%A8%E6%88%B7%E4%BF%A1%E6%81%AF%E5%88%97%E8%A1%A8%E6%A1%88%E4%BE%8B%E5%88%86%E6%9E%90.png" alt="用户信息列表案例分析"></p><h3 id="6-2-工程结构"><a href="#6-2-工程结构" class="headerlink" title="6.2 工程结构"></a>6.2 工程结构</h3><p><img data-src="/img/%E7%94%A8%E6%88%B7%E4%BF%A1%E6%81%AF%E5%88%97%E8%A1%A8%E6%A1%88%E4%BE%8B%E7%BB%93%E6%9E%84.png" alt="用户信息列表案例结构"></p><h3 id="6-3-代码实现"><a href="#6-3-代码实现" class="headerlink" title="6.3 代码实现"></a>6.3 代码实现</h3><h4 id="User实体类"><a href="#User实体类" class="headerlink" title="User实体类"></a>User实体类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> String id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String sex;</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    <span class="keyword">private</span> String address;</span><br><span class="line">    <span class="keyword">private</span> String qq;</span><br><span class="line">    <span class="keyword">private</span> String email;</span><br><span class="line">    <span class="comment">//构造方法、set、get方法略...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="index-js"><a href="#index-js" class="headerlink" title="index.js"></a>index.js</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">    &lt;head&gt;</span><br><span class="line">        &lt;title&gt;查询用户信息&lt;/title&gt;</span><br><span class="line">    &lt;/head&gt;</span><br><span class="line">    &lt;body&gt;</span><br><span class="line">        &lt;h1 style=<span class="string">"text-align: center;margin-top: 100px"</span> &gt;</span><br><span class="line">            &lt;a href="$&#123;pageContext.request.contextPath&#125;/FindAllServlet"&gt;查询用户列表&lt;/a&gt;</span><br><span class="line">        &lt;/h1&gt;</span><br><span class="line">    &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h4 id="FindAllServlet"><a href="#FindAllServlet" class="headerlink" title="FindAllServlet"></a>FindAllServlet</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/FindAllServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FindAllServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//接收参数</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//调用service查询</span></span><br><span class="line">        UserService userService = <span class="keyword">new</span> UserServiceImpl();</span><br><span class="line">        <span class="comment">//调用方法查询</span></span><br><span class="line">        List&lt;User&gt; userList = userService.findAll();</span><br><span class="line">        <span class="comment">// 存入request域中</span></span><br><span class="line">        request.setAttribute(<span class="string">"userList"</span>, userList);</span><br><span class="line">        <span class="comment">//转发到list.jsp</span></span><br><span class="line">        request.getRequestDispatcher(<span class="string">"/list.jsp"</span>).forward(request, response);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="UserService"><a href="#UserService" class="headerlink" title="UserService"></a>UserService</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询所有</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 用户list集合</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">List&lt;User&gt; <span class="title">findAll</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>UserServiceImpl</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> UserDao userDao = <span class="keyword">new</span> UserDaoImpl();</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findAll</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> userDao.findAll();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="UserDao"><a href="#UserDao" class="headerlink" title="UserDao"></a>UserDao</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询所有</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 用户列表</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">List&lt;User&gt; <span class="title">findAll</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>UserDaoImpl</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserDaoImpl</span> <span class="keyword">implements</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> List&lt;User&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        list.add(<span class="keyword">new</span> User(<span class="string">"1"</span>, <span class="string">"西施"</span>, <span class="string">"女"</span>, <span class="number">28</span>, <span class="string">"香港"</span>, <span class="string">"7766521"</span>, <span class="string">"7766521@qq.com"</span>));</span><br><span class="line">        list.add(<span class="keyword">new</span> User(<span class="string">"2"</span>, <span class="string">"甄姬"</span>, <span class="string">"女"</span>, <span class="number">12</span>, <span class="string">"天津"</span>, <span class="string">"7766541"</span>, <span class="string">"7766541@qq.com"</span>));</span><br><span class="line">        list.add(<span class="keyword">new</span> User(<span class="string">"3"</span>, <span class="string">"宋轶"</span>, <span class="string">"女"</span>, <span class="number">33</span>, <span class="string">"大连"</span>, <span class="string">"7726521"</span>, <span class="string">"7726521@qq.com"</span>));</span><br><span class="line">        list.add(<span class="keyword">new</span> User(<span class="string">"4"</span>, <span class="string">"蔡文姬"</span>, <span class="string">"女"</span>, <span class="number">19</span>, <span class="string">"釜山"</span>, <span class="string">"7736521"</span>, <span class="string">"7736521@qq.com"</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findAll</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="list-jsp"><a href="#list-jsp" class="headerlink" title="list.jsp"></a>list.jsp</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;%@ taglib prefix=<span class="string">"c"</span> uri=<span class="string">"http://java.sun.com/jsp/jstl/core"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;list&lt;/title&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        *&#123;</span><br><span class="line">            margin: <span class="number">0</span>;</span><br><span class="line">            padding: <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        table&#123;</span><br><span class="line">            margin: <span class="number">100</span>px auto;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        tr&#123;</span><br><span class="line">            height: <span class="number">50</span>px;</span><br><span class="line">            text-align: center;</span><br><span class="line">        &#125;</span><br><span class="line">        td&#123;</span><br><span class="line">            padding: <span class="number">20</span>px;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;%--$&#123;userList&#125;--%&gt;</span><br><span class="line">    &lt;table border=<span class="string">"1"</span> align=<span class="string">"center"</span> width=<span class="string">"600px"</span> cellspacing=<span class="string">"0"</span> cellpadding=<span class="string">"0"</span>&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;th colspan="7"&gt;&lt;h1&gt;用户信息列表&lt;/h1&gt;&lt;/th&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;th&gt;ID&lt;/th&gt;</span><br><span class="line">            &lt;th&gt;姓名&lt;/th&gt;</span><br><span class="line">            &lt;th&gt;性别&lt;/th&gt;</span><br><span class="line">            &lt;th&gt;年龄&lt;/th&gt;</span><br><span class="line">            &lt;th&gt;地址&lt;/th&gt;</span><br><span class="line">            &lt;th&gt;QQ&lt;/th&gt;</span><br><span class="line">            &lt;th&gt;Email&lt;/th&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">        &lt;c:forEach items=<span class="string">"$&#123;requestScope.userList&#125;"</span> <span class="keyword">var</span>=<span class="string">"user"</span>&gt;</span><br><span class="line">            &lt;tr&gt;</span><br><span class="line">                &lt;td&gt;$&#123;user.id&#125;&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;$&#123;user.name&#125;&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;$&#123;user.sex&#125;&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;$&#123;user.age&#125;&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;$&#123;user.address&#125;&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;$&#123;user.qq&#125;&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;$&#123;user.email&#125;&lt;/td&gt;</span><br><span class="line">            &lt;/tr&gt;</span><br><span class="line">        &lt;/c:forEach&gt;</span><br><span class="line">    &lt;/table&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、JSP&quot;&gt;&lt;a href=&quot;#一、JSP&quot; class=&quot;headerlink&quot; title=&quot;一、JSP&quot;&gt;&lt;/a&gt;一、JSP&lt;/h2&gt;&lt;h3 id=&quot;1-1-概述&quot;&gt;&lt;a href=&quot;#1-1-概述&quot; class=&quot;headerlink&quot; title=&quot;1.1 概述&quot;&gt;&lt;/a&gt;1.1 概述&lt;/h3&gt;&lt;p&gt;在很多动态网页中，绝大部分内容都是固定不变的，只有局部内容需要动态产生和改变。 为了弥补 Servlet的缺陷，SUN公司在Servlet的基础上推出了JSP（Java Server Pages）。&lt;/p&gt;
&lt;p&gt;JSP是简化Servlet编写的一种技术，它将Java代码和HTML语句混合在同一个文件中编写，页面动态资源 使用java代码，页面静态资源使用html标签。 &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;简单来说：可以在html标签中嵌套java代码&lt;/strong&gt; &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;作用：简化书写，展示动态页面&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="JavaWeb" scheme="http://sunmoon.com/categories/JavaWeb/"/>
    
    
      <category term="JSP" scheme="http://sunmoon.com/tags/JSP/"/>
    
      <category term="EL表达式" scheme="http://sunmoon.com/tags/EL%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    
      <category term="JSTL标签库" scheme="http://sunmoon.com/tags/JSTL%E6%A0%87%E7%AD%BE%E5%BA%93/"/>
    
      <category term="MVC设计思想" scheme="http://sunmoon.com/tags/MVC%E8%AE%BE%E8%AE%A1%E6%80%9D%E6%83%B3/"/>
    
      <category term="三层架构" scheme="http://sunmoon.com/tags/%E4%B8%89%E5%B1%82%E6%9E%B6%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>Cookie&amp;Session</title>
    <link href="http://sunmoon.com/2020/08/26/Cookie-Session/"/>
    <id>http://sunmoon.com/2020/08/26/Cookie-Session/</id>
    <published>2020-08-26T13:29:39.000Z</published>
    <updated>2020-08-29T12:26:20.609Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、会话概述"><a href="#一、会话概述" class="headerlink" title="一、会话概述"></a>一、会话概述</h2><h3 id="1-1-什么是会话"><a href="#1-1-什么是会话" class="headerlink" title="1.1 什么是会话"></a>1.1 什么是会话</h3><p><img data-src="/img/%E4%BB%80%E4%B9%88%E6%98%AF%E4%BC%9A%E8%AF%9D.png" alt="什么是会话"></p><a id="more"></a><h3 id="1-2-会话技术"><a href="#1-2-会话技术" class="headerlink" title="1.2 会话技术"></a>1.2 会话技术</h3><p><strong>问题：</strong>Http是一个无状态协议，同一个会话的连续两个请求相互独立，彼此并不了解</p><p><strong>作用</strong>：用于<span style="color:red">存储</span>浏览器与服务器在请求和响应过程中产生的<span style="color:red">数据</span></p><p>客户端会话技术：cookie</p><p>服务器端会话技术：session</p><p><img data-src="/img/%E4%BC%9A%E8%AF%9D%E6%8A%80%E6%9C%AF.png" alt="会话技术"></p><h2 id="二、Cookie"><a href="#二、Cookie" class="headerlink" title="二、Cookie"></a>二、Cookie</h2><h3 id="2-1-概述"><a href="#2-1-概述" class="headerlink" title="2.1 概述"></a>2.1 概述</h3><p>Cookie作用：在一次会话的多次请求之间共享数据，将数据<strong>保存到客户端（浏览器）</strong></p><blockquote><p>应用场景：</p><ul><li>JD的购物车</li></ul></blockquote><p><img data-src="/img/cookie.png" alt="cookie"></p><h3 id="2-2-快速入门"><a href="#2-2-快速入门" class="headerlink" title="2.2 快速入门"></a>2.2 快速入门</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1. </span>SetCookie</span><br><span class="line"><span class="code">// 1.创建cookie</span></span><br><span class="line"><span class="code">Cookie cookie = new Cookie(String name,String value);</span></span><br><span class="line"><span class="code">// 2.写入到浏览器</span></span><br><span class="line"><span class="code">response.addCookie(cookie);</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">2. </span>GetCookie</span><br><span class="line"><span class="code">// 1.从浏览器中获取cookie</span></span><br><span class="line"><span class="code">Cookie[] cookies = request.getCookies();</span></span><br><span class="line"><span class="code">// 2.遍历输出（非空判断....）</span></span><br></pre></td></tr></table></figure><p>代码演示：</p><blockquote><p>SetCookie</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/SetCookie"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SetCookie</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">// 1.创建cookie</span></span><br><span class="line">        Cookie cookie = <span class="keyword">new</span> Cookie(<span class="string">"product"</span>,<span class="string">"HuaWeiP40"</span>);</span><br><span class="line">        <span class="comment">// 2.写入到浏览器</span></span><br><span class="line">        response.addCookie(cookie);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>GetCookie</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/GetCookie"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GetCookie</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">// 1.从浏览器中获取cookie</span></span><br><span class="line">        Cookie[] cookies = request.getCookies();</span><br><span class="line">        <span class="comment">// 2.遍历输出</span></span><br><span class="line">        <span class="keyword">if</span> (cookies != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (Cookie cookie : cookies) &#123;</span><br><span class="line">                String name = cookie.getName();</span><br><span class="line">                String value = cookie.getValue();</span><br><span class="line">                System.out.println(name + <span class="string">":"</span> + value);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-3-工作原理"><a href="#2-3-工作原理" class="headerlink" title="2.3 工作原理"></a>2.3 工作原理</h3><blockquote><p>图解</p></blockquote><p><img data-src="/img/cookie%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86.png" alt="cookie工作原理"></p><h3 id="2-4-Cookie细节"><a href="#2-4-Cookie细节" class="headerlink" title="2.4 Cookie细节"></a>2.4 Cookie细节</h3><h4 id="2-4-1-服务器发送多个Cookie"><a href="#2-4-1-服务器发送多个Cookie" class="headerlink" title="2.4.1 服务器发送多个Cookie?"></a>2.4.1 服务器发送多个Cookie?</h4><blockquote><p>同一个会话域名，最多保存50个Cookie</p></blockquote><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">* </span>答案是可以的</span><br><span class="line"><span class="code">// 1.创建二个cookie对象</span></span><br><span class="line"><span class="code">Cookie cookie1 = new Cookie("name","jack");</span></span><br><span class="line"><span class="code">Cookie cookie2 = new Cookie("age","18");</span></span><br><span class="line"><span class="code">// 2.response添加二个，响应</span></span><br><span class="line"><span class="code">response.addCookie(cookie1);</span></span><br><span class="line"><span class="code">response.addCookie(cookie2);</span></span><br></pre></td></tr></table></figure><p><strong>代码演示：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/ResponseMultipart"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ResponseMultipart</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">// 1.创建二个cookie对象</span></span><br><span class="line">        Cookie cookie1 = <span class="keyword">new</span> Cookie(<span class="string">"name"</span>,<span class="string">"jack"</span>);</span><br><span class="line">        Cookie cookie2 = <span class="keyword">new</span> Cookie(<span class="string">"age"</span>,<span class="string">"18"</span>);</span><br><span class="line">        <span class="comment">// 2.response添加二个，响应</span></span><br><span class="line">        response.addCookie(cookie1);</span><br><span class="line">        response.addCookie(cookie2);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-4-2-Cookie在浏览器的保存时间"><a href="#2-4-2-Cookie在浏览器的保存时间" class="headerlink" title="2.4.2 Cookie在浏览器的保存时间"></a>2.4.2 Cookie在浏览器的保存时间</h4><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">* </span>默认的情况下，会话（浏览器）关闭，cookie自动销毁</span><br><span class="line"></span><br><span class="line"><span class="bullet">* </span>我们可以设置它的存活时间</span><br><span class="line"><span class="code">cookie.setMaxAge(int seconds);</span></span><br><span class="line"><span class="code">正数：可以设置浏览器的cookie持久化时间，保存到硬盘，到期后自动销毁</span></span><br><span class="line"><span class="code">负数：默认值（-1），会话（浏览器）关闭，cookie自动销毁</span></span><br><span class="line"><span class="code">零：立即删除当前cookie</span></span><br></pre></td></tr></table></figure><p><strong>代码演示：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/CookieMaxAge"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CookieMaxAge</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">// 1.创建cookie</span></span><br><span class="line">        Cookie cookie = <span class="keyword">new</span> Cookie(<span class="string">"product"</span>, <span class="string">"xiaomi10"</span>);</span><br><span class="line">        <span class="comment">// 2.设置cookie存活时间</span></span><br><span class="line">        <span class="comment">// cookie.setMaxAge(10);  持久化</span></span><br><span class="line">        cookie.setMaxAge(<span class="number">0</span>);  <span class="comment">// 立即删除</span></span><br><span class="line">        <span class="comment">// 3.响应到浏览器</span></span><br><span class="line">        response.addCookie(cookie);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-4-3-Cookie是否可以存储中文？"><a href="#2-4-3-Cookie是否可以存储中文？" class="headerlink" title="2.4.3 Cookie是否可以存储中文？"></a>2.4.3 Cookie是否可以存储中文？</h4><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">* </span>在tomcat8版本之前，不支持中文</span><br><span class="line"><span class="code">URLEncode 编码</span></span><br><span class="line"><span class="code">URLDecode 解码</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="bullet">* </span>在tomcat8版本之后，支持中文</span><br><span class="line"><span class="code">Rfc6265规范中，不支持特殊符号（空格、分号、逗号....）</span></span><br></pre></td></tr></table></figure><p>代码演示：</p><blockquote><p>CookieCN</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/CookieCN"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CookieCN</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 编码</span></span><br><span class="line">        String value = <span class="string">"小米 1,0"</span>;</span><br><span class="line">        value= URLEncoder.encode(value, <span class="string">"utf-8"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1.创建cookie</span></span><br><span class="line">        Cookie cookie = <span class="keyword">new</span> Cookie(<span class="string">"product"</span>, value);</span><br><span class="line">        <span class="comment">// 2.发送到浏览器</span></span><br><span class="line">        response.addCookie(cookie);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>GetCookie</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/GetCookie"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GetCookie</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">// 1.从浏览器中获取cookie</span></span><br><span class="line">        Cookie[] cookies = request.getCookies();</span><br><span class="line">        <span class="comment">// 2.遍历输出</span></span><br><span class="line">        <span class="keyword">if</span> (cookies != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (Cookie cookie : cookies) &#123;</span><br><span class="line">                String name = cookie.getName();</span><br><span class="line">                String value = cookie.getValue();</span><br><span class="line">                <span class="comment">// 解码</span></span><br><span class="line">                value = URLDecoder.decode(value, <span class="string">"utf-8"</span>);</span><br><span class="line">                System.out.println(name + <span class="string">":"</span> + value);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-4-4-Cookie共享数据的范围？"><a href="#2-4-4-Cookie共享数据的范围？" class="headerlink" title="2.4.4 Cookie共享数据的范围？"></a>2.4.4 Cookie共享数据的范围？</h4><p><strong>① 在一个tomca服务器中，部署了多个web项目，那么这些web项目的Cookie能否共享？</strong></p><p><img data-src="/img/cookie%E5%85%B1%E4%BA%AB%E6%95%B0%E6%8D%AE%E8%8C%83%E5%9B%B4.png" alt="cookie共享数据范围"></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">* </span>默认情况下不行，因为我们在设置cookie时有一个默认携带路径（当前servlet的父路径）</span><br><span class="line"><span class="code">设置：http://localhost:8080/cookie/SetCookie</span></span><br><span class="line"><span class="code">获取：http://localhost:8080/cookie/xxxxxx</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">* </span>可以手动指定cookie的携带路径</span><br><span class="line"><span class="code">刚才案例的默认值：</span></span><br><span class="line"><span class="code">cookie.setPath("/cookie"); 相当于：http://localhost:8080/cookie</span></span><br><span class="line"><span class="code">如果你想让二个项目共享cookie：</span></span><br><span class="line"><span class="code">cookie.setPath("/"); 相当于：http://localhost:8080/</span></span><br><span class="line"><span class="code">http://localhost:8080/cookie</span></span><br><span class="line"><span class="code">http://localhost:8080/response</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">* </span>cookie覆盖要求：路径+名称完全一致，就进行覆盖...</span><br><span class="line"></span><br><span class="line"><span class="bullet">* </span>在默认的情况下，是否能获取/aa/SetCookie</span><br><span class="line"><span class="code">设置cookie：http://localhost:8080/cookie/aa/SetCookie</span></span><br><span class="line"><span class="code">获取cookie：http://localhost:8080/cookie/bb/GetCookie</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="code">解决方案：</span></span><br><span class="line"><span class="code">cookie.setPath("/cookie");</span></span><br></pre></td></tr></table></figure><blockquote><p>servlet设置多级路径</p></blockquote><p><img data-src="/img/Servlet%E8%AE%BE%E7%BD%AE%E5%A4%9A%E7%BA%A7%E8%B7%AF%E5%BE%84.png" alt="Servlet设置多级路径"></p><p><strong>② 不同tomcat服务器之间Cookie能否共享？</strong></p><ul><li>默认情况下不能…..</li></ul><ul><li><p>可以指定同一个一级域名下，多台服务器共享 （项目）</p><ul><li><code>cookie.setDomain(&quot;.jd.com&quot;);</code></li></ul></li></ul><p><img data-src="/img/%E4%B8%8D%E5%90%8Ctomcat%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B9%8B%E9%97%B4%E5%85%B1%E4%BA%ABCookie.png" alt="不同tomcat服务器之间共享Cookie"></p><h3 id="2-5-Cookie特点"><a href="#2-5-Cookie特点" class="headerlink" title="2.5 Cookie特点"></a>2.5 Cookie特点</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1. </span>cookie存储数据在客户端（浏览器）</span><br><span class="line"></span><br><span class="line"><span class="bullet">2. </span>cookie只能存储字符串</span><br><span class="line"></span><br><span class="line"><span class="bullet">3. </span>cookie单个大小不能超过4KB</span><br><span class="line"></span><br><span class="line"><span class="bullet">4. </span>cookie在同一域名下数量不超过50个</span><br><span class="line"></span><br><span class="line"><span class="bullet">5. </span>cookie存储数据不太安全</span><br></pre></td></tr></table></figure><h3 id="2-6-Cookie案例——用户上次访问记录"><a href="#2-6-Cookie案例——用户上次访问记录" class="headerlink" title="2.6 Cookie案例——用户上次访问记录"></a>2.6 Cookie案例——用户上次访问记录</h3><p><strong>需求</strong></p><ul><li><p>访问一个Servlet，如果是第一次访问，则提示：您好，欢迎您的到来。</p></li><li><p>如果不是第一次访问，则提示：欢迎回来，您上次访问时间为: xxxx。</p></li></ul><p><strong>需求分析：</strong></p><p><img data-src="/img/cookie%E6%A1%88%E4%BE%8B%E2%80%94%E2%80%94%E7%94%A8%E6%88%B7%E4%B8%8A%E6%AC%A1%E8%AE%BF%E9%97%AE%E8%AE%B0%E5%BD%95.png" alt="cookie案例——用户上次访问记录"></p><p><strong>代码实现</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CookieUtils</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 根据指定名称，获取对应的cookie对象</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Cookie <span class="title">queryByName</span><span class="params">(Cookie[] cookies,String name)</span></span>&#123;</span><br><span class="line">        <span class="comment">// 非空判断</span></span><br><span class="line">        <span class="keyword">if</span> (cookies!=<span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="comment">// 遍历</span></span><br><span class="line">            <span class="keyword">for</span> (Cookie cookie : cookies) &#123;</span><br><span class="line">                <span class="comment">// 对比名称</span></span><br><span class="line">                <span class="keyword">if</span> (name.equals(cookie.getName())) &#123;</span><br><span class="line">                    <span class="keyword">return</span> cookie;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 没有匹配上，返回null</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/LastTimeServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LastTimeServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">// 设置响应编码</span></span><br><span class="line">        response.setContentType(<span class="string">"text/html;charset=utf-8"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// i.获取上次访问时间</span></span><br><span class="line">        <span class="comment">// 1.获取指定名称的cookie</span></span><br><span class="line">        Cookie[] cookies = request.getCookies();</span><br><span class="line">        Cookie cookie = CookieUtils.queryByName(cookies, <span class="string">"last_time"</span>);</span><br><span class="line">        <span class="comment">// 2.判断是否为第一次访问</span></span><br><span class="line">        <span class="keyword">if</span> (cookie == <span class="keyword">null</span>) &#123;</span><br><span class="line">            response.getWriter().write(<span class="string">"您好，欢迎您的到来.."</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            String last_time = cookie.getValue();  <span class="comment">// 2020-08-25 12:05:11</span></span><br><span class="line">            <span class="comment">// 解码</span></span><br><span class="line">            last_time = URLDecoder.decode(last_time, <span class="string">"UTF-8"</span>);</span><br><span class="line">            response.getWriter().write(<span class="string">"欢迎回来，"</span> + last_time);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// ii.记录本次访问时间</span></span><br><span class="line">        <span class="comment">// 1.获取当前时间</span></span><br><span class="line">        LocalDateTime now = LocalDateTime.now();</span><br><span class="line">        String current_time = now.toString();<span class="comment">// 默认获取 2020-08-25 12:05:11 格式</span></span><br><span class="line">        <span class="comment">// 编码</span></span><br><span class="line">        current_time = URLEncoder.encode(current_time, <span class="string">"UTF-8"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.设置cookie并指定持久化</span></span><br><span class="line">        cookie = <span class="keyword">new</span> Cookie(<span class="string">"last_time"</span>, current_time);</span><br><span class="line">        cookie.setMaxAge(<span class="number">60</span> * <span class="number">60</span> * <span class="number">24</span> * <span class="number">30</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3.写入到浏览器</span></span><br><span class="line">        response.addCookie(cookie);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="三、Session"><a href="#三、Session" class="headerlink" title="三、Session"></a>三、Session</h2><h3 id="3-1-概述"><a href="#3-1-概述" class="headerlink" title="3.1 概述"></a>3.1 概述</h3><p><strong>使用Cookie问题</strong></p><ol><li>最多存储4K字符串</li><li>存储数据不太安全</li></ol><p>session作用：在一次会话的多次请求之间共享数据，将数据<strong>保存到服务器端</strong></p><blockquote><p>Session是基于Cookie实现的</p></blockquote><p><img data-src="/img/session.png" alt="session"></p><h3 id="3-2-快速入门"><a href="#3-2-快速入门" class="headerlink" title="3.2 快速入门"></a>3.2 快速入门</h3><p>HttpSession也是一个域对象</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">* </span>API</span><br><span class="line"><span class="bullet">1. </span>存储数据</span><br><span class="line"><span class="code">void setAttribute(String name,Object value)</span></span><br><span class="line"><span class="bullet">2. </span>获取数据</span><br><span class="line"><span class="code">Object getAttribute(String name)</span></span><br><span class="line"><span class="bullet">3. </span>删除数据</span><br><span class="line"><span class="code">void removeAttribute(String name)</span></span><br></pre></td></tr></table></figure><p><strong>技术分析</strong></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1. </span>SetSession</span><br><span class="line"><span class="code">// 1.获取session空间（域对象）</span></span><br><span class="line"><span class="code">HttpSession session = request.getSession();</span></span><br><span class="line"><span class="code">// 2.存值</span></span><br><span class="line"><span class="code">session.setAttribute("product","oppoX20");</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">2. </span>GetSession</span><br><span class="line"><span class="code">// 1.获取session空间（域对象）</span></span><br><span class="line"><span class="code">HttpSession session = request.getSession();</span></span><br><span class="line"><span class="code">// 2.取值</span></span><br><span class="line"><span class="code">session.getAttribute("product");</span></span><br></pre></td></tr></table></figure><blockquote><p>SetSession</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/SetSession"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SetSession</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">// 1.获取session空间（域对象）</span></span><br><span class="line">        HttpSession session = request.getSession();</span><br><span class="line">        <span class="comment">// 2.存值</span></span><br><span class="line">        session.setAttribute(<span class="string">"product"</span>,<span class="string">"oppoX20"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>GetSession</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/GetSession"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GetSession</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">// 1.获取session空间（域对象）</span></span><br><span class="line">        HttpSession session = request.getSession();</span><br><span class="line">        <span class="comment">// 2.取值</span></span><br><span class="line">        String value = (String) session.getAttribute(<span class="string">"product"</span>);</span><br><span class="line">        System.out.println(value);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-3-工作原理"><a href="#3-3-工作原理" class="headerlink" title="3.3 工作原理"></a>3.3 工作原理</h3><p>Session基于Cookie技术实现</p><p><img data-src="/img/session%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86.png" alt="session工作原理"></p><h3 id="3-4-Session细节"><a href="#3-4-Session细节" class="headerlink" title="3.4 Session细节"></a>3.4 Session细节</h3><h4 id="3-4-1-客户端关闭，服务器不关闭"><a href="#3-4-1-客户端关闭，服务器不关闭" class="headerlink" title="3.4.1 客户端关闭，服务器不关闭"></a>3.4.1 客户端关闭，服务器不关闭</h4><p>两次获取的Session数据是否为相同？</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">* </span>默认的情况下不相同</span><br><span class="line"><span class="code">因为session是基于cookie实现的，浏览器关闭，cookie销毁，jsessionId也就没了</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">* </span>我们可以手动设置jsessionid的这个cookie，存活时间</span><br><span class="line"><span class="code">我们可以覆盖它默认的操作，这样就可以持久化到浏览器磁盘中...</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    浏览器关闭，jsessionid不会销毁...</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/ClientClose"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ClientClose</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">// 1.获取session对象</span></span><br><span class="line">        HttpSession session = request.getSession();</span><br><span class="line">        <span class="comment">// 2.存数据</span></span><br><span class="line">        session.setAttribute(<span class="string">"product"</span>, <span class="string">"苹果12"</span>);</span><br><span class="line">        <span class="comment">// 通过session对象，获取jsessionid的值</span></span><br><span class="line">        String sessionId = session.getId();</span><br><span class="line">        <span class="comment">// 3.我们吧服务器默认创建的cookie进行覆盖，指定存活时间</span></span><br><span class="line">        Cookie cookie = <span class="keyword">new</span> Cookie(<span class="string">"JSESSIONID"</span>, sessionId);</span><br><span class="line">        <span class="comment">// 指定路径</span></span><br><span class="line">        cookie.setPath(<span class="string">"/session"</span>);</span><br><span class="line">        <span class="comment">// 指定存活时间</span></span><br><span class="line">        cookie.setMaxAge(<span class="number">100</span>);</span><br><span class="line">        <span class="comment">// 响应到浏览器</span></span><br><span class="line">        response.addCookie(cookie);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-4-2-客户端不关闭，服务器关闭"><a href="#3-4-2-客户端不关闭，服务器关闭" class="headerlink" title="3.4.2 客户端不关闭，服务器关闭"></a>3.4.2 客户端不关闭，服务器关闭</h4><p>两次获取的Session数据是否为相同？</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">* 默认情况下是一样的....</span><br><span class="line">钝化：我们tomcat服务器在关闭时，将内存的session数据，序列化到磁盘文件</span><br><span class="line">活化：我们tomcat服务器在重新启动时，将磁盘文件，反序列化到，服务器内存中...</span><br><span class="line">前提条件，我们存放的对象，必须实现序列化接口...</span><br></pre></td></tr></table></figure><h4 id="3-4-3-生命周期"><a href="#3-4-3-生命周期" class="headerlink" title="3.4.3 生命周期"></a>3.4.3 生命周期</h4><blockquote><p>session是一个域对象，对于它的使用，需要掌握session的生命周期</p></blockquote><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">* </span>何时创建</span><br><span class="line"><span class="code">用户请求携带的jsessionid与服务器不匹配时，创建</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">* </span>何时销毁</span><br><span class="line"><span class="code">1.用户非活跃状态30分钟，销毁</span></span><br><span class="line"><span class="code">2.服务器非正常关闭，销毁</span></span><br><span class="line"><span class="code">3.自杀,session.invalidate(); session.removeAttribute("jsessionid");</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">* </span>作用范围</span><br><span class="line"><span class="code">一次会话，多次请求之间，共享数据</span></span><br></pre></td></tr></table></figure><h4 id="3-4-4-URL重写-了解"><a href="#3-4-4-URL重写-了解" class="headerlink" title="3.4.4 URL重写(了解)"></a>3.4.4 URL重写(了解)</h4><p><strong>问题：</strong></p><ul><li>学习了Session的工作原理后，我们知道Session基于Cookie技术实现；浏览器的Cookie是可以禁用的，一旦禁用了之后，Session就会出现问题了。开发中,一般是不关注用户的Cookie是否禁用的，若用户禁用了Cookie，只能别用网站了。</li></ul><p><strong>解决方案：</strong></p><ul><li>若真想处理用户端的Cookie禁用，我们可以使用url重写技术：</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/OverrideURL"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OverrideURL</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">        response.setContentType(<span class="string">"text/html;charset=utf-8"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1.获取session</span></span><br><span class="line">        HttpSession session = request.getSession();</span><br><span class="line">        <span class="comment">// 2.存数据</span></span><br><span class="line">        session.setAttribute(<span class="string">"product"</span>, <span class="string">"我使用了url重写技术，浏览器禁用了cookie，我也不怕哈哈哈"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3.重写url（将jsessionid，写入到地址栏）</span></span><br><span class="line">        String url = <span class="string">"/session/GetSession"</span>;</span><br><span class="line"></span><br><span class="line">        url = response.encodeURL(url);</span><br><span class="line"></span><br><span class="line">        response.getWriter().write(<span class="string">"&lt;a href='"</span>+ url +<span class="string">"'&gt;使用了url重写技术&lt;/a&gt;"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-5-Session特点"><a href="#3-5-Session特点" class="headerlink" title="3.5 Session特点"></a>3.5 Session特点</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>. session存储数据在服务器</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>. session存储类型任意（Object）</span><br><span class="line"></span><br><span class="line"><span class="number">3</span>. session存储大小和数量没有限制（相对于内存）</span><br><span class="line"></span><br><span class="line"><span class="number">4</span>. session存储相对安全</span><br></pre></td></tr></table></figure><blockquote><p>小贴士：(对于cookie和session的选择)</p><ul><li><p>cookie：将数据保存在浏览器端，数据相对不安全，而且数据大小是有限制的，建议不太敏感的数据使用它</p></li><li><p>session：将数据保存在服务器端，数据相对安全，数据的大小要比cookie中数据灵活很多，但是会占用服务器内存，建议敏感且小量数据使用它</p></li></ul></blockquote><h2 id="五、域对象总结"><a href="#五、域对象总结" class="headerlink" title="五、域对象总结"></a>五、域对象总结</h2><p><code>request</code>、<code>session</code>、<code>ServletContext</code></p><p><img data-src="/img/%E5%9F%9F%E5%AF%B9%E8%B1%A1%E6%80%BB%E7%BB%93.png" alt="域对象总结"></p><h3 id="5-1-域对象公共API"><a href="#5-1-域对象公共API" class="headerlink" title="5.1 域对象公共API"></a>5.1 域对象公共API</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1. </span>设置数据</span><br><span class="line"><span class="code">void setAttribute(String name, Object o)</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">2. </span>获取数据</span><br><span class="line"><span class="code">Object getAttribute(String name)</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">3. </span>删除数据</span><br><span class="line"><span class="code">void removeAttribute(String name)</span></span><br></pre></td></tr></table></figure><h3 id="5-2-生命周期"><a href="#5-2-生命周期" class="headerlink" title="5.2 生命周期"></a>5.2 生命周期</h3><h4 id="5-2-1-ServletContext域对象"><a href="#5-2-1-ServletContext域对象" class="headerlink" title="5.2.1 ServletContext域对象"></a>5.2.1 ServletContext域对象</h4><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">* </span>何时创建</span><br><span class="line"><span class="code">服务器启动，项目加载成功后，创建</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">* </span>何时销毁</span><br><span class="line"><span class="code">服务器关闭，项目卸载后，销毁</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">* </span>作用范围</span><br><span class="line"><span class="code">整个web项目</span></span><br></pre></td></tr></table></figure><h4 id="5-2-2-HttpSession域对象"><a href="#5-2-2-HttpSession域对象" class="headerlink" title="5.2.2 HttpSession域对象"></a>5.2.2 HttpSession域对象</h4><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">* </span>何时创建</span><br><span class="line"><span class="code">用户携带jsessionid与服务器不匹配时</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">* </span>何时销毁</span><br><span class="line"><span class="code">1.非活跃状态30分钟</span></span><br><span class="line"><span class="code">2.服务器非正常关闭</span></span><br><span class="line"><span class="code">3.自杀</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">* </span>作用范围</span><br><span class="line"><span class="code">一次会话，多次请求之间</span></span><br></pre></td></tr></table></figure><h4 id="5-2-3-HttpServletRequest"><a href="#5-2-3-HttpServletRequest" class="headerlink" title="5.2.3 HttpServletRequest"></a>5.2.3 HttpServletRequest</h4><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">* </span>何时创建</span><br><span class="line"><span class="code">用户发送请求时</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">* </span>何时销毁</span><br><span class="line"><span class="code">服务器做出响应后</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">* </span>作用范围</span><br><span class="line"><span class="code">一次请求中，多次转发之间</span></span><br></pre></td></tr></table></figure><h3 id="5-3-小结"><a href="#5-3-小结" class="headerlink" title="5.3 小结"></a>5.3 小结</h3><blockquote><p>使用方法</p></blockquote><ul><li><p>能用小的不用大的：request&lt;session&lt;servletContext</p></li><li><p>常用的场景:</p><ul><li>request：一次查询的结果（servlet转发jsp）</li><li>session：存放当前会话的私有数据<ul><li>用户登录状态</li><li>验证码</li><li>购物车（后面会用redis…）</li></ul></li></ul></li><li><p>servletContext:若需要所有的servlet都能访问到,才使用这个域对象.</p></li></ul><h2 id="六、Session案例"><a href="#六、Session案例" class="headerlink" title="六、Session案例"></a>六、Session案例</h2><h3 id="6-1-用户登录-验证码"><a href="#6-1-用户登录-验证码" class="headerlink" title="6.1 用户登录(验证码)"></a>6.1 用户登录(验证码)</h3><p><strong>需求：</strong></p><ul><li>用户访问带有验证码的登录页面，输入用户名，密码以及验证码实现登录功能。</li></ul><h4 id="需求分析"><a href="#需求分析" class="headerlink" title="需求分析"></a>需求分析</h4><p><img data-src="/img/session%E6%A1%88%E4%BE%8B%E2%80%94%E2%80%94%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95(%E9%AA%8C%E8%AF%81%E7%A0%81).png" alt="session案例——用户登录"></p><h4 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h4><p><strong>① CheckCodeServlet(绘制验证码，存入Session)</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/CheckCodeServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CheckCodeServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"><span class="comment">//  创建画布</span></span><br><span class="line"><span class="keyword">int</span> width = <span class="number">120</span>;</span><br><span class="line"><span class="keyword">int</span> height = <span class="number">40</span>;</span><br><span class="line">BufferedImage bufferedImage = <span class="keyword">new</span> BufferedImage(width, height, BufferedImage.TYPE_INT_RGB);</span><br><span class="line"><span class="comment">//  获得画笔</span></span><br><span class="line">Graphics g = bufferedImage.getGraphics();</span><br><span class="line"><span class="comment">//  填充背景颜色</span></span><br><span class="line">g.setColor(Color.white);</span><br><span class="line">g.fillRect(<span class="number">0</span>, <span class="number">0</span>, width, height);</span><br><span class="line"><span class="comment">//  绘制边框</span></span><br><span class="line">g.setColor(Color.red);</span><br><span class="line">g.drawRect(<span class="number">0</span>, <span class="number">0</span>, width - <span class="number">1</span>, height - <span class="number">1</span>);</span><br><span class="line"><span class="comment">//  生成随机字符</span></span><br><span class="line"><span class="comment">//  准备数据</span></span><br><span class="line">String data = <span class="string">"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890"</span>;</span><br><span class="line"><span class="comment">//  准备随机对象</span></span><br><span class="line">Random r = <span class="keyword">new</span> Random();</span><br><span class="line"><span class="comment">//  声明一个变量 保存验证码</span></span><br><span class="line">String code = <span class="string">""</span>;</span><br><span class="line"><span class="comment">//  书写4个随机字符</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++) &#123;</span><br><span class="line"><span class="comment">//  设置字体</span></span><br><span class="line">g.setFont(<span class="keyword">new</span> Font(<span class="string">"宋体"</span>, Font.BOLD, <span class="number">28</span>));</span><br><span class="line"><span class="comment">//  设置随机颜色</span></span><br><span class="line">g.setColor(<span class="keyword">new</span> Color(r.nextInt(<span class="number">255</span>), r.nextInt(<span class="number">255</span>), r.nextInt(<span class="number">255</span>)));</span><br><span class="line"></span><br><span class="line">String str = data.charAt(r.nextInt(data.length())) + <span class="string">""</span>;</span><br><span class="line">g.drawString(str, <span class="number">10</span> + i * <span class="number">28</span>, <span class="number">30</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//  将新的字符 保存到验证码中</span></span><br><span class="line">code = code + str;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//  绘制干扰线</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">6</span>; i++) &#123;</span><br><span class="line"><span class="comment">//  设置随机颜色</span></span><br><span class="line">g.setColor(<span class="keyword">new</span> Color(r.nextInt(<span class="number">255</span>), r.nextInt(<span class="number">255</span>), r.nextInt(<span class="number">255</span>)));</span><br><span class="line"></span><br><span class="line">g.drawLine(r.nextInt(width), r.nextInt(height), r.nextInt(width), r.nextInt(height));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//  将验证码 打印到控制台</span></span><br><span class="line">System.out.println(code);</span><br><span class="line"></span><br><span class="line"><span class="comment">//  将验证码放到session中</span></span><br><span class="line">request.getSession().setAttribute(<span class="string">"code_session"</span>, code);</span><br><span class="line"></span><br><span class="line"><span class="comment">//  将画布显示在浏览器中</span></span><br><span class="line">ImageIO.write(bufferedImage, <span class="string">"jpg"</span>, response.getOutputStream());</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">doGet(request, response);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>② index.jsp(登录页)</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">    &lt;head&gt;</span><br><span class="line">        &lt;title&gt;用户登录&lt;/title&gt;</span><br><span class="line">    &lt;/head&gt;</span><br><span class="line">    &lt;body&gt;</span><br><span class="line">        &lt;h1&gt;用户登录&lt;/h1&gt;</span><br><span class="line">        &lt;form action=<span class="string">"/case/LoginServlet"</span> method=<span class="string">"post"</span>&gt;</span><br><span class="line">            &lt;label for="username"&gt;用户名&lt;/label&gt;&lt;input type="text" id="username" name="username"&gt;&lt;br&gt;</span><br><span class="line">            &lt;label for="password"&gt;密&amp;emsp;码&lt;/label&gt;&lt;input type="password" id="password" name="password"&gt;&lt;br&gt;</span><br><span class="line">            &lt;label for="checkCode"&gt;验证码&lt;/label&gt;&lt;input type="text" id="checkCode" name="checkCode"&gt;</span><br><span class="line">            &lt;img src=<span class="string">"/case/CheckCodeServlet"</span> id=<span class="string">"toggleCheckCode"</span> alt=<span class="string">""</span>&gt;&lt;br&gt;</span><br><span class="line">            &lt;span style=<span class="string">"color: red"</span>&gt;</span><br><span class="line">                &lt;%</span><br><span class="line">                    <span class="comment">//获取错误信息</span></span><br><span class="line">                    String error = (String) request.getAttribute(<span class="string">"error"</span>);</span><br><span class="line">                    <span class="comment">//判断非空</span></span><br><span class="line">                    <span class="keyword">if</span> (error!=<span class="keyword">null</span>) &#123;</span><br><span class="line">                        <span class="comment">//输出到页面</span></span><br><span class="line">                        out.write(error);</span><br><span class="line">                    &#125;</span><br><span class="line">                %&gt;</span><br><span class="line">            &lt;/span&gt;</span><br><span class="line">            &lt;br&gt;</span><br><span class="line">            &lt;input type=<span class="string">"submit"</span> value=<span class="string">"登录"</span>&gt;</span><br><span class="line">        &lt;/form&gt;</span><br><span class="line">    &lt;/body&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        document.getElementById(<span class="string">"toggleCheckCode"</span>).onclick = function () &#123;</span><br><span class="line">            <span class="keyword">this</span>.src = <span class="string">"/case/CheckCodeServlet?"</span> + <span class="keyword">new</span> Date().getTime();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p><strong>③ LoginServlet</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 登录逻辑处理</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/LoginServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//设置编码</span></span><br><span class="line">        request.setCharacterEncoding(<span class="string">"utf-8"</span>);</span><br><span class="line">        <span class="comment">// 获取验证码参数</span></span><br><span class="line">        String checkCode = request.getParameter(<span class="string">"checkCode"</span>);</span><br><span class="line">        <span class="comment">//获取Session中存储的验证码</span></span><br><span class="line">        String code_session = (String) request.getSession().getAttribute(<span class="string">"code_session"</span>);</span><br><span class="line">        <span class="comment">//验证验证码是否正确</span></span><br><span class="line">        <span class="keyword">if</span> (!checkCode.equalsIgnoreCase(code_session))&#123;</span><br><span class="line">            <span class="comment">//友情提示信息，验证码错误,存储到request域对象中</span></span><br><span class="line">            request.setAttribute(<span class="string">"error"</span>,<span class="string">"验证码错误"</span>);</span><br><span class="line">            <span class="comment">//转发到index页面</span></span><br><span class="line">            request.getRequestDispatcher(<span class="string">"/index.jsp"</span>).forward(request, response);</span><br><span class="line">            <span class="comment">//结束程序</span></span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//验证码正确，获取用户名，密码</span></span><br><span class="line">        String username = request.getParameter(<span class="string">"username"</span>);</span><br><span class="line">        String password = request.getParameter(<span class="string">"password"</span>);</span><br><span class="line">        <span class="comment">//判断验证码密码不正确</span></span><br><span class="line">        <span class="keyword">if</span> (! (<span class="string">"jack"</span>.equals(username) &amp;&amp; <span class="string">"123"</span>.equals(password)))&#123;</span><br><span class="line">            <span class="comment">//友情提示信息，验证码错误,存储到request域对象中</span></span><br><span class="line">            request.setAttribute(<span class="string">"error"</span>,<span class="string">"用户名或密码错误！"</span>);</span><br><span class="line">            <span class="comment">//转发到index页面</span></span><br><span class="line">            request.getRequestDispatcher(<span class="string">"/index.jsp"</span>).forward(request, response);</span><br><span class="line">            <span class="comment">//结束程序</span></span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//全部正确</span></span><br><span class="line">        <span class="comment">//用户名存入Session</span></span><br><span class="line">        request.getSession().setAttribute(<span class="string">"username"</span>,username);</span><br><span class="line">        <span class="comment">//跳转页面</span></span><br><span class="line">        response.sendRedirect(request.getContextPath() + <span class="string">"/goods.jsp"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>④ goods.jsp（商品页）</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;goods&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h3&gt;商品列表，</span><br><span class="line">    &lt;%</span><br><span class="line">        String user = (String) session.getAttribute(<span class="string">"user"</span>);</span><br><span class="line">        <span class="keyword">if</span> (user != <span class="keyword">null</span>) &#123;</span><br><span class="line">            out.write(<span class="string">"登录人:"</span> + user);</span><br><span class="line">        &#125;</span><br><span class="line">    %&gt;</span><br><span class="line">&lt;/h3&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h3 id="6-2-商品购物车"><a href="#6-2-商品购物车" class="headerlink" title="6.2 商品购物车"></a>6.2 商品购物车</h3><p><strong>需求：</strong></p><ul><li>有一个商品页面，可以点击超链接将商品添加到购物车,还有一个超链接,点击它的时候可以查看购物车中商品信息</li></ul><h4 id="需求分析-1"><a href="#需求分析-1" class="headerlink" title="需求分析"></a>需求分析</h4><p><img data-src="/img/session%E6%A1%88%E4%BE%8B%E2%80%94%E2%80%94%E5%95%86%E5%93%81%E8%B4%AD%E7%89%A9%E8%BD%A6.png" alt="session案例——商品购物车"></p><h4 id="代码实现-1"><a href="#代码实现-1" class="headerlink" title="代码实现"></a>代码实现</h4><p><strong>① goods.jsp</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line"></span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;商品页&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;h1&gt;商品列表&lt;/h1&gt;</span><br><span class="line">    &lt;%</span><br><span class="line">        String user = (String) session.getAttribute(<span class="string">"user"</span>);</span><br><span class="line">        <span class="keyword">if</span> (user != <span class="keyword">null</span>) &#123;</span><br><span class="line">            out.write(<span class="string">"登录人:"</span> + user);</span><br><span class="line">        &#125;</span><br><span class="line">    %&gt;</span><br><span class="line">    &lt;h3&gt;&lt;a href="/day08_case/cart.jsp"&gt;查看购物车&lt;/a&gt;&lt;/h3&gt;</span><br><span class="line">    &lt;ul&gt;</span><br><span class="line">        &lt;li&gt;小米10 &lt;a href="/case/AddCartList?goods=Mi10"&gt;添加购物车&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;华为P40 &lt;a href="/case/AddCartList?goods=Hw1P40"&gt;添加购物车&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;一加9 &lt;a href="/case/AddCartList?goods=OnePlus9"&gt;添加购物车&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">        &lt;li&gt; vivoX20 &lt;a href="/case/AddCartList?goods=vivoX20"&gt;添加购物车&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p><strong>② AddCartServlet</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 购物车逻辑</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/AddCartList"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AddCartList</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">// 处理中文乱码</span></span><br><span class="line">        request.setCharacterEncoding(<span class="string">"utf-8"</span>);</span><br><span class="line">        response.setContentType(<span class="string">"text/html;charset=utf-8"</span>);</span><br><span class="line">        <span class="comment">//参数</span></span><br><span class="line">        String goods = request.getParameter(<span class="string">"goods"</span>);</span><br><span class="line">        <span class="comment">//响应添加成功</span></span><br><span class="line">        response.getWriter().write(goods + <span class="string">"商品，成功加入购物车..."</span>);</span><br><span class="line">        <span class="comment">//从session中获取购物车</span></span><br><span class="line">        Map&lt;String, Integer&gt; cartMap = (Map&lt;String, Integer&gt;) request.getSession().getAttribute(<span class="string">"cart"</span>);</span><br><span class="line">        <span class="comment">//判断购物车是否存在</span></span><br><span class="line">        <span class="keyword">if</span> (cartMap == <span class="keyword">null</span>)&#123;</span><br><span class="line">            cartMap = <span class="keyword">new</span> LinkedHashMap&lt;&gt;();</span><br><span class="line">            <span class="comment">//为空设置到session</span></span><br><span class="line">            request.getSession().setAttribute(<span class="string">"cart"</span>,cartMap);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//不为空，判断商品是否存在</span></span><br><span class="line">        <span class="keyword">if</span> (cartMap.containsKey(goods))&#123;</span><br><span class="line">            <span class="comment">//商品数量+1</span></span><br><span class="line">            cartMap.put(goods,cartMap.get(goods) + <span class="number">1</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">//商品不存在</span></span><br><span class="line">            cartMap.put(goods,<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 6.提供查看购物车a标签</span></span><br><span class="line">        response.getWriter().write(<span class="string">"&lt;a href='/day08_case/cart.jsp'&gt;查看购物车&lt;/a&gt;"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>③ cart.jsp</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">"java.util.Map"</span> %&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line"></span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;%</span><br><span class="line">        Map&lt;String,Integer&gt; cart = (Map&lt;String, Integer&gt;) request.getSession().getAttribute(<span class="string">"cart"</span>);</span><br><span class="line">        <span class="comment">//判断购物车是否为空</span></span><br><span class="line">        <span class="keyword">if</span> (cart == <span class="keyword">null</span>)&#123;</span><br><span class="line">            out.write(<span class="string">"您还未选购商品，请去商品页选购吧&lt;a href='goods.jsp'&gt;打开商品页&lt;/a&gt;"</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 不为空,遍历map集合，输出商品</span></span><br><span class="line">            <span class="keyword">for</span> (String key : cart.keySet()) &#123;</span><br><span class="line">                out.write(<span class="string">"&lt;div&gt;商品："</span> + key + <span class="string">",数量："</span> + cart.get(key) + <span class="string">"&lt;/div&gt;"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    %&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、会话概述&quot;&gt;&lt;a href=&quot;#一、会话概述&quot; class=&quot;headerlink&quot; title=&quot;一、会话概述&quot;&gt;&lt;/a&gt;一、会话概述&lt;/h2&gt;&lt;h3 id=&quot;1-1-什么是会话&quot;&gt;&lt;a href=&quot;#1-1-什么是会话&quot; class=&quot;headerlink&quot; title=&quot;1.1 什么是会话&quot;&gt;&lt;/a&gt;1.1 什么是会话&lt;/h3&gt;&lt;p&gt;&lt;img data-src=&quot;/img/%E4%BB%80%E4%B9%88%E6%98%AF%E4%BC%9A%E8%AF%9D.png&quot; alt=&quot;什么是会话&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="JavaWeb" scheme="http://sunmoon.com/categories/JavaWeb/"/>
    
    
      <category term="cookie" scheme="http://sunmoon.com/tags/cookie/"/>
    
      <category term="session" scheme="http://sunmoon.com/tags/session/"/>
    
      <category term="web域对象" scheme="http://sunmoon.com/tags/web%E5%9F%9F%E5%AF%B9%E8%B1%A1/"/>
    
      <category term="会话技术" scheme="http://sunmoon.com/tags/%E4%BC%9A%E8%AF%9D%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>Request&amp;Response</title>
    <link href="http://sunmoon.com/2020/08/23/request-response/"/>
    <id>http://sunmoon.com/2020/08/23/request-response/</id>
    <published>2020-08-23T14:00:33.000Z</published>
    <updated>2020-08-23T14:04:28.426Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Request-amp-Response"><a href="#Request-amp-Response" class="headerlink" title="Request&amp;Response"></a>Request&amp;Response</h1><p>Request请求对象：获取</p><ul><li>HTTP请求消息格式(行、头、体)</li></ul><p>Response响应对象：设置</p><ul><li>HTTP响应消息格式(行、头、体)</li></ul><a id="more"></a><h2 id="一、Request概述"><a href="#一、Request概述" class="headerlink" title="一、Request概述"></a>一、Request概述</h2><ul><li>用户通过浏览器访问服务器时，Tomcat将HTTP请求中所有的信息都封装在Request对象中</li><li>作用：开发人员可以通过request对象方法，来获取浏览器发送的所有信息。</li></ul><p><img data-src="/img/request.png" alt="request"></p><p><strong>Request体系结构</strong></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ServletRequest</span><br><span class="line"><span class="code">|</span></span><br><span class="line">HttpServletRequest</span><br><span class="line"><span class="code">|</span></span><br><span class="line">org.apache.catalina.connector.RequestFacade（由tomcat厂商提供）</span><br></pre></td></tr></table></figure><h2 id="二、Request获取HTTP请求信息"><a href="#二、Request获取HTTP请求信息" class="headerlink" title="二、Request获取HTTP请求信息"></a>二、Request获取HTTP请求信息</h2><h3 id="2-1-获取请求行"><a href="#2-1-获取请求行" class="headerlink" title="2.1 获取请求行"></a>2.1 获取请求行</h3><p>例如(请求行数据)：<code>GET /request/RequestLine HTTP/1.1</code></p><p><strong>相关API：</strong></p><ul><li>获取请求方法：GET<ul><li><code>String getMethod()</code></li></ul></li><li>获取请求项目的网络地址(虚拟路径)：/request<ul><li><code>String getContextPath()</code></li></ul></li><li>获取请求的URI（统一资源标识符）：/request/RequestLine<ul><li><code>String getRequestURI()</code></li></ul></li><li>获取请求的URL（统一资源定位符）：<a href="http://localhost:8080/request/RequestLine" target="_blank" rel="noopener">http://localhost:8080/request/RequestLine</a><ul><li><code>StringBuffer getRequestURL()</code></li></ul></li><li>获取请求协议和版本：HTTP/1.1<ul><li><code>String getProtocol()</code></li></ul></li></ul><p><strong>扩展(不属于请求行)：</strong></p><ul><li>获取客户端访问ip：<code>String getRemoteAddr()</code><ul><li>注意：<ul><li>如果localhost访问，显示IPV6</li><li>如果127.0.0.1访问，显示IPV4</li></ul></li></ul></li></ul><p>代码演示：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/RequestLine"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RequestLine</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"获取请求方式："</span> + request.getMethod());</span><br><span class="line">        System.out.println(<span class="string">"获取虚拟路径："</span> + request.getContextPath());</span><br><span class="line">        System.out.println(<span class="string">"获取请求的URI："</span> + request.getRequestURI());</span><br><span class="line">        System.out.println(<span class="string">"获取请求的URL："</span> + request.getRequestURL());</span><br><span class="line">        System.out.println(<span class="string">"获取请求的协议和版本："</span> + request.getProtocol());</span><br><span class="line">        System.out.println(<span class="string">"获取客户端IP："</span> + request.getRemoteAddr());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-2-获取请求头信息"><a href="#2-2-获取请求头信息" class="headerlink" title="2.2 获取请求头信息"></a>2.2 获取请求头信息</h3><p>例如：<code>host: localhost:8080</code></p><p><strong>相关API：</strong></p><ul><li>根据请求头的名称获取对应的值【不区分大小写】：<ul><li><code>String getHeader(String name)</code></li></ul></li><li>获取所有请求头的名称：<ul><li><code>Enumeration&lt;String&gt; getHeaderNames()</code><ul><li>Enumeration是Iterator的前身，用于属于的遍历</li></ul></li></ul></li></ul><p>代码演示：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/RequestHeader"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RequestHeader</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">// getHeader(String name):获取请求头名称对应的值</span></span><br><span class="line">        System.out.println(<span class="string">"host:"</span> + request.getHeader(<span class="string">"host"</span>));</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"===================================="</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//Enumeration&lt;String&gt; getHeaderNames():获取所有请求头名称</span></span><br><span class="line">        Enumeration&lt;String&gt; requestHeaderNames = request.getHeaderNames();</span><br><span class="line">        <span class="comment">// 迭代遍历数据</span></span><br><span class="line">        <span class="keyword">while</span> (requestHeaderNames.hasMoreElements())&#123; <span class="comment">// 判断还有没有数据</span></span><br><span class="line">            <span class="comment">// 获取数据</span></span><br><span class="line">            String headerName = requestHeaderNames.nextElement();</span><br><span class="line">            <span class="comment">// 打印输出</span></span><br><span class="line">            System.out.println(headerName + <span class="string">":"</span> + request.getHeader(headerName));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-3-Request案例"><a href="#2-3-Request案例" class="headerlink" title="2.3 Request案例"></a>2.3 Request案例</h3><h4 id="2-3-1-视频防盗链"><a href="#2-3-1-视频防盗链" class="headerlink" title="2.3.1 视频防盗链"></a>2.3.1 视频防盗链</h4><p><strong>原理：</strong></p><ul><li><strong>获取请求头信息中的referer头，判断是否是官方域名跳转过来的，不是则不许播放视频，是则可以播放。</strong></li></ul><blockquote><p>注意：如果是浏览器地址栏直接访问，没有referer这个头</p></blockquote><p><strong>代码实现：</strong></p><p><strong>QQLiveServlet</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 防盗链案例</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/QQLiveServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">QQLiveServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//设置文本格式及字符集</span></span><br><span class="line">        response.setContentType(<span class="string">"text/html;charset=utf-8"</span>);</span><br><span class="line">        <span class="comment">//获取referer头信息</span></span><br><span class="line">        String referer = request.getHeader(<span class="string">"referer"</span>);</span><br><span class="line">        <span class="comment">//判断是否以指定域名开头</span></span><br><span class="line">        <span class="keyword">if</span> (referer.startsWith(<span class="string">"http://localhost:8080/request_response/"</span>))&#123;</span><br><span class="line">            <span class="comment">// 是，正常播放</span></span><br><span class="line">            response.getWriter().write(<span class="string">"&lt;h1&gt;播放中....&lt;/h1&gt;"</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">//否 友情提示</span></span><br><span class="line">            String url = request.getRequestURL().toString();</span><br><span class="line">            response.getWriter().write(<span class="string">"&lt;h1&gt;请来官网观看视频，点击跳转:&lt;a href=\""</span>+url+<span class="string">"\"&gt;打开链接&lt;/a&gt;&lt;/h1&gt;"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>内部页面</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/request_response/QQLiveServlet"</span>&gt;</span>打开视频<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>外部网站页面</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://localhost:8080/request_response/QQLiveServlet"</span>&gt;</span>打开视频<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-3-2-浏览器兼容性案例"><a href="#2-3-2-浏览器兼容性案例" class="headerlink" title="2.3.2 浏览器兼容性案例"></a>2.3.2 浏览器兼容性案例</h3><p>原理：通过获取请求头中的<strong>user-agent</strong>，里面包含了浏览器的版本信息，判断是什么浏览器，进行不同的处理方式。</p><p><img data-src="/img/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%85%BC%E5%AE%B9%E6%80%A7%E6%A1%88%E4%BE%8B.png" alt="浏览器兼容性案例"></p><blockquote><p>user-agent：保存了浏览器版本信息</p></blockquote><p><strong>代码实现</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 浏览器兼容案例</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/BrowserServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BrowserServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//设置编码</span></span><br><span class="line">        response.setContentType(<span class="string">"text/html;charset=utf-8"</span>);</span><br><span class="line">        <span class="comment">//获取浏览器请求头信息user-agent，客户端版本信息</span></span><br><span class="line">        String agent = request.getHeader(<span class="string">"user-agent"</span>);</span><br><span class="line">        <span class="keyword">if</span> (agent.contains(<span class="string">"Chrome"</span>))&#123;</span><br><span class="line">            <span class="comment">//谷歌浏览器</span></span><br><span class="line">            response.getWriter().write(<span class="string">"&lt;h1&gt;这是谷歌浏览器...&lt;/h1&gt;"</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (agent.contains(<span class="string">"Firefox"</span>))&#123;</span><br><span class="line">            response.getWriter().write(<span class="string">"&lt;h1&gt;这是火狐浏览器...&lt;/h1&gt;"</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            response.getWriter().write(<span class="string">"&lt;h1&gt;其他浏览器...&lt;/h1&gt;"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-4-Request获取请求参数"><a href="#2-4-Request获取请求参数" class="headerlink" title="2.4 Request获取请求参数"></a>2.4 Request获取请求参数</h3><ul><li><p><strong>不论get还是post请求方式，都可以使用下列方法来获取请求参数</strong></p></li><li><p><strong>浏览器中参数格式</strong>：username=jack&amp;age=18&amp;hobby=drink&amp;hobby=perm</p></li></ul><p><strong>获取参数相关API：</strong></p><ul><li>根据参数名获取单个值：<code>String getParameter(String name)</code></li><li>根据参数名获取多个值【用在复选框】：<code>String[] getParameterValues(String name)</code></li><li>获取所有参数名和参数值数组：<code>Map&lt;String,String[]&gt; getParameterMap()</code></li></ul><blockquote><p>中文乱码问题：</p><ul><li>get方式：在tomcat8版本之后，已经处理了乱码问题<ul><li>浏览器提交UTF-8编码，服务器接收UTF-8解码</li></ul></li><li>post方式：出现了中文乱码(可以通过设置指定post提交的解码方式)<ul><li>浏览器提交UTF-8编码，服务器接收ISO-8859-1解码</li><li><code>request.setCharacterEncoding(&quot;编码表名称&quot;);</code></li></ul></li></ul></blockquote><p><strong>代码演示：</strong></p><p>表单提交页面</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>form<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>get请求<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"/request_response/RequestParam"</span> <span class="attr">method</span>=<span class="string">"get"</span>&gt;</span></span><br><span class="line">    用户：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"username"</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    年龄：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"age"</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    爱好：</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"hobby"</span> <span class="attr">value</span>=<span class="string">"smoking"</span>&gt;</span> 抽烟</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"hobby"</span> <span class="attr">value</span>=<span class="string">"drink"</span>&gt;</span> 喝酒</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"hobby"</span> <span class="attr">value</span>=<span class="string">"perm"</span>&gt;</span> 烫头 <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"get提交"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>post请求<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"/request_response/RequestParam"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">    用户：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"username"</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    年龄：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"age"</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    爱好：</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"hobby"</span> <span class="attr">value</span>=<span class="string">"smoking"</span>&gt;</span> 抽烟</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"hobby"</span> <span class="attr">value</span>=<span class="string">"drink"</span>&gt;</span> 喝酒</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"hobby"</span> <span class="attr">value</span>=<span class="string">"perm"</span>&gt;</span> 烫头 <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"post提交"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>java接收参数</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/RequestParam"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RequestParam</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"get请求"</span>);</span><br><span class="line">        <span class="comment">//根据参数名获取单个值    String getParameter(String name)</span></span><br><span class="line">        System.out.println(<span class="string">"username="</span> + request.getParameter(<span class="string">"username"</span>));</span><br><span class="line">        System.out.println(<span class="string">"=========================================================="</span>);</span><br><span class="line">        <span class="comment">//根据参数名获取多个值【用在复选框】 String[] getParameterValues(String name)</span></span><br><span class="line">        String[] hobbies = request.getParameterValues(<span class="string">"hobby"</span>);</span><br><span class="line">        System.out.println(<span class="string">"hobby="</span> + Arrays.toString(hobbies));</span><br><span class="line">        System.out.println(<span class="string">"=========================================================="</span>);</span><br><span class="line">        <span class="comment">//获取所有参数名和参数值数组 Map&lt;String,String[]&gt; getParameterMap()</span></span><br><span class="line">        Map&lt;String, String[]&gt; parameterMap = request.getParameterMap();</span><br><span class="line">        parameterMap.forEach((k,v) -&gt; System.out.println(k + <span class="string">"="</span> + Arrays.toString(v)));</span><br><span class="line">        System.out.println(<span class="string">"=========================================================="</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//解决post中文乱码</span></span><br><span class="line">        request.setCharacterEncoding(<span class="string">"utf-8"</span>);</span><br><span class="line">        System.out.println(<span class="string">"post请求"</span>);</span><br><span class="line">        <span class="keyword">this</span>.doGet(request,response);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-5-扩展：BeanUtils"><a href="#2-5-扩展：BeanUtils" class="headerlink" title="2.5 扩展：BeanUtils"></a>2.5 扩展：BeanUtils</h3><p>BeanUtils 是 Apache 提供的一套工具包，可以将一个表单提交的所有数据封装到JavaBean（User对象）中；主要用于简化封装数据的操作。</p><blockquote><p>可以获取表单数据，直接封装到一个Java实体类中，方便操作以及保存。</p></blockquote><p>使用演示：</p><p><strong>① 导包</strong></p><p><strong>② 准备实体类</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String[] hobby;</span><br><span class="line"></span><br><span class="line"><span class="comment">// get、set方法略...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>③ 前端页面</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>BeanUtils请求<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"/day07-request/BeanUtilsTest"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">    用户：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"username"</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    年龄：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"age"</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    爱好：</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"hobby"</span> <span class="attr">value</span>=<span class="string">"smoking"</span>&gt;</span> 抽烟</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"hobby"</span> <span class="attr">value</span>=<span class="string">"drink"</span>&gt;</span> 喝酒</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"hobby"</span> <span class="attr">value</span>=<span class="string">"perm"</span>&gt;</span> 烫头 <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"post提交"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>④ 前置条件</strong></p><ul><li><strong>实体类的变量名必须与表单的name属性的值一样，才能使用BeanUtils调用populate方法进行封装</strong></li></ul><p><strong>⑤ 代码实现</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    将前端表单提交的参数，封装到 User实体中</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/BeanUtilsTest"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BeanUtilsTest</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        request.setCharacterEncoding(<span class="string">"utf-8"</span>);</span><br><span class="line">        <span class="comment">// 1.获取所有表单的参数和值</span></span><br><span class="line">        Map&lt;String, String[]&gt; parameterMap = request.getParameterMap();</span><br><span class="line">        <span class="comment">// 2.准备user实体</span></span><br><span class="line">        User user = <span class="keyword">new</span> User();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 3.调用apache工具类，实现快速封装</span></span><br><span class="line">            BeanUtils.populate(user, parameterMap);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(user);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="三、Request的其他功能"><a href="#三、Request的其他功能" class="headerlink" title="三、Request的其他功能"></a>三、Request的其他功能</h2><h3 id="3-1-请求转发"><a href="#3-1-请求转发" class="headerlink" title="3.1 请求转发"></a>3.1 请求转发</h3><p><strong>请求转发</strong>：是服务器内部的一种资源跳转方式，浏览器中的URL没有发生改变，并且这个过程浏览器是不可见的。在转发的过程中，浏览器值发送了一次请求，产生一对request和response对象，在转发的过程中req和resp对象将伴随着转发到目标servlet中。完成浏览器的请求。在完成本次请求时，req和resp对象销毁。</p><p><strong>完成请求转发的相关API：</strong></p><ul><li>方式一：<ul><li>通过request对象，获取转发器对象：RequestDispatcher getRequestDispatcher(String path)</li><li>通过RequestDispatcher对象，实现请求转发功能：void forward(ServletRequest request, ServletResponse response) </li></ul></li><li>方式二：链式编程<ul><li><code>request.getRequestDispatcher(&quot;/BServlet&quot;).forward(request, response);</code></li></ul></li></ul><h3 id="3-2-Request域对象-共享数据"><a href="#3-2-Request域对象-共享数据" class="headerlink" title="3.2 Request域对象(共享数据)"></a>3.2 Request域对象(共享数据)</h3><ul><li>域对象：一个有作用范围的对象，可以在范围内共享数据</li><li>reqest域：代表一次请求的范围，一般用于一次请求中转发的多个资源中共享数据</li></ul><p><strong>相关API：</strong></p><ul><li>存数据：<code>void setAttribute(String name,Object o);</code></li><li>取数据：<code>Object getAttribute(String name);</code></li><li>删数据：<code>void removeAttribute(String name);</code></li></ul><p><strong>request域的生命周期：</strong></p><ul><li>创建：用户发送请求时</li><li>销毁：服务器做出响应后</li><li>作用范围：一次请求，多次转发之间</li></ul><h3 id="3-3-Request案例——用户登录"><a href="#3-3-Request案例——用户登录" class="headerlink" title="3.3 Request案例——用户登录"></a>3.3 Request案例——用户登录</h3><p>需求：</p><ul><li><p>实现用户的登录功能</p></li><li><p>登录成功跳转到SuccessServlet展示：登录成功！xxx,欢迎您</p></li><li><p>登录失败跳转到FailServlet展示：登录失败，用户名或密码错误</p></li></ul><p>前端页面：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>login<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"margin: 0 auto;width: 300px;height: 150px;border: 1px solid red;padding: 50px"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>用户登录<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"/request_response/LoginServlet"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">            用户名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"username"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">            密<span class="symbol">&amp;emsp;</span>码：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"password"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"登录"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>LoginServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sun.request.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.sun.request.test.domain.User;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.beanutils.BeanUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.InvocationTargetException;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/LoginServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//定义User对象</span></span><br><span class="line">        User user = <span class="keyword">new</span> User();</span><br><span class="line">        <span class="comment">//获取请求参数的Map集合</span></span><br><span class="line">        Map&lt;String, String[]&gt; userMap = request.getParameterMap();</span><br><span class="line">        <span class="comment">//封装数据</span></span><br><span class="line">        <span class="comment">/*userMap.forEach((k,v)-&gt;&#123;</span></span><br><span class="line"><span class="comment">            if ("username".equals(k))&#123;</span></span><br><span class="line"><span class="comment">                user.setUsername(v[0]);</span></span><br><span class="line"><span class="comment">            &#125; else if ("password".equals(k)) &#123;</span></span><br><span class="line"><span class="comment">                user.setPassword(v[0]);</span></span><br><span class="line"><span class="comment">            &#125;</span></span><br><span class="line"><span class="comment">        &#125;);*/</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            BeanUtils.populate(user,userMap);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IllegalAccessException | InvocationTargetException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 测试是否是否获取到了数据</span></span><br><span class="line">        System.out.println(user.getUsername());</span><br><span class="line">        System.out.println(user.getPassword());</span><br><span class="line"></span><br><span class="line">        <span class="comment">//判断用户名密码是否正确，进行不同页面的转发</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="string">"jack"</span>.equals(user.getUsername()) &amp;&amp; <span class="string">"123"</span>.equals(user.getPassword()))&#123;</span><br><span class="line">            <span class="comment">//正确</span></span><br><span class="line">            <span class="comment">//向request域对象中存入用户名</span></span><br><span class="line">            request.setAttribute(<span class="string">"username"</span>,user.getUsername());</span><br><span class="line">            <span class="comment">//获取转发器，参数传递转发的Servlet，调用forward方法转发，参数传递req和resp对象</span></span><br><span class="line">            request.getRequestDispatcher(<span class="string">"/LoginSuccess"</span>).forward(request,response);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">//错误</span></span><br><span class="line">            <span class="comment">//获取转发器，参数传递转发的Servlet，调用forward方法转发，参数传递req和resp对象</span></span><br><span class="line">            request.getRequestDispatcher(<span class="string">"/LoginFail"</span>).forward(request,response);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>LoginSuccess</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sun.request.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 登录成功</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/LoginSuccess"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginSuccess</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//设置文本类型及字符集</span></span><br><span class="line">        response.setContentType(<span class="string">"text/html;charset=utf-8"</span>);</span><br><span class="line">        <span class="comment">//用户名和密码正确登录成功</span></span><br><span class="line">        <span class="comment">//获取到request域对象中存储的用户姓名，并向页面进行展示</span></span><br><span class="line">        String username = (String) request.getAttribute(<span class="string">"username"</span>);</span><br><span class="line">        response.getWriter().write(<span class="string">"&lt;h1&gt;登录成功，欢迎您："</span> + username + <span class="string">"&lt;/h1&gt;"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>LoginFail</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/LoginFail"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginFail</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        response.setContentType(<span class="string">"text/html;charset=utf-8"</span>);</span><br><span class="line">        <span class="comment">//登录失败，提示用户名或密码错误</span></span><br><span class="line">        response.getWriter().write(<span class="string">"&lt;h1&gt;登录失败，用户名或密码错误&lt;/h1&gt;"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="四、Response概述"><a href="#四、Response概述" class="headerlink" title="四、Response概述"></a>四、Response概述</h2><ul><li>response对象表示web服务器给浏览器返回的响应信息</li><li>作用：开发人员可以使用response对象的方法，设置要返回给浏览器的响应信息</li></ul><p><img data-src="/img/response.png" alt="response"></p><p><strong>Response体系结构</strong></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ServletResponse 接口</span><br><span class="line"><span class="code">|</span></span><br><span class="line">HttpServletResponse 接口</span><br><span class="line"><span class="code">|</span></span><br><span class="line">org.apache.catalina.connector.ResponseFacade 实现类（由tomcat提供的）</span><br></pre></td></tr></table></figure><h2 id="五、Response设置Http响应消息"><a href="#五、Response设置Http响应消息" class="headerlink" title="五、Response设置Http响应消息"></a>五、Response设置Http响应消息</h2><h3 id="5-1-Response相关API"><a href="#5-1-Response相关API" class="headerlink" title="5.1 Response相关API"></a>5.1 Response相关API</h3><p>① 响应行：</p><ul><li>设置响应状态码：<code>void setStatus(int sc)</code></li></ul><p>② 响应头：</p><ul><li>设置响应名称和对应的值：<code>void setHeader(String name, String value)</code></li></ul><p>③ 响应体：</p><ul><li>设置字符输出流<ul><li><code>PrintWriter getWriter()</code><ul><li>print()：将其他类型转为字符，再进行输出</li><li>write()：只能输出字符</li></ul></li></ul></li><li>设置字节输出流<ul><li><code>ServletOutputStream getOutputStream()</code></li></ul></li></ul><blockquote><p>注意：在同一个servlet内，只能同时使用一种流对象，这两个流是互斥的….</p></blockquote><h3 id="5-2-响应重定向"><a href="#5-2-响应重定向" class="headerlink" title="5.2 响应重定向"></a>5.2 响应重定向</h3><p><strong>需求：用户访问AServlet后，服务器告诉浏览器重定向到BServlet</strong></p><p>实现思路：</p><ul><li><p>方式一：</p><ul><li>设置响应状态码：<code>response.setStatus(302);</code></li><li>设置响应头Location跳转的地址：<code>response.setHeader(&quot;location&quot;,&quot;/项目网络地址/资源网络地址&quot;);</code></li></ul></li><li><p>方式二：专门提供了一个重定向的方法</p><ul><li><code>response.sendRedirect(&quot;/项目网络地址/资源网络地址&quot;);</code></li></ul></li></ul><p>代码实现：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/AServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">// 方式一：</span></span><br><span class="line">        <span class="comment">//设置状态码</span></span><br><span class="line">        <span class="comment">// response.setStatus(302);</span></span><br><span class="line">        <span class="comment">//设置转发路径</span></span><br><span class="line">        <span class="comment">// response.setHeader("location","/day07_request_response/BServlet");</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//方式二</span></span><br><span class="line">        response.sendRedirect(<span class="string">"/day07_request_response/BServlet"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/BServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        response.setContentType(<span class="string">"text/html;charset=utf-8"</span>);</span><br><span class="line">        response.getWriter().write(<span class="string">"处理了请求"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="重定向的特点"><a href="#重定向的特点" class="headerlink" title="重定向的特点"></a>重定向的特点</h5><ul><li>地址栏发生改变</li><li>浏览器发送二次请求</li><li>request和response创建二次（AServlet和BServlet不能共享这二个对象）</li><li>重定向是客户端行为，浏览器清楚发生的变化</li></ul><h3 id="5-3-转发与重定向的区别"><a href="#5-3-转发与重定向的区别" class="headerlink" title="5.3 转发与重定向的区别"></a>5.3 转发与重定向的区别</h3><p><strong>哪个对象?</strong></p><ul><li>转发（request对象的方法)<ul><li>request.getRequestDispatcher(“/BServlet”).forward(request,response);</li></ul></li><li>重定向（response对象的方法）        <ul><li>response.sendRedirect(“/day07-response/BServlet”);</li></ul></li></ul><p><strong>几次请求</strong></p><ul><li>转发<ul><li>地址栏： 没有改变</li><li>浏览器： 发了一次请求</li><li>服务器： 只有一对请求和响应对象</li><li>发生的位置： 服务器内部</li></ul></li><li>重定向<ul><li>地址栏： 发生了改变</li><li>浏览器： 发了两次请求</li><li>服务器： 有两对请求和响应对象</li><li>发生的位置： 浏览器外部</li></ul></li></ul><h3 id="5-4-Response响应中文"><a href="#5-4-Response响应中文" class="headerlink" title="5.4 Response响应中文"></a>5.4 Response响应中文</h3><p>向浏览器输出中文数据时不能乱码</p><p>解决：指定编码</p><ol><li>指定服务器响应编码<ul><li><code>void setCharacterEncoding(String charset)</code></li></ul></li><li>统一服务器和客户端编码和解码（掌握）<ul><li><code>void setHeader(&quot;Content-Type&quot;,&quot;text/html;charset=utf-8&quot;);</code></li><li><code>void setContentType(&quot;text/html;charset=utf-8&quot;);</code></li></ul></li></ol><p>代码实现：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/ResponseCode"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ResponseCode</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">       <span class="comment">/* // 指定服务器响应编码</span></span><br><span class="line"><span class="comment">        response.setCharacterEncoding("gbk");*/</span></span><br><span class="line"></span><br><span class="line">       <span class="comment">// 统一服务器和客户端编码和解码</span></span><br><span class="line">        response.setContentType(<span class="string">"text/html;charset=utf-8"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取response的字符输出流</span></span><br><span class="line">        PrintWriter writer = response.getWriter();</span><br><span class="line">        writer.write(<span class="string">"你好，你也蛮好的！"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-5-Response文件下载案例"><a href="#5-5-Response文件下载案例" class="headerlink" title="5.5 Response文件下载案例"></a>5.5 Response文件下载案例</h3><p>需求：用户点击链接，浏览器开始下载文件。</p><p>思路：</p><ul><li>需要使用两个响应头，两个字节流。</li></ul><p>大致步骤：</p><ul><li>被下载文件的字节输入流<ul><li>FileInputStream</li></ul></li><li>response字节输出流<ul><li>ServletOutputStream</li></ul></li><li>告知客户端下载文件的MIME类型<ul><li>Content-Type:MIME类型</li></ul></li><li>告知浏览器以附件的方式保存<ul><li>Content-Disposition:attachment;filename=文件名</li></ul></li></ul><blockquote><p>注意：在这个下载过程如果文件名时中午，可能出现乱码情况，所以需要对不同的浏览器做出不同的处理</p></blockquote><p>代码实现：</p><p>前端页面</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>文件下载<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h4</span>&gt;</span>下载<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/request_response/FileDownload?filename=test.zip"</span>&gt;</span>test.zip<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/request_response/FileDownload?filename=demo.docx"</span>&gt;</span>demo.docx<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/request_response/FileDownload?filename=car.jpg"</span>&gt;</span>car.jpg<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/request_response/FileDownload?filename=禽兽.jpg"</span>&gt;</span>禽兽.jpg<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Servlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sun.response.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.hutool.core.io.IoUtil;</span><br><span class="line"><span class="keyword">import</span> com.sun.utils.DownLoadUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletOutputStream;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 文件下载案例</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/FileDownload"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FileDownload</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">// 获取要下载的文件名</span></span><br><span class="line">        String filename = request.getParameter(<span class="string">"filename"</span>);</span><br><span class="line">        <span class="comment">// 获取要下载的文件真实路径</span></span><br><span class="line">        String filePath = getServletContext().getRealPath(<span class="string">"/download/"</span> + filename);</span><br><span class="line">        <span class="comment">// 获取文件字节输入流</span></span><br><span class="line">        FileInputStream in = <span class="keyword">new</span> FileInputStream(filePath);</span><br><span class="line">        <span class="comment">// 获取response字节输出流</span></span><br><span class="line">        ServletOutputStream out = response.getOutputStream();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 中文文件名会出现乱码问题，使用工具类对不同的浏览器对中文进行编码</span></span><br><span class="line">        <span class="comment">// 获取浏览器版本</span></span><br><span class="line">        filename = DownLoadUtils.getName(<span class="string">"user-agent"</span>, filename);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取文件的MIME类型告知浏览器</span></span><br><span class="line">        String mimeType = getServletContext().getMimeType(filename);</span><br><span class="line">        response.setContentType(mimeType);</span><br><span class="line">        <span class="comment">// 告知浏览器以附件形式下载文件</span></span><br><span class="line">        response.setHeader(<span class="string">"Content-Disposition"</span>,<span class="string">"attachment;filename="</span> + filename);</span><br><span class="line">        <span class="comment">// 一读一写复制文件</span></span><br><span class="line">        <span class="keyword">byte</span>[] bArr = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">8092</span>];</span><br><span class="line">        <span class="keyword">int</span> len;</span><br><span class="line">        <span class="keyword">while</span> ((len = in.read(bArr)) != -<span class="number">1</span>)&#123;</span><br><span class="line">            out.write(bArr,<span class="number">0</span>,len);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 关流，释放资源</span></span><br><span class="line">        out.close();</span><br><span class="line">        in.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>工具类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 编码解码</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DownLoadUtils</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getName</span><span class="params">(String agent, String filename)</span> <span class="keyword">throws</span> UnsupportedEncodingException </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (agent.contains(<span class="string">"Firefox"</span>)) &#123;</span><br><span class="line"><span class="comment">// 火狐浏览器</span></span><br><span class="line">BASE64Encoder base64Encoder = <span class="keyword">new</span> BASE64Encoder();</span><br><span class="line">filename = <span class="string">"=?utf-8?B?"</span> + base64Encoder.encode(filename.getBytes(<span class="string">"utf-8"</span>)) + <span class="string">"?="</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">// 其它浏览器</span></span><br><span class="line">filename = URLEncoder.encode(filename, <span class="string">"utf-8"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> filename;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Request-amp-Response&quot;&gt;&lt;a href=&quot;#Request-amp-Response&quot; class=&quot;headerlink&quot; title=&quot;Request&amp;amp;Response&quot;&gt;&lt;/a&gt;Request&amp;amp;Response&lt;/h1&gt;&lt;p&gt;Request请求对象：获取&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;HTTP请求消息格式(行、头、体)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Response响应对象：设置&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;HTTP响应消息格式(行、头、体)&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="JavaWeb" scheme="http://sunmoon.com/categories/JavaWeb/"/>
    
    
      <category term="学习" scheme="http://sunmoon.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="request" scheme="http://sunmoon.com/tags/request/"/>
    
      <category term="response" scheme="http://sunmoon.com/tags/response/"/>
    
  </entry>
  
  <entry>
    <title>Servlet</title>
    <link href="http://sunmoon.com/2020/08/22/Servlet/"/>
    <id>http://sunmoon.com/2020/08/22/Servlet/</id>
    <published>2020-08-22T12:38:49.000Z</published>
    <updated>2020-08-22T12:42:45.909Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、Servlet概述"><a href="#一、Servlet概述" class="headerlink" title="一、Servlet概述"></a>一、Servlet概述</h2><ul><li>servlet= server+applet 运行在服务器端的java程序。</li><li>Servlet是一个接口，一个类要想通过浏览器被访问到,那么这个类就必须直接或间接的实现Servlet接口</li></ul><p><strong>作用：接收请求，处理逻辑，响应结果</strong></p><blockquote><p>Servlet是一个接口，一个类想要通过浏览器被访问到，那么这个类就必须直接或者间接的实现Servlet接口</p></blockquote><a id="more"></a><h2 id="二、Servlet快速入门"><a href="#二、Servlet快速入门" class="headerlink" title="二、Servlet快速入门"></a>二、Servlet快速入门</h2><h3 id="2-1-代码编写"><a href="#2-1-代码编写" class="headerlink" title="2.1 代码编写"></a>2.1 代码编写</h3><ol><li>创建JavaEE项目</li><li>定义一个类，实现Servlet接口</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">QuickServlet</span> <span class="keyword">implements</span> <span class="title">Servlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(ServletConfig servletConfig)</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ServletConfig <span class="title">getServletConfig</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(ServletRequest servletRequest, ServletResponse servletResponse)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Servlet快速入门...."</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getServletInfo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li><p>实现接口中的抽象方法</p></li><li><p>配置Servlet</p><ul><li>在web.xml中配置如下：</li></ul></li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>QuickServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.sun.servlet.QuickServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>QuickServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/quickServlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="5"><li>部署到Tomcat启动服务器访问即可</li></ol><h3 id="2-2-访问流程"><a href="#2-2-访问流程" class="headerlink" title="2.2 访问流程"></a>2.2 访问流程</h3><ol><li>当服务器接收到客户端浏览器的请求后，会解析请求URL路径，获取访问的Servlet的资源路径</li><li>查找web.xml文件，是否有对应的<url-pattern>标签体内容</li><li>如果有，则在找到对应的<servlet-class>全类名</li><li>tomcat会将字节码文件加载进内存，创建其对象</li><li>调用其方法</li></ol><p><img data-src="/img/servlet%E8%AE%BF%E9%97%AE%E6%B5%81%E7%A8%8B%E5%88%86%E6%9E%90.png" alt="servlet访问流程分析"></p><h2 id="三、Servlet相关API"><a href="#三、Servlet相关API" class="headerlink" title="三、Servlet相关API"></a>三、Servlet相关API</h2><h3 id="3-1-生命周期相关"><a href="#3-1-生命周期相关" class="headerlink" title="3.1 生命周期相关"></a>3.1 生命周期相关</h3><h4 id="3-1-1-思想介绍"><a href="#3-1-1-思想介绍" class="headerlink" title="3.1.1 思想介绍"></a>3.1.1 思想介绍</h4><p>生命周期：指的是一个对象从生（创建）到死（销毁）的一个过程</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1.servlet创建时，执行init初始化方法,只执行一次</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(ServletConfig servletConfig)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2.用户访问时，执行service服务方法</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(ServletRequest servletRequest, ServletResponse servletResponse)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 3.servlet销毁时，执行destroy销毁方法</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure><p><img data-src="/img/Servlet%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F.png" alt="Servlet生命周期"></p><p><strong>① 创建：</strong></p><ul><li>默认情况下：用户第一次访问时，servlet创建，只创建一次</li><li>指定创建时机，在服务器启动时，创建<ul><li>配置web.xml文件servlet标签中<ul><li><code>&lt;load-on-startup&gt;&lt;/load-on-startup&gt;</code></li><li>正数：4~ ，因为tomcat内部也有一些servlet需要启动时创建</li><li>负数：-1（默认值），表示用户第一次访问时，创建</li></ul></li></ul></li></ul><p><strong>② 运行(提供服务)：</strong></p><ul><li>用户访问该servlet，都会执行service方法，执行多次</li></ul><p><strong>③ 销毁：</strong></p><ul><li>服务器关闭，servlet销毁</li></ul><blockquote><p>小贴士</p><ul><li>Servlet是一个单例的</li></ul><p>注意：在servlet中不要使用成员变量存值，会造成线程安全问题。</p></blockquote><h4 id="3-1-2-代码演示"><a href="#3-1-2-代码演示" class="headerlink" title="3.1.2 代码演示"></a>3.1.2 代码演示</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LifeServlet</span> <span class="keyword">implements</span> <span class="title">Servlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(ServletConfig servletConfig)</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"LifeServlet创建了.."</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ServletConfig <span class="title">getServletConfig</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(ServletRequest servletRequest, ServletResponse servletResponse)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"用户访问了LifeServlet，执行service方法"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getServletInfo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"LifeServlet销毁了..."</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>LifeServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.sun.LifeServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>4<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>LifeServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/LifeServlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-2-ServletConfig接口"><a href="#3-2-ServletConfig接口" class="headerlink" title="3.2 ServletConfig接口"></a>3.2 ServletConfig接口</h3><p>Tomcat在Servlet对象创建时，执行init()方法，并创建一个ServletConfig 配置对象。</p><ul><li>主要作用：读取web.xml配置文件Servlet中<init-param>信息，实现参数和代码的解耦</li></ul><p><strong>代码演示：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EncodeServlet</span> <span class="keyword">implements</span> <span class="title">Servlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 声明变量</span></span><br><span class="line">    <span class="keyword">private</span> ServletConfig servletConfig;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(ServletConfig servletConfig)</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.servletConfig= servletConfig;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 提供获取servletConfig公共方法</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ServletConfig <span class="title">getServletConfig</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> servletConfig;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 对外提供服务器</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(ServletRequest servletRequest, ServletResponse servletResponse)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">// 对中文进行编码</span></span><br><span class="line">        String encode = getServletConfig().getInitParameter(<span class="string">"encode"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 向浏览器输出结果</span></span><br><span class="line">        servletResponse.getWriter().write(encode);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getServletInfo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>EncodeServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.sun.EncodeServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>encode<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>gbk<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>EncodeServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/EncodeServlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="四、Servlet的继承体系"><a href="#四、Servlet的继承体系" class="headerlink" title="四、Servlet的继承体系"></a>四、Servlet的继承体系</h2><p><img data-src="/img/Servlet%E7%BB%A7%E6%89%BF%E4%BD%93%E7%B3%BB.png" alt="Servlet继承体系"></p><h3 id="4-1-GenericServlet"><a href="#4-1-GenericServlet" class="headerlink" title="4.1 GenericServlet"></a>4.1 GenericServlet</h3><ol><li>编写普通类，继承GenericServlet<ul><li>只需重写service()方法即可</li></ul></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ServletDemo1</span> <span class="keyword">extends</span> <span class="title">GenericServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"我重写init方法..."</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 对外提供服务的方法</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(ServletRequest servletRequest, ServletResponse servletResponse)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">        System.out.println(getServletConfig());</span><br><span class="line">        System.out.println(<span class="string">"ServletDemo1 extends GenericServlet"</span>);</span><br><span class="line">        servletResponse.getWriter().write(<span class="string">"ServletDemo1 extends GenericServlet"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"我重写destroy方法..."</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>配置web.xml</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>ServletDemo1<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.sun.ServletDemo1<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>ServletDemo1<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/ServletDemo1<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="4-2-HttpServlet"><a href="#4-2-HttpServlet" class="headerlink" title="4.2 HttpServlet"></a>4.2 HttpServlet</h3><p><img data-src="/img/%E7%BB%A7%E6%89%BFHttpServlet.png" alt="继承HttpServlet"></p><ol><li>编写普通类，继承HttpServlet<ul><li>重写 doGet()、doPost()</li></ul></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ServletDemo2</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"get方式请求....."</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"post方式请求....."</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>配置web.xml</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>ServletDemo2<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.sun.ServletDemo2<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>ServletDemo2<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/ServletDemo2<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="3"><li>编写表单</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>demo2<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"http://localhost:8080/servlet/ServletDemo2"</span> <span class="attr">method</span>=<span class="string">"get"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"get"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"http://localhost:8080/servlet/ServletDemo2"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="五、Servlet路径"><a href="#五、Servlet路径" class="headerlink" title="五、Servlet路径"></a>五、Servlet路径</h2><h3 id="5-1-url-pattern"><a href="#5-1-url-pattern" class="headerlink" title="5.1 url-pattern"></a>5.1 url-pattern</h3><p>作用：将一个请求网络地址和servlet类建立一个映射关系</p><blockquote><p>小贴士：一个Servlet可以映射多个网络地址</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- url-pattern 标签--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>ServletDemo3<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.sun.ServletDemo3<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--映射的第一个地址--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>ServletDemo3<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/haha<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--映射的第二个地址--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>ServletDemo3<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/hehe<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="5-2-绝对、相对路径"><a href="#5-2-绝对、相对路径" class="headerlink" title="5.2 绝对、相对路径"></a>5.2 绝对、相对路径</h3><p>举例：</p><ul><li>当前页面地址：<code>http://localhost:8080/servlet/static/path.html</code></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>path<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>当前页面的地址：http://localhost:8080/servlet/static/path.html<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        绝对路径</span></span><br><span class="line"><span class="comment">            完整格式：</span></span><br><span class="line"><span class="comment">                http://域名:端口/项目网络地址/资源网络地址</span></span><br><span class="line"><span class="comment">            （推荐）简化：</span></span><br><span class="line"><span class="comment">                /项目网络地址/资源网络地址</span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://localhost:8080/servlet/QuickServlet"</span>&gt;</span>绝对路径完整版<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/day06-servlet-xml/QuickServlet"</span>&gt;</span>绝对路径简化版<span class="tag">&lt;/<span class="name">a</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        相对路径（当前页面和目标页面的相对位置关系）</span></span><br><span class="line"><span class="comment">            ./ 当前目录下</span></span><br><span class="line"><span class="comment">            ../ 上级目录下</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"../QuickServlet"</span>&gt;</span>相对路径<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="六、Servlet3-0"><a href="#六、Servlet3-0" class="headerlink" title="六、Servlet3.0"></a>六、Servlet3.0</h2><ul><li>通过注解的方式配置Servlet，简化web.xml配置Servlet复杂性，提高开发效率。</li></ul><h3 id="6-1-快速入门"><a href="#6-1-快速入门" class="headerlink" title="6.1 快速入门"></a>6.1 快速入门</h3><p>步骤：</p><ul><li>创建JavaEE项目，选择Servlet的版本3.0以上，可以不创建web.xml</li><li>定义一个类，实现Servlet接口</li><li>复写方法</li><li>在类上使用@WebServlet注解，进行配置<ul><li>@WebServlet(“资源路径”)</li></ul></li></ul><p>注解类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Target</span>(&#123;ElementType.TYPE&#125;)</span><br><span class="line"><span class="meta">@Retention</span>(RetentionPolicy.RUNTIME)</span><br><span class="line"><span class="meta">@Documented</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> WebServlet &#123;</span><br><span class="line">    <span class="function">String <span class="title">name</span><span class="params">()</span> <span class="keyword">default</span> ""</span>;<span class="comment">//相当于&lt;Servlet-name&gt;</span></span><br><span class="line">    </span><br><span class="line">    String[] value() <span class="keyword">default</span> &#123;&#125;;<span class="comment">//代表urlPatterns()属性配置</span></span><br><span class="line">    </span><br><span class="line">    String[] urlPatterns() <span class="keyword">default</span> &#123;&#125;;<span class="comment">//相当于&lt;url-pattern&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">loadOnStartup</span><span class="params">()</span> <span class="keyword">default</span> -1</span>;<span class="comment">//相当于&lt;load-on-startup&gt;</span></span><br><span class="line">    </span><br><span class="line">    WebInitParam[] initParams() <span class="keyword">default</span> &#123;&#125;;</span><br><span class="line">    <span class="function"><span class="keyword">boolean</span> <span class="title">asyncSupported</span><span class="params">()</span> <span class="keyword">default</span> <span class="keyword">false</span></span>;</span><br><span class="line">    <span class="function">String <span class="title">smallIcon</span><span class="params">()</span> <span class="keyword">default</span> ""</span>;</span><br><span class="line">    <span class="function">String <span class="title">largeIcon</span><span class="params">()</span> <span class="keyword">default</span> ""</span>;</span><br><span class="line">    <span class="function">String <span class="title">description</span><span class="params">()</span> <span class="keyword">default</span> ""</span>;</span><br><span class="line">    <span class="function">String <span class="title">displayName</span><span class="params">()</span> <span class="keyword">default</span> ""</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>代码示例：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// @WebServlet(name = "QuickServlet", urlPatterns = "/QuickServlet")</span></span><br><span class="line"><span class="comment">// @WebServlet(urlPatterns = "/QuickServlet")</span></span><br><span class="line"><span class="comment">// @WebServlet(value = "/QuickServlet")</span></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/QuickServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">QuickServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(req,resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"servlet3.0注解开发..."</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="七、ServletContext"><a href="#七、ServletContext" class="headerlink" title="七、ServletContext"></a>七、ServletContext</h2><h3 id="7-1-概述"><a href="#7-1-概述" class="headerlink" title="7.1 概述"></a>7.1 概述</h3><p><strong>ServletContext</strong>：上下文对象</p><ul><li>web容器（tomcat）在启动时，它会为每个web项目承建一个对应的ServletContext对象</li><li>它代表：当前web项目</li></ul><p><strong>主要作用：</strong></p><ul><li>获取全局的配置参数</li><li>获取资源在服务器的真实（磁盘）地址</li><li>域对象（共享数据）</li><li>获取文件MIME类型</li></ul><p><strong>获取Serlvet对象的两种方式：</strong></p><ul><li><p>通过request对象获取：<code>ServletContext sc = request.getServletContext();</code></p></li><li><p>继承HttpServlet后，可以直接调用：<code>ServletContext sc = getServletContext();</code></p></li></ul><h3 id="7-2-域对象-共享数据"><a href="#7-2-域对象-共享数据" class="headerlink" title="7.2 域对象(共享数据)"></a>7.2 域对象(共享数据)</h3><p>在当前项目范围内，共享数据（多个servlet都可以获取）</p><p><img data-src="/img/ServletContext%E5%9F%9F%E5%AF%B9%E8%B1%A1%E5%9B%BE%E8%A7%A3.png" alt="ServletContext域对象图解"></p><p><strong>相关API：</strong></p><ul><li>存储数据：<code>void setAttribute(String name,Object value)</code></li><li>获取数据：<code>Object getAttribute(String name)</code></li><li>删除数据：<code>void removeAttribute(String name)</code></li></ul><h4 id="代码演示："><a href="#代码演示：" class="headerlink" title="代码演示："></a>代码演示：</h4><p>① OneServlet（存数据）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/OneServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OneServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//获取对象</span></span><br><span class="line">        ServletContext servletContext = getServletContext();</span><br><span class="line">        <span class="comment">//存储数据</span></span><br><span class="line">        servletContext.setAttribute(<span class="string">"user"</span>,<span class="string">"jack"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>② TwoServlet(取、删数据)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取数据</span></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/TwoServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TwoServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//获取对象</span></span><br><span class="line">        ServletContext servletContext = getServletContext();</span><br><span class="line">        <span class="comment">//获取数据</span></span><br><span class="line">        Object userName = servletContext.getAttribute(<span class="string">"user"</span>);</span><br><span class="line">        String name = (String) userName;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//删除数据</span></span><br><span class="line">        servletContext.removeAttribute(<span class="string">"user"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//向浏览器写数据</span></span><br><span class="line">        response.getWriter().write(name);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>域对象的生命周期</p><ul><li>创建：项目加载成功后，创建</li><li>销毁：项目关闭时，销毁</li><li>作用范围：整个web项目(与项目共存亡)</li></ul></blockquote><h3 id="7-3-获取资源在服务器的真实地址"><a href="#7-3-获取资源在服务器的真实地址" class="headerlink" title="7.3 获取资源在服务器的真实地址"></a>7.3 获取资源在服务器的真实地址</h3><p>相关API：</p><ul><li><code>String getRealPath(String path);</code></li></ul><p>代码演示：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/ServletDemo02"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ServletDemo02</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        ServletContext servletContext = getServletContext();</span><br><span class="line">        <span class="comment">//获取web.xml的真实路径</span></span><br><span class="line">        String webPath = servletContext.getRealPath(<span class="string">"WEB-INF/web.xml"</span>);</span><br><span class="line">        System.out.println(webPath);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="7-4-获取全局的配置参数"><a href="#7-4-获取全局的配置参数" class="headerlink" title="7.4 获取全局的配置参数"></a>7.4 获取全局的配置参数</h3><ul><li>读取web.xml配置文件中<context-param>标签信息，实现参数和代码的解耦（多个servlet都可以获取）</li></ul><p>相关API：</p><ul><li><code>String getInitParameter(String key);</code></li></ul><p>代码演示：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/ServletDemo03"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ServletDemo03</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        ServletContext servletContext = getServletContext();</span><br><span class="line">        String sex = servletContext.getInitParameter(<span class="string">"sex"</span>);</span><br><span class="line">        System.out.println(sex);<span class="comment">// boy</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">context-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>sex<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>boy<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="7-5-获取文件MIME类型"><a href="#7-5-获取文件MIME类型" class="headerlink" title="7.5 获取文件MIME类型"></a>7.5 获取文件MIME类型</h3><p>相关API：</p><ul><li>String getMimeType(String var1)</li></ul><p><strong>MIME类型：</strong></p><ul><li>在互联网通信过程中定义的一种文件数据类型</li><li>格式：<code>大类型/小类型</code> 例如：<code>text/html text/xml text/plan image/jpeg</code></li></ul><p><img data-src="/img/MIME%E7%B1%BB%E5%9E%8B.png" alt="MIME类型"></p><p>代码演示：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/ServletDemo04"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ServletDemo04</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        String fileName = <span class="string">"1.mp3"</span>;</span><br><span class="line">        <span class="comment">//设置字符集</span></span><br><span class="line">        response.setContentType(<span class="string">"text/html;charset:utf-8"</span>);</span><br><span class="line">        <span class="comment">//获取ServletContext对象</span></span><br><span class="line">        ServletContext servletContext = getServletContext();</span><br><span class="line">        String fileMime = servletContext.getMimeType(fileName);</span><br><span class="line">        response.getWriter().write(<span class="string">"&lt;h1&gt;"</span>+fileMime+<span class="string">"&lt;/h1&gt;"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="7-5-练习——统计网站访问次数"><a href="#7-5-练习——统计网站访问次数" class="headerlink" title="7.5 练习——统计网站访问次数"></a>7.5 练习——统计网站访问次数</h3><p><img data-src="/img/%E7%BB%9F%E8%AE%A1%E7%BD%91%E7%AB%99%E8%AE%BF%E9%97%AE%E6%AC%A1%E6%95%B0%E6%80%9D%E8%B7%AF.png" alt="统计网站访问次数思路"></p><p>代码实现：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/ServletCall"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ServletCall</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line">        ServletContext servletContext = getServletContext();</span><br><span class="line">        <span class="comment">// 定义初始访问次数为0,存储到域对象中</span></span><br><span class="line">        servletContext.setAttribute(<span class="string">"count"</span>,<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//设置文本类型，字符集</span></span><br><span class="line">        response.setContentType(<span class="string">"text/html;charset=utf-8"</span>);</span><br><span class="line">        ServletContext servletContext = getServletContext();</span><br><span class="line">        <span class="comment">//获取域对象中保存的变量</span></span><br><span class="line">        Integer count = (Integer) servletContext.getAttribute(<span class="string">"count"</span>);</span><br><span class="line">        <span class="comment">//+1</span></span><br><span class="line">        count++;</span><br><span class="line">        <span class="comment">//重新设置到域对象中保存</span></span><br><span class="line">        servletContext.setAttribute(<span class="string">"count"</span>,count);</span><br><span class="line">        <span class="comment">//向浏览器写数据，显示访问次数</span></span><br><span class="line">        response.getWriter().write(<span class="string">"&lt;h1&gt;访问次数为："</span>+count+<span class="string">"&lt;/h1&gt;"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、Servlet概述&quot;&gt;&lt;a href=&quot;#一、Servlet概述&quot; class=&quot;headerlink&quot; title=&quot;一、Servlet概述&quot;&gt;&lt;/a&gt;一、Servlet概述&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;servlet= server+applet 运行在服务器端的java程序。&lt;/li&gt;
&lt;li&gt;Servlet是一个接口，一个类要想通过浏览器被访问到,那么这个类就必须直接或间接的实现Servlet接口&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;作用：接收请求，处理逻辑，响应结果&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Servlet是一个接口，一个类想要通过浏览器被访问到，那么这个类就必须直接或者间接的实现Servlet接口&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="JavaWeb" scheme="http://sunmoon.com/categories/JavaWeb/"/>
    
    
      <category term="学习" scheme="http://sunmoon.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="Servlet" scheme="http://sunmoon.com/tags/Servlet/"/>
    
  </entry>
  
  <entry>
    <title>HTTP&amp;Tomcat</title>
    <link href="http://sunmoon.com/2020/08/20/HTTP-Tomcat/"/>
    <id>http://sunmoon.com/2020/08/20/HTTP-Tomcat/</id>
    <published>2020-08-20T14:36:33.000Z</published>
    <updated>2020-08-24T09:00:02.083Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、Web知识概述"><a href="#一、Web知识概述" class="headerlink" title="一、Web知识概述"></a>一、Web知识概述</h2><h3 id="1-1-软件架构"><a href="#1-1-软件架构" class="headerlink" title="1.1 软件架构"></a>1.1 软件架构</h3><ul><li>网络中有很多的计算机，它们直接的信息交流，我们称之为：交互</li><li>在互联网交互的过程的有两个非常典型的交互方式——B/S  交互模型（架构）和 C/S  交互模型（架构）</li></ul><a id="more"></a><p>C/S架构：客户端/服务器端</p><blockquote><p>Client/Server 客户端/服务器</p><p>访问服务器资源必须安装客户端软件</p><p>例如: QQ，绝地求生，LOL</p></blockquote><p>B/S：浏览器/服务器端</p><blockquote><p>Browser/Server 浏览器/服务器</p><p>访问服务器资源不需要专门安装客户端软件,而是直接通过浏览器访问服务器资源.</p><p>例如: 天猫、京东、知乎网站</p></blockquote><h3 id="1-2-资源分类"><a href="#1-2-资源分类" class="headerlink" title="1.2 资源分类"></a>1.2 资源分类</h3><ul><li><p>静态资源：所有用户访问后，得到的结果都是一样的，称为静态资源。静态资源可以直接被浏览器解析。</p><ul><li>如：html、css、JavaScript</li></ul></li><li><p>动态资源：每一个用户访问相同资源后，得到的结果可能不一样，称为动态资源。动态资源被访问后，需要先转换为静态资源，在返回给浏览器。</p><ul><li>如：servlet、jsp、asp、php</li></ul></li></ul><h3 id="1-3-网络通信的三要素"><a href="#1-3-网络通信的三要素" class="headerlink" title="1.3 网络通信的三要素"></a>1.3 网络通信的三要素</h3><ol><li>IP：电子设备在网络中的唯一标识。</li><li>端口：应用程序在计算机中的唯一标识。0~65535</li><li>传输协议：规定了数据传输的规则<ul><li>基础协议：<ol><li>TCP：安全协议，传输过程经过三次握手。速度稍慢</li><li>UDP：不安全协议。速度快</li></ol></li></ul></li></ol><h3 id="1-4-常见的Web服务器"><a href="#1-4-常见的Web服务器" class="headerlink" title="1.4 常见的Web服务器"></a>1.4 常见的Web服务器</h3><ul><li>Tomcat：Apache组织开源免费的web服务器</li></ul><ul><li>Jetty：Apache组织开源免费的小型web服务器</li></ul><ul><li><p>JBoss:：RedHat红帽公司的开源免费的web服务器</p></li><li><p>Glass Fish：Sun公司开源免费的web服务器</p></li><li><p>WebLogic：Oracle公司收费的web服务器</p></li><li><p>WebSphere：IBM公司收费的web服务器</p></li></ul><p><strong>JavaEE规范</strong></p><ul><li>在Java中所有的服务器厂商都要实现一组Oracle公司规定的接口，这些接口是称为JavaEE规范。不同厂商的JavaWeb服务器都实现了这些接口，在JavaEE中一共有13种规范。实现的规范越多，功能越强。</li></ul><h2 id="二、Tomcat服务器"><a href="#二、Tomcat服务器" class="headerlink" title="二、Tomcat服务器"></a>二、Tomcat服务器</h2><h3 id="2-1-Tomcat的使用"><a href="#2-1-Tomcat的使用" class="headerlink" title="2.1 Tomcat的使用"></a>2.1 Tomcat的使用</h3><ul><li><p>Tomcat 官网下载地址：<a href="https://tomcat.apache.org/download-80.cgi" target="_blank" rel="noopener">https://tomcat.apache.org/download-80.cgi</a></p></li><li><p>安装：解压压缩包即可。</p><ul><li>注意：安装目录不要有中文和空格</li></ul></li><li><p>卸载：删除Tomcat目录</p></li><li><p>目录结构：</p><p>  <img data-src="/img/tomcat%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84.png" alt="tomcat目录结构"></p></li><li><p>启动和关闭</p><p>  <img data-src="/img/tomcat%E5%90%AF%E5%8A%A8%E5%92%8C%E5%85%B3%E9%97%AD.png" alt="tomcat启动和关闭"></p></li></ul><blockquote><p>关闭补充：在tomcat的黑窗口内，按住 ctrl + c （也能正常关闭）</p></blockquote><ul><li>访问测试：浏览器输入<code>localhost:8080</code>，出现以下页面及成功。</li></ul><p><img data-src="/img/tomcat%E8%AE%BF%E9%97%AE.png" alt="tomcat访问"></p><h3 id="2-2-启动报错"><a href="#2-2-启动报错" class="headerlink" title="2.2 启动报错"></a>2.2 启动报错</h3><h4 id="①-Java环境变量问题"><a href="#①-Java环境变量问题" class="headerlink" title="① Java环境变量问题"></a>① Java环境变量问题</h4><p>tomcat是由Java编写的，如果没有配置环境变量，将出现黑窗口一闪而过。</p><ul><li>解决办法：正确配置Java环境变量。</li></ul><h4 id="②-8080端口被占用"><a href="#②-8080端口被占用" class="headerlink" title="② 8080端口被占用"></a>② 8080端口被占用</h4><p>现象：启动时报错</p><p>查看日志</p><p><img data-src="/img/tomcat%E7%AB%AF%E5%8F%A3%E5%8D%A0%E7%94%A8.png" alt="tomcat端口占用"></p><p>解决方式一：</p><ul><li><p>暴力：找到对应占用端口号的进程，杀死进程</p></li><li><p>查找占用端口号的进程——cmd命令：<code>netstat -ano | findstr &quot;8080&quot;</code></p></li><li><p>修改自身端口号</p><ul><li><p>打开conf/server.xml配置文件，把所有<code>port=&quot;8080&quot;</code>处都修改为其他端口号即可。</p><p><img data-src="/img/tomcat%E4%BF%AE%E6%94%B9%E7%AB%AF%E5%8F%A3%E5%8F%B7.png" alt="tomcat修改端口号"></p></li></ul></li></ul><h3 id="2-3-发布项目的三种方式"><a href="#2-3-发布项目的三种方式" class="headerlink" title="2.3 发布项目的三种方式"></a>2.3 发布项目的三种方式</h3><h4 id="①-webapps部署"><a href="#①-webapps部署" class="headerlink" title="① webapps部署"></a>① webapps部署</h4><p>直接将项目放到webapps目录下即可</p><p><img data-src="/img/tomcat%E9%83%A8%E7%BD%B2%E9%A1%B9%E7%9B%AE%E6%96%B9%E5%BC%8F%E4%B8%80.png" alt="tomcat部署项目方式一"></p><h4 id="②-servver-xml部署"><a href="#②-servver-xml部署" class="headerlink" title="② servver.xml部署"></a>② servver.xml部署</h4><p>在tomcat/conf/server.xml中找到<code>&lt;Host&gt;</code>标签，添加<code>&lt;Context/&gt;</code>标签</p><p><img data-src="/img/tomcat%E9%83%A8%E7%BD%B2%E9%A1%B9%E7%9B%AE%E6%96%B9%E5%BC%8F%E4%BA%8C.png" alt="tomcat部署项目方式二"></p><h4 id="③-独立xml部署"><a href="#③-独立xml部署" class="headerlink" title="③ 独立xml部署"></a>③ 独立xml部署</h4><p>在tomcat/conf/Catalina/localhost 目录下创建一个xml文件，添加<code>&lt;Context/&gt;</code>标签</p><p><img data-src="/img/tomcat%E9%83%A8%E7%BD%B2%E9%A1%B9%E7%9B%AE%E6%96%B9%E5%BC%8F%E4%B8%89.png" alt="tomcat部署项目方式三"></p><h2 id="三、HTTP协议"><a href="#三、HTTP协议" class="headerlink" title="三、HTTP协议"></a>三、HTTP协议</h2><h3 id="3-1-HTTP协议概述"><a href="#3-1-HTTP协议概述" class="headerlink" title="3.1 HTTP协议概述"></a>3.1 HTTP协议概述</h3><p>超文本传输协议（Hyper Text Transfer Protocol)是互联网上应用最为广泛的一种网络协议。</p><p>传输协议：在客户端和服务器端通信时，规范了<span style="color:red">传输数据的格式 </span></p><p><img data-src="/img/http%E5%8D%8F%E8%AE%AE.png" alt="http协议"></p><h3 id="3-2-HTTP请求"><a href="#3-2-HTTP请求" class="headerlink" title="3.2 HTTP请求"></a>3.2 HTTP请求</h3><h4 id="3-2-1-浏览器中查看HTTP请求协议"><a href="#3-2-1-浏览器中查看HTTP请求协议" class="headerlink" title="3.2.1 浏览器中查看HTTP请求协议"></a>3.2.1 浏览器中查看HTTP请求协议</h4><blockquote><p>F12打开控制台</p></blockquote><h5 id="①-GET方式"><a href="#①-GET方式" class="headerlink" title="① GET方式"></a>① GET方式</h5><p><img data-src="/img/GET%E8%AF%B7%E6%B1%82.png" alt="GET请求"></p><h5 id="②-POST方式"><a href="#②-POST方式" class="headerlink" title="② POST方式"></a>② POST方式</h5><p><img data-src="/img/POST%E8%AF%B7%E6%B1%82.png" alt="POST请求"></p><h4 id="3-2-2-HTTP请求消息格式"><a href="#3-2-2-HTTP请求消息格式" class="headerlink" title="3.2.2 HTTP请求消息格式"></a>3.2.2 HTTP请求消息格式</h4><h5 id="①-请求行"><a href="#①-请求行" class="headerlink" title="① 请求行"></a>① 请求行</h5><p>格式：<code>请求方式 请求路径 协议/版本号</code></p><ul><li>例如：<ul><li><code>POST /tomcat/static/login.html HTTP/1.1</code>（从请求体获得数据）</li><li><code>GET  /tomcat/static/login.html?username=jack&amp;password=123</code> HTTP/1.1（从请求行获得数据）</li></ul></li></ul><p>请求方式区别：</p><ul><li>GET方式：<ul><li>参数在请求路径上进行拼接</li><li>大小有限制</li><li>不太安全    </li></ul></li><li>POST方式：<ul><li>参数不在请求路径上拼接（在请求体中）</li><li>大小没有限制</li><li>相对安全</li></ul></li></ul><h5 id="②-请求头"><a href="#②-请求头" class="headerlink" title="② 请求头"></a>② 请求头</h5><p>格式：<code>请求头名称:请求头的值</code></p><ul><li>例如：<code>Host: localhost:8080</code></li></ul><p><strong>常见请求头</strong>：Accept开头的，都是浏览器告诉服务器的一些暗语</p><ol><li><code>Host: localhost:8080</code>访问服务器的地址（域名+端口）</li><li><code>Connection: keep-alive</code> 长连接（http1.1协议）</li><li><code>Cache-Control: max-age=0</code>设置缓存数据的存活时间，单位秒</li><li><code>Upgrade-Insecure-Requests:1</code>  客户端支持https加密协议  </li><li><code>Referer: http://baidu.com</code> 上一次请求的地址（请求来源）</li><li><code>User-Agent:</code> 客户端系统和浏览器版本</li></ol><h5 id="③-请求体-正文"><a href="#③-请求体-正文" class="headerlink" title="③ 请求体(正文)"></a>③ 请求体(正文)</h5><blockquote><p>POST方式提交才有请求体</p></blockquote><ul><li>格式：参数名=参数值&amp;参数名=参数值<ul><li>例如：username=jack&amp;password=123</li></ul></li></ul><h3 id="3-3-HTTP响应"><a href="#3-3-HTTP响应" class="headerlink" title="3.3 HTTP响应"></a>3.3 HTTP响应</h3><h4 id="3-3-1-浏览器查看HTTP响应协议"><a href="#3-3-1-浏览器查看HTTP响应协议" class="headerlink" title="3.3.1 浏览器查看HTTP响应协议"></a>3.3.1 浏览器查看HTTP响应协议</h4><p><img data-src="/img/http%E5%93%8D%E5%BA%94.png" alt="http响应"></p><h4 id="3-3-2-HTTP响应消息格式"><a href="#3-3-2-HTTP响应消息格式" class="headerlink" title="3.3.2 HTTP响应消息格式"></a>3.3.2 HTTP响应消息格式</h4><h5 id="①-响应行"><a href="#①-响应行" class="headerlink" title="① 响应行"></a>① 响应行</h5><ul><li>格式：协议/版本号 状态码 <ul><li>例如：HTTP/1.1   200</li></ul></li><li>常见状态码<ul><li>200 ：表示成功</li><li>302 ：表示重定向</li><li>304 ：表示缓存</li><li>404：请求未找到</li><li>405：请求方法未找到</li><li>500：服务器内部错误</li></ul></li></ul><h5 id="②-响应头"><a href="#②-响应头" class="headerlink" title="② 响应头"></a>② 响应头</h5><ul><li>格式<ul><li>响应头名称：响应头的值</li></ul></li><li>例如<ul><li>Last-Modified: Thu, 20 Aug 2020 07:45:20 GMT</li></ul></li></ul><p><strong>常见的响应头</strong>：Content开头都是服务器告诉客户端一些暗语</p><ol><li>Location：通常与状态码302一起使用，实现重定向操作<ul><li>Location:<a href="http://www.jd.com" target="_blank" rel="noopener">www.jd.com</a></li></ul></li><li>Content-Type：服务器告诉客户端，返回响应体的数据类型和编码方式【重点】<ul><li>http协议传输的内容都是字符串（文本）</li><li>content-type: application/javascript</li></ul></li><li>Content-Disposition：服务器告诉客户端，以什么样方式打开响应体<ul><li>in-line（默认）：浏览器直接打开相应内容，展示给用户</li><li>attachment;filename=文件名：浏览器以附件的方式保存文件 【文件下载】</li></ul></li><li>Refresh：：在指定间隔时间后，跳转到某个页面</li><li>Last-Modified：通常与状态码304一起使用，实现缓存机制</li></ol><p><img data-src="/img/%E5%93%8D%E5%BA%94%E7%8A%B6%E6%80%81%E7%A0%81200%E3%80%81304.png" alt="响应状态码200、304"></p><p><img data-src="/img/%E5%93%8D%E5%BA%94%E7%8A%B6%E6%80%81%E7%A0%81302.png" alt="响应状态码302"></p><h5 id="③-响应体"><a href="#③-响应体" class="headerlink" title="③ 响应体"></a>③ 响应体</h5><p>服务器返回的数据，由浏览器接解析后展示给用户…</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、Web知识概述&quot;&gt;&lt;a href=&quot;#一、Web知识概述&quot; class=&quot;headerlink&quot; title=&quot;一、Web知识概述&quot;&gt;&lt;/a&gt;一、Web知识概述&lt;/h2&gt;&lt;h3 id=&quot;1-1-软件架构&quot;&gt;&lt;a href=&quot;#1-1-软件架构&quot; class=&quot;headerlink&quot; title=&quot;1.1 软件架构&quot;&gt;&lt;/a&gt;1.1 软件架构&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;网络中有很多的计算机，它们直接的信息交流，我们称之为：交互&lt;/li&gt;
&lt;li&gt;在互联网交互的过程的有两个非常典型的交互方式——B/S  交互模型（架构）和 C/S  交互模型（架构）&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="JavaWeb" scheme="http://sunmoon.com/categories/JavaWeb/"/>
    
    
      <category term="学习" scheme="http://sunmoon.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="HTTP" scheme="http://sunmoon.com/tags/HTTP/"/>
    
      <category term="Tomcat" scheme="http://sunmoon.com/tags/Tomcat/"/>
    
  </entry>
  
  <entry>
    <title>Json&amp;AJAX入门</title>
    <link href="http://sunmoon.com/2020/08/19/Json-AJAX%E5%85%A5%E9%97%A8/"/>
    <id>http://sunmoon.com/2020/08/19/Json-AJAX%E5%85%A5%E9%97%A8/</id>
    <published>2020-08-19T14:30:50.000Z</published>
    <updated>2020-08-23T14:33:31.097Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、Json"><a href="#一、Json" class="headerlink" title="一、Json"></a>一、Json</h2><h3 id="1-1-Json概述"><a href="#1-1-Json概述" class="headerlink" title="1.1 Json概述"></a>1.1 Json概述</h3><p>JavaScript对象表示形式（JavaScript Object Notation）</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">java对象表示形式:</span><br><span class="line"><span class="code">    User user = new User();</span></span><br><span class="line"><span class="code">    user.setUsername("后羿");</span></span><br><span class="line"><span class="code">    user.setAge(23);</span></span><br><span class="line"><span class="code">    user.setSex("男");</span></span><br><span class="line"><span class="code"></span></span><br><span class="line">javaScript对象表示形式:</span><br><span class="line"><span class="code">    let user = &#123;"username":"后羿","age":18,"sex":"男"&#125;;</span></span><br><span class="line"><span class="code">        取值：user.username</span></span><br><span class="line"><span class="code">        赋值：user.username="安其拉";</span></span><br><span class="line"><span class="code">    let product = &#123;&#125;;</span></span><br><span class="line"><span class="code">    let car = &#123;&#125;;</span></span><br></pre></td></tr></table></figure><a id="more"></a><p><img data-src="/img/json.png" alt="json"></p><p>Json可以取代XML笨重的数据结构，和XML相比：更小、更快、更易解析。</p><h3 id="1-2-Json基础语法"><a href="#1-2-Json基础语法" class="headerlink" title="1.2 Json基础语法"></a>1.2 Json基础语法</h3><blockquote><p>前端语法比较松散，name 可以不使用双引号</p><p>但是在java中，name必须使用双引号</p></blockquote><p>例如：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">let user = &#123;username:"后羿",age:18,sex:"男"&#125;;</span><br><span class="line"></span><br><span class="line">String userJson = "&#123;\"username\":\"后羿\",\"age\":18,\"sex\":\"男\"&#125;";</span><br></pre></td></tr></table></figure><p>Json定义的三种类型：</p><ul><li><p>对象类型</p>  <figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="code">name:value,</span></span><br><span class="line"><span class="code">name:value</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>数组类型</p>  <figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line"><span class="code">    &#123;name:value,name:value&#125;,</span></span><br><span class="line"><span class="code">    &#123;name:value,name:value&#125;,</span></span><br><span class="line"><span class="code">    &#123;name:value,name:value&#125;</span></span><br><span class="line">]</span><br></pre></td></tr></table></figure></li><li><p>复杂对象</p>  <figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="code">    name:value,</span></span><br><span class="line"><span class="code">    array:[&#123;name:value&#125;,&#123;&#125;,&#123;&#125;]</span></span><br><span class="line"><span class="code">    user:&#123;name:value&#125;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p>代码示例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>JSON基础语法<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 1.描述用户对象（张三丰、男、32岁）</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// let user = &#123;username:"张三丰",sex:"男",age:32&#125;;</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> user = &#123;<span class="string">"username"</span>: <span class="string">"张三丰"</span>, <span class="string">"sex"</span>: <span class="string">"男"</span>, <span class="string">"age"</span>: <span class="number">32</span>&#125;;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(user.username);</span></span><br><span class="line">    user.age = 50;</span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(user);</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="string">"---------------------"</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 2.描述用户数组（张三丰、张翠山、张无忌）</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> array = [</span></span><br><span class="line"><span class="actionscript">        &#123;<span class="string">"username"</span>: <span class="string">"张三丰"</span>, <span class="string">"sex"</span>: <span class="string">"男"</span>, <span class="string">"age"</span>: <span class="number">32</span>&#125;,</span></span><br><span class="line"><span class="actionscript">        &#123;<span class="string">"username"</span>: <span class="string">"张翠山"</span>, <span class="string">"sex"</span>: <span class="string">"男"</span>, <span class="string">"age"</span>: <span class="number">22</span>&#125;,</span></span><br><span class="line"><span class="actionscript">        &#123;<span class="string">"username"</span>: <span class="string">"张无忌"</span>, <span class="string">"sex"</span>: <span class="string">"男"</span>, <span class="string">"age"</span>: <span class="number">12</span>&#125;</span></span><br><span class="line">    ];</span><br><span class="line"><span class="javascript">    <span class="keyword">for</span> (<span class="keyword">let</span> user <span class="keyword">of</span> array) &#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(user.username);</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="string">"---------------------"</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 3.描述韦小宝（27岁，老婆、师傅）</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> xiaobao = &#123;</span></span><br><span class="line"><span class="actionscript">        <span class="string">"username"</span>: <span class="string">"韦小宝"</span>,</span></span><br><span class="line"><span class="actionscript">        <span class="string">"age"</span>: <span class="number">27</span>,</span></span><br><span class="line"><span class="actionscript">        <span class="string">"laopo"</span>: [</span></span><br><span class="line"><span class="actionscript">            &#123;<span class="string">"username"</span>: <span class="string">"双儿"</span>, <span class="string">"address"</span>: <span class="string">"扬州"</span>&#125;,</span></span><br><span class="line"><span class="actionscript">            &#123;<span class="string">"username"</span>: <span class="string">"建宁"</span>, <span class="string">"address"</span>: <span class="string">"北京人"</span>&#125;,</span></span><br><span class="line"><span class="actionscript">            &#123;<span class="string">"username"</span>: <span class="string">"皇后"</span>, <span class="string">"address"</span>: <span class="string">"岛国"</span>&#125;</span></span><br><span class="line">        ],</span><br><span class="line"><span class="actionscript">        <span class="string">"shifu"</span>: &#123;<span class="string">"username"</span>: <span class="string">"陈浩南"</span>, <span class="string">"address"</span>: <span class="string">"铜锣湾"</span>&#125;</span></span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(xiaobao.username);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">for</span> (<span class="keyword">let</span> laopo <span class="keyword">of</span> xiaobao.laopo) &#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(laopo.username + <span class="string">" "</span> + laopo.address);</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(xiaobao.shifu.username);</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="1-3-Json格式转换"><a href="#1-3-Json格式转换" class="headerlink" title="1.3 Json格式转换"></a>1.3 Json格式转换</h3><ul><li>JSON对象与字符串转换的相关函数<ul><li>语法：<ul><li>Json对象.stringify(object) 把json对象转为字符串</li><li>Json对象.parse(string) 把字符串转为json对象</li></ul></li></ul></li></ul><p>代码示例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>02-JSON格式转换<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> userStr = <span class="string">"&#123;\"username\":\"后羿\",\"age\":18,\"sex\":\"男\"&#125;"</span>;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="keyword">typeof</span> userStr);</span></span><br><span class="line"><span class="actionscript">    <span class="comment">//2. JSON.parse(string) 把字符串转为json对象</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> user = <span class="built_in">JSON</span>.parse(userStr);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="keyword">typeof</span> user);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(user.username);</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">//1. JSON.stringify(object) 把json对象转为字符串</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="keyword">typeof</span> <span class="built_in">JSON</span>.stringify(user));</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="二、AJAX入门"><a href="#二、AJAX入门" class="headerlink" title="二、AJAX入门"></a>二、AJAX入门</h2><h3 id="2-1-AJAX概述"><a href="#2-1-AJAX概述" class="headerlink" title="2.1 AJAX概述"></a>2.1 AJAX概述</h3><p><strong>传统网站中存在的问题</strong></p><ul><li><p>网速慢的情况下，页面加载时间长，用户只能等待</p></li><li><p>表单提交后，如果一项内容不合格，需要重新填写所有表单内容</p></li><li><p>页面跳转，重新加载页面，造成资源浪费，增加用户等待时间</p></li></ul><p><strong>AJAX可以解决以上问题</strong></p><p>ajax是浏览器提供的一套方法，在无需重新加载整个网页情况下，能够更新部分网页的技术，从而提高用户浏览网站应用的体验。</p><blockquote><p>中文音译：阿贾克斯</p></blockquote><p>应用场景：</p><ul><li>搜索框提示</li><li>表单数据验证</li><li>无刷新分页</li></ul><blockquote><p>AJAX：无需加载整个网页，可以向服务器发送异步请求，实现页面的局部刷新…</p></blockquote><h3 id="2-2-快速入门"><a href="#2-2-快速入门" class="headerlink" title="2.2 快速入门"></a>2.2 快速入门</h3><p>需求：校验用户名是否存在</p><h4 id="2-2-1-需求分析"><a href="#2-2-1-需求分析" class="headerlink" title="2.2.1 需求分析"></a>2.2.1 需求分析</h4><p><img data-src="/img/AJAX%E7%99%BB%E5%BD%95%E6%A1%88%E4%BE%8B.png" alt="AJAX登录案例"></p><h4 id="2-2-2-代码编写"><a href="#2-2-2-代码编写" class="headerlink" title="2.2.2 代码编写"></a>2.2.2 代码编写</h4><p>前提：需要准备一台服务器处理ajax请求，这里不做代码演示，主要演示AJAX。</p><p>JS代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>register<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../js/jquery-3.2.1.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"#"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">    用户名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"username"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"username"</span>&gt;</span> <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"userInfo"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 1.给用户名文本框绑定失去焦点事件</span></span></span><br><span class="line"><span class="javascript">    $(<span class="string">'#username'</span>).blur(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">       <span class="keyword">let</span> value=  $(<span class="keyword">this</span>).val();</span></span><br><span class="line"><span class="actionscript">       <span class="comment">// alert(value)</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 2.调用ajax发送请求</span></span></span><br><span class="line"><span class="javascript">        $.ajax(&#123;</span></span><br><span class="line"><span class="actionscript">            type:<span class="string">'post'</span>,</span></span><br><span class="line"><span class="actionscript">            url:<span class="string">'http://localhost:8080/check'</span>,</span></span><br><span class="line"><span class="actionscript">            data:<span class="string">'username='</span>+value,</span></span><br><span class="line"><span class="actionscript">            success:<span class="function"><span class="keyword">function</span> <span class="params">(resp)</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">                $(<span class="string">'#userInfo'</span>).html(resp)</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="2-2-3-API介绍"><a href="#2-2-3-API介绍" class="headerlink" title="2.2.3 API介绍"></a>2.2.3 API介绍</h4><blockquote><p>jQuery为了简化ajax的操作，提供了 $.ajax() 函数</p></blockquote><p>语法：<code>$.ajax({name:value,name:value})</code></p><p>常用参数：</p><ul><li>type:请求类型（方式）<ul><li>get / post / …</li></ul></li><li>url：请求地址</li><li>data：发送请求时，携带参数<ul><li>如果是get方式，在地址中拼接</li><li>如果post方式，在请求体当中拼接</li><li>例如：username=jack&amp;password=123&amp;age=18</li></ul></li><li>success：请求成功，服务器返回结果，帮你调用此函数<ul><li>resp：返回的数据变量</li></ul></li></ul><h4 id="2-2-4-练习"><a href="#2-2-4-练习" class="headerlink" title="2.2.4 练习"></a>2.2.4 练习</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>lx<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../js/jquery-3.2.1.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"cityId"</span>&gt;</span><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 页面加载成功后，向服务器发送请求，返回对应省份的城市</span></span></span><br><span class="line"><span class="javascript">    $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> province = prompt(<span class="string">'请输入城市'</span>)</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">if</span>(province != <span class="literal">null</span>)&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 发送ajax请求</span></span></span><br><span class="line"><span class="javascript">            $.ajax(&#123;</span></span><br><span class="line"><span class="actionscript">                type:<span class="string">'post'</span>,</span></span><br><span class="line"><span class="actionscript">                url:<span class="string">'http://localhost:8080/cityList'</span>,</span></span><br><span class="line"><span class="actionscript">                data:<span class="string">'province='</span>+province,</span></span><br><span class="line"><span class="actionscript">                success:<span class="function"><span class="keyword">function</span> <span class="params">(resp)</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">for</span> (<span class="keyword">let</span> city <span class="keyword">of</span> resp) &#123;</span></span><br><span class="line"><span class="javascript">                        $(<span class="string">'#cityId'</span>).append(<span class="string">`&lt;option&gt;<span class="subst">$&#123;city&#125;</span>&lt;/option&gt;`</span>)</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line"><span class="actionscript">                error:<span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                    alert(<span class="string">'服务器忙...'</span>)</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、Json&quot;&gt;&lt;a href=&quot;#一、Json&quot; class=&quot;headerlink&quot; title=&quot;一、Json&quot;&gt;&lt;/a&gt;一、Json&lt;/h2&gt;&lt;h3 id=&quot;1-1-Json概述&quot;&gt;&lt;a href=&quot;#1-1-Json概述&quot; class=&quot;headerlink&quot; title=&quot;1.1 Json概述&quot;&gt;&lt;/a&gt;1.1 Json概述&lt;/h3&gt;&lt;p&gt;JavaScript对象表示形式（JavaScript Object Notation）&lt;/p&gt;
&lt;figure class=&quot;highlight markdown&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;java对象表示形式:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;code&quot;&gt;    User user = new User();&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;code&quot;&gt;    user.setUsername(&quot;后羿&quot;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;code&quot;&gt;    user.setAge(23);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;code&quot;&gt;    user.setSex(&quot;男&quot;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;code&quot;&gt;			&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;javaScript对象表示形式:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;code&quot;&gt;    let user = &amp;#123;&quot;username&quot;:&quot;后羿&quot;,&quot;age&quot;:18,&quot;sex&quot;:&quot;男&quot;&amp;#125;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;code&quot;&gt;        取值：user.username&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;code&quot;&gt;        赋值：user.username=&quot;安其拉&quot;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;code&quot;&gt;    let product = &amp;#123;&amp;#125;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;code&quot;&gt;    let car = &amp;#123;&amp;#125;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="JavaWeb" scheme="http://sunmoon.com/categories/JavaWeb/"/>
    
    
      <category term="学习" scheme="http://sunmoon.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="Json" scheme="http://sunmoon.com/tags/Json/"/>
    
      <category term="AJAX" scheme="http://sunmoon.com/tags/AJAX/"/>
    
  </entry>
  
  <entry>
    <title>jQuery</title>
    <link href="http://sunmoon.com/2020/08/19/jQuery/"/>
    <id>http://sunmoon.com/2020/08/19/jQuery/</id>
    <published>2020-08-19T13:35:00.000Z</published>
    <updated>2020-08-23T14:34:21.138Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、jQuery概述"><a href="#一、jQuery概述" class="headerlink" title="一、jQuery概述"></a>一、jQuery概述</h2><h3 id="1-1-简介"><a href="#1-1-简介" class="headerlink" title="1.1 简介"></a>1.1 简介</h3><p>jQuery是一款优秀的javascript的轻量级框架之一，封装了dom操作、事件绑定、Ajax等功能。</p><p>特别值得一提的是基于jQuery平台的插件非常丰富，大多数前端业务场景都有其封装好的工具可直接使用。</p><a id="more"></a><p><strong>jQuery下载</strong></p><ul><li>官网地址：<a href="http://jquery.com" target="_blank" rel="noopener">http://jquery.com</a> </li></ul><blockquote><p>小贴士：</p><ul><li>jquery-xxx.js<ul><li>开发版本：有良好的缩进和注释格式，方便开发者阅读源代码</li></ul></li><li>jquery-xxx.min.js<ul><li>生产版本：对代码压缩、注释删除，易于网络传输</li></ul></li></ul></blockquote><h3 id="1-2-自定义JS框架"><a href="#1-2-自定义JS框架" class="headerlink" title="1.2 自定义JS框架"></a>1.2 自定义JS框架</h3><p><strong>框架（Framework）</strong>是完成某种功能的半成品，抽取重复繁琐的代码，提供简洁强大的方法实现。</p><p>代码演示：</p><p><strong>my.js</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 对获取js对方的方法进行抽取</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">jQuery</span>(<span class="params">id</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">document</span>.querySelector(id);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">$</span>(<span class="params">id</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">document</span>.querySelector(id);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>html</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>自定义js框架<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../js/my.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"myDiv"</span>&gt;</span>世界上最遥远的距离不是生与死，而是你亲手制造的BUG就在你眼前，你却怎么都找不到她。<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line">   /* </span><br><span class="line"><span class="actionscript">    <span class="comment">// js对象</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> myDiv = <span class="built_in">document</span>.querySelector(<span class="string">"#myDiv"</span>);</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 操作属性</span></span></span><br><span class="line"><span class="actionscript">    myDiv.innerHTML = <span class="string">'js修改了内容。。。'</span>;</span></span><br><span class="line">    */</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="javascript">    $(<span class="string">"#myDiv"</span>).innerHTML=<span class="string">'js封装后修改了内容'</span>;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="二、jQuery基础语法"><a href="#二、jQuery基础语法" class="headerlink" title="二、jQuery基础语法"></a>二、jQuery基础语法</h2><h3 id="2-1-HTMl引入jQuery"><a href="#2-1-HTMl引入jQuery" class="headerlink" title="2.1 HTMl引入jQuery"></a>2.1 HTMl引入jQuery</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>HTML引入Jquery<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">//引入jQuery</span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../js/jquery-3.2.1.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"myDiv"</span>&gt;</span>世界上最远的距离，是我在if里你在else里，虽然经常一起出现，但却永不结伴执行。<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 操作jq</span></span></span><br><span class="line"><span class="javascript">    $(<span class="string">'#myDiv'</span>).html(<span class="string">'jq修改的内容...'</span>);</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-2-jQuery和JS区别"><a href="#2-2-jQuery和JS区别" class="headerlink" title="2.2 jQuery和JS区别"></a>2.2 jQuery和JS区别</h3><p>jQuery虽然本质上也是js，但如果使用jQuery的属性和方法那么必须保证对象是jQuery对象而不是js对象。</p><p>通过js方式获取的是js对象，通过jQuery方式获取的是jQuery对象。两者的关系与区别总结如下：</p><h4 id="2-2-1-JS对象和jQuery对象的相互转换"><a href="#2-2-1-JS对象和jQuery对象的相互转换" class="headerlink" title="2.2.1 JS对象和jQuery对象的相互转换"></a>2.2.1 JS对象和jQuery对象的相互转换</h4><p>js—&gt;jQuery ：<code>$(js对象)  or  jQuery(js对象)</code></p><p>jQuery—&gt;js：<code>jq对象[索引]   or  jq对象.get(索引)</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>jq与js对象相互转换<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../js/jquery-3.2.1.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"myDiv"</span>&gt;</span>通过不同方式获得文本内容<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 通过js方式修改文本内容</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> myDiv = <span class="built_in">document</span>.querySelector(<span class="string">"#myDiv"</span>);</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// myDiv.innerHTML='js修改文本..'</span></span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 通过jq方式修改文本内容</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> $myDiv = $(<span class="string">'#myDiv'</span>);</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// $myDiv.html('jq修改文本..')</span></span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// js对象和jq对象的：属性和方法不同通用</span></span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// js操作jq的方法</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// myDiv.html('js操作jq方法...')</span></span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// js --&gt; jq</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// $(myDiv).html('js操作jq方法...')</span></span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// jq操作js属性</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// $myDiv.innerHTML = 'jq操作js属性';</span></span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// jq --&gt;  js   jq本质上是一个js数组对象，数组的每一个元素就是原生的js对象</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log($myDiv);</span></span><br><span class="line"><span class="actionscript">     $myDiv[<span class="number">0</span>].innerHTML = <span class="string">'jq操作js属性'</span>;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="2-2-2-页面加载事件"><a href="#2-2-2-页面加载事件" class="headerlink" title="2.2.2 页面加载事件"></a>2.2.2 页面加载事件</h4><p>语法：</p><ul><li><p>js：<code>window.onload=function(){...}</code></p></li><li><p>jQuery：<code>$(function(){})</code></p></li></ul><p>特点：</p><ul><li><strong>js：只能定义一次，后面的会覆盖前面的</strong></li><li><strong>jQuery：可以定义多次…</strong>    </li></ul><h2 id="三、jQuery选择器"><a href="#三、jQuery选择器" class="headerlink" title="三、jQuery选择器"></a>三、jQuery选择器</h2><blockquote><p>css、js、jquery选择器语法一样…</p></blockquote><h3 id="3-1-基本选择器"><a href="#3-1-基本选择器" class="headerlink" title="3.1 基本选择器"></a>3.1 基本选择器</h3><ul><li>标签（元素）选择器<ul><li>语法：<code>$(&quot;html标签名&quot;)</code> 获得所有匹配标签名称的元素</li></ul></li><li>id选择器<ul><li>语法：<code>$(&quot;#id的属性值&quot;)</code> 获得与指定id属性值匹配的元素</li></ul></li><li>类选择器<ul><li>语法：<code>$(&quot;.class的属性值&quot;)</code>获得与指定的class属性值匹配的元素</li></ul></li><li>并集选择器<ul><li>语法：<code>$(&quot;选择器1,选择器2....&quot;)</code>获取多个选择器选中的所有元素</li></ul></li></ul><p>使用演示：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>基本选择器<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../js/jquery-3.2.1.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"female"</span>&gt;</span>古力娜扎<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"female"</span>&gt;</span>迪丽热巴<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"female hero"</span>&gt;</span>黑寡妇<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"male hero"</span>&gt;</span>钢铁侠<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"male hero"</span>&gt;</span>超人<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"boss"</span>&gt;</span>灭霸<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 1.获取span标签的jquery对象</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log($(<span class="string">'span'</span>).length);</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 2.获取class有hero的jquery对象</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log($(<span class="string">'.hero'</span>).length);</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 3.获得id="boss"的jquery对象</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log($(<span class="string">'#boss'</span>).length);</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 4.并集选择器</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log($(<span class="string">'span,div'</span>).length);</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-2-层级关系选择器"><a href="#3-2-层级关系选择器" class="headerlink" title="3.2 层级关系选择器"></a>3.2 层级关系选择器</h3><ul><li><p>后代选择器</p><ul><li>语法：<code>$(&quot;A B&quot;)</code> 选择A元素内部的所有B元素</li></ul></li><li><p>父子选择器</p><ul><li>语法：<code>$(&quot;A &gt; B&quot;)</code> 选择A元素内部的所有B子元素</li></ul></li></ul><p>使用演示：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>层级关系选择器<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../js/jquery-3.2.1.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"kangxi"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>儿子：雍正<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">b</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>孙子：乾隆<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>牛顿<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 1. 获取div的后代span的文本</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log($(<span class="string">'#kangxi span'</span>).text());</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 2. 获取div儿子辈span</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log($(<span class="string">'#kangxi &gt; span'</span>).text());</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-3-属性选择器"><a href="#3-3-属性选择器" class="headerlink" title="3.3 属性选择器"></a>3.3 属性选择器</h3><ul><li>属性选择器：<ul><li>语法：<code>$(&quot;A[属性名=&#39;值&#39;]&quot;)</code>包含指定属性等于指定值的选择器</li></ul></li><li>复合属性选择器：<ul><li>语法：<code>$(&quot;A[属性名=&#39;值&#39;][]...&quot;)</code> 包含多个属性条件的选择器</li></ul></li></ul><p>使用演示：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>属性选择器<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../js/jquery-3.2.1.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"用户名"</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"nickname"</span> <span class="attr">value</span>=<span class="string">"昵称"</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 1.获取type='text'的input标签</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log($(<span class="string">'input[type="text"]'</span>).length);</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 2.获取type='text' 且 name="nickname" 的input标签</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log($(<span class="string">'input[type="text"][name="nickname"]'</span>).length);</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-4-过滤选择器"><a href="#3-4-过滤选择器" class="headerlink" title="3.4 过滤选择器"></a>3.4 过滤选择器</h3><ul><li>首元素选择器<ul><li>语法： :first 获得选择的元素中的第一个元素        </li></ul></li><li>尾元素选择器<ul><li>语法： :last 获得选择的元素中的最后一个元素</li></ul></li><li>偶数选择器（奇数行）<ul><li>语法： :even 偶数，从 0 开始计数</li></ul></li><li>奇数选择器（偶数行）<ul><li>语法： :odd 奇数，从 0 开始计数</li></ul></li><li>指定索引选择器<ul><li>语法： :eq(index) 指定索引元素</li></ul></li></ul><p>使用演示：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>过滤选择器<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../js/jquery-3.2.1.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>大娃（红娃）<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>二娃（橙娃）<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>三娃（黄娃）<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>四娃（绿娃）<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>五娃（青娃）<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>六娃（蓝娃）<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>七娃（紫娃）<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 1.获取第一个元素</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log($(<span class="string">'li:first'</span>).text());</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 2.获取偶数索引元素</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log($(<span class="string">'li:even'</span>).text());</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 3.获取指定索引2的(三娃)元素</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log($(<span class="string">'li:eq(2)'</span>).text());</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-5-对象的遍历"><a href="#3-5-对象的遍历" class="headerlink" title="3.5 对象的遍历"></a>3.5 对象的遍历</h3><p>语法：<code>jQuery对象.each(function(index, element){...})</code></p><p>使用演示：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>对象遍历<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../js/jquery-3.2.1.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">id</span>=<span class="string">"city"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>北京<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>上海<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>天津<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 获取ul的jq对象</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// let $city = $('#city li');</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> city = <span class="built_in">document</span>.querySelectorAll(<span class="string">'#city li'</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// js普通for</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; city.length; i++) &#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(city[i].innerText);</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// js增强for</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">for</span> (<span class="keyword">let</span> ele <span class="keyword">of</span> city) &#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(ele.innerText);</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// jq遍历方法，集各家之所长...</span></span></span><br><span class="line"><span class="javascript">    $(city).each(<span class="function"><span class="keyword">function</span> (<span class="params">index,element</span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// console.log(index);</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// console.log($city[index].innerText);</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// console.log(element);</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//console.log(element.innerText);</span></span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">        <span class="comment">// console.log($(element).text()); // js转jq，调用jq方法..</span></span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log($(<span class="keyword">this</span>).text()); <span class="comment">// this表示当前 遍历的元素js对象</span></span></span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="四、jQuery的DOM操作"><a href="#四、jQuery的DOM操作" class="headerlink" title="四、jQuery的DOM操作"></a>四、jQuery的DOM操作</h2><h3 id="4-1-jQuery操作内容"><a href="#4-1-jQuery操作内容" class="headerlink" title="4.1 jQuery操作内容"></a>4.1 jQuery操作内容</h3><ul><li><p><code>text()</code>：获取/设置元素的标签体纯文本内容</p><ul><li>相当于js：innerText属性</li></ul></li><li><p><code>html()</code>: 获取/设置元素的标签体超文本内容</p><ul><li>相当于js：innerHTML属性</li></ul></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>dom操作内容<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../js/jquery-3.2.1.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"myDiv"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>天王盖地虎<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 1.text()操作内容</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 1.1 获取div纯文本</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// console.log($('#myDiv').text());</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 1.2 设置div纯文本</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">    // $('#myDiv').text('<span class="tag">&lt;<span class="name">h1</span>&gt;</span>小鸡炖蘑菇<span class="tag">&lt;/<span class="name">h1</span>&gt;</span>')</span></span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 2.html()操作内容</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 2.1 获取div超文本</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log($(<span class="string">'#myDiv'</span>).html());</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 2.2 设置div超文本</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">   // $('#myDiv').html('<span class="tag">&lt;<span class="name">h1</span>&gt;</span>小鸡炖蘑菇<span class="tag">&lt;/<span class="name">h1</span>&gt;</span>');</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 2.3 追加</span></span></span><br><span class="line"><span class="javascript">    $(<span class="string">'#myDiv'</span>).html($(<span class="string">"#myDiv"</span>).html() + <span class="string">'&lt;h1&gt;小鸡炖蘑菇&lt;/h1&gt;'</span>);</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="4-2-jQuery操作属性"><a href="#4-2-jQuery操作属性" class="headerlink" title="4.2 jQuery操作属性"></a>4.2 jQuery操作属性</h3><ul><li><p><code>val()</code>：获取/设置 （input标签）value属性值</p><ul><li>相当于：input的js对象.value属性</li></ul></li><li><p><code>attr()</code>: 获取/设置元素的属性</p></li><li><p><code>removeAttr()</code>：删除属性</p></li></ul><p>jQuery在1.6版本之后，提供另一组API prop 通常处理属性值为布尔类型操作</p><ul><li><p>例如：checked selected等</p></li><li><p><code>prop()</code>：获取/设置元素的属性</p></li><li><p><code>removeProp()</code>：删除属性</p></li></ul><p>使用示例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>dom操作属性<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../js/jquery-3.2.1.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"#"</span> <span class="attr">method</span>=<span class="string">"get"</span>&gt;</span></span><br><span class="line">    姓名 <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">id</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"德玛西亚"</span>/&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    爱好</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"hobby"</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"hobby"</span> <span class="attr">value</span>=<span class="string">"perm"</span>  &gt;</span>烫头<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"reset"</span> <span class="attr">value</span>=<span class="string">"清空按钮"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"提交按钮"</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 1.获取文本框value属性</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// console.log($("#username").val());</span></span></span><br><span class="line"><span class="javascript">    $(<span class="string">'#username'</span>).val(<span class="string">'草丛伦...'</span>)</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 获取指定属性的值</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log($(<span class="string">'#hobby'</span>).attr(<span class="string">'value'</span>));</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 设置/更新指定属性的值</span></span></span><br><span class="line"><span class="javascript">    $(<span class="string">'#hobby'</span>).attr(<span class="string">'value'</span>,<span class="string">'烫头'</span>);</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 删除属性</span></span></span><br><span class="line"><span class="javascript">    $(<span class="string">'#hobby'</span>).removeAttr(<span class="string">'value'</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 2.获取爱好的checked属性</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// attr() 方法操作 boolean类型的属性比较麻烦...</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// console.log($('#hobby').attr('checked'));</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log($(<span class="string">'#hobby'</span>).prop(<span class="string">'checked'</span>));</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="4-3-jQuery操作样式"><a href="#4-3-jQuery操作样式" class="headerlink" title="4.3 jQuery操作样式"></a>4.3 jQuery操作样式</h3><ol><li><p>直接修改jQuery对象的样式属性</p><ul><li><p>语法：<code>jQuery对象.css()</code></p><ul><li><p>css(样式名) 获取</p></li><li><p>css(样式名,样式值) 设置</p><blockquote><p>兼容性好：样式名支持：fontSize | font-size</p></blockquote></li></ul></li></ul></li><li><p>添加/删除jQuery对象样式</p><ul><li>语法：<ul><li>添加：<code>jQuery对象.addClass()</code></li><li>删除：<code>jQuery对象.removeClass()</code></li></ul></li></ul></li><li><p>切换jq对象样式</p><ul><li>语法：<code>jQuery对象.toggleClass()</code>  无添加，有删除</li></ul></li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>dom操作样式<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../js/jquery-3.2.1.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-id">#p1</span>&#123; <span class="attribute">background-color</span>: red;&#125;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.mp</span> &#123;</span></span><br><span class="line">            color: green</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.mpp</span> &#123;</span></span><br><span class="line">            background-color: lightgray;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"p1"</span>&gt;</span>1. 设置一个css样式<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"p2"</span>&gt;</span>2. 批量设置css样式<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"p3"</span>&gt;</span>3. 通过class设置样式<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"p4"</span>&gt;</span>4. <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"toggle"</span>&gt;</span>切换<span class="tag">&lt;/<span class="name">button</span>&gt;</span>class样式 <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> $p1 = $(<span class="string">'#p1'</span>);<span class="comment">//获取p1</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> $p2 = $(<span class="string">'#p2'</span>);<span class="comment">//获取p2</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> $p3 = $(<span class="string">'#p3'</span>);<span class="comment">//获取p3</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">let</span> $p4 = $(<span class="string">'#p4'</span>);<span class="comment">//获取p4</span></span></span><br><span class="line"></span><br><span class="line"><span class="handlebars"><span class="xml">    // 1. 设置一个css样式   <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"p1"</span> <span class="attr">style</span>=<span class="string">"xxxxxxx"</span>&gt;</span>1. 设置一个css样式<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">//$p1.css('backgroundColor','skyblue');</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// $p1.css('background-color','skyblue');</span></span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 2. 批量设置css样式</span></span></span><br><span class="line"><span class="actionscript">    $p2.css(&#123;<span class="string">"background-color"</span>:<span class="string">"gold"</span>,<span class="string">"border"</span>:<span class="string">"1px solid red"</span>&#125;)</span></span><br><span class="line"></span><br><span class="line"><span class="handlebars"><span class="xml">    // 3. 通过class设置样式  <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"p3"</span> <span class="attr">class</span>=<span class="string">"mp mpp"</span>&gt;</span>3. 通过class设置样式<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span></span><br><span class="line"><span class="actionscript">    $p3.addClass(<span class="string">'mp mpp'</span>);</span></span><br><span class="line"><span class="actionscript">    $p3.removeClass(<span class="string">'mpp'</span>)</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript"><span class="comment">// 4. toggleClass() 切换一个class</span></span></span><br><span class="line"><span class="javascript">    $(<span class="string">'#toggle'</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">        $p4.toggleClass(<span class="string">'mp mpp'</span>)</span></span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="4-4-jQuery操作元素"><a href="#4-4-jQuery操作元素" class="headerlink" title="4.4 jQuery操作元素"></a>4.4 jQuery操作元素</h3><ol><li>$(标签) 创建一个标签<ul><li><code>$(&quot;&lt;a&gt;xx&lt;/a&gt;&quot;)</code>  相当于 document.createElement(‘li’)</li></ul></li><li>prepend()  在当前元素内部，首部添加子元素<ul><li><code>父对象.prepend(子对象)</code></li></ul></li><li>append() 在当前元素内部，尾部添加子元素<ul><li><code>父对象.append(子对象)</code></li></ul></li></ol><ol start="4"><li><p>empty() 清空子元素 （断子绝孙）</p><ul><li><code>对象.empty()</code></li></ul></li><li><p>remove() 删除自己  （满门抄斩）</p><ul><li><code>对象.remove()</code></li></ul></li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>12-dom操作元素<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../js/jquery-3.2.1.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">id</span>=<span class="string">"star"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>古力娜扎<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>迪丽热巴<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> $star = $(<span class="string">'#star'</span>); <span class="comment">// 无序列表</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log($(<span class="string">'&lt;li&gt;萨瓦迪卡&lt;/li&gt;'</span>));</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 1.前面添加马尔扎哈</span></span></span><br><span class="line"><span class="javascript">    $star.prepend($(<span class="string">'&lt;li&gt;马尔扎哈&lt;/li&gt;'</span>))</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 2.后面添加萨瓦迪卡</span></span></span><br><span class="line"><span class="javascript">    $star.append($(<span class="string">'&lt;li&gt;萨瓦迪卡&lt;/li&gt;'</span>))</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 3.移出所有列表项</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// $star.empty();</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 4.删除无序列表</span></span></span><br><span class="line">    $star.remove()</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="五、jQuery事件绑定"><a href="#五、jQuery事件绑定" class="headerlink" title="五、jQuery事件绑定"></a>五、jQuery事件绑定</h2><p>jQuery的事件与js的事件的功能和作用一样，只是在使用语法上稍微有些差异。</p><ul><li><p><code>js对象.事件属性=function(){}</code></p></li><li><p><code>jq对象.事件函数(function(){})</code></p></li></ul><h3 id="常见的事件"><a href="#常见的事件" class="headerlink" title="常见的事件"></a>常见的事件</h3><ol><li>点击事件：<ul><li><code>click()</code>：单击事件</li><li><code>dblclick()</code>：双击事件</li></ul></li><li>焦点事件<ul><li><code>blur()</code>：失去焦点</li><li><code>focus()</code>:元素获得焦点。</li></ul></li><li>鼠标事件：<ul><li><code>mousedown()</code>：鼠标按钮被按下。</li><li><code>mouseup()</code>：鼠标按键被松开。</li><li><code>mousemove()</code>：鼠标被移动。</li><li><code>mouseover()</code>：鼠标移到某元素之上。</li><li><code>mouseout()</code>：鼠标从某元素移开。</li></ul></li><li>键盘事件：<ul><li><code>keydown()</code>：某个键盘按键被按下。    </li><li><code>keyup()</code>：某个键盘按键被松开。</li><li><code>keypress()</code>：某个键盘按键被按下并松开。</li></ul></li><li>改变事件<ul><li><code>change()</code>：域的内容被改变。</li></ul></li><li>表单事件：<ul><li><code>submit()</code>：提交按钮被点击。</li></ul></li><li>页面加载事件：<ul><li><code>$(function(){})</code></li></ul></li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>jq事件绑定<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../js/jquery-3.2.1.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"js方式"</span> <span class="attr">id</span>=<span class="string">"jsBtn"</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"jq方式"</span> <span class="attr">id</span>=<span class="string">"jqBtn"</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// js方式</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.getElementById(<span class="string">'jsBtn'</span>).onclick=<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">        alert(<span class="string">'js方式'</span>)</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// jq方式</span></span></span><br><span class="line"><span class="javascript">    $(<span class="string">'#jqBtn'</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">        alert(<span class="string">'jq方式'</span>)</span></span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、jQuery概述&quot;&gt;&lt;a href=&quot;#一、jQuery概述&quot; class=&quot;headerlink&quot; title=&quot;一、jQuery概述&quot;&gt;&lt;/a&gt;一、jQuery概述&lt;/h2&gt;&lt;h3 id=&quot;1-1-简介&quot;&gt;&lt;a href=&quot;#1-1-简介&quot; class=&quot;headerlink&quot; title=&quot;1.1 简介&quot;&gt;&lt;/a&gt;1.1 简介&lt;/h3&gt;&lt;p&gt;jQuery是一款优秀的javascript的轻量级框架之一，封装了dom操作、事件绑定、Ajax等功能。&lt;/p&gt;
&lt;p&gt;特别值得一提的是基于jQuery平台的插件非常丰富，大多数前端业务场景都有其封装好的工具可直接使用。&lt;/p&gt;
    
    </summary>
    
    
      <category term="JavaWeb" scheme="http://sunmoon.com/categories/JavaWeb/"/>
    
    
      <category term="学习" scheme="http://sunmoon.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="jQuery" scheme="http://sunmoon.com/tags/jQuery/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript</title>
    <link href="http://sunmoon.com/2020/08/16/JavaScript/"/>
    <id>http://sunmoon.com/2020/08/16/JavaScript/</id>
    <published>2020-08-16T11:51:58.000Z</published>
    <updated>2020-08-18T13:18:14.865Z</updated>
    
    <content type="html"><![CDATA[<h1 id="JavaScript"><a href="#JavaScript" class="headerlink" title="JavaScript"></a>JavaScript</h1><h2 id="一、概述"><a href="#一、概述" class="headerlink" title="一、概述"></a>一、概述</h2><h3 id="1-1-概念"><a href="#1-1-概念" class="headerlink" title="1.1 概念"></a>1.1 概念</h3><p>概念：一门客户端脚本语言。</p><ul><li>运行在客户端浏览器中的，每一个浏览器都有JavaScript的解析引擎</li><li>脚本语言：不需要编译，直接就可以被浏览器解析执行。</li></ul><a id="more"></a><h3 id="1-2-功能"><a href="#1-2-功能" class="headerlink" title="1.2 功能"></a>1.2 功能</h3><p>功能：可以来增强用户和HTML页面的交互过程，可以控制HTML元素，让页面有一些动态的效果，增强用户体验。</p><h3 id="1-3-特点"><a href="#1-3-特点" class="headerlink" title="1.3 特点"></a>1.3 特点</h3><ul><li><p>JS源码不需要编译，浏览器可以直接解释运行</p></li><li><p>JS是弱类型语言，js变量声明不需要指明类型</p></li></ul><blockquote><p>小结：js是弱类型的脚本语言，可以直接在浏览器解释运行</p></blockquote><h3 id="1-4-JavaScript的组成"><a href="#1-4-JavaScript的组成" class="headerlink" title="1.4 JavaScript的组成"></a>1.4 JavaScript的组成</h3><table><thead><tr><th>组成部分</th><th>作用</th></tr></thead><tbody><tr><td>ECMA Script</td><td>构成了JS核心的语法基础</td></tr><tr><td>BOM</td><td>Browser Object Model 浏览器对象模型，用来操作浏览器上的对象</td></tr><tr><td>DOM</td><td>Document Object Model 文档对象模型，用来操作网页中的元素（标签）</td></tr></tbody></table><h2 id="二、基础语法"><a href="#二、基础语法" class="headerlink" title="二、基础语法"></a>二、基础语法</h2><h3 id="2-1-HTML引入JS"><a href="#2-1-HTML引入JS" class="headerlink" title="2.1 HTML引入JS"></a>2.1 HTML引入JS</h3><p>在HTML中引入JS有两种方式：</p><ul><li>内部脚本<ul><li>语法：<code>&lt;script type=&quot;text/javascript&quot;&gt; js代码 &lt;/script&gt;</code></li><li>作用范围：当前页面</li></ul></li><li>外部脚本<ul><li>语法：<code>&lt;script type=&quot;text/javascript&quot; src=&quot;外部js文件路径&quot;&gt;&lt;/script&gt;</code></li><li>作用范围：所有引入当前JS文件的页面</li></ul></li></ul><blockquote><p>小贴士：</p><ul><li><p>扩展:在开发时 style和link标签通常在head头部，script标签在body尾部…</p></li><li><p>注意：如果script标签引入了外部脚本，那么标签体不能自闭合，而且不允许有js代码</p></li></ul></blockquote><h3 id="2-2-注释"><a href="#2-2-注释" class="headerlink" title="2.2 注释"></a>2.2 注释</h3><ul><li>单行注释：<code>//注释内容</code></li><li>多行注释：<code>/* 注释内容 */</code></li></ul><h3 id="2-3-JS的三种输出方式"><a href="#2-3-JS的三种输出方式" class="headerlink" title="2.3 JS的三种输出方式"></a>2.3 JS的三种输出方式</h3><p>在JavaScript中，有三种输出方式，分别是</p><ul><li><p>在浏览器弹框输出：<code>alert(&#39;内容&#39;);</code></p></li><li><p>输出到html页面：<code>document.write(&#39;内容&#39;);</code></p></li><li><p>输出到浏览器控制台：<code>cosole.log(&#39;内容&#39;);</code></p></li></ul><p>代码示例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>JS三种输出方式<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 1. 浏览器弹框输出字符</span></span></span><br><span class="line"><span class="actionscript">    alert(<span class="string">'哈哈'</span>)</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 2. 输出html内容到页面</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.write(<span class="string">'呵呵'</span>)</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 3. 输出到浏览器控制台</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="string">'嘻嘻'</span>)</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-4-JS的数据类型及其变量声明"><a href="#2-4-JS的数据类型及其变量声明" class="headerlink" title="2.4 JS的数据类型及其变量声明"></a>2.4 JS的数据类型及其变量声明</h3><h4 id="2-4-1-数据类型"><a href="#2-4-1-数据类型" class="headerlink" title="2.4.1 数据类型"></a>2.4.1 数据类型</h4><p>数据类型可分为原始数据类型和引用数据类型：</p><ul><li>原始数据类型<ul><li>number：数值。包括整数、浮点数、NaN(not a number 一个不是数字的数字类型)</li><li>string：字符串。</li><li>boolean：true、flase</li><li>undefine：未定义</li><li>null：一个对象为空的占位符</li></ul></li><li>引用数据类型：对象(Object)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">let</span> str = <span class="string">'哈哈'</span>;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">typeof</span> str);</span><br><span class="line">    <span class="keyword">let</span> i = <span class="number">521</span>;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">typeof</span> i);</span><br><span class="line">    <span class="keyword">let</span> u;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">typeof</span> u);</span><br><span class="line">    <span class="keyword">let</span> b = <span class="literal">true</span>;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">typeof</span> b);</span><br><span class="line">    <span class="keyword">let</span> n = <span class="literal">null</span>;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">typeof</span> n);</span><br><span class="line">    <span class="keyword">let</span> date = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">typeof</span> date);</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>小贴士：</p><ul><li><code>typeof 变量名</code>：可以查看变量的数据类型</li></ul></blockquote><h4 id="2-4-2-变量声明"><a href="#2-4-2-变量声明" class="headerlink" title="2.4.2 变量声明"></a>2.4.2 变量声明</h4><p>Java语言是强类型语言，而<strong>JavaScript是弱类型语言</strong>。</p><ul><li>强类型：在开辟变量存储空间时，定义了空间将来存储的数据的数据类型。只能存储固定类型的数据</li><li><strong>弱类型</strong>：在开辟变量存储空间时，不定义空间将来的存储数据类型，<strong>可以存放任意类型的数据</strong>。</li></ul><p>定义语法(这里讲解<code>ES6</code>的语法)：</p><ul><li><p>变量：<code>let 变量名 = 变量值;</code></p></li><li><p>常量：<code>const 常量名 = 常量值;</code></p></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">//Java: String str = "你好";</span></span><br><span class="line">    <span class="keyword">let</span> str = <span class="string">'你好'</span>;</span><br><span class="line">    <span class="built_in">console</span>.log(str);</span><br><span class="line">    <span class="comment">//Java: int i = 1314;</span></span><br><span class="line">    <span class="keyword">let</span> i = <span class="number">1314</span>;</span><br><span class="line">    <span class="built_in">console</span>.log(i);</span><br><span class="line">    <span class="comment">//Java: double d = 521.1314;</span></span><br><span class="line">    <span class="keyword">let</span> d = <span class="number">521.1314</span>;</span><br><span class="line">    <span class="built_in">console</span>.log(d);</span><br><span class="line">    <span class="comment">//Java: final Integer PI = 3.14;</span></span><br><span class="line">    <span class="keyword">const</span> PI = <span class="number">3.14</span>;</span><br><span class="line">    <span class="built_in">console</span>.log(PI);</span><br><span class="line">    <span class="comment">//Java: boolean b = true;</span></span><br><span class="line">    <span class="keyword">let</span> b = <span class="literal">true</span></span><br><span class="line">    <span class="built_in">console</span>.log(b);</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-5-JS的运算符"><a href="#2-5-JS的运算符" class="headerlink" title="2.5 JS的运算符"></a>2.5 JS的运算符</h3><ol><li>一元运算符：只有一个运算数的运算符<ul><li>++，–，+【正号】</li></ul></li><li>算数运算符<ul><li>+，-，*，/，%…</li></ul></li><li>赋值运算符<ul><li>=，+=，-=</li></ul></li><li>比较运算符<ul><li>&lt;，&gt;，&gt;=，&lt;=，==，===(全等于)</li></ul></li><li>逻辑运算符<ul><li>&amp;&amp;，||，!</li><li>其他类型转boolean：<ol><li>number：0或NaN为假，其他为真</li><li>string：除了空字符串(“”)，其他都是true【双引号内有空格不算空串】</li><li>null&amp;undefined:都是false</li><li>对象：所有对象都为true</li></ol></li></ul></li><li>三元运算符<ul><li>? :</li><li>语法：<ul><li>表达式? 值1:值2;</li><li>判断表达式的值，如果是true则取值1，如果是false则取值2；</li></ul></li></ul></li></ol><blockquote><p>js与java的运算符使用方法大致相同。</p><p>NaN：not a number（意思是不是一个数字）</p><p>需要注意的是:</p><ul><li><p>js的数值可以与字符串参与数学运算，底层进行了隐式转换</p></li><li><p><code>===</code>：全等于，数值和数据类型全部一样才为true，<code>==</code>只比较数值</p></li></ul></blockquote><h3 id="2-6-JS流程控制"><a href="#2-6-JS流程控制" class="headerlink" title="2.6 JS流程控制"></a>2.6 JS流程控制</h3><p>高级语言中的三种基本结构：顺序、分支、循环 。</p><h4 id="2-6-1-条件判断"><a href="#2-6-1-条件判断" class="headerlink" title="2.6.1 条件判断"></a>2.6.1 条件判断</h4><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1. </span>if判断</span><br><span class="line"><span class="code">if (条件表达式) &#123;</span></span><br><span class="line"><span class="code">            代码块;</span></span><br><span class="line"><span class="code">        &#125; else if(条件表达式) &#123;</span></span><br><span class="line"><span class="code">            代码块;</span></span><br><span class="line"><span class="code">        &#125; else &#123;</span></span><br><span class="line"><span class="code">            代码块;</span></span><br><span class="line"><span class="code">        &#125;</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">2. </span>switch判断</span><br><span class="line"><span class="code">switch(条件表达式)&#123;</span></span><br><span class="line"><span class="code">            case 满足条件1 :</span></span><br><span class="line"><span class="code">            代码块 break;</span></span><br><span class="line"><span class="code">            case 满足条件2 :</span></span><br><span class="line"><span class="code">            代码块 break;</span></span><br><span class="line"><span class="code">            default:</span></span><br><span class="line"><span class="code">            默认代码块;</span></span><br><span class="line"><span class="code">&#125;</span></span><br></pre></td></tr></table></figure><p>代码示例：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">// let flag = false;</span></span><br><span class="line">    <span class="comment">// let flag = ' '; // 非空串为真</span></span><br><span class="line">    <span class="comment">// let flag = 0; // 非零为真</span></span><br><span class="line">    <span class="comment">// let flag = new Date();  // 有对象为真</span></span><br><span class="line">    <span class="comment">// let flag ; // 未定义未假</span></span><br><span class="line">    <span class="keyword">let</span> flag = <span class="literal">null</span>; <span class="comment">// 空值为假</span></span><br><span class="line">    <span class="keyword">if</span> (flag) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"真的"</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"假的"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><h4 id="2-6-2-循环语句"><a href="#2-6-2-循环语句" class="headerlink" title="2.6.2 循环语句"></a>2.6.2 循环语句</h4><p>在js中，有五种循环分别是：</p><ul><li><p>普通for循环</p><ul><li><pre><code class="js"><span class="keyword">for</span>(<span class="keyword">let</span> i= <span class="number">0</span>; i&lt;<span class="number">10</span>; i++){    需要执行的代码;}&lt;!--￼<span class="number">5</span>--&gt;</code></pre></li></ul></li><li><p>索引for循环(for…in)</p><ul><li><pre><code class="js"><span class="keyword">for</span>(<span class="keyword">let</span> index <span class="keyword">in</span> array){    需要执行的代码;}&lt;!--￼<span class="number">6</span>--&gt;</code></pre></li></ul></li><li><p>do..while循环</p><ul><li><pre><code class="js"><span class="keyword">do</span>{    需要执行的代码;}<span class="keyword">while</span>(条件表达式);&lt;!--￼<span class="number">7</span>--&gt;</code></pre></li></ul></li></ul><h3 id="2-7-扩展"><a href="#2-7-扩展" class="headerlink" title="2.7 扩展"></a>2.7 扩展</h3><p>在ES6之前，js定义变量使用var关键字定义。</p><ul><li>而var声明的变量没有块级作用域</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 使用var声明的变量没有块级作用域</span></span><br><span class="line">    <span class="keyword">let</span> a = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">let</span> a = <span class="number">15</span>;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">console</span>.log(a); <span class="comment">//10</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span> ; i  &lt; <span class="number">5</span> ; i++)&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"haha"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">console</span>.log(i); <span class="comment">//5</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> j = <span class="number">0</span>; j &lt; <span class="number">5</span>; j++) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'hehe'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">console</span>.log(j);<span class="comment">//报错，j is not defined</span></span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>上述代码，除出了for循环仍可以获取i的值，值为5</p></blockquote><h2 id="三、JS函数"><a href="#三、JS函数" class="headerlink" title="三、JS函数"></a>三、JS函数</h2><p>js函数是执行特定功能的代码块.也可以称为js方法</p><h3 id="3-1-普通函数"><a href="#3-1-普通函数" class="headerlink" title="3.1 普通函数"></a>3.1 普通函数</h3><p>格式：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> 函数名(<span class="params">参数<span class="number">1</span>,参数<span class="number">2</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> xxx;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>调用：<code>函数名(实际参数1，实际参数2...);</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 二个数求和</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">sum</span>(<span class="params">a, b</span>) </span>&#123;</span><br><span class="line">        <span class="comment">// console.log(a + b);</span></span><br><span class="line">        <span class="keyword">return</span> a + b;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 三个数求和</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">sum</span>(<span class="params">a, b, c</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="built_in">arguments</span>);</span><br><span class="line">        <span class="keyword">return</span> a + b + c;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 求N个数的和</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">sum</span>(<span class="params">...args</span>)</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(args);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> result = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> arg <span class="keyword">of</span> args) &#123;</span><br><span class="line">            result+= arg;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// NaN not a number 这不是一个数</span></span><br><span class="line">    <span class="keyword">let</span> result = sum(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>);</span><br><span class="line">    <span class="built_in">console</span>.log(result);</span><br><span class="line"></span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>js函数特点：</p><ul><li>声明的函数不需要定义返回值</li><li>声明的函数形参不需要使用变量修饰符声明</li><li>如果有返回值就加上return</li><li>js没有方法重载，重名的会被覆盖…</li><li>js的函数参数个数不太严谨【了解】</li><li>所有的函数体内置了arguments数组，用于接收调用时传递的实际参数</li><li>js函数支持可变参数</li></ul></blockquote><h3 id="3-2-匿名函数"><a href="#3-2-匿名函数" class="headerlink" title="3.2 匿名函数"></a>3.2 匿名函数</h3><p>格式：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> (<span class="params">a,b</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a+b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="四、事件"><a href="#四、事件" class="headerlink" title="四、事件"></a>四、事件</h2><p>事件：JS可以监听用户的行为,并调用函数来完成用户交互功能.</p><h3 id="4-1-常用事件"><a href="#4-1-常用事件" class="headerlink" title="4.1 常用事件"></a>4.1 常用事件</h3><p>点击事件：</p><ul><li>onclick：单击事件</li><li>ondbclick：双击事件</li></ul><p>焦点事件：</p><ul><li>onblur：失去焦点</li><li>onfocus：元素获得焦点</li></ul><p>加载事件：</p><ul><li>onload：页面加载完成后立即发生</li></ul><p>鼠标事件：</p><ul><li>onmousedown    鼠标按钮被按下。</li><li>onmouseup    鼠标按键被松开。</li><li>onmousemove    鼠标被移动。</li><li>onmouseover    鼠标移到某元素之上。</li><li>onmouseout    鼠标从某元素移开。</li></ul><p>键盘事件：</p><ul><li><p>onkeydown    某个键盘按键被按下。    </p></li><li><p>onkeyup        某个键盘按键被松开。</p></li><li><p>onkeypress    某个键盘按键被按下并松开。</p></li></ul><p>改变事件：</p><ul><li>onchange    域的内容被改变。</li></ul><p>表单事件：</p><ul><li>onsubmit    提交按钮被点击。</li></ul><h3 id="4-2-事件绑定"><a href="#4-2-事件绑定" class="headerlink" title="4.2 事件绑定"></a>4.2 事件绑定</h3><p>将事件与HTML标签进行绑定，实现交互功能。</p><p>代码示例</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>08-事件绑定<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"普通函数"</span> <span class="attr">onclick</span>=<span class="string">"fun1()"</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"匿名函数"</span> <span class="attr">id</span>=<span class="string">"btn"</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 普通函数</span></span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">fun1</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">        alert(<span class="string">'我是普通函数...'</span>)</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 匿名函数</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 1.获取button按钮的js对象</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> btn = <span class="built_in">document</span>.getElementById(<span class="string">'btn'</span>);</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 2.给onclick属性绑定匿名函数</span></span></span><br><span class="line"><span class="actionscript">    btn.onclick=<span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">        alert(<span class="string">'我是匿名函数'</span>)</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.getElementById(<span class="string">'btn'</span>).onclick=<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">        alert(<span class="string">'我是匿名函数'</span>)</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="4-3-案例：页面交互"><a href="#4-3-案例：页面交互" class="headerlink" title="4.3 案例：页面交互"></a>4.3 案例：页面交互</h3><p>需求：给页面表单控件绑定对应事件，实现交互功能</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>案例：页面交互<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">姓名 <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"username"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">学历</span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">"edu"</span> <span class="attr">id</span>=<span class="string">"edu"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"0"</span>&gt;</span>请选择<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"1"</span>&gt;</span>本科<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"2"</span>&gt;</span>大专<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"btn"</span>&gt;</span>按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"#"</span> <span class="attr">method</span>=<span class="string">"get"</span> <span class="attr">id</span>=<span class="string">"myForm"</span>&gt;</span></span><br><span class="line">    文本框：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"text"</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"注册"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">//1. onload 页面加载完成</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;  <span class="comment">// 当前窗口加载完毕后，触发的事件，执行函数完成某些功能</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//  alert('页面加载完毕。。。')</span></span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// alert('haha')</span></span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">//2. onfocus 获取焦点</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.getElementById(<span class="string">'username'</span>).onfocus = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//  document.getElementById('username').value='哈哈';</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// js对象绑定事件时，也有this的概念，this表示当前的js对象</span></span></span><br><span class="line"><span class="actionscript">        <span class="keyword">this</span>.value = <span class="string">'呵呵'</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">//3. onblur 失去焦点</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.getElementById(<span class="string">'username'</span>).onblur = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">this</span>.value = <span class="string">''</span></span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">//4. onchange 表单控件的值改变时</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.getElementById(<span class="string">'edu'</span>).onchange = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">        alert(<span class="keyword">this</span>.value)</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">//5. onclick 鼠标单击</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.getElementById(<span class="string">'btn'</span>).ondblclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">        alert(<span class="string">'哎呀妈呀，我被点了》。。'</span>)</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 6. onsubmit 表单事件</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.getElementById(<span class="string">'myForm'</span>).onsubmit=<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="actionscript">       <span class="comment">// return true; // 表单正常提交</span></span></span><br><span class="line"><span class="actionscript">        <span class="keyword">return</span> <span class="literal">false</span>;<span class="comment">// 表单拦截</span></span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="五、JS内置对象"><a href="#五、JS内置对象" class="headerlink" title="五、JS内置对象"></a>五、JS内置对象</h2><h3 id="5-1-string对象"><a href="#5-1-string对象" class="headerlink" title="5.1 string对象"></a>5.1 string对象</h3><p>字符串对象</p><ul><li>js构造字符串对象可以使用单引号(<code>&#39;&#39;</code>)，双引号(<code>&quot;&quot;</code>)，反引号<code>(``)</code>三种方式</li></ul><p>字符串的常用方法：</p><ul><li>substring(startIndex,endIndex) [start,end)  字符串截取</li><li>trim()  去掉左右空格</li><li>split()  切割字符串，变为数组</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line">    <span class="comment">//构造字符串对象可以使用  双引号,单引号,反引号</span></span><br><span class="line">    <span class="comment">// 双引号</span></span><br><span class="line">    <span class="keyword">let</span> str1 = <span class="string">"哈哈"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 单引号</span></span><br><span class="line">    <span class="keyword">let</span> str2 = <span class="string">'呵呵'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 反引号：通过 $&#123;变量占位符&#125; ，帮助我们快速实现字符串拼接</span></span><br><span class="line">    <span class="keyword">let</span> str3 = <span class="string">`hello`</span>;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">typeof</span> str3);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 举个栗子</span></span><br><span class="line">    <span class="keyword">let</span> hero = <span class="string">"蔡文姬"</span>;</span><br><span class="line">    <span class="keyword">let</span> winRate = <span class="number">70</span>;</span><br><span class="line">    <span class="comment">// let str = "您选择的英雄是：" + hero + ",它的历史胜率为：" + winRate + "%";</span></span><br><span class="line">    <span class="keyword">let</span> str=<span class="string">`您选择的英雄是：<span class="subst">$&#123;hero&#125;</span>,</span></span><br><span class="line"><span class="string">            它的历史胜</span></span><br><span class="line"><span class="string">            率为<span class="subst">$&#123;winRate&#125;</span>%`</span>;</span><br><span class="line">    <span class="built_in">console</span>.log(str);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ------------ 2. 字符串常用方法</span></span><br><span class="line">    <span class="keyword">let</span> test = <span class="string">`     你好啊！`</span>;</span><br><span class="line">    <span class="built_in">console</span>.log(test.substring(<span class="number">5</span>, <span class="number">7</span>));</span><br><span class="line">    <span class="built_in">console</span>.log(test.trim());</span><br><span class="line">    <span class="built_in">console</span>.log(test.split(<span class="string">','</span>));</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><h3 id="5-2-array对象"><a href="#5-2-array对象" class="headerlink" title="5.2 array对象"></a>5.2 array对象</h3><p>数组对象：</p><p>构造数组对象有两种方式</p><ul><li><code>let arr = [ele1,ele2,ele3];</code></li><li><code>let arr = new Array(ele1,ele2,ele3);</code></li></ul><blockquote><p>特点：js数组长度和类型可以任意，所以我们可以简单理解为数组就是java中的list集合</p></blockquote><p>数组的常用方法：</p><ul><li><p>添加元素</p><ul><li>push() 向尾部添加</li><li>unshift() 向头部添加</li></ul></li><li><p>删除元素</p><ul><li>pop() 弹出最后一个元素</li><li>shift() 弹出第一个元素</li></ul></li><li><p>合并数组</p><ul><li>concat()</li></ul></li><li><p>数组排序</p><ul><li>sort()</li></ul></li><li><p>将数组转为字符串  （与字符串对象.split()方法相反 ）</p><ul><li>join()</li></ul></li><li><p>数组反转</p><ul><li>reverse()</li></ul></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">//1. 创建数组</span></span><br><span class="line">    <span class="keyword">let</span> arr1 = [<span class="number">1</span>,<span class="number">3</span>,<span class="number">7</span>,<span class="string">'a'</span>,<span class="literal">true</span>,<span class="keyword">new</span> <span class="built_in">Date</span>()];</span><br><span class="line"></span><br><span class="line">    <span class="built_in">console</span>.log(arr1);</span><br><span class="line">    <span class="keyword">let</span> arr2= <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="string">'a'</span>,<span class="string">'c'</span>,<span class="string">'d'</span>);</span><br><span class="line">    <span class="built_in">console</span>.log(arr2);</span><br><span class="line">    <span class="comment">//2. 数组合并</span></span><br><span class="line">    <span class="keyword">let</span> newArray = arr1.concat(arr2);</span><br><span class="line">    <span class="built_in">console</span>.log(newArray);</span><br><span class="line">    <span class="comment">//3. 添加元素</span></span><br><span class="line">    newArray.push(<span class="string">'hehe'</span>);</span><br><span class="line">    <span class="built_in">console</span>.log(newArray);</span><br><span class="line">    <span class="comment">//4. 删除元素</span></span><br><span class="line">    <span class="keyword">let</span> result = newArray.pop();</span><br><span class="line">    <span class="built_in">console</span>.log(newArray);</span><br><span class="line">    <span class="comment">//5. 数组元素拼接为字符串</span></span><br><span class="line">    <span class="keyword">let</span> str = newArray.join(<span class="string">'-'</span>)</span><br><span class="line">    <span class="built_in">console</span>.log(str);</span><br><span class="line">    <span class="comment">//6. 排序数组元素 【了解】</span></span><br><span class="line">    <span class="keyword">let</span> array = [<span class="string">'a'</span>,<span class="string">'e'</span>,<span class="string">'c'</span>,<span class="string">'w'</span>]</span><br><span class="line">    <span class="built_in">console</span>.log(array.sort()); <span class="comment">// 升序</span></span><br><span class="line">    <span class="built_in">console</span>.log(array.sort().reverse()); <span class="comment">// 降序</span></span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><h3 id="5-3-Date对象"><a href="#5-3-Date对象" class="headerlink" title="5.3 Date对象"></a>5.3 Date对象</h3><p>日期对象：<code>let date = new Date();</code></p><p>常用方法：</p><ul><li><p>获取年份：<code>getFullYear()</code></p></li><li><p>获取月份：<code>getMonth()</code></p></li><li><p>获取几号：<code>getDate()</code></p></li><li><p>获取1970-至今的毫秒值：<code>getTime()</code></p></li><li><p>等等….</p></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">let</span> date = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">    <span class="built_in">console</span>.log(date);</span><br><span class="line">    <span class="built_in">console</span>.log(date.toLocaleString()); <span class="comment">// 转为本地时间格式字符串</span></span><br><span class="line">    <span class="built_in">console</span>.log(date.getFullYear());<span class="comment">// 获取4位年份</span></span><br><span class="line">    <span class="built_in">console</span>.log(date.getMonth()+<span class="number">1</span>); <span class="comment">// 获取月份  （0~11）  需要+1</span></span><br><span class="line">    <span class="built_in">console</span>.log(date.getDate()); <span class="comment">// 获取几号</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> nowDate = <span class="string">`<span class="subst">$&#123;date.getFullYear()&#125;</span>年<span class="subst">$&#123;date.getMonth()+<span class="number">1</span>&#125;</span>月<span class="subst">$&#123;date.getDate()&#125;</span>日`</span>;</span><br><span class="line">    <span class="built_in">console</span>.log(nowDate);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">console</span>.log(date.getTime()); <span class="comment">// 获取1970-今 的毫秒值 （时间戳 唯一性...）</span></span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><h3 id="5-4-Math对象"><a href="#5-4-Math对象" class="headerlink" title="5.4 Math对象"></a>5.4 Math对象</h3><p>数学运算对象：</p><ul><li>四舍五入：<code>round()</code></li><li>向下取整：<code>floor()</code></li><li>向上取整：<code>ceil()</code></li><li>产生随机数：<code>random()</code>【返回[0,1])之间的随机数，左闭右开，包含0不包含1】</li></ul><blockquote><p>可以理解为Math对象为Java中的数学工具类Math,里面的方法直接通过<code>Math.方法名</code>调用即可.</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;script &gt;</span><br><span class="line">    <span class="keyword">let</span> n = <span class="number">1234.567</span>;</span><br><span class="line">    <span class="comment">//1. 四舍五入取整</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="built_in">Math</span>.round(n));</span><br><span class="line">    <span class="comment">//2. 向下取整</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="built_in">Math</span>.floor(n));</span><br><span class="line">    <span class="comment">//3. 向上取整</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="built_in">Math</span>.ceil(n));</span><br><span class="line">    <span class="comment">//4. 产生随机数</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="built_in">Math</span>.random());</span><br><span class="line">    <span class="comment">//5.练习生成[1-10] 随机数</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="built_in">Math</span>.floor((<span class="built_in">Math</span>.random() * <span class="number">10</span>) + <span class="number">1</span>));</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><h3 id="5-5-全局函数"><a href="#5-5-全局函数" class="headerlink" title="5.5 全局函数"></a>5.5 全局函数</h3><p>全局函数：不需要创建对象，可以直接调用的函数，称为全局函数。</p><p>常用：</p><ul><li><p>字符串转为数字、</p><ul><li><p><code>parseInt()</code>  转为整型</p></li><li><p><code>parseFloat()</code>转为浮点型</p><blockquote><p>注意：从第一个字符开始转换，遇到非数值字符停止转换</p></blockquote></li></ul></li><li><p>对字符串编码和解码</p><ul><li><code>encodeURI()</code>编码</li><li><code>decodeURI()</code> 解码</li></ul></li><li><p>把字符串当作js表达式来执行</p><ul><li><code>eval(&quot;js代码&quot;)</code></li></ul></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;script &gt;</span><br><span class="line">    <span class="comment">// 字符串转为数值</span></span><br><span class="line">    <span class="keyword">let</span> str = <span class="string">'a13a14.5a21'</span>;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="built_in">parseInt</span>(str));</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="built_in">parseFloat</span>(str));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 中文及特殊符号编码和解码</span></span><br><span class="line">    <span class="keyword">let</span> encode = <span class="built_in">encodeURI</span>(<span class="string">'全局函数'</span>);</span><br><span class="line">    <span class="built_in">console</span>.log(encode);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> decode = <span class="built_in">decodeURI</span>(<span class="string">'%E5%85%A8%E5%B1%80%E5%87%BD%E6%95%B0'</span>);</span><br><span class="line">    <span class="built_in">console</span>.log(decode);</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    <span class="string">"alert('1')"</span></span><br><span class="line">    <span class="comment">// 执行js字符串的语句</span></span><br><span class="line">    <span class="built_in">eval</span>(<span class="string">"alert('1')"</span>);</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><h2 id="六、BOM对象"><a href="#六、BOM对象" class="headerlink" title="六、BOM对象"></a>六、BOM对象</h2><p>浏览器对象模型：Browser Object Model</p><p>作用：把浏览器抽象成为一个对象模型,我们可以使用js模拟浏览器的一些功能。</p><h3 id="6-1-window对象"><a href="#6-1-window对象" class="headerlink" title="6.1 window对象"></a>6.1 window对象</h3><p> window对象：是当前窗口的一个顶级对象</p><h4 id="6-1-1-三种弹框"><a href="#6-1-1-三种弹框" class="headerlink" title="6.1.1 三种弹框"></a>6.1.1 三种弹框</h4><p>警告(提示)框：<code>alert()</code></p><p>确认框：<code>confirm()</code></p><ul><li>点击确定 返回true，点击取消 返回false</li></ul><p>输入框：<code>prompt()</code></p><ul><li>点击确定返回 用户输入值，点击取消返回 null</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">// 1.警告框</span></span><br><span class="line">    alert(<span class="string">'xxxxx'</span>);</span><br><span class="line">    <span class="comment">// 2.确认框</span></span><br><span class="line">    <span class="built_in">console</span>.log(confirm(<span class="string">'您确定要删除吗？'</span>));</span><br><span class="line">    <span class="comment">// 3.输入框</span></span><br><span class="line">    <span class="built_in">console</span>.log(prompt(<span class="string">'请输入你要搜索的内容？'</span>));</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><h4 id="6-1-2-二种定时器"><a href="#6-1-2-二种定时器" class="headerlink" title="6.1.2 二种定时器"></a>6.1.2 二种定时器</h4><p>周期性定时器：</p><ul><li>创建：<code>let interval = setInterval(&#39;js代码&#39;,毫秒值)</code></li><li>销毁：<code>clearInterval(interval);</code></li></ul><p>一次性定时器</p><ul><li>创建：<code>let timeout = setTimeout(&#39;js代码&#39;,毫秒值);</code></li><li>销毁：<code>clearTimeout(timeout);</code></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>02-js二个定时器<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"btn1"</span>&gt;</span>取消打印时间<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"btn2"</span>&gt;</span>取消打印自然数<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 1. 定时3秒之后在警告框打印当前时间</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> timeout = setTimeout(<span class="string">'alert(new Date().toLocaleString())'</span>,<span class="number">3000</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 2. 点击按钮取消打印时间</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.getElementById(<span class="string">'btn1'</span>).onclick=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line">        clearTimeout(timeout)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 3. 每隔2秒在控制台打印递增自然数</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> num = <span class="number">1</span>;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> interval = setInterval(<span class="string">'console.log(num++)'</span>,<span class="number">2000</span>);</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 4. 点击按钮取消打印自然数</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.getElementById(<span class="string">'btn2'</span>).onclick=<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line">        clearInterval(interval)</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="6-2-Location对象"><a href="#6-2-Location对象" class="headerlink" title="6.2 Location对象"></a>6.2 Location对象</h3><blockquote><p>把浏览器的地址栏封装为location对象</p></blockquote><p>Location地址</p><ul><li>获取当前窗口地址<ul><li><code>ocation.href</code></li></ul></li><li>刷新当前窗口<ul><li><code>location.reload()</code></li></ul></li><li>当前页跳转<ul><li><code>location.href=&#39;新地址&#39;</code></li></ul></li></ul><p>扩展：如果想打开一个新标签页，跳转新的页面</p><ul><li><code>window.open(&#39;新地址&#39;)</code></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>03-location对象<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">"addr()"</span>&gt;</span>获取当前浏览器地址<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">"refresh()"</span>&gt;</span>刷新当前页面<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">"jump()"</span>&gt;</span> 跳转页面(重点)<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">"toOpen()"</span>&gt;</span> 打开新窗口<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 获取当前浏览器地址</span></span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">addr</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="built_in">window</span>.location.href);</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 刷新当前页面</span></span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">refresh</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line">        location.reload()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 跳转页面(重点)</span></span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">jump</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">        location.href=<span class="string">'https://taobao.com'</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 打开新窗口</span></span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">toOpen</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">window</span>.open(<span class="string">'https://baidu.com'</span>);</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="七、DOM对象"><a href="#七、DOM对象" class="headerlink" title="七、DOM对象"></a>七、DOM对象</h2><p>文档对象模型：Document Object Model</p><p>作用：把页面中所有标签抽象为一个Document对象，然后通过JS动态修改标签及属性内容。</p><h3 id="7-1-DOM获取元素"><a href="#7-1-DOM获取元素" class="headerlink" title="7.1 DOM获取元素"></a>7.1 DOM获取元素</h3><p>第一种方式(ES6之前)：</p><ul><li>获取一个：<code>document.getElementById(id属性值)</code></li><li>获取多个：<ul><li><code>document.getElementsByTagName(标签名)</code>：返回数组</li><li><code>document.getElementsByClassName(class属性值)</code>：返回数组</li><li><code>document.getElementsByName(name属性值)</code>：返回数组</li></ul></li></ul><p>第二种方式：</p><ul><li>获取一个：<code>document.querySelector(id选择器)</code></li><li>获取多个：<code>document.querySelectorAll(css选择器)</code>：返回数组    </li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>dom获取元素<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"#"</span> <span class="attr">method</span>=<span class="string">"get"</span>&gt;</span></span><br><span class="line">    姓名 <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">id</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"德玛西亚"</span>/&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    密码 <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"password"</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    生日 <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"date"</span> <span class="attr">name</span>=<span class="string">"birthday"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    性别</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"gender"</span> <span class="attr">value</span>=<span class="string">"male"</span> <span class="attr">class</span>=<span class="string">"radio"</span>&gt;</span>男<span class="symbol">&amp;emsp;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"gender"</span> <span class="attr">value</span>=<span class="string">"female"</span> <span class="attr">class</span>=<span class="string">"radio"</span>/&gt;</span>女<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    爱好</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"hobby"</span> <span class="attr">value</span>=<span class="string">"smoke"</span>&gt;</span>抽烟</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"hobby"</span> <span class="attr">value</span>=<span class="string">"drink"</span>&gt;</span>喝酒</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"hobby"</span> <span class="attr">value</span>=<span class="string">"perm"</span>&gt;</span>烫头<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    头像 <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">name</span>=<span class="string">"pic"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    学历</span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">"edu"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"0"</span>&gt;</span>请选择<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"1"</span>&gt;</span>入门<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"2"</span>&gt;</span>精通<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"3"</span>&gt;</span>放弃<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    简介</span><br><span class="line">    <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">name</span>=<span class="string">"userIntro"</span> <span class="attr">cols</span>=<span class="string">"30"</span> <span class="attr">rows</span>=<span class="string">"10"</span>&gt;</span>默认值<span class="tag">&lt;/<span class="name">textarea</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"reset"</span> <span class="attr">value</span>=<span class="string">"清空按钮"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"提交按钮"</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 1.获取id="username"的标签对象</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="built_in">document</span>.getElementById(<span class="string">'username'</span>));</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="built_in">document</span>.querySelector(<span class="string">"#username"</span>));</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 2.获取class="radio"的标签对象数组</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="built_in">document</span>.getElementsByClassName(<span class="string">'radio'</span>));</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="built_in">document</span>.querySelectorAll(<span class="string">'.radio'</span>));</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 3.获取所有的option标签对象数组</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="built_in">document</span>.getElementsByTagName(<span class="string">"option"</span>));</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="built_in">document</span>.querySelectorAll(<span class="string">'option'</span>));</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 4.获取name="hobby"的input标签对象数组</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="built_in">document</span>.getElementsByName(<span class="string">"hobby"</span>));</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="built_in">document</span>.querySelectorAll(<span class="string">'input[name="hobby"]'</span>));</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 5.获取文件上传选择框</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="built_in">document</span>.querySelectorAll(<span class="string">'form input[name="pic"]'</span>));</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>获取一个推荐使用getElementById，获取多个推荐使用ES6的语法。</p></blockquote><h3 id="7-2-DOM操作内容"><a href="#7-2-DOM操作内容" class="headerlink" title="7.2 DOM操作内容"></a>7.2 DOM操作内容</h3><ol><li><p>获取或者修改元素的   纯文本内容</p><ul><li>语法：js（元素）对象.innerText; </li></ul></li><li><p>获取或者修改元素的    html内容（可以解析标签）</p><ul><li>语法：js（元素）对象.innerHTML; </li></ul></li><li><p>获取或者修改包含自身的html内容（了解）</p><ul><li>语法：js（元素）对象.outerHTML; </li></ul></li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>dom操作内容<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-id">#myDiv</span>&#123;</span></span><br><span class="line">            border: 1px solid red;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"myDiv"</span>&gt;</span>程序猿最讨厌的四件事：<span class="tag">&lt;<span class="name">br</span>&gt;</span>写注释、写文档…… <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> myDiv = <span class="built_in">document</span>.getElementById(<span class="string">'myDiv'</span>);</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 1.innerText操作div内容</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 1.1获取纯文本内容</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(myDiv.innerText);</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 1.2 覆盖原来的纯文本</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// myDiv.innerText='别人不写注释 &lt;br&gt; 别人不写文档';</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 1.3 追加纯文本</span></span></span><br><span class="line"><span class="actionscript">   <span class="comment">// myDiv.innerText+='别人不写注释 &lt;br&gt; 别人不写文档';</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 2.innerHTML操作div内容</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 2.1获取超文本内容</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(myDiv.innerHTML);</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 2.2 覆盖原来的超文本</span></span></span><br><span class="line"><span class="actionscript">   <span class="comment">// myDiv.innerHTML='别人不写注释 &lt;br&gt; 别人不写文档';</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 2.3 追加超文本</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">    myDiv.innerHTML+='<span class="tag">&lt;<span class="name">br</span>&gt;</span>别人不写注释 <span class="tag">&lt;<span class="name">br</span>&gt;</span> 别人不写文档';</span></span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 3.outerHTML操作div本身</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">    myDiv.outerHTML='<span class="tag">&lt;<span class="name">p</span>&gt;</span>我原本是div，现在变成了p<span class="tag">&lt;/<span class="name">p</span>&gt;</span>'</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="7-3-DOM操作属性"><a href="#7-3-DOM操作属性" class="headerlink" title="7.3 DOM操作属性"></a>7.3 DOM操作属性</h3><ol><li><p>获取文本框的值,单选框或复选框的选中状态</p><ul><li>语法: <ul><li><code>js对象.属性名</code> 获取指定属性值</li><li><code>js对象.属性名=&#39;xxx&#39;</code> 设置指定属性的新值</li></ul></li></ul></li><li><p>给元素设置自定义属性使用: </p><ul><li>语法: <code>js对象.setAttribute(属性名,属性值)</code></li></ul></li><li><p>获取元素的自定义属性值<br> 语法: <code>js对象.getAttribute(属性名)</code></p></li><li><p>移除元素的自定义属性（了解）<br> 语法:<code>js对象.removeAttribute(属性名)</code></p></li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>dom操作属性<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"#"</span> <span class="attr">method</span>=<span class="string">"get"</span>&gt;</span></span><br><span class="line">    姓名 <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">id</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"德玛西亚"</span>/&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    爱好</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"hobby"</span> <span class="attr">value</span>=<span class="string">"smoke"</span>&gt;</span>抽烟</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"hobby"</span> <span class="attr">value</span>=<span class="string">"drink"</span>&gt;</span>喝酒</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"hobby"</span> <span class="attr">value</span>=<span class="string">"perm"</span> &gt;</span>烫头<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"reset"</span> <span class="attr">value</span>=<span class="string">"清空按钮"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"提交按钮"</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 1.获取文本框预定义的属性值</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="built_in">document</span>.getElementById(<span class="string">'username'</span>).value);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.getElementById(<span class="string">'username'</span>).value = <span class="string">'草丛伦'</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 2.给文本框设置自定义属性</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.getElementById(<span class="string">'username'</span>).setAttribute(<span class="string">"data-msg"</span>, <span class="string">'喜欢大宝剑...'</span>)</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 3.获取文本框自定义属性</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="built_in">document</span>.getElementById(<span class="string">'username'</span>).getAttribute(<span class="string">"data-msg"</span>));</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 4.移出文本框自定义属性</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.getElementById(<span class="string">'username'</span>).removeAttribute(<span class="string">"data-msg"</span>);</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="7-4-DOM操作样式"><a href="#7-4-DOM操作样式" class="headerlink" title="7.4 DOM操作样式"></a>7.4 DOM操作样式</h3><ol><li><p>给标签的style属性设置一个css样式</p><ul><li>语法: <code>js对象.style.样式名=&#39;样式值&#39;</code></li><li>js的样式名：fontSize</li></ul></li><li><p>给标签的style属性批量设置css样式</p><ul><li>语法:<code>js对象.style.cssText=&#39;css样式&#39;</code><ul><li>css的样式名：font-size</li></ul></li></ul></li><li><p>给标签绑定class的类选择器</p><ul><li>语法: <code>js对象.className=&#39;class选择器名&#39;</code></li></ul></li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>dom操作样式<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-id">#p1</span>&#123; <span class="attribute">background-color</span>: red;&#125;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.mp</span> &#123;</span></span><br><span class="line">            color: green</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.mpp</span> &#123;</span></span><br><span class="line">            background-color: lightgray;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"p1"</span> <span class="attr">style</span>=<span class="string">""</span>&gt;</span>1. 设置一个css样式<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"p2"</span>&gt;</span>2. 批量设置css样式<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"p3"</span> &gt;</span>3. 通过class设置样式<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> p1 = <span class="built_in">document</span>.getElementById(<span class="string">"p1"</span>);<span class="comment">//获取段落标签</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> p2 = <span class="built_in">document</span>.getElementById(<span class="string">"p2"</span>);<span class="comment">//获取段落标签</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> p3 = <span class="built_in">document</span>.getElementById(<span class="string">"p3"</span>);<span class="comment">//获取段落标签</span></span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 1. 设置一个css样式</span></span></span><br><span class="line"><span class="actionscript">    p1.style.backgroundColor=<span class="string">'skyblue'</span>;</span></span><br><span class="line"><span class="actionscript">    p1.style.border=<span class="string">'1px solid red'</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 1.1.获取第一个p标签 style属性 的背景css样式</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(p1.style.backgroundColor);</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 2. 批量设置css样式</span></span></span><br><span class="line"><span class="actionscript">    p2.style.cssText=<span class="string">'background-color:red;border:2px double black'</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 3. 通过class设置样式</span></span></span><br><span class="line"><span class="actionscript">    p3.className=<span class="string">"mp mpp"</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="7-5-DOM操作元素"><a href="#7-5-DOM操作元素" class="headerlink" title="7.5 DOM操作元素"></a>7.5 DOM操作元素</h3><ol><li><p>创建一个标签对象</p><ul><li>语法：<code>document.createElement(&#39;标签名称&#39;)</code></li></ul></li><li><p>给父标签添加一个子标签</p><ul><li>语法：<code>父标签对象.appendChild(子标签对象)</code></li></ul></li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>dom操作元素<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">id</span>=<span class="string">"star"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>古力娜扎<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>迪丽热巴<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 需求：添加一个新列表项</span></span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 方式一：</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 1.创建 li标签</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> li = <span class="built_in">document</span>.createElement(<span class="string">'li'</span>);</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 2.设置文本</span></span></span><br><span class="line"><span class="actionscript">    li.innerText=<span class="string">'萨瓦快递'</span>;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 3.挂靠在 dom的 ul下面</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.getElementById(<span class="string">'star'</span>).appendChild(li);</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 方式二： 推荐</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.getElementById(<span class="string">'star'</span>).innerHTML+=<span class="string">'&lt;li&gt;马尔扎哈&lt;/li&gt;'</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="八、JS正则"><a href="#八、JS正则" class="headerlink" title="八、JS正则"></a>八、JS正则</h2><p>作用：根据定义好的规则，过滤文本内容；这里我们用于校验表单</p><p>JS中的正则：</p><ul><li>创建：<ul><li><code>let rege = new RegExp(“正则表达式字符串”);</code></li><li><code>let rege = /正则表达式/;</code></li></ul></li><li>验证方法<ul><li><code>正则对象.test(要验证的字符串)</code><ul><li>符合正则规则就返回true，否则false</li></ul></li></ul></li></ul><blockquote><p>小扩展：</p><ul><li>在线正则表达式网站：<a href="https://tool.oschina.net/regex/#" target="_blank" rel="noopener">https://tool.oschina.net/regex/#</a></li></ul></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>09-正则表达式<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">//创建一个校验手机号的正则表达式，要求：11位、1开头，第二位：3456789</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// let reg = new RegExp('^1[3456789]\\d&#123;9&#125;$')</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> reg = <span class="regexp">/^1[3456789]\d&#123;9&#125;$/</span>;<span class="comment">//推荐这种方式创建正则对象</span></span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">   <span class="comment">//校验用户输入的值</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> value = <span class="string">'15933016675'</span>;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(reg.test(value));</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 以邮箱举例</span></span></span><br><span class="line">    /*</span><br><span class="line">        mm@qqcn</span><br><span class="line">        jj@163.com</span><br><span class="line">        ...</span><br><span class="line">邮箱后缀</span><br><span class="line">            com</span><br><span class="line">            cn</span><br><span class="line">            com.cn</span><br><span class="line">     */</span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> emailReg = <span class="regexp">/^([a-z0-9\_.-]+)@([\da-z\.-]+)\.([a-z\.]&#123;2,6&#125;)$/</span>;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(emailReg.test(<span class="string">'jj@126.cn'</span>));</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="九、练习案例"><a href="#九、练习案例" class="headerlink" title="九、练习案例"></a>九、练习案例</h2><h3 id="9-1-表单校验"><a href="#9-1-表单校验" class="headerlink" title="9.1 表单校验"></a>9.1 表单校验</h3><p>代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>注册页面<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        span&#123;</span><br><span class="line">            color: red;</span><br><span class="line">            font-size: 12px;</span><br><span class="line">            display: none;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"#"</span> <span class="attr">method</span>=<span class="string">"get"</span> <span class="attr">id</span>=<span class="string">"myForm"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">"td_left"</span>&gt;</span>用户名<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"username"</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">placeholder</span>=<span class="string">"请输入账号"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"userInfo"</span>&gt;</span>用户名不合法<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">"td_left"</span>&gt;</span>手机号<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"telephone"</span> <span class="attr">name</span>=<span class="string">"telephone"</span> <span class="attr">placeholder</span>=<span class="string">"请输入手机号"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"telInfo"</span>&gt;</span>手机号不合法<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">"td_left"</span>&gt;</span>密码<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">id</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">placeholder</span>=<span class="string">"请输入密码"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"pwdInfo"</span>&gt;</span>密码不合法<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">"td_left"</span>&gt;</span>验证码<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"smsCode"</span> <span class="attr">id</span>=<span class="string">"smsCode"</span> <span class="attr">placeholder</span>=<span class="string">"请输入验证码"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>发送手机验证码<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"codeInfo"</span>&gt;</span>验证码不合法<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">"2"</span> <span class="attr">align</span>=<span class="string">"center"</span> <span class="attr">width</span>=<span class="string">"373"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"注册"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line">    /*</span><br><span class="line">        用户名正则，4到16位（字母，数字，下划线，减号）：/^[a-zA-Z0-9_-]&#123;4,16&#125;$/</span><br><span class="line">        必须是包含大小写字母和数字的组合，不能使用特殊字符，长度在6-10之间：/^(?=.*\d)(?=.*[a-z])(?=.*[A-Z]).&#123;6,10&#125;$/</span><br><span class="line">        手机号正则：/^1[3456789]\d&#123;9&#125;$/</span><br><span class="line">        验证码正则：/^\d&#123;6&#125;$/</span><br><span class="line">    */</span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> userInput = <span class="built_in">document</span>.getElementById(<span class="string">'username'</span>);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> phoneInput = <span class="built_in">document</span>.getElementById(<span class="string">'telephone'</span>);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> pswInput = <span class="built_in">document</span>.getElementById(<span class="string">'password'</span>);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> smsCode = <span class="built_in">document</span>.getElementById(<span class="string">'smsCode'</span>);</span></span><br><span class="line">    /**</span><br><span class="line">     * 验证用户名</span><br><span class="line">     */</span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">checkUser</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//定义正则</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> userReg = <span class="regexp">/^[a-zA-Z0-9_-]&#123;4,16&#125;$/</span>;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> flag = userReg.test(userInput.value);</span></span><br><span class="line"><span class="actionscript">        noneOfInline(<span class="string">'userInfo'</span>,flag);</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">return</span> flag;</span></span><br><span class="line">    &#125;</span><br><span class="line">    /**</span><br><span class="line">     * 验证手机号</span><br><span class="line">     */</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">checkPhone</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//定义正则</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> phoneReg = <span class="regexp">/^1[3456789]\d&#123;9&#125;$/</span>;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> flag = phoneReg.test(phoneInput.value);</span></span><br><span class="line"><span class="actionscript">        noneOfInline(<span class="string">'telInfo'</span>,flag);</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">return</span> flag;</span></span><br><span class="line">    &#125;</span><br><span class="line">    /**</span><br><span class="line">     * 验证密码</span><br><span class="line">     */</span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">checkPsw</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//定义正则</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> pswReg = <span class="regexp">/^(?=.*\d)(?=.*[a-z])(?=.*[A-Z]).&#123;6,10&#125;$/</span>;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> flag = pswReg.test(pswInput.value);</span></span><br><span class="line"><span class="actionscript">        noneOfInline(<span class="string">'pwdInfo'</span>,flag);</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">return</span> flag;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 验证验证码</span><br><span class="line">     */</span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">checkCode</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> codeReg = <span class="regexp">/^\d&#123;6&#125;$/</span>;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> flag = codeReg.test(smsCode.value);</span></span><br><span class="line"><span class="actionscript">        noneOfInline(<span class="string">'codeInfo'</span>,flag);</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">return</span> flag;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 定义函数，控制span标签的显示与隐藏</span><br><span class="line">     */</span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">noneOfInline</span><span class="params">(info, flag)</span> </span>&#123;</span></span><br><span class="line">        if (flag)&#123;</span><br><span class="line"><span class="javascript">            <span class="built_in">document</span>.getElementById(info).style.display = <span class="string">'none'</span>;</span></span><br><span class="line"><span class="actionscript">        &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">document</span>.getElementById(info).style.display = <span class="string">'inline'</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    userInput.onblur = checkUser;</span><br><span class="line">    phoneInput.onblur = checkPhone;</span><br><span class="line">    pswInput.onblur = checkPsw;</span><br><span class="line">    smsCode.onblur = checkCode;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">    * 表单提交时验证全部是否都合法</span><br><span class="line">    */</span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.getElementById(<span class="string">'myForm'</span>).onsubmit = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">return</span> checkCode() &amp;&amp; checkPhone() &amp;&amp; checkPsw() &amp;&amp; checkUser();</span></span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="9-2-商品全选"><a href="#9-2-商品全选" class="headerlink" title="9.2 商品全选"></a>9.2 商品全选</h3><p>代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>案例-商品全选<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">商品全选</span></span><br><span class="line"><span class="comment">    1. 全选 点击全选按钮,所有复选框都被选中</span></span><br><span class="line"><span class="comment">    2. 反选 点击反选按钮,所有复选框状态取反</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"btn1"</span>&gt;</span>1. 全选<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"btn2"</span>&gt;</span>2. 反选<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span>&gt;</span>电脑</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span>&gt;</span>手机</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span>&gt;</span>汽车</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span>&gt;</span>别墅</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">checked</span>=<span class="string">"checked"</span>&gt;</span>笔记本</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> &gt;</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.getElementById(<span class="string">'btn1'</span>).onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> boxs = <span class="built_in">document</span>.querySelectorAll(<span class="string">'input[type="checkbox"]'</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; boxs.length; i++) &#123;</span></span><br><span class="line"><span class="actionscript">            boxs[i].checked = <span class="literal">true</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.getElementById(<span class="string">'btn2'</span>).onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> boxs = <span class="built_in">document</span>.querySelectorAll(<span class="string">'input[type="checkbox"]'</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; boxs.length; i++) &#123;</span></span><br><span class="line">            boxs[i].checked = !boxs[i].checked;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="9-3-省市联动"><a href="#9-3-省市联动" class="headerlink" title="9.3 省市联动"></a>9.3 省市联动</h3><p>代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>案例-省市级联<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"provinceId"</span> <span class="attr">style</span>=<span class="string">"width:150px"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">""</span>&gt;</span>----请-选-择-省----<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"0"</span>&gt;</span>北京<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"1"</span>&gt;</span>河北<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"2"</span>&gt;</span>辽宁<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"3"</span>&gt;</span>天津<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"cityId"</span> <span class="attr">style</span>=<span class="string">"width:150px"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">""</span>&gt;</span>----请-选-择-市----<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line">    /*</span><br><span class="line">省市级联</span><br><span class="line">1. 页面加载完成后自动装载省数据</span><br><span class="line">2. 当选中省时,装载该省的市数据</span><br><span class="line">*/</span><br><span class="line">    </span><br><span class="line"><span class="actionscript">    <span class="comment">// 准备数据</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> data = <span class="keyword">new</span> <span class="built_in">Array</span>();</span></span><br><span class="line"><span class="actionscript">    data[<span class="number">0</span>] = [<span class="string">'顺义区'</span>, <span class="string">'昌平区'</span>, <span class="string">'朝阳区'</span>];</span></span><br><span class="line"><span class="actionscript">    data[<span class="number">1</span>] = [<span class="string">"保定"</span>, <span class="string">"石家庄"</span>, <span class="string">"廊坊"</span>];</span></span><br><span class="line"><span class="actionscript">    data[<span class="number">2</span>] = [<span class="string">"沈阳"</span>, <span class="string">"铁岭"</span>, <span class="string">"抚顺"</span>];</span></span><br><span class="line"><span class="actionscript">    data[<span class="number">3</span>] = [<span class="string">"滨海新区"</span>, <span class="string">"宝坻区"</span>, <span class="string">"南开区"</span>];</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> provinceSelect = <span class="built_in">document</span>.getElementById(<span class="string">"provinceId"</span>);<span class="comment">//获取省下拉列表</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> citySelect = <span class="built_in">document</span>.getElementById(<span class="string">"cityId"</span>);<span class="comment">//获取市下拉列表</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    provinceSelect.onchange=<span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//每次先复原</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">        citySelect.innerHTML='<span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">""</span>&gt;</span>----请-选-择-市----<span class="tag">&lt;/<span class="name">option</span>&gt;</span>';</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//获取对应数组</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> citys=data[<span class="keyword">this</span>.value];</span></span><br><span class="line"><span class="javascript">        <span class="keyword">for</span> (<span class="keyword">let</span> city <span class="keyword">of</span> citys) &#123;</span></span><br><span class="line"><span class="javascript">            citySelect.innerHTML+=<span class="string">`&lt;option value="<span class="subst">$&#123;city&#125;</span>"&gt;<span class="subst">$&#123;city&#125;</span>&lt;/option&gt;`</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="9-4-隔行换色"><a href="#9-4-隔行换色" class="headerlink" title="9.4 隔行换色"></a>9.4 隔行换色</h3><p>代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>案例-隔行变色<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">id</span>=<span class="string">"tab1"</span> <span class="attr">border</span>=<span class="string">"1"</span> <span class="attr">width</span>=<span class="string">"800"</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span> <span class="attr">width</span>=<span class="string">"100px"</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"allCheck"</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"check"</span>&gt;</span>全/<span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"reCheck"</span> <span class="attr">name</span>=<span class="string">"check"</span> <span class="attr">type</span>=<span class="string">"radio"</span>&gt;</span>反选<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>分类ID<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>分类名称<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>分类描述<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>操作<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">class</span>=<span class="string">"checkbox"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>手机数码<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>手机数码类商品<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>修改<span class="tag">&lt;/<span class="name">a</span>&gt;</span>|<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">class</span>=<span class="string">"checkbox"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>电脑办公<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>电脑办公类商品<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>修改<span class="tag">&lt;/<span class="name">a</span>&gt;</span>|<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">class</span>=<span class="string">"checkbox"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>3<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>鞋靴箱包<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>鞋靴箱包类商品<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>修改<span class="tag">&lt;/<span class="name">a</span>&gt;</span>|<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">class</span>=<span class="string">"checkbox"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>4<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>家居饰品<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>家居饰品类商品<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>修改<span class="tag">&lt;/<span class="name">a</span>&gt;</span>|<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">class</span>=<span class="string">"checkbox"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>5<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>牛奶制品<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>牛奶制品类商品<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>修改<span class="tag">&lt;/<span class="name">a</span>&gt;</span>|<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">class</span>=<span class="string">"checkbox"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>6<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>大豆制品<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>大豆制品类商品<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>修改<span class="tag">&lt;/<span class="name">a</span>&gt;</span>|<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">隔行变色</span></span><br><span class="line"><span class="comment">1. 表格奇偶行颜色不同</span></span><br><span class="line"><span class="comment">2. 鼠标移入颜色高亮</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> trs = <span class="built_in">document</span>.querySelectorAll(<span class="string">'tr'</span>);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> oldColor;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; trs.length; i++) &#123;</span></span><br><span class="line">        if (i%2===0)&#123;</span><br><span class="line"><span class="actionscript">            trs[i].style.backgroundColor = <span class="string">'pink'</span>;</span></span><br><span class="line"><span class="actionscript">        &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="actionscript">            trs[i].style.backgroundColor = <span class="string">'lightgray'</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="actionscript">        <span class="comment">//鼠标移入改变背景色</span></span></span><br><span class="line"><span class="actionscript">        trs[i].onmouseover = <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">//记录旧的颜色</span></span></span><br><span class="line">            oldColor = trs[i].style.backgroundColor;</span><br><span class="line"><span class="actionscript">            trs[i].style.backgroundColor = <span class="string">'gold'</span>;</span></span><br><span class="line">        &#125;;</span><br><span class="line"><span class="actionscript">        <span class="comment">//移出鼠标复原颜色</span></span></span><br><span class="line"><span class="actionscript">        trs[i].onmouseout = <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line">            trs[i].style.backgroundColor = oldColor;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> all = <span class="built_in">document</span>.getElementById(<span class="string">'allCheck'</span>);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> reverse = <span class="built_in">document</span>.getElementById(<span class="string">'reCheck'</span>);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> boxs = <span class="built_in">document</span>.querySelectorAll(<span class="string">'.checkbox'</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    all.onclick = <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">for</span> (<span class="keyword">let</span> box <span class="keyword">of</span> boxs) &#123;</span></span><br><span class="line"><span class="actionscript">            box.checked = <span class="literal">true</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"><span class="actionscript">    reverse.onclick = <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">for</span> (<span class="keyword">let</span> box <span class="keyword">of</span> boxs) &#123;</span></span><br><span class="line">            box.checked = !box.checked;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;JavaScript&quot;&gt;&lt;a href=&quot;#JavaScript&quot; class=&quot;headerlink&quot; title=&quot;JavaScript&quot;&gt;&lt;/a&gt;JavaScript&lt;/h1&gt;&lt;h2 id=&quot;一、概述&quot;&gt;&lt;a href=&quot;#一、概述&quot; class=&quot;headerlink&quot; title=&quot;一、概述&quot;&gt;&lt;/a&gt;一、概述&lt;/h2&gt;&lt;h3 id=&quot;1-1-概念&quot;&gt;&lt;a href=&quot;#1-1-概念&quot; class=&quot;headerlink&quot; title=&quot;1.1 概念&quot;&gt;&lt;/a&gt;1.1 概念&lt;/h3&gt;&lt;p&gt;概念：一门客户端脚本语言。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;运行在客户端浏览器中的，每一个浏览器都有JavaScript的解析引擎&lt;/li&gt;
&lt;li&gt;脚本语言：不需要编译，直接就可以被浏览器解析执行。&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="JavaWeb" scheme="http://sunmoon.com/categories/JavaWeb/"/>
    
    
      <category term="前端" scheme="http://sunmoon.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="JS" scheme="http://sunmoon.com/tags/JS/"/>
    
  </entry>
  
  <entry>
    <title>CSS入门</title>
    <link href="http://sunmoon.com/2020/08/16/CSS%E5%85%A5%E9%97%A8/"/>
    <id>http://sunmoon.com/2020/08/16/CSS%E5%85%A5%E9%97%A8/</id>
    <published>2020-08-16T11:50:45.000Z</published>
    <updated>2020-08-16T11:53:27.432Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、CSS概述"><a href="#一、CSS概述" class="headerlink" title="一、CSS概述"></a>一、CSS概述</h2><p>概念：层叠样式表（Cascading Style Sheet）</p><blockquote><p>层叠样式: 对同一个标签添加多个不同的样式,所有样式会叠加在一起展示出效果</p></blockquote><p>作用：页面美化和控制布局</p><p>CSS的优点：</p><ul><li>实现了样式和内容的分离，提高了显示效果和样式的复用性。</li><li>降低耦合性，分工更加明确，CSS专门用于美化，HTML专门用于结构搭建。</li></ul><a id="more"></a><h2 id="二、CSS入门"><a href="#二、CSS入门" class="headerlink" title="二、CSS入门"></a>二、CSS入门</h2><h3 id="2-1-HTML引入CSS"><a href="#2-1-HTML引入CSS" class="headerlink" title="2.1 HTML引入CSS"></a>2.1 HTML引入CSS</h3><p>HTML有三种引入CSS的方式分别是：</p><ul><li><p>行内样式</p><ul><li>在标签中使用<strong>style</strong>属性指定css代码</li><li>如：<code>&lt;div style=&quot;color:red;&quot;&gt;hello,world&lt;/div&gt;</code></li></ul></li><li><p>内部样式</p><ul><li><p>在head标签内，定义style标签，在style标签体内写css代码</p></li><li><pre><code class="html"><span class="tag">&lt;<span class="name">style</span>&gt;</span>    div{<span class="css">        <span class="selector-tag">color</span><span class="selector-pseudo">:red</span>;</span>    }<span class="tag">&lt;/<span class="name">style</span>&gt;</span><span class="comment"><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">+ 外部样式</span><br><span class="line"></span><br><span class="line">+ 通过link标签引入外部css文件</span><br><span class="line"></span><br><span class="line">+ ```html</span><br><span class="line">&lt;link <span class="attribute">rel</span>=<span class="string">"stylesheet"</span>  <span class="attribute">href</span>=<span class="string">"外部css文件"</span>/&gt;</span><br><span class="line"><span class="attribute">rel</span>=<span class="string">"stylesheet"</span> :告知浏览器引入的外部文件为css样式表</span><br></pre></td></tr></table></figure></span></code></pre></li></ul></li></ul><h3 id="2-2-CSS书写规范"><a href="#2-2-CSS书写规范" class="headerlink" title="2.2 CSS书写规范"></a>2.2 CSS书写规范</h3><p>注释：<code>/*注释内容*/</code></p><p>语法：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">选择器&#123;</span><br><span class="line">样式名:样式值;</span><br><span class="line">样式名:样式值;</span><br><span class="line">...</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">例如：</span><br><span class="line"><span class="selector-tag">span</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>:red;</span><br><span class="line">    <span class="attribute">font-size</span>:<span class="number">20px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-3-基本选择器"><a href="#2-3-基本选择器" class="headerlink" title="2.3 基本选择器"></a>2.3 基本选择器</h3><p>选择器作用：找出页面一组特定的标签</p><ul><li>标签选择器：<ul><li>语法：<code>标签名{css样式}</code></li><li>特点：指定标签</li></ul></li><li>类选择器：<ul><li><code>.class名{css样式}</code></li><li>特点：分组设置样式</li></ul></li><li>ID选择器：<ul><li><code>#id名{css样式}</code></li><li>特点：唯一</li></ul></li></ul><p>代码示例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>基本选择器<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        span&#123;</span><br><span class="line">            font-size: 20px;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.female</span>&#123;</span></span><br><span class="line">            color: pink;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.male</span>&#123;</span></span><br><span class="line">            color: skyblue;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.hero</span>&#123;</span></span><br><span class="line">            font-weight: bold;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-id">#boss</span>&#123;</span></span><br><span class="line">            font-size: 40px;</span><br><span class="line"><span class="css">            <span class="selector-tag">color</span>: <span class="selector-id">#9900FF</span>;</span></span><br><span class="line">            font-style: italic;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"female"</span>&gt;</span>古力娜扎<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"female"</span>&gt;</span>迪丽热巴<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"female hero"</span>&gt;</span>黑寡妇<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"male hero"</span>&gt;</span>钢铁侠<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"male hero"</span>&gt;</span>超人<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"boss"</span> <span class="attr">class</span>=<span class="string">"male"</span>&gt;</span>灭霸<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>选择器优先级：id &gt; class &gt; 标签</p></blockquote><h3 id="2-4-扩展选择器"><a href="#2-4-扩展选择器" class="headerlink" title="2.4 扩展选择器"></a>2.4 扩展选择器</h3><p>选择所有元素：</p><ul><li>语法：<code>*{css样式}</code></li></ul><p>并集选择器：</p><ul><li>语法：<code>选择器1,选择器2,选择器3....{css样式}</code></li></ul><p>父子选择器：</p><ul><li>语法：<code>父选择器 &gt; 子选择器{css样式}</code></li></ul><p>后代选择器：</p><ul><li>语法：<code>父选择器 后代选择器{css样式}</code></li></ul><p>属性选择器：</p><ul><li>语法：<code>标签[属性名=&quot;属性值&quot;]{css样式}</code></li></ul><p>伪类选择器：选择一些元素具有的状态</p><ul><li>语法： 元素:状态{}</li><li>如： <code>&lt;a&gt;:状态{}</code><ul><li>状态：<ul><li>link：初始化的状态</li><li>visited：被访问过的状态</li><li>active：正在访问状态</li><li>hover：鼠标悬浮状态</li></ul></li></ul></li></ul><p>代码示例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>04-扩展选择器<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        span,label&#123;</span><br><span class="line">            font-size: 20px;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        div&gt;span&#123;</span><br><span class="line">            color: red;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        div span&#123;</span><br><span class="line">            border: 1px solid black;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-tag">input</span><span class="selector-attr">[name=<span class="string">"username"</span>]</span>&#123;</span></span><br><span class="line">            background-color: gold;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>烟幕弹<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"gbl"</span>&gt;</span>高爆雷<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"jjx"</span>&gt;</span>急救箱<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span>&gt;</span>姓名<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"Jack"</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span>&gt;</span>密码<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"123456"</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-5-CSS属性介绍"><a href="#2-5-CSS属性介绍" class="headerlink" title="2.5 CSS属性介绍"></a>2.5 CSS属性介绍</h3><p>字体、文本</p><ul><li>font-size：字体大小<ul><li>color：文本颜色</li><li>text-align：对其方式</li><li>line-height：行高 </li></ul></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>字体和文本属性<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        p&#123;</span><br><span class="line"><span class="css">            <span class="selector-tag">color</span>: <span class="selector-tag">green</span>; <span class="comment">/*1.p段落文字绿色*/</span></span></span><br><span class="line"><span class="css">            <span class="selector-tag">font-size</span>: 20<span class="selector-tag">px</span>; <span class="comment">/*2.p段落文字大小20px*/</span></span></span><br><span class="line"><span class="css">            <span class="selector-tag">line-height</span>: 40<span class="selector-tag">px</span>; <span class="comment">/*3.p段落行高40px*/</span></span></span><br><span class="line"><span class="css">            <span class="selector-tag">font-weight</span>: <span class="selector-tag">bold</span>; <span class="comment">/*4.p段落字体加粗*/</span></span></span><br><span class="line"><span class="css">            <span class="selector-tag">font-family</span>: 楷体; <span class="comment">/*5.p段落字体楷体*/</span></span></span><br><span class="line"><span class="css">            <span class="selector-tag">font-style</span>: <span class="selector-tag">italic</span>; <span class="comment">/*6.p段落文字倾斜*/</span></span></span><br><span class="line"><span class="css">            <span class="selector-tag">text-indent</span>: 40<span class="selector-tag">px</span>; <span class="comment">/*设置段落的首行缩进*/</span></span></span><br><span class="line">        &#125;</span><br><span class="line">        a&#123;</span><br><span class="line">            text-decoration: none;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span> 学习的误区：<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">        眼睛：看了一遍记住了<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">        耳朵：听了一遍明白了<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">        脑子：想了一遍搞懂了<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">        手：你们会个屁！^_^ <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>背景</p><ul><li>background</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>背景属性<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        div&#123;</span><br><span class="line">            width: 100%;</span><br><span class="line">            height: 200px;</span><br><span class="line">            border: 1px solid red;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-id">#div1</span>&#123;</span></span><br><span class="line">            background-color: lightpink;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-id">#div2</span>&#123;</span></span><br><span class="line">            background-image: url("../img/girl.jpg");</span><br><span class="line">            background-repeat: no-repeat;</span><br><span class="line"><span class="css">            <span class="selector-tag">background-position</span>: <span class="selector-tag">center</span>; <span class="comment">/* center center */</span></span></span><br><span class="line">            background-color: antiquewhite;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"div1"</span>&gt;</span></span><br><span class="line">    我可以输入一切内容。。。。</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"div2"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>边框</p><ul><li>border：设置边框属性</li></ul><p>尺寸</p><ul><li>width：宽度</li><li>height：高度</li></ul><p>盒子模型：控制布局</p><ul><li><p>margin：外边距</p></li><li><p>padding：内边距</p><ul><li>默认情况下内边距会影响整个盒子的大小</li><li>box-sizing: border-box;  设置盒子的属性，让width和height就是最终盒子的大小</li></ul></li><li><p>float：浮动</p><ul><li>left</li><li>right</li></ul></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>盒子模型<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.box</span>&#123;</span></span><br><span class="line">            width: 300px;</span><br><span class="line">            height: 300px;</span><br><span class="line"><span class="css">            <span class="selector-tag">border</span>: 10<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-tag">red</span>; <span class="comment">/*同时指定四个边框*/</span></span></span><br><span class="line"><span class="css">            <span class="selector-tag">padding</span>: 30<span class="selector-tag">px</span>;<span class="comment">/*同时指定四个内边距为30px*/</span></span></span><br><span class="line"><span class="css">            <span class="selector-tag">margin</span><span class="selector-pseudo">:auto</span>;</span></span><br><span class="line">            margin-top: 50px;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    盒子模型：</span></span><br><span class="line"><span class="comment">        边框：border</span></span><br><span class="line"><span class="comment">            top、right、bottom、left</span></span><br><span class="line"><span class="comment">        内边距：padding</span></span><br><span class="line"><span class="comment">            top、right、bottom、left</span></span><br><span class="line"><span class="comment">        外边距：margin</span></span><br><span class="line"><span class="comment">             top、right、bottom、left</span></span><br><span class="line"><span class="comment">        盒子水平居中：margin:auto;</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../img/girl.jpg"</span> <span class="attr">width</span>=<span class="string">"300px"</span> <span class="attr">height</span>=<span class="string">"300px"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>显示属性</p><ul><li>display<ul><li>block：指定标签为块级元素</li><li>inline：指定标签为行内元素</li><li>none：隐藏元素</li></ul></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>显示属性<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        div,span&#123;</span><br><span class="line">            background-color: red;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        span&#123;</span><br><span class="line"><span class="css">            <span class="selector-tag">display</span>: <span class="selector-tag">block</span>; <span class="comment">/*指定标签为块级元素*/</span></span></span><br><span class="line">            text-align: center;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        div&#123;</span><br><span class="line"><span class="css">            <span class="selector-tag">display</span>: <span class="selector-tag">none</span>; <span class="comment">/*指定标签为行内元素*/</span></span></span><br><span class="line">            text-align: center;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        ul li&#123;</span><br><span class="line">            display: inline;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>内联标签span1<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>内联标签span2<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>内联标签span3<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>块级标签div1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>块级标签div2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>块级标签div3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>萨瓦迪卡<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>鼓励娜扎<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>马尔扎哈<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、CSS概述&quot;&gt;&lt;a href=&quot;#一、CSS概述&quot; class=&quot;headerlink&quot; title=&quot;一、CSS概述&quot;&gt;&lt;/a&gt;一、CSS概述&lt;/h2&gt;&lt;p&gt;概念：层叠样式表（Cascading Style Sheet）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;层叠样式: 对同一个标签添加多个不同的样式,所有样式会叠加在一起展示出效果&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;作用：页面美化和控制布局&lt;/p&gt;
&lt;p&gt;CSS的优点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;实现了样式和内容的分离，提高了显示效果和样式的复用性。&lt;/li&gt;
&lt;li&gt;降低耦合性，分工更加明确，CSS专门用于美化，HTML专门用于结构搭建。&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="JavaWeb" scheme="http://sunmoon.com/categories/JavaWeb/"/>
    
    
      <category term="前端" scheme="http://sunmoon.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="CSS" scheme="http://sunmoon.com/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>HTML入门</title>
    <link href="http://sunmoon.com/2020/08/16/HTML%E5%85%A5%E9%97%A8/"/>
    <id>http://sunmoon.com/2020/08/16/HTML%E5%85%A5%E9%97%A8/</id>
    <published>2020-08-16T11:50:11.000Z</published>
    <updated>2020-08-16T11:54:59.873Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、HTML概述"><a href="#一、HTML概述" class="headerlink" title="一、HTML概述"></a>一、HTML概述</h2><p>HTML: (Hyper Text Markup Language)超文本标记语言。</p><ul><li>超文本:不仅可以展示文字,还可以显示超链接,图片,音乐,视频等丰富内容.</li><li>标记语言:描述特定功能的标签。</li><li>W3C(World Wide Web Consortium)世界万维网联盟给我们定义好了这套标签。</li></ul><blockquote><p>html和xml：</p><ul><li><p>xml（EXtensible Markup Language）：</p><ul><li>特点：标签自定义，存储数据</li></ul></li><li><p>html（Hyper Text Markup Language）：</p><ul><li>特点：标签预定义（语义，功能）、展示数据</li></ul></li></ul></blockquote><a id="more"></a><h2 id="二、HTML基础"><a href="#二、HTML基础" class="headerlink" title="二、HTML基础"></a>二、HTML基础</h2><h3 id="2-1-入门案例"><a href="#2-1-入门案例" class="headerlink" title="2.1 入门案例"></a>2.1 入门案例</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span> <span class="comment">&lt;!--文档声明：声明当前的html是5的这个版本--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span> <span class="comment">&lt;!--声明当前页面的字符集--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>标题<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    hello，world！！！</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-2-HTML组成和规范"><a href="#2-2-HTML组成和规范" class="headerlink" title="2.2 HTML组成和规范"></a>2.2 HTML组成和规范</h3><ol><li><p>html文档声明：<code>&lt;!DOCTYPE html&gt;</code></p><ul><li>要求：必须在页面的第一行，固定值</li></ul></li><li><p>html预定义标签</p><ul><li>双标签：<code>&lt;html&gt;&lt;/HTML&gt;</code></li><li>单标签：<code>&lt;img&gt;</code></li><li>特点：html语法比较松散</li></ul></li><li><p>html属性</p><ul><li>语法：<code>&lt;html 属性名=&quot;属性值&quot; 属性名=&#39;属性值&#39;&gt;&lt;/HTML&gt;</code></li><li>特点：属性必须在开始标签</li></ul></li><li><p>html文本</p><ul><li>特点：写在指定的标签体中</li></ul></li><li><p>html注释</p><ul><li><code>&lt;!-- 注释内容 --&gt;</code></li></ul></li></ol><h2 id="三、HTML常用标签"><a href="#三、HTML常用标签" class="headerlink" title="三、HTML常用标签"></a>三、HTML常用标签</h2><p>标题标签：h1~h6</p><ul><li><code>&lt;h1&gt;&lt;/h1&gt; | &lt;h2&gt;&lt;/h2&gt; | ....</code></li></ul><p>水平线：<code>&lt;hr&gt;</code></p><p>段落：<code>&lt;p&gt;&lt;/p&gt;</code></p><p>换行：<code>&lt;br&gt;</code></p><p>超链接：<code>&lt;a href=&quot;跳转路径&quot; target=&quot;跳转方式&quot;&gt;&lt;/a&gt;</code></p><ul><li>href<ul><li>绝对地址</li><li>相对地址<ul><li><code>./</code>当前目录</li><li><code>../</code>上一级目录</li></ul></li></ul></li><li>target<ul><li><code>_self</code>：<strong>默认值</strong>，在当前页跳转</li><li><code>_blank</code>：打开一个新标签页</li></ul></li></ul><p>img：<code>&lt;img src=&quot;图片地址&quot; width=&quot;图片宽度,单位px(像素)&quot; alt=&quot;图片加载失败显示的文字&quot;&gt;</code></p><p>列表：</p><ul><li><code>ul</code>：无序列表</li><li><code>ol</code>：有序列表</li><li><code>li</code>：列表项</li></ul><p>容器：</p><ul><li>div：<code>&lt;div&gt;内容&lt;/div&gt;</code><ul><li>块级元素，占一行</li></ul></li><li>span：<code>&lt;span&gt;内容&lt;/span&gt;</code><ul><li>行内元素，根据内容自适应大小</li></ul></li></ul><p>转义字符：</p><ul><li><code>&amp;nbsp;</code>：英文空格</li><li><code>&amp;emsp;</code>：中文空格</li></ul><p>表格：</p><ul><li>table：定义表格<ul><li>width：宽度</li><li>border：边框</li><li>cellpadding：定义内容和单元格的距离</li><li>cellspacing：定义单元格之间的距离。如果指定为0，则单元格的线会合为一条、</li><li>bgcolor：背景色</li><li>align：对齐方式</li></ul></li><li>tr：定义行<ul><li>bgcolor：背景色</li><li>align：对齐方式</li></ul></li><li>td：定义单元格<ul><li>colspan：合并列</li><li>rowspan：合并行</li></ul></li><li>th：定义表头单元格</li><li><code>&lt;caption&gt;</code>：表格标题</li><li><code>&lt;thead&gt;</code>：表示表格的头部分</li><li><code>&lt;tbody&gt;</code>：表示表格的体部分</li><li><code>&lt;tfoot&gt;</code>：表示表格的脚部分</li></ul><h2 id="四、HTML表单"><a href="#四、HTML表单" class="headerlink" title="四、HTML表单"></a>四、HTML表单</h2><p>表单：</p><ul><li><code>&lt;form&gt;&lt;/form&gt;</code> ：它只是一个容器（我们看不到），所有的表单项必须被它包裹，才能采集和发送…</li></ul><p>常用属性：</p><ul><li>action：表单的提交地址，暂时使用#代替（#：表示当前页面）</li><li>method：表单的提交方式，有二种：get（默认值）  | post<ul><li>get<ul><li>格式：页面地址?参数名=参数值 &amp; 参数名=参数值<ul><li>请求参数在地址栏拼接</li><li>请求方式不太安全</li><li>请求大小是有限制</li></ul></li></ul></li><li>post<ul><li>格式：在http协议请求体；参数名=参数值 &amp; 参数名=参数值<ul><li>参数不在地址拼接</li><li>请求方式相对安全</li><li>请求大小是没有限制</li></ul></li></ul></li></ul></li></ul><p>表单项：</p><ul><li><p>文本框</p><ul><li><p><code>&lt;input type=&quot;&quot; name=&quot;&quot; value=&quot;&quot;/&gt;</code></p></li><li><p>type 类型，有很多种，不同类型有不同的功能和展示效果</p><ul><li>text：普通文本框</li><li>password：密码框 特点：掩码</li><li>date：日期选择框</li><li>radio：单选框<ul><li>特点：name属性相同分为一组，完成互斥效果</li><li>默认选中：checked</li></ul></li><li>checkbox：复选框<ul><li>特点：name属性相同分为一组，不会出现互斥的效果</li><li>默认选中：checked</li></ul></li><li>file：文件上传<ul><li>要求：表单的提交方式必须为post</li></ul></li><li>submit：提交按钮<ul><li>功能：将表单提交到服务器</li><li>注意：此按钮不需要name属性，value是按钮显示名称</li></ul></li><li>reset：重置按钮<ul><li>功能：将表单元素重置</li></ul></li><li>button：普通按钮，通常与js结合使用</li></ul><blockquote><p>注意：</p><ul><li>name 文本框名称，必须存在，不然此表单的不会被提交</li><li>value 文本框的值 （1.用户输入  2.用户选择）</li></ul></blockquote></li></ul></li><li><p>下拉框</p><ul><li>语法：<code>&lt;select name=&quot;&quot; multiple&gt;&lt;select&gt;</code><ul><li>multiple ：多选</li><li>下拉选项：<code>&lt;option value=&quot;&quot;&gt;&lt;/option&gt;</code><ul><li>默认选中：selected</li></ul></li></ul></li></ul></li><li><p>文本域</p><ul><li>语法：<code>&lt;textarea name=&quot;&quot;&gt; &lt;/textarea&gt;</code></li><li>常用属性：<ul><li>rows：行高</li><li>cols：列宽</li></ul></li></ul></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>11-表单控件<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"#"</span> <span class="attr">method</span>=<span class="string">"get"</span>&gt;</span></span><br><span class="line">    用户：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">placeholder</span>=<span class="string">"请输入用户名"</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    密码：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">placeholder</span>=<span class="string">"请输入密码"</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    生日：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"date"</span> <span class="attr">name</span>=<span class="string">"birthday"</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    性别：</span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"male"</span>&gt;</span>男<span class="tag">&lt;/<span class="name">label</span>&gt;</span> <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"male"</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"gender"</span> <span class="attr">value</span>=<span class="string">"男"</span> <span class="attr">checked</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"female"</span>&gt;</span>女<span class="tag">&lt;/<span class="name">label</span>&gt;</span> <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"female"</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"gender"</span> <span class="attr">value</span>=<span class="string">"女"</span> &gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    爱好：</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"hobby"</span> <span class="attr">value</span>=<span class="string">"somke"</span>&gt;</span> 抽烟</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"hobby"</span> <span class="attr">value</span>=<span class="string">"drink"</span> <span class="attr">checked</span>&gt;</span> 喝酒</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"hobby"</span> <span class="attr">value</span>=<span class="string">"perm"</span>&gt;</span>  烫头 <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    头像：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">name</span>=<span class="string">"pic"</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    学历：</span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">"edu"</span> <span class="attr">multiple</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"1"</span>&gt;</span>小学<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"2"</span>&gt;</span>初中<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"3"</span> &gt;</span>高中<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"4"</span> <span class="attr">selected</span>&gt;</span>大学<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    介绍：</span><br><span class="line">    <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">name</span>=<span class="string">"intro"</span> <span class="attr">rows</span>=<span class="string">"10"</span> <span class="attr">cols</span>=<span class="string">"30"</span>&gt;</span> <span class="tag">&lt;/<span class="name">textarea</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"注册 | 登录 | 提交"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"reset"</span> <span class="attr">value</span>=<span class="string">"重置"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"我是普通按钮，在表单中没啥卵用"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、HTML概述&quot;&gt;&lt;a href=&quot;#一、HTML概述&quot; class=&quot;headerlink&quot; title=&quot;一、HTML概述&quot;&gt;&lt;/a&gt;一、HTML概述&lt;/h2&gt;&lt;p&gt;HTML: (Hyper Text Markup Language)超文本标记语言。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;超文本:不仅可以展示文字,还可以显示超链接,图片,音乐,视频等丰富内容.&lt;/li&gt;
&lt;li&gt;标记语言:描述特定功能的标签。&lt;/li&gt;
&lt;li&gt;W3C(World Wide Web Consortium)世界万维网联盟给我们定义好了这套标签。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;html和xml：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;xml（EXtensible Markup Language）：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;特点：标签自定义，存储数据&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;html（Hyper Text Markup Language）：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;特点：标签预定义（语义，功能）、展示数据&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="JavaWeb" scheme="http://sunmoon.com/categories/JavaWeb/"/>
    
    
      <category term="前端" scheme="http://sunmoon.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="HTML" scheme="http://sunmoon.com/tags/HTML/"/>
    
  </entry>
  
  <entry>
    <title>单例、多例、枚举、工厂模式、正则表达式</title>
    <link href="http://sunmoon.com/2020/08/13/%E5%8D%95%E4%BE%8B%E3%80%81%E5%A4%9A%E4%BE%8B%E3%80%81%E6%9E%9A%E4%B8%BE%E3%80%81%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F%E3%80%81%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    <id>http://sunmoon.com/2020/08/13/%E5%8D%95%E4%BE%8B%E3%80%81%E5%A4%9A%E4%BE%8B%E3%80%81%E6%9E%9A%E4%B8%BE%E3%80%81%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F%E3%80%81%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</id>
    <published>2020-08-13T09:54:03.000Z</published>
    <updated>2020-08-13T09:59:44.040Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、单例模式"><a href="#一、单例模式" class="headerlink" title="一、单例模式"></a>一、单例模式</h2><p><strong>单例模式：</strong>是一种常用的软件设计模式。通过单例模式可以保证系统中，应用该模式的这个类只有一个<br>实例。即一个类只有一个对象实例。</p><a id="more"></a><h3 id="1-1-实现步骤"><a href="#1-1-实现步骤" class="headerlink" title="1.1 实现步骤"></a>1.1 实现步骤</h3><ol><li>将构造方法私有化，使其不能在类的外部通过new关键字实例化对象。</li><li>在类的内部产生一个唯一的一个实例化对象，并且将其封装为<code>private static</code>类型的成员变量</li><li>定义一个静态方法返回这个唯一对象</li></ol><h3 id="1-2-单例设计模式的类型"><a href="#1-2-单例设计模式的类型" class="headerlink" title="1.2 单例设计模式的类型"></a>1.2 单例设计模式的类型</h3><p>根据对象实例化的时机，单例模式可分为以下两种：</p><ul><li>饿汉单例模式</li><li>懒汉单例模式</li></ul><h3 id="1-3-饿汉单例模式"><a href="#1-3-饿汉单例模式" class="headerlink" title="1.3 饿汉单例模式"></a>1.3 饿汉单例模式</h3><p>饿汉单例模式：其含义就是在使用类的时候对象已经创建完毕，不管以后会不会使用到这个对象。</p><p>代码示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Cat</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 提供静态属性，并创建对象</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Cat cat = <span class="keyword">new</span> Cat();</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将构造方法私有，防止外界使用new关键字创建对象</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">Cat</span><span class="params">()</span></span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 提供静态方法用来获取对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Cat <span class="title">getInstance</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> cat;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo02Test</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        System.out.println(Cat.getInstance());</span><br><span class="line">        System.out.println(Cat.getInstance());</span><br><span class="line">        System.out.println(Cat.getInstance());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1-4-懒汉单例模式"><a href="#1-4-懒汉单例模式" class="headerlink" title="1.4 懒汉单例模式"></a>1.4 懒汉单例模式</h3><p>懒汉单例模式：其含义就是在调用方法获取对象的时候才创建对象，先不急着创建对象，等着需要使用的时候才实例化对象。</p><p>代码示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Dog</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 定义Dog类型的变量。用来接收getInstance方法中创建的Dog对象</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Dog dog = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 私有构造方法，让外界不能通过new的方式创建对象</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">Dog</span><span class="params">()</span></span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 定义静态方法，用来获取Dog对象</span></span><br><span class="line"><span class="comment">     * 多线程可能出现线程安全问题，加synchronized</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">synchronized</span> Dog <span class="title">getInstance</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">//当调用getInstance方法创建对象时，判断dog变量是否是null，如果是null表示之前没有获取过Dog对象，那么就创建一个Dog对象赋值给dog</span></span><br><span class="line">        <span class="keyword">if</span> (dog == <span class="keyword">null</span>)&#123;</span><br><span class="line">            dog = <span class="keyword">new</span> Dog();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//将之前获取的dog返回</span></span><br><span class="line">        <span class="keyword">return</span> dog;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo01Test</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        System.out.println(Dog.getInstance());</span><br><span class="line">        System.out.println(Dog.getInstance());</span><br><span class="line">        System.out.println(Dog.getInstance());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>注意：懒汉单例模式在多线程环境下可能会实例化多个对象，不能保证单例的状态，所以在方法上加上synchronized关键字，保证线程安全。</p></blockquote><blockquote><p>小结：</p><ul><li><p>饿汉单例模式：先创建对象，不管以后能不能用到这个对象</p></li><li><p>懒汉单例模式：后创建对象，等到需要使用对象的时候在进行实例化对象。</p></li><li><p><strong>单例模式可以保证系统中一个类只有一个实例对象。</strong></p></li></ul></blockquote><h2 id="二、多例模式"><a href="#二、多例模式" class="headerlink" title="二、多例模式"></a>二、多例模式</h2><p>多例模式，是一种常用的软件设计模式。通过多例模式可以保证系统中，应用该模式的类有固定数量的<br>实例。多例类要自我创建并管理自己的实例，还要向外界提供获取本类实例的方法。</p><h3 id="2-1-实现步骤"><a href="#2-1-实现步骤" class="headerlink" title="2.1 实现步骤"></a>2.1 实现步骤</h3><ol><li>将构造方法私有化，使外部不能通过new关键字创建对象。</li><li>定义list集合，存放实例化的对象</li><li>定义静态代码块，实例化一定数量的对象并添加到集合中</li><li>定义静态方法，给外界提供获取对象的方式。</li></ol><h3 id="2-2-代码演示"><a href="#2-2-代码演示" class="headerlink" title="2.2 代码演示"></a>2.2 代码演示</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 创建集合，用来保存程序中所有的Person对象</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> List&lt;Person&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将构造方法私有，防止外界通过new的方式创建对象</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">Person</span><span class="params">()</span></span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 定义静态代码块，在静态代码块中创建Person对象，并添加到集合中</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">            list.add(<span class="keyword">new</span> Person());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 定义方法，用来随机获取程序中的Person对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Person <span class="title">getInstance</span><span class="params">()</span></span>&#123;</span><br><span class="line">        Random r = <span class="keyword">new</span> Random();</span><br><span class="line">        <span class="keyword">return</span> list.get(r.nextInt(list.size()));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo01Test</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">50</span>; i++) &#123;</span><br><span class="line">            System.out.println(Person.getInstance());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>小结：</p><ul><li>多例模式可以保证系统中一个类有固定个数的对象实例，在实现需求的基础上，提高对象的复用性。</li></ul></blockquote><h2 id="三、枚举"><a href="#三、枚举" class="headerlink" title="三、枚举"></a>三、枚举</h2><h3 id="3-1-不使用枚举存在的问题"><a href="#3-1-不使用枚举存在的问题" class="headerlink" title="3.1 不使用枚举存在的问题"></a>3.1 不使用枚举存在的问题</h3><p>假如我们要定义一个人类，属性包含姓名和性别，数据类型都为字符串，代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span></span>&#123;</span><br><span class="line"><span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String gender;</span><br><span class="line">    </span><br><span class="line">    set、get、构造方法略...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] agrs)</span></span>&#123;</span><br><span class="line">Person person = <span class="keyword">new</span> Person();</span><br><span class="line">        person.setName(<span class="string">"张三"</span>);</span><br><span class="line">        person.setGender(<span class="string">"hello"</span>);<span class="comment">//性别的数据类型是字符串，所以可以传入任意字符串</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>不适用枚举时，就出现了上面的问题，可以给性别传递任意的字符串，导致性别非法。</p><h3 id="3-2-枚举的应用场景"><a href="#3-2-枚举的应用场景" class="headerlink" title="3.2 枚举的应用场景"></a>3.2 枚举的应用场景</h3><p>当一个方法接收的参数或者一个属性的取值在固定的范围，那么我们就可以使用枚举。例如，人的性别，一年的四个季度。</p><h3 id="3-3-枚举入门"><a href="#3-3-枚举入门" class="headerlink" title="3.3 枚举入门"></a>3.3 枚举入门</h3><ul><li>枚举本质就是类，枚举是多例的体现。</li><li>枚举中有很多属性，枚举中的每个属性都是自身的一个对象。</li></ul><h4 id="3-3-1-定义格式"><a href="#3-3-1-定义格式" class="headerlink" title="3.3.1 定义格式"></a>3.3.1 定义格式</h4><p>格式：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> 枚举名&#123;</span><br><span class="line">    属性<span class="number">1</span>,属性<span class="number">2</span>,属性<span class="number">3</span>,...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-3-2-代码示例"><a href="#3-3-2-代码示例" class="headerlink" title="3.3.2 代码示例"></a>3.3.2 代码示例</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> Gender &#123;</span><br><span class="line"></span><br><span class="line">    BOY,</span><br><span class="line"></span><br><span class="line">    GIRL</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Gender gender;</span><br><span class="line"></span><br><span class="line">    set、get、构造方法略...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo01Test</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Person p1 = <span class="keyword">new</span> Person();</span><br><span class="line">        p1.setName(<span class="string">"张三"</span>);</span><br><span class="line">        p1.setGender(Gender.BOY);</span><br><span class="line">        System.out.println(p1);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>在上面代码中，在设置人的性别的时候，只能传递BOY或者GIRL，这样就解决的文中一开始提到的问题。</p></blockquote><h3 id="3-4-枚举类反编译"><a href="#3-4-枚举类反编译" class="headerlink" title="3.4 枚举类反编译"></a>3.4 枚举类反编译</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> Gender &#123;</span><br><span class="line">    BOY,</span><br><span class="line">    GIRL</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>进行反编译：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">Gender</span> <span class="keyword">extends</span> <span class="title">Enum</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Gender BOY;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Gender GIRL;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Gender $VALUES[];</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> Gender[] values()</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> (Gender[])$VALUES.clone();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Gender <span class="title">valueOf</span><span class="params">(String name)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> (Gender)Enum.valueOf(com/sun/demo03enum/Gender, name);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="title">Gender</span><span class="params">(String s, <span class="keyword">int</span> i)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">super</span>(s, i);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> </span><br><span class="line">&#123;</span><br><span class="line">BOY = <span class="keyword">new</span> Gender(<span class="string">"BOY"</span>, <span class="number">0</span>);</span><br><span class="line">GIRL = <span class="keyword">new</span> Gender(<span class="string">"GIRL"</span>, <span class="number">1</span>);</span><br><span class="line">$VALUES = (<span class="keyword">new</span> Gender[] &#123;</span><br><span class="line">BOY, GIRL</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>枚举中的每个属性默认都是使用static final修饰的，因为使用final修饰了，所以是常量，在命名时都大写。</p><p>因为使用static修饰了，所以在使用属性时，可以通过枚举名字直接去使用</p></blockquote><h2 id="四、工厂设计模式"><a href="#四、工厂设计模式" class="headerlink" title="四、工厂设计模式"></a>四、工厂设计模式</h2><p>工厂模式（Factory Pattern）是 Java 中最常用的设计模式之一。这种类型的设计模式属于创建型模<br>式，它提供了一种创建对象的最佳方式。</p><ul><li>工厂模式可以将对象的创建操作从我们自己转交给工厂，让工厂去创建对象，创建好之后再交给我们。</li></ul><h3 id="工厂模式示例"><a href="#工厂模式示例" class="headerlink" title="工厂模式示例"></a>工厂模式示例</h3><p>步骤：</p><ul><li>定义Car作为父类，里面提供run方法。</li><li>定义FaLaLi、Alto继承Car</li><li>定义Factory工厂，里面改提供一个生成小汽车的方法。</li><li>在测试类中通过工厂获取小汽车</li></ul><p>代码演示：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Car</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Alto</span> <span class="keyword">extends</span> <span class="title">Car</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"奥拓在慢慢的跑..."</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FaLaLi</span> <span class="keyword">extends</span> <span class="title">Car</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"法拉利在嗖嗖的跑..."</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 汽车工厂类</span></span><br><span class="line"><span class="comment"> * 用来获取小汽车</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CarFactory</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 定义方法，用来获取小汽车</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Car <span class="title">getCar</span><span class="params">(String carName)</span></span>&#123;</span><br><span class="line">        <span class="comment">//判断传递过来的参数</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="string">"法拉利"</span>.equals(carName))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> FaLaLi();</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">"奥拓"</span>.equals(carName))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> Alto();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">//其他表示工厂不能生产</span></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo01Test</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//通过工厂获取对象</span></span><br><span class="line">        Car c = CarFactory.getCar(<span class="string">"法拉利"</span>);</span><br><span class="line">        <span class="comment">//让小汽车运行</span></span><br><span class="line">        c.run();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>工厂模式好处：让程序更加灵活，易于扩展，易维护。</p></blockquote><h2 id="五、正则表达式"><a href="#五、正则表达式" class="headerlink" title="五、正则表达式"></a>五、正则表达式</h2><h3 id="5-1-正则表达式介绍"><a href="#5-1-正则表达式介绍" class="headerlink" title="5.1 正则表达式介绍"></a>5.1 正则表达式介绍</h3><p><strong>正则表达式</strong>：用来验证一个字符串是否符合规则。</p><p>在String中，有一个方法可以使用正则表达式验证。</p><ul><li><code>boolean matches(String regex)</code>：根据正则表达式验证字符串是否符合规则。</li></ul><p>正则表达式的一些规则：</p><p><code>[abc]</code>：表示a或者b或者c。<br><code>[^abc]</code>：表示除了a,b,c之外的字符。<br><code>[a-z]</code>：表示a-z中的任意一个。<br><code>[A-Z]</code>：表示A-Z中的任意一个。<br><code>[0-9]</code>：表示0-9中的任意一个。<br><code>[a-zA-Z0-9]</code>：表示匹配a-z，A-Z，0-9中的任意一个字符<br><code>[a-mp-x]</code>：表示匹配a-m或p-x中的任意一个字符<br><code>\d</code>数字：<code>[0-9]</code><br><code>\D</code> 非数字：<code>[^0-9]</code><br><code>\s</code>空白字符：空格 tab等等<br><code>\S</code>非空白字符<br><code>\w</code> 单词字符：<code>[a-zA-Z0-9_]</code><br><code>\W</code>非单词字符：<code>[^a-zA-Z0-9_]</code><br><code>?</code>：0次或1次<br><code>*</code>：任意次<br><code>+</code>：一次或多次<br><code>{n}</code>：恰巧n次<br><code>{n,}</code>：至少n次<br><code>{n,m}</code>：n到m次</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo01Regex</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">       <span class="comment">//使用正则表达式验证一个qq号书否符合规则</span></span><br><span class="line">        <span class="comment">//规则：5-12位，第一位不能为0</span></span><br><span class="line">        String qq = <span class="string">"12345"</span>;</span><br><span class="line">        <span class="keyword">boolean</span> flag = qq.matches(<span class="string">"[1-9]\\d&#123;4,11&#125;"</span>);</span><br><span class="line">        System.out.println(flag);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//使用正则表达式验证手机号是否符合规则</span></span><br><span class="line">        <span class="comment">//规则：11位纯数字，第一位必须是1，第二位可以是35678，剩下的必须是0-9的数组</span></span><br><span class="line">        String phoneNum = <span class="string">"13800012345"</span>;</span><br><span class="line">        <span class="keyword">boolean</span> f2 = phoneNum.matches(<span class="string">"[1][35678][0-9]&#123;9&#125;"</span>);</span><br><span class="line">        System.out.println(f2);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 使用正则表达式验证邮箱是否符合规则</span></span><br><span class="line">        <span class="comment">//规则 xxx@126.com   xxx@xx.cn  xxx@xx.com.cn</span></span><br><span class="line">        String email = <span class="string">"jack@163.com.cn"</span>;</span><br><span class="line">        <span class="keyword">boolean</span> f3 = email.matches(<span class="string">"\\w+@\\w+(\\.\\w+)+"</span>);</span><br><span class="line">        System.out.println(f3);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>正则有关的方法：</p><ul><li><code>String[] split(String regex)</code>：根据正则表达式切割字符串</li><li><code>String replaceAll(String regex, String replacement)</code>：根据正则表达式进行替换</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo02Test</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//定义字符串</span></span><br><span class="line">        String s = <span class="string">"aaa   bb   cc  ddd"</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//使用*替换掉字符串中的空白</span></span><br><span class="line">        String sNew = s.replaceAll(<span class="string">"\\s+"</span>, <span class="string">"*"</span>);</span><br><span class="line">        System.out.println(sNew);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//根据一个或者多个空格切割</span></span><br><span class="line">        String[] sArr = s.split(<span class="string">"\\s+"</span>);</span><br><span class="line">        <span class="keyword">for</span> (String s1 : sArr) &#123;</span><br><span class="line">            System.out.println(s1);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-2-常用正则"><a href="#5-2-常用正则" class="headerlink" title="5.2 常用正则"></a>5.2 常用正则</h3><h4 id="5-2-1-校验数字的表达式"><a href="#5-2-1-校验数字的表达式" class="headerlink" title="5.2.1 校验数字的表达式"></a>5.2.1 校验数字的表达式</h4><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">1 数字：^[0-9]*$</span><br><span class="line">2 n位的数字：^\d&#123;n&#125;$</span><br><span class="line">3 至少n位的数字：^\d&#123;n,&#125;$</span><br><span class="line">4 m-n位的数字：^\d&#123;m,n&#125;$</span><br><span class="line">5 零和非零开头的数字：^(0|[<span class="string">1-9</span>][<span class="symbol">0-9</span>]*)$</span><br><span class="line">6 非零开头的最多带两位小数的数字：^([<span class="string">1-9</span>][<span class="symbol">0-9</span>]*)+(.[0-9]&#123;1,2&#125;)?$</span><br><span class="line">7 带1-2位小数的正数或负数：^(\-)?\d+(\.\d&#123;1,2&#125;)?$</span><br><span class="line">8 正数、负数、和小数：^(\-|\+)?\d+(\.\d+)?$</span><br><span class="line">9 有两位小数的正实数：^[0-9]+(.[0-9]&#123;2&#125;)?$</span><br><span class="line">10 有1~3位小数的正实数：^[0-9]+(.[0-9]&#123;1,3&#125;)?$</span><br><span class="line">11 非零的正整数：^[<span class="string">1-9</span>]\d<span class="emphasis">*$ 或 ^([1-9][0-9]*</span>)&#123;1,3&#125;$ 或 ^\+?[<span class="string">1-9</span>][<span class="symbol">0-9</span>]*$</span><br><span class="line">12 非零的负整数：^\-[<span class="string">1-9</span>][<span class="symbol"></span>]0-9"<span class="emphasis">*$ 或 ^-[1-9]\d*</span>$</span><br><span class="line">13 非负整数：^\d+$ 或 ^[1-9]\d*|0$</span><br><span class="line">14 非正整数：^-[1-9]\d*|0$ 或 ^((-\d+)|(0+))$</span><br><span class="line">15 非负浮点数：^\d+(\.\d+)?$ 或 ^[1-9]\d<span class="emphasis">*\.\d*</span>|0\.\d<span class="emphasis">*[1-9]\d*</span>|0?\.0+|0$</span><br><span class="line">16 非正浮点数：^((-\d+(\.\d+)?)|(0+(\.0+)?))$ 或 ^(-([1-9]\d<span class="emphasis">*\.\d*</span>|0\.\d<span class="emphasis">*[1-9]\d*</span>))|0?\.0+|0$</span><br><span class="line">17 正浮点数：^[<span class="string">1-9</span>]\d<span class="emphasis">*\.\d*</span>|0\.\d<span class="emphasis">*[1-9]\d*</span>$ 或 ^(([<span class="string">0-9</span>]+\.[<span class="string">0-9</span>]<span class="emphasis">*[1-9][0-9]*</span>)|([<span class="string">0-9</span>]<span class="emphasis">*[1-9][0-9]*</span>\.[<span class="string">0-9</span>]+)|([<span class="string">0-9</span>]<span class="emphasis">*[1-9][0-9]*</span>))$</span><br><span class="line">18 负浮点数：^-([<span class="string">1-9</span>]\d<span class="emphasis">*\.\d*</span>|0\.\d<span class="emphasis">*[1-9]\d*</span>)$ 或 ^(-(([<span class="string">0-9</span>]+\.[<span class="string">0-9</span>]<span class="emphasis">*[1-9][0-9]*</span>)|([<span class="string">0-9</span>]<span class="emphasis">*[1-9][0-9]*</span>\.[<span class="string">0-9</span>]+)|([<span class="string">0-9</span>]<span class="emphasis">*[1-9][0-9]*</span>)))$</span><br><span class="line">19 浮点数：^(-?\d+)(\.\d+)?$ 或 ^-?([1-9]\d<span class="emphasis">*\.\d*</span>|0\.\d<span class="emphasis">*[1-9]\d*</span>|0?\.0+|0)$</span><br><span class="line">12345678910111213141516171819</span><br></pre></td></tr></table></figure><h4 id="5-2-2-校验字符的表达式"><a href="#5-2-2-校验字符的表达式" class="headerlink" title="5.2.2 校验字符的表达式"></a>5.2.2 校验字符的表达式</h4><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">1 </span>汉字：^[\u4e00-\u9fa5]&#123;<span class="number">0</span>,&#125;$</span><br><span class="line"><span class="symbol">2 </span>英文和数字：^[A-Za-z0-<span class="number">9</span>]+$ 或 ^[A-Za-z0-<span class="number">9</span>]&#123;<span class="number">4</span>,<span class="number">40</span>&#125;$</span><br><span class="line"><span class="symbol">3 </span>长度为<span class="number">3</span>-<span class="number">20</span>的所有字符：^.&#123;<span class="number">3</span>,<span class="number">20</span>&#125;$</span><br><span class="line"><span class="symbol">4 </span>由<span class="number">26</span>个英文字母组成的字符串：^[A-Za-z]+$</span><br><span class="line"><span class="symbol">5 </span>由<span class="number">26</span>个大写英文字母组成的字符串：^[A-Z]+$</span><br><span class="line"><span class="symbol">6 </span>由<span class="number">26</span>个小写英文字母组成的字符串：^[a-z]+$</span><br><span class="line"><span class="symbol">7 </span>由数字和<span class="number">26</span>个英文字母组成的字符串：^[A-Za-z0-<span class="number">9</span>]+$</span><br><span class="line"><span class="symbol">8 </span>由数字、<span class="number">26</span>个英文字母或者下划线组成的字符串：^\w+$ 或 ^\w&#123;<span class="number">3</span>,<span class="number">20</span>&#125;$</span><br><span class="line"><span class="symbol">9 </span>中文、英文、数字包括下划线：^[\u4E00-\u9FA5A-Za-z0-<span class="number">9</span>_]+$</span><br><span class="line"><span class="symbol">10 </span>中文、英文、数字但不包括下划线等符号：^[\u4E00-\u9FA5A-Za-z0-<span class="number">9</span>]+$ 或 ^[\u4E00-\u9FA5A-Za-z0-<span class="number">9</span>]&#123;<span class="number">2</span>,<span class="number">20</span>&#125;$</span><br><span class="line"><span class="symbol">11 </span>可以输入含有^%&amp;<span class="comment">',;=?$\"等字符：[^%&amp;',;=?$\x22]+</span></span><br><span class="line"><span class="symbol">12 </span>禁止输入含有~的字符：[^~\x22]+</span><br><span class="line"><span class="number">123456789101112</span></span><br></pre></td></tr></table></figure><h4 id="5-2-3-特殊需求表达式"><a href="#5-2-3-特殊需求表达式" class="headerlink" title="5.2.3 特殊需求表达式"></a>5.2.3 特殊需求表达式</h4><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">1 Email地址：^\w+([-+.]\w+)<span class="emphasis">*@\w+([-.]\w+)*</span>\.\w+([-.]\w+)*$</span><br><span class="line">2 域名：[<span class="string">a-zA-Z0-9</span>][<span class="symbol">-a-zA-Z0-9</span>]&#123;0,62&#125;(/.[<span class="string">a-zA-Z0-9</span>][<span class="symbol">-a-zA-Z0-9</span>]&#123;0,62&#125;)+/.?</span><br><span class="line">3 InternetURL：[a-zA-z]+://[^\s]<span class="emphasis">* 或 ^http://([\w-]+\.)+[\w-]+(/[\w-./?%&amp;=]*</span>)?$</span><br><span class="line">4 手机号码：^(13[0-9]|14[0-9]|15[0-9]|166|17[0-9]|18[0-9]|19[8|9])\d&#123;8&#125;$</span><br><span class="line">5 电话号码("XXX-XXXXXXX"、"XXXX-XXXXXXXX"、"XXX-XXXXXXX"、"XXX-XXXXXXXX"、"XXXXXXX"和"XXXXXXXX)：^(\(\d&#123;3,4&#125;-)|\d&#123;3.4&#125;-)?\d&#123;7,8&#125;$ </span><br><span class="line">6 国内电话号码(0511-4405222、021-87888822)：\d&#123;3&#125;-\d&#123;8&#125;|\d&#123;4&#125;-\d&#123;7&#125; </span><br><span class="line">7 18位身份证号码(数字、字母x结尾)：^((\d&#123;18&#125;)|([0-9x]&#123;18&#125;)|([0-9X]&#123;18&#125;))$</span><br><span class="line">8 帐号是否合法(字母开头，允许5-16字节，允许字母数字下划线)：^[<span class="string">a-zA-Z</span>][<span class="symbol">a-zA-Z0-9_</span>]&#123;4,15&#125;$</span><br><span class="line">9 密码(以字母开头，长度在6~18之间，只能包含字母、数字和下划线)：^[a-zA-Z]\w&#123;5,17&#125;$</span><br><span class="line">10 强密码(必须包含大小写字母和数字的组合，不能使用特殊字符，长度在8-10之间)：^(?=.<span class="emphasis">*\d)(?=.*</span>[a-z])(?=.*[A-Z]).&#123;8,10&#125;$  </span><br><span class="line">11 日期格式：^\d&#123;4&#125;-\d&#123;1,2&#125;-\d&#123;1,2&#125;</span><br><span class="line">12 一年的12个月(01～09和1～12)：^(0?[1-9]|1[0-2])$</span><br><span class="line">13 一个月的31天(01～09和1～31)：^((0?[1-9])|((1|2)[0-9])|30|31)$ </span><br><span class="line">14 xml文件：^([<span class="string">a-zA-Z</span>]+-?)+[<span class="string">a-zA-Z0-9</span>]+\\.[<span class="string">x|X</span>][<span class="symbol">m|M</span>][<span class="string">l|L</span>]$</span><br><span class="line">15 中文字符的正则表达式：[\u4e00-\u9fa5]</span><br><span class="line">16 双字节字符：[^\x00-\xff]    (包括汉字在内，可以用来计算字符串的长度(一个双字节字符长度计2，ASCII字符计1))</span><br><span class="line">17 空白行的正则表达式：\n\s*\r    (可以用来删除空白行)</span><br><span class="line">18 HTML标记的正则表达式：<span class="xml"><span class="tag">&lt;<span class="name">(\S*?)[^</span>&gt;</span></span>]<span class="emphasis">*&gt;.*</span>?<span class="xml"><span class="tag">&lt;/<span class="name">\1</span>&gt;</span></span>|<span class="xml"><span class="tag">&lt;<span class="name">.*?</span> /&gt;</span></span>    (网上流传的版本太糟糕，上面这个也仅仅能部分，对于复杂的嵌套标记依旧无能为力)</span><br><span class="line">19 首尾空白字符的正则表达式：^\s<span class="emphasis">*|\s*</span>$或(^\s<span class="emphasis">*)|(\s*</span>$)    (可以用来删除行首行尾的空白字符(包括空格、制表符、换页符等等)，非常有用的表达式)</span><br><span class="line">20 腾讯QQ号：[<span class="string">1-9</span>][<span class="symbol">0-9</span>]&#123;4,&#125;    (腾讯QQ号从10000开始)</span><br><span class="line">21 中国邮政编码：[1-9]\d&#123;5&#125;(?!\d)    (中国邮政编码为6位数字)</span><br><span class="line">22 IP地址：\d+\.\d+\.\d+\.\d+    (提取IP地址时有用)</span><br><span class="line">23 IP地址：((?:(?:25[0-5]|2[0-4]\\d|[01]?\\d?\\d)\\.)&#123;3&#125;(?:25[0-5]|2[0-4]\\d|[01]?\\d?\\d))</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、单例模式&quot;&gt;&lt;a href=&quot;#一、单例模式&quot; class=&quot;headerlink&quot; title=&quot;一、单例模式&quot;&gt;&lt;/a&gt;一、单例模式&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;单例模式：&lt;/strong&gt;是一种常用的软件设计模式。通过单例模式可以保证系统中，应用该模式的这个类只有一个&lt;br&gt;实例。即一个类只有一个对象实例。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Java" scheme="http://sunmoon.com/categories/Java/"/>
    
    
      <category term="基础" scheme="http://sunmoon.com/tags/%E5%9F%BA%E7%A1%80/"/>
    
      <category term="学习" scheme="http://sunmoon.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="设计模式" scheme="http://sunmoon.com/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
      <category term="枚举" scheme="http://sunmoon.com/tags/%E6%9E%9A%E4%B8%BE/"/>
    
      <category term="单例模式" scheme="http://sunmoon.com/tags/%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/"/>
    
      <category term="多例模式" scheme="http://sunmoon.com/tags/%E5%A4%9A%E4%BE%8B%E6%A8%A1%E5%BC%8F/"/>
    
      <category term="工厂模式" scheme="http://sunmoon.com/tags/%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F/"/>
    
      <category term="正则表达式" scheme="http://sunmoon.com/tags/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>XML、dom4j、JDK8新特性</title>
    <link href="http://sunmoon.com/2020/08/12/XML%E3%80%81dom4j%E3%80%81JDK8%E6%96%B0%E7%89%B9%E6%80%A7/"/>
    <id>http://sunmoon.com/2020/08/12/XML%E3%80%81dom4j%E3%80%81JDK8%E6%96%B0%E7%89%B9%E6%80%A7/</id>
    <published>2020-08-12T00:14:11.000Z</published>
    <updated>2020-08-12T12:11:09.672Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、XML"><a href="#一、XML" class="headerlink" title="一、XML"></a>一、XML</h2><h3 id="1-1-xml介绍"><a href="#1-1-xml介绍" class="headerlink" title="1.1 xml介绍"></a>1.1 xml介绍</h3><p>Extensible markup language：可扩展标记语言</p><ul><li>可扩展：标签都是自定义的</li></ul><p><strong>作用：存储数据，传输数据</strong></p><a id="more"></a><h3 id="1-2-xml语法"><a href="#1-2-xml语法" class="headerlink" title="1.2 xml语法"></a>1.2 xml语法</h3><h4 id="1-2-1-文档声明"><a href="#1-2-1-文档声明" class="headerlink" title="1.2.1 文档声明"></a>1.2.1 文档声明</h4><p>格式：</p><ul><li><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</code></li></ul><p>注意：</p><ul><li>必须以 <code>&lt;?xml</code> 开头，以 <code>?&gt;</code> 结尾</li><li>文档声明必须放到xml的<strong>第一行</strong></li><li>文档声明可以省略</li><li>文档声明有两个属性<ul><li>version:表示版本号</li><li>encoding:表示编码</li></ul></li></ul><h4 id="1-2-2-元素"><a href="#1-2-2-元素" class="headerlink" title="1.2.2 元素"></a>1.2.2 元素</h4><p>格式：</p><ul><li><code>&lt;元素名&gt;&lt;/元素名&gt;</code></li><li><code>&lt;开始标签&gt;&lt;/结束标签&gt;</code></li></ul><p>注意：</p><ul><li>元素一般都是由开始标签、结束标签、、元素的内容(元素体)组成的。</li><li>元素体可以是文本内容，也可以是其他标签</li><li>每一个xml有且仅有一个根标签</li><li>空元素，如果某个元素没有元素体，它就是一个空元素。空元素可以写成自闭和的形式，格式：<code>&lt;元素名/&gt;</code></li><li>xml标签区分大小写</li><li>在xml中，元素命名不要使用xml,Xml,XML这些名字，也不要带有一些特殊字符。</li></ul><h4 id="1-2-3-属性"><a href="#1-2-3-属性" class="headerlink" title="1.2.3 属性"></a>1.2.3 属性</h4><p>格式：</p><ul><li><code>&lt;开始标签 属性名1=属性值1 属性名2=属性值2 ...&gt;&lt;/结束标签&gt;</code></li></ul><p>注意事项：</p><ul><li>属性要写在开始标签中。</li><li>属性可以有任意个，多个属性之间用空格隔开，一个元素中的多个属性，属性名不能相同</li><li>属性值必须用双引号或单引号包裹，<strong>推荐双引号</strong></li><li>属性名在命名时不要有特殊字符，属性名不能以数字开头</li></ul><h4 id="1-2-4-注释"><a href="#1-2-4-注释" class="headerlink" title="1.2.4 注释"></a>1.2.4 注释</h4><p>格式：</p><ul><li><code>&lt;!-- 注释内容 --&gt;</code></li></ul><p>注意：</p><ul><li>在xml中，注释也是不会被解析的。</li></ul><p><strong>使用示例：</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    persons是根元素，一个xml中只能有一个根元素。</span></span><br><span class="line"><span class="comment">    person是persons的子元素</span></span><br><span class="line"><span class="comment">    每一个person标签有两个属性，分别是name和age</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">persons</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">person</span> <span class="attr">name</span>=<span class="string">"jack"</span> <span class="attr">age</span>=<span class="string">"18"</span>&gt;</span><span class="tag">&lt;/<span class="name">person</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">person</span> <span class="attr">name</span>=<span class="string">"rose"</span> <span class="attr">age</span>=<span class="string">"20"</span>&gt;</span><span class="tag">&lt;/<span class="name">person</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">person</span> <span class="attr">name</span>=<span class="string">"tom"</span> <span class="attr">age</span>=<span class="string">"12"</span>&gt;</span><span class="tag">&lt;/<span class="name">person</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">persons</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="1-2-5-转义字符"><a href="#1-2-5-转义字符" class="headerlink" title="1.2.5 转义字符"></a>1.2.5 转义字符</h4><p>注意：如果要在xml中表示特殊字符，需要使用转义字符</p><p>例如：<code>&gt; &lt; &quot; &#39; &amp;</code></p><table><thead><tr><th>字符</th><th>转义字符</th><th>说明</th></tr></thead><tbody><tr><td>&gt;</td><td><code>&amp;lt;</code></td><td>大于</td></tr><tr><td>&lt;</td><td><code>&amp;gt;</code></td><td>小于</td></tr><tr><td>“</td><td><code>&amp;quot;</code></td><td>双引号</td></tr><tr><td>‘</td><td><code>&amp;apos;</code></td><td>单引号</td></tr><tr><td>&amp;</td><td><code>&amp;amp;</code></td><td>与符号</td></tr></tbody></table><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">root</span>&gt;</span></span><br><span class="line">    1 <span class="symbol">&amp;lt;</span> 2</span><br><span class="line">    <span class="symbol">&amp;gt;</span></span><br><span class="line">    <span class="symbol">&amp;quot;</span></span><br><span class="line">    <span class="symbol">&amp;apos;</span></span><br><span class="line">    <span class="symbol">&amp;amp;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="1-2-6-CDATA区"><a href="#1-2-6-CDATA区" class="headerlink" title="1.2.6 CDATA区"></a>1.2.6 CDATA区</h4><p>CDATA 指的是不应由 XML 解析器进行解析的文本数据(Unparsed Character Data)</p><p>如果xml中出现大量的转义字符，会大大影响程序的阅读性，可以使用CDATA区解决这个问题：</p><p>格式：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;![CDATA[</span><br><span class="line">...</span><br><span class="line">]]&gt;</span><br></pre></td></tr></table></figure><p>作用：<strong>在CDATA区写任何东西，都会原样显示。</strong></p><blockquote><p>注意：</p><ul><li>CDATA 部分不能包含字符串 “]]&gt;”。也不允许嵌套的 CDATA 部分。</li><li>标记 CDATA 部分结尾的 “]]&gt;” 不能包含空格或折行。</li></ul></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">root</span>&gt;</span></span><br><span class="line">    &lt;![CDATA[</span><br><span class="line">        public static void main(String[] args)&#123;</span><br><span class="line">        System.out.println(1 &lt; 2);</span><br><span class="line">        System.out.println(1 &lt; 3);</span><br><span class="line">        System.out.println(1 &lt; 5);</span><br><span class="line">        System.out.println("hello");</span><br><span class="line">        System.out.println(true &amp; false);</span><br><span class="line">    &#125;</span><br><span class="line">    ]]&gt;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="1-3-xml约束"><a href="#1-3-xml约束" class="headerlink" title="1.3 xml约束"></a>1.3 xml约束</h3><p>概念：规定xml文档的书写规则</p><ul><li>作为框架的使用者(程序员)：<ol><li>能够在xml中引入约束文档</li><li>能够简单的读懂约束文档</li></ol></li></ul><p>xml的写法是非常灵活的，但是很多情况下太灵活也不是一件好事，所以我们要给xml定义一个规范，规范xml中应该写什么内容。这个规范就是约束。</p><p>约束可以限制元素名，属性，元素体，元素的顺序等等</p><p>xml约束有两种：<code>dtd</code>，<code>schema</code></p><h4 id="1-3-1-DTD约束"><a href="#1-3-1-DTD约束" class="headerlink" title="1.3.1 DTD约束"></a>1.3.1 DTD约束</h4><p>如果要使用约束，需要把约束给引入过来。这个引入也称为导入。</p><p>dtd的三种引入方式</p><ul><li><p>内部DTD，将dtd嵌入到xml文件中，支队当前的xml文件有效</p>  <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE 根元素 [</span></span><br><span class="line"><span class="meta">dtd语法</span></span><br><span class="line"><span class="meta">]&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>外部dtd - 本地dtd：将约束的规则定义在外部dtd文件中</p>  <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE 书架 <span class="meta-keyword">SYSTEM</span> <span class="meta-string">"bookshelf.dtd"</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>外部dtd - 公共dtd：将dtd文件放在网络中。</p>  <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">web-app</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//Sun Microsystems, Inc.//DTD Web Application2.3//EN"</span> <span class="meta-string">"http://java.sun.com/dtd/web-app_2_3.dtd"</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><p><strong>dtd文件数量词：</strong></p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">*：表示可以出现任意次</span><br><span class="line">+：表示可以出现至少一次</span><br><span class="line">?：表示出现<span class="number">0</span>次或<span class="number">1</span>次</span><br><span class="line">,：顺序</span><br><span class="line">|:多个选一个</span><br></pre></td></tr></table></figure><p><strong>示例：</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">复制内容如下:</span></span><br><span class="line"><span class="comment">&lt;!DOCTYPE 书架 SYSTEM "bookshelf.dtd"&gt;</span></span><br><span class="line"><span class="comment"> --&gt;</span></span><br><span class="line"><span class="meta">&lt;!ELEMENT 书架 (书+)&gt;</span></span><br><span class="line"><span class="meta">&lt;!ELEMENT 书 (书名,作者,售价)&gt;</span><span class="comment">&lt;!--约束元素书的子元素必须为书名、作者、售价--&gt;</span></span><br><span class="line"><span class="meta">&lt;!ELEMENT 书名 (<span class="meta-keyword">#PCDATA</span>)&gt;</span></span><br><span class="line"><span class="meta">&lt;!ELEMENT 作者 (<span class="meta-keyword">#PCDATA</span>)&gt;</span></span><br><span class="line"><span class="meta">&lt;!ELEMENT 售价 (<span class="meta-keyword">#PCDATA</span>)&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE 书架 <span class="meta-keyword">SYSTEM</span> <span class="meta-string">"bookshelf.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">书架</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">书</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">书名</span>&gt;</span>西游记<span class="tag">&lt;/<span class="name">书名</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">作者</span>&gt;</span>吴承恩<span class="tag">&lt;/<span class="name">作者</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">售价</span>&gt;</span>99<span class="tag">&lt;/<span class="name">售价</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">书</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">书</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">书名</span>&gt;</span>红楼梦<span class="tag">&lt;/<span class="name">书名</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">作者</span>&gt;</span>曹雪芹<span class="tag">&lt;/<span class="name">作者</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">售价</span>&gt;</span>100<span class="tag">&lt;/<span class="name">售价</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">书</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">书</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">书名</span>&gt;</span>三国演义<span class="tag">&lt;/<span class="name">书名</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">作者</span>&gt;</span>罗贯中<span class="tag">&lt;/<span class="name">作者</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">售价</span>&gt;</span>101<span class="tag">&lt;/<span class="name">售价</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">书</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">书</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">书名</span>&gt;</span>水浒传<span class="tag">&lt;/<span class="name">书名</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">作者</span>&gt;</span>施耐庵<span class="tag">&lt;/<span class="name">作者</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">售价</span>&gt;</span>108<span class="tag">&lt;/<span class="name">售价</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">书</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">书架</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="1-3-2-schema"><a href="#1-3-2-schema" class="headerlink" title="1.3.2 schema"></a>1.3.2 schema</h4><p>引入schema约束的方式和引入dtd约束的方式一样，都是从约束文件的注释中找到相对应得代码给复制到xml文件中。<br>复制过来得schema注释中的代码是一个开始标签，需要我们手动补齐结束标签</p><ul><li>引入过来的标签其实就是一个根标签</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">&lt;书架 xmlns="http://www.xxx.cn"</span></span><br><span class="line"><span class="comment">  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"</span></span><br><span class="line"><span class="comment">  xsi:schemaLocation="http://www.xxx.cn bookshelf.xsd"</span></span><br><span class="line"><span class="comment">    &gt;</span></span><br><span class="line"><span class="comment"> --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">xs:schema</span> <span class="attr">xmlns:xs</span>=<span class="string">"http://www.w3.org/2001/XMLSchema"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">targetNamespace</span>=<span class="string">"http://www.xxx.cn"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">elementFormDefault</span>=<span class="string">"qualified"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">xs:element</span> <span class="attr">name</span>=<span class="string">'书架'</span> &gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">xs:complexType</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">xs:sequence</span> <span class="attr">maxOccurs</span>=<span class="string">'unbounded'</span> &gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">xs:element</span> <span class="attr">name</span>=<span class="string">'书'</span> &gt;</span></span><br><span class="line">                                        <span class="tag">&lt;<span class="name">xs:complexType</span>&gt;</span></span><br><span class="line">                                                <span class="tag">&lt;<span class="name">xs:sequence</span>&gt;</span></span><br><span class="line">                                                     <span class="tag">&lt;<span class="name">xs:element</span> <span class="attr">name</span>=<span class="string">'书名'</span> <span class="attr">type</span>=<span class="string">'xs:string'</span> /&gt;</span></span><br><span class="line">                                                     <span class="tag">&lt;<span class="name">xs:element</span> <span class="attr">name</span>=<span class="string">'作者'</span> <span class="attr">type</span>=<span class="string">'xs:string'</span> /&gt;</span></span><br><span class="line">                                                     <span class="tag">&lt;<span class="name">xs:element</span> <span class="attr">name</span>=<span class="string">'售价'</span> <span class="attr">type</span>=<span class="string">'xs:double'</span> /&gt;</span></span><br><span class="line">                                                <span class="tag">&lt;/<span class="name">xs:sequence</span>&gt;</span></span><br><span class="line">                                        <span class="tag">&lt;/<span class="name">xs:complexType</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;/<span class="name">xs:element</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">xs:sequence</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">xs:complexType</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">xs:element</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">xs:schema</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">书架</span> <span class="attr">xmlns</span>=<span class="string">"http://www.xxx.cn"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.xxx.cn bookshelf.xsd"</span></span></span><br><span class="line"><span class="tag">&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">书</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">书名</span>&gt;</span>西游记<span class="tag">&lt;/<span class="name">书名</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">作者</span>&gt;</span>吴承恩<span class="tag">&lt;/<span class="name">作者</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">售价</span>&gt;</span>99<span class="tag">&lt;/<span class="name">售价</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">书</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">书架</span>&gt;</span></span><br></pre></td></tr></table></figure><p>解析：</p><p><code>xmlns=&quot;http://www.xxx.cn&quot;</code>:表示引入过来的schema文件的名称空间</p><p><code>xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</code>:引入的是w3c官方的内容，固定写法。</p><p><code>xsi:schemaLocation=&quot;http://www.xxx.cn bookshelf.xsd&quot;</code>: 引入的schema文件的位置。</p><ul><li>格式：名称空间 位置</li></ul><p>名称空间：</p><ul><li>隐式名称空间（之前用的都是隐式名称空间）</li><li>显式的名称空间（给名称空间起一个别名，通过别名去使用元素）<ul><li>xmlns:别名 = “名称空间”</li><li>使用方式：<ul><li><code>&lt;别名:元素名&gt;</code></li></ul></li></ul></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">aa:书架</span> <span class="attr">xmlns:aa</span>=<span class="string">"http://www.xxx.cn"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.xxx.cn bookshelf.xsd"</span></span></span><br><span class="line"><span class="tag">&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aa:书</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aa:书名</span>&gt;</span>西游记<span class="tag">&lt;/<span class="name">aa:书名</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aa:作者</span>&gt;</span>吴承恩<span class="tag">&lt;/<span class="name">aa:作者</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aa:售价</span>&gt;</span>100<span class="tag">&lt;/<span class="name">aa:售价</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">aa:书</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">aa:书架</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="二、dom4j"><a href="#二、dom4j" class="headerlink" title="二、dom4j"></a>二、dom4j</h2><h3 id="2-1-XML解析"><a href="#2-1-XML解析" class="headerlink" title="2.1 XML解析"></a>2.1 XML解析</h3><p>XML解析就是获取xml文件的内容。</p><p>常见的<strong>解析方式</strong>：</p><ul><li>DOM解析(会把整个xml文件都加载到内存中，然后进行解析)<ul><li>优点:会保留整个xml文档的结构，可以对里面的元素进行增删操作。</li><li>缺点：有可能会内存溢出</li></ul></li><li>SAX解析(会逐行解析xml，没解析一行，就释放一行)<ul><li>优点：效率高，不会内存溢出</li><li>缺点：不能保留xml文档结构，只能读</li></ul></li><li>PULL解析(安卓内置的，类似SAX)</li></ul><p>常见的<strong>解析工具包</strong>：</p><ul><li><p>JAXP：sun公司提供支持DOM和SAX开发包</p></li><li><p>Dom4j：比较简单的的解析开发包(常用)</p></li><li><p>JDom：与Dom4j类似</p></li><li><p>Jsoup：功能强大DOM方式的XML解析开发包，尤其对HTML解析更加方便</p></li></ul><h3 id="2-2-dom4j的基本使用"><a href="#2-2-dom4j的基本使用" class="headerlink" title="2.2 dom4j的基本使用"></a>2.2 dom4j的基本使用</h3><h4 id="2-2-1-dom4j解析原理-dom解析-："><a href="#2-2-1-dom4j解析原理-dom解析-：" class="headerlink" title="2.2.1 dom4j解析原理(dom解析)："></a>2.2.1 dom4j解析原理(dom解析)：</h4><ul><li>dom解析会将整个xml文件读取到内存中，会生成一个DOM树(在xml中，每一个元素，属性，文本都是DOM树中的节点)，并获 得一个Document对象，通过Document对象就可以对DOM进行操作。</li></ul><p><img data-src="/image/dom%E8%A7%A3%E6%9E%90.png" alt="dom解析"></p><h4 id="2-2-2-使用dom4j解析xml"><a href="#2-2-2-使用dom4j解析xml" class="headerlink" title="2.2.2 使用dom4j解析xml"></a>2.2.2 使用dom4j解析xml</h4><p>解析相关的API</p><ul><li><p>SAXReader：核心类</p><ul><li><code>Document read(String systemId)</code>：read方法可以读取xml文件，生成dom树创建Document对象</li></ul></li><li><p>Document:表示整个xml文档</p><ul><li><code>Element getRootElement();</code>：表示获取根元素</li></ul></li><li><p>Element：表示元素</p><ul><li><code>List elements([String ele] )</code>： 获得指定名称的所有子元素。可以不指定名称</li><li><code>Element element([String ele])</code>：获得指定名称第一个子元素。可以不指定名称</li><li><code>String getName()</code>：获得当前元素的元素名</li><li><code>String attributeValue(String attrName)</code>：获得指定属性名的属性值</li><li><code>String elementText(Sting ele)</code> ：获得指定名称子元素的文本值</li><li><code>String getText()</code>：获得当前元素的文本内容</li></ul></li></ul><p>使用步骤：</p><ul><li>准备工作(导包、准备要解析的xml文件)</li><li>开始写代码，创建SAXReader对象</li><li>调用read方法，读取xml，得到Document对象</li><li>调用getRootElement获取根元素</li><li>开始解析操作</li></ul><p>代码示例：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">books</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">book</span> <span class="attr">id</span>=<span class="string">"0001"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>西游记<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">author</span>&gt;</span>吴承恩<span class="tag">&lt;/<span class="name">author</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">sale</span>&gt;</span>101.00元<span class="tag">&lt;/<span class="name">sale</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">book</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">book</span> <span class="attr">id</span>=<span class="string">"0002"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>三国演义<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">author</span>&gt;</span>罗贯中<span class="tag">&lt;/<span class="name">author</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">sale</span>&gt;</span>100.00元<span class="tag">&lt;/<span class="name">sale</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">book</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">books</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo02Parse</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> DocumentException </span>&#123;</span><br><span class="line">        <span class="comment">//1.创建SAXReader对象。</span></span><br><span class="line">        SAXReader saxReader = <span class="keyword">new</span> SAXReader();</span><br><span class="line">        <span class="comment">//2.调用read方法，读取xml，得到Document</span></span><br><span class="line">        Document document = saxReader.read(<span class="string">"xxx\\book.xml"</span>);</span><br><span class="line">        <span class="comment">//3.调用getRootElement获取根元素</span></span><br><span class="line">        Element rootElement = document.getRootElement();</span><br><span class="line">        <span class="comment">//调用elements方法获取所有子元素</span></span><br><span class="line">        List&lt;Element&gt; bookList = rootElement.elements();</span><br><span class="line">        <span class="comment">//遍历集合，拿到每一个book元素</span></span><br><span class="line">        <span class="keyword">for</span> (Element bookElement : bookList) &#123;</span><br><span class="line">            String id = bookElement.attributeValue(<span class="string">"id"</span>);</span><br><span class="line">            System.out.println(<span class="string">"id="</span> + id);</span><br><span class="line">            <span class="comment">//获取book下面所有的子元素</span></span><br><span class="line">            List&lt;Element&gt; bookChildElements = bookElement.elements();</span><br><span class="line">            <span class="keyword">for</span> (Element bookChildElement : bookChildElements) &#123;</span><br><span class="line">                <span class="comment">//调用getName方法，获取元素名字</span></span><br><span class="line">                String elementName = bookChildElement.getName();</span><br><span class="line">                <span class="comment">//调用getText，拿到该元素的文本内容</span></span><br><span class="line">                String text = bookChildElement.getText();</span><br><span class="line">                <span class="comment">//输出</span></span><br><span class="line">                System.out.println(elementName + <span class="string">":"</span> + text);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-3-XPath"><a href="#2-3-XPath" class="headerlink" title="2.3 XPath"></a>2.3 XPath</h3><p>XPath可以根据一个路径表达式获取xml中的指定元素。</p><p>XPath使用步骤：</p><ul><li>导入jar包(dom4j-1.6.1.jar 和 jaxen-1.1-beta-6.jar)</li><li>通过dom4j的SAXReader读取xml文件，获取Document对象</li><li>调用方法，根据XPath表达式获取元素<ul><li>document根据XPath表达式获取元素的方法：<ul><li><code>List selectNodes(&quot;表达式&quot;)</code>：获取多个满足要求的元素</li><li><code>Node selectSingNode(&quot;表达式&quot;)</code>：获取第一个满足要求的元素</li></ul></li></ul></li></ul><p><strong>表达式规则</strong>：</p><ul><li>绝对路径表达式方式 例如: /元素/子元素/子子元素…</li><li>相对路径表达式方式 例如: 子元素/子子元素.. 或者 ./子元素/子子元素..</li><li>全文搜索路径表达式方式 例如: //子元素//子子元素</li><li>谓语（条件筛选）方式 例如: //元素[@属性名=属性值]</li></ul><p>使用示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo03XPath</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> DocumentException </span>&#123;</span><br><span class="line">        <span class="comment">//创建SAXReader</span></span><br><span class="line">        SAXReader saxReader = <span class="keyword">new</span> SAXReader();</span><br><span class="line">        <span class="comment">//调用read方法读取</span></span><br><span class="line">        Document document = saxReader.read(<span class="string">"day18_xml&amp;dom4j\\book.xml"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//4.谓语（条件筛选）方式 例如: //元素[@attr1=value]</span></span><br><span class="line">        Node node = document.selectSingleNode(<span class="string">"/books/book[@id='0002']/author"</span>);</span><br><span class="line">        System.out.println(node.getText());</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3.全文搜索路径表达式方式。例如：//子元素//子子元素</span></span><br><span class="line">        <span class="comment">// Node node = document.selectSingleNode("//book//name");</span></span><br><span class="line">        <span class="comment">// System.out.println(node.getText());</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//2.相对路径表达式方式， 例如： 子元素/子子元素... 或者 ./子元素/子子元素...  【】</span></span><br><span class="line">        <span class="comment">// Element rootElement = document.getRootElement();</span></span><br><span class="line">        <span class="comment">// Node node = rootElement.selectSingleNode("book/name");</span></span><br><span class="line">        <span class="comment">// System.out.println(node.getText());</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1.绝对路径表达式。例如：/元素/子元素/子子元素/...【绝对路径是从根开始找】</span></span><br><span class="line">        <span class="comment">// //获取一个元素</span></span><br><span class="line">        <span class="comment">// //Node node = document.selectSingleNode("/books/book/sale");</span></span><br><span class="line">        <span class="comment">// //获取元素的文本并输出</span></span><br><span class="line">        <span class="comment">// // System.out.println(node.getText);</span></span><br><span class="line">        <span class="comment">// List&lt;Node&gt; list = document.selectNodes("/books/book/author");</span></span><br><span class="line">        <span class="comment">// for (Node node : list) &#123;</span></span><br><span class="line">        <span class="comment">//     System.out.println(node);</span></span><br><span class="line">        <span class="comment">// &#125;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="三、JDK8新特性"><a href="#三、JDK8新特性" class="headerlink" title="三、JDK8新特性"></a>三、JDK8新特性</h2><h3 id="3-1-方法引用"><a href="#3-1-方法引用" class="headerlink" title="3.1 方法引用"></a>3.1 方法引用</h3><p>方法引用是Lambda表达式的简化写法。也是函数式编程的内容。</p><ul><li>当Lambda表达式拿到参数之后<strong>直接</strong>对参数进行<strong>处理</strong>，那么就可以换成方法引用</li></ul><p>方法引用的符号：<code>::</code></p><p>例如：</p><ul><li><p><code>s -&gt; System.out.println(s)</code></p></li><li><p>该Lambda表达式，拿到s之后，直接对s进行了输出处理，那么可以换成方法引用</p></li></ul><p>代码示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo01MethodRef</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        List&lt;String&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        list.add(<span class="string">"hello"</span>);</span><br><span class="line">        list.add(<span class="string">"world"</span>);</span><br><span class="line">        list.add(<span class="string">"java"</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//使用stream流的方式对集合中的每一个元素遍历输出</span></span><br><span class="line">        list.stream().forEach(s -&gt; System.out.println(s));</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//方法引用</span></span><br><span class="line">        list.stream().forEach(System.out::println);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-2-四种常见的方法引用"><a href="#3-2-四种常见的方法引用" class="headerlink" title="3.2 四种常见的方法引用"></a>3.2 四种常见的方法引用</h3><ul><li>对象引用成员方法</li><li>类名引用静态方法</li><li>类的构造器引用</li><li>数组的构造器引用</li></ul><h4 id="3-2-1-对象引用成员方法"><a href="#3-2-1-对象引用成员方法" class="headerlink" title="3.2.1 对象引用成员方法"></a>3.2.1 对象引用成员方法</h4><p>格式：<code>对象名::方法名</code></p><p>演示：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyClass</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">printUpperCase</span><span class="params">(String str)</span></span>&#123;</span><br><span class="line">        System.out.println(str.toUpperCase());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo01MethodRef</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IllegalAccessException, InstantiationException </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//创建集合</span></span><br><span class="line">        List&lt;String&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        list.add(<span class="string">"hello"</span>);</span><br><span class="line">        list.add(<span class="string">"world"</span>);</span><br><span class="line">        list.add(<span class="string">"java"</span>);</span><br><span class="line">        <span class="comment">//遍历集合，将集中中每一个元素转成大写输出</span></span><br><span class="line">        <span class="comment">//list.stream().forEach(s -&gt; System.out.println(s.toUpperCase()));</span></span><br><span class="line"></span><br><span class="line">        MyClass myClass = MyClass<span class="class">.<span class="keyword">class</span>.<span class="title">newInstance</span>()</span>;</span><br><span class="line">        <span class="comment">// list.stream().forEach(s -&gt; myClass.printUpperCase(s));</span></span><br><span class="line">        list.stream().forEach(myClass::printUpperCase);<span class="comment">//表示Lambda表达式拿到参数之后，直接通过myClass的printUpperCase方法</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-2-2-类名引用静态方法"><a href="#3-2-2-类名引用静态方法" class="headerlink" title="3.2.2 类名引用静态方法"></a>3.2.2 类名引用静态方法</h4><p>格式：<code>类名::静态方法名</code></p><p>演示：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo01ClassRef</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        List&lt;Integer&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        list.add(-<span class="number">10</span>);</span><br><span class="line">        list.add(<span class="number">20</span>);</span><br><span class="line">        list.add(-<span class="number">30</span>);</span><br><span class="line">        list.add(<span class="number">40</span>);</span><br><span class="line">        <span class="comment">// list.stream().map(num -&gt; Math.abs(num)).forEach(s-&gt; System.out.println(s));</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//类名::静态方法名</span></span><br><span class="line">        list.stream().map(Math::abs).forEach(System.out::println);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-2-3-类的构造器引用"><a href="#3-2-3-类的构造器引用" class="headerlink" title="3.2.3 类的构造器引用"></a>3.2.3 类的构造器引用</h4><p>格式：<code>类名::new</code></p><p>演示：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo01MethodRef</span> </span>&#123;</span><br><span class="line">    <span class="comment">//使用函数式接口作为方法参数</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">method</span><span class="params">(PersonBuilder personBuilder)</span></span>&#123;</span><br><span class="line">        Person p = personBuilder.createPerson(<span class="string">"张三"</span>,<span class="number">13</span>);</span><br><span class="line">        System.out.println(p);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//调用method方法，传递Lambda表达式</span></span><br><span class="line">        method((name,age)-&gt; <span class="keyword">new</span> Person(name, age));</span><br><span class="line">        method(Person::<span class="keyword">new</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">PersonBuilder</span> </span>&#123;</span><br><span class="line">    <span class="comment">//接收姓名和年龄。就可以创建一个person对象返回。</span></span><br><span class="line">    <span class="function">Person <span class="title">createPerson</span><span class="params">(String name, <span class="keyword">int</span> age)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line">    </span><br><span class="line">    构造方法/set/get方法略...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-2-3-数组的构造器引用"><a href="#3-2-3-数组的构造器引用" class="headerlink" title="3.2.3 数组的构造器引用"></a>3.2.3 数组的构造器引用</h4><p>格式：<code>数据类型[]::new</code></p><p>演示：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo01ArrayRef</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//使用方法让函数式接口当作方法参数</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">method</span><span class="params">(ArrayBuilder arrayBuilder)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] arr = arrayBuilder.createArray(<span class="number">10</span>);</span><br><span class="line">        System.out.println(Arrays.toString(arr));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        method( len -&gt; <span class="keyword">new</span> <span class="keyword">int</span>[len]);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//数组的构造器引用---数据类型[]::new</span></span><br><span class="line">        method(<span class="keyword">int</span>[]::<span class="keyword">new</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">ArrayBuilder</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 提供方法，接收参数(数组长度)，就可以创建int数组返回</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">int</span>[] createArray(<span class="keyword">int</span> len);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-3-Base64"><a href="#3-3-Base64" class="headerlink" title="3.3 Base64"></a>3.3 Base64</h3><h4 id="3-3-1-概述"><a href="#3-3-1-概述" class="headerlink" title="3.3.1 概述"></a>3.3.1 概述</h4><p>Base64是网络上最常见的用于传输8Bit字节码的编码方式之一，Base64就是一种基于64个可打印字符<br>来表示二进制数据的方法。</p><p>在Java 8中，Base64编码已经成为Java类库的标准。</p><p>Java 8 内置了 Base64 编码的编码器和解码器。</p><p>Base64工具类提供了一套静态方法获取下面三种Base64编解码器：</p><ul><li><p>基本：输出被映射到一组字符A-Za-z0-9+/，编码不添加任何行标，输出的解码仅支持A-Za-z0-<br>  9+/。</p></li><li><p>URL：输出映射到一组字符A-Za-z0-9+_，输出是URL和文件。</p></li><li><p>MIME：输出隐射到MIME友好格式。输出每行不超过76字符，并且使用’\r’并跟随’\n’作为分割。<br>  编码输出最后没有行分割。</p></li></ul><blockquote><p>Base64用来编码和解码</p></blockquote><h4 id="3-3-2-Base64的内部类和方法"><a href="#3-3-2-Base64的内部类和方法" class="headerlink" title="3.3.2 Base64的内部类和方法"></a>3.3.2 Base64的内部类和方法</h4><p>内部类：</p><ul><li><code>static class Base64.Decoder</code> ：用来解码</li><li><code>static class Base64.Encoder</code> ：用来编码</li></ul><p>获取编码器、解解器方法：</p><ul><li><code>static Base64.Decoder getDecoder()</code>：获取一个标准的Base64解码器</li><li><code>static Base64.Decoder getEncoder()</code>：获取一个标准的Base64编码器</li><li><code>static Base64.Decoder getUrlDecoder()</code>：获取一个标准的URL解码器</li><li><code>static Base64.Decoder getUrlEncoder()</code>：获取一个标准的URL编码器</li><li><code>static Base64.Decoder getMimeDecoder()</code>：获取一个标准的MIME的解码器</li><li><code>static Base64.Decoder getMimeEncoder()</code>：获取一个标准的MIME的编码器</li></ul><p>Base64.Encoder方法：</p><ul><li><code>String encodeToString(byte[] src)</code>：编码，将byte数组编码成字符串</li></ul><p>Base64.Decoder方法：</p><ul><li><code>byte[] decode(String src)</code>：解码，将字符串编程byte数组</li></ul><p>使用演示：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo01Base64</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//定义字符串</span></span><br><span class="line">        String str = <span class="string">"哈哈哈呵呵呵嘿嘿"</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//使用标准Base64进行编码</span></span><br><span class="line">        Base64.Encoder encoder = Base64.getEncoder();</span><br><span class="line">        String base64Code = encoder.encodeToString(str.getBytes());</span><br><span class="line">        System.out.println(<span class="string">"base64编码后："</span> + base64Code);</span><br><span class="line">        <span class="comment">//解码</span></span><br><span class="line">        Base64.Decoder decoder = Base64.getDecoder();</span><br><span class="line">        <span class="keyword">byte</span>[] base64Bytes = decoder.decode(base64Code);</span><br><span class="line">        System.out.println(<span class="string">"base64解码后："</span> + <span class="keyword">new</span> String(base64Bytes));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//使用URL进行编码</span></span><br><span class="line">        String urlCode = Base64.getUrlEncoder().encodeToString(str.getBytes());</span><br><span class="line">        System.out.println(<span class="string">"URL编码后："</span> + urlCode);</span><br><span class="line">        <span class="comment">//解码</span></span><br><span class="line">        <span class="keyword">byte</span>[] urlBytes = Base64.getUrlDecoder().decode(urlCode);</span><br><span class="line">        System.out.println(<span class="string">"URL解码后："</span> + <span class="keyword">new</span> String(urlBytes));</span><br><span class="line"></span><br><span class="line">        <span class="comment">//使用MIME编码</span></span><br><span class="line">        String mimeCode = Base64.getMimeEncoder().encodeToString(str.getBytes());</span><br><span class="line">        System.out.println(<span class="string">"MIME编码后："</span> + mimeCode);</span><br><span class="line">        <span class="comment">//解码</span></span><br><span class="line">        <span class="keyword">byte</span>[] mimeBytes = Base64.getMimeDecoder().decode(mimeCode);</span><br><span class="line">        System.out.println(<span class="keyword">new</span> String(mimeBytes));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、XML&quot;&gt;&lt;a href=&quot;#一、XML&quot; class=&quot;headerlink&quot; title=&quot;一、XML&quot;&gt;&lt;/a&gt;一、XML&lt;/h2&gt;&lt;h3 id=&quot;1-1-xml介绍&quot;&gt;&lt;a href=&quot;#1-1-xml介绍&quot; class=&quot;headerlink&quot; title=&quot;1.1 xml介绍&quot;&gt;&lt;/a&gt;1.1 xml介绍&lt;/h3&gt;&lt;p&gt;Extensible markup language：可扩展标记语言&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;可扩展：标签都是自定义的&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;作用：存储数据，传输数据&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Java" scheme="http://sunmoon.com/categories/Java/"/>
    
    
      <category term="基础" scheme="http://sunmoon.com/tags/%E5%9F%BA%E7%A1%80/"/>
    
      <category term="学习" scheme="http://sunmoon.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="XML" scheme="http://sunmoon.com/tags/XML/"/>
    
      <category term="dom4j" scheme="http://sunmoon.com/tags/dom4j/"/>
    
      <category term="方法引用" scheme="http://sunmoon.com/tags/%E6%96%B9%E6%B3%95%E5%BC%95%E7%94%A8/"/>
    
      <category term="Base64" scheme="http://sunmoon.com/tags/Base64/"/>
    
  </entry>
  
  <entry>
    <title>反射、注解、动态代理</title>
    <link href="http://sunmoon.com/2020/08/11/%E5%8F%8D%E5%B0%84%E3%80%81%E6%B3%A8%E8%A7%A3%E3%80%81%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86/"/>
    <id>http://sunmoon.com/2020/08/11/%E5%8F%8D%E5%B0%84%E3%80%81%E6%B3%A8%E8%A7%A3%E3%80%81%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86/</id>
    <published>2020-08-11T08:11:22.000Z</published>
    <updated>2020-08-11T08:16:39.048Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、类加载器"><a href="#一、类加载器" class="headerlink" title="一、类加载器"></a>一、类加载器</h2><h3 id="1-1-类的加载时机"><a href="#1-1-类的加载时机" class="headerlink" title="1.1 类的加载时机"></a>1.1 类的加载时机</h3><p>当我们第一次使用某个类时，这个类会加载到方法区。</p><ul><li>创建类的实例(创建对象)</li><li>类的静态变量，或者为静态变量赋值</li><li>类的静态方法</li><li>使用反射方式来强制创建某个类或接口对象的<code>java.lang.Class</code>对象。</li><li>初始化某个类的子类</li><li>直接使用java.exe命令来运行某个主类</li></ul><p>以上六种情况的任何一种，都可以导致JVM将一个类加载到方法区。</p><a id="more"></a><h3 id="1-2-类的加载机制"><a href="#1-2-类的加载机制" class="headerlink" title="1.2 类的加载机制"></a>1.2 类的加载机制</h3><p>Java中有三种类加载器，它们分别用于加载不同种类的class：</p><ul><li>启动类加载器(Bootstrap ClassLoader)：用于加载系统类库\bin目录下的 class，例如：rt.jar。</li><li>扩展类加载器(Extension ClassLoader)：：用于加载扩展类库<JAVA_HOME>\lib\ext目录下的<br>  class。</li><li>应用程序类加载器(Application ClassLoader)：用于加载我们自定义类的加载器。</li></ul><h4 id="1-2-1-双亲委派机制"><a href="#1-2-1-双亲委派机制" class="headerlink" title="1.2.1 双亲委派机制"></a>1.2.1 双亲委派机制</h4><p><img data-src="/image/%E5%8F%8C%E4%BA%B2%E5%A7%94%E6%B4%BE%E6%9C%BA%E5%88%B6.png" alt="双亲委派机制"></p><h2 id="二、反射"><a href="#二、反射" class="headerlink" title="二、反射"></a>二、反射</h2><h3 id="1-1-反射的概念"><a href="#1-1-反射的概念" class="headerlink" title="1.1 反射的概念"></a>1.1 反射的概念</h3><ul><li>反射是一种机制，利用该机制可以在程序运行过程中对类进行解剖并操作类中的所有成员(成员变量，成员方<br>  法，构造方法)</li></ul><blockquote><p>使用反射的前提：要获得该类字节码文件对象，就是Class对象。</p><p>反射的应用：</p><ul><li>开发IDE(集成开发环境)，比如IDEA,Eclipse</li><li>各种框架的设计和学习 比如Spring，Hibernate，Mybaits….</li></ul></blockquote><p>反射图解：</p><p><img data-src="/image/%E5%8F%8D%E5%B0%84.png" alt="反射"></p><h3 id="1-2-获取Class对象的三种方式"><a href="#1-2-获取Class对象的三种方式" class="headerlink" title="1.2 获取Class对象的三种方式"></a>1.2 获取Class对象的三种方式</h3><ol><li><p>通过对象调用getClass方法获取</p><ul><li><code>Class getClass()</code>:获取类的Class对象</li></ul></li><li><p>通过类名调用Class属性获取</p><ul><li><code>类名.class</code></li></ul></li><li><p>通过Class的静态方法forName获取</p><ul><li><code>static Class forName(String className)</code>：根据全类名获取对应的Class对象</li></ul></li></ol><p>代码示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo01GetClass</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ClassNotFoundException </span>&#123;</span><br><span class="line">        Person p = <span class="keyword">new</span> Person();</span><br><span class="line">        Class&lt;? extends Person&gt; pClass = p.getClass();</span><br><span class="line">        System.out.println(pClass);</span><br><span class="line"></span><br><span class="line">        Class personClass = Person<span class="class">.<span class="keyword">class</span></span>;</span><br><span class="line">        System.out.println(personClass);</span><br><span class="line"></span><br><span class="line">        Class&lt;?&gt; aClass = Class.forName(<span class="string">"com.sun.demo02_reflect.Person"</span>);</span><br><span class="line">        System.out.println(aClass);</span><br><span class="line"></span><br><span class="line">        System.out.println(pClass == personClass);</span><br><span class="line">        System.out.println(aClass == personClass);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>小贴士：</p><ul><li>一个类的Class对象只有一个，不管怎么获取，获取的都是同一个。</li></ul></blockquote><h4 id="1-2-1-Class中的常见方法"><a href="#1-2-1-Class中的常见方法" class="headerlink" title="1.2.1 Class中的常见方法"></a>1.2.1 Class中的常见方法</h4><ul><li><code>String getName()</code>:获取全限定类名(包名+类名)</li><li><code>String getSimpleName()</code>:获取简单类名</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo02Method</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取Person类的Class</span></span><br><span class="line">        Class personClass = Person<span class="class">.<span class="keyword">class</span></span>;</span><br><span class="line">        <span class="comment">//String getName():获取全限定类名</span></span><br><span class="line">        System.out.println(personClass.getName());</span><br><span class="line">        <span class="comment">//String getSimpleName():获取简单类名</span></span><br><span class="line">        System.out.println(personClass.getSimpleName());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1-3-反射之操作构造函数"><a href="#1-3-反射之操作构造函数" class="headerlink" title="1.3 反射之操作构造函数"></a>1.3 反射之操作构造函数</h3><p><code>Class</code>中有一些方法，可以拿到类中的<code>构造方法</code></p><ul><li><code>Constructor[] getConstructors()</code>：获取类中所有的构造方法</li><li><code>Constructor getConstructors(Class... parameterTypes)</code>：获取类中指定的构造方法。参数表示要获取的构造方法的参数列表</li></ul><blockquote><p>注意：上面的方法，只能获取public权限的方法，其他权限获取不到</p></blockquote><p><code>Constructor</code>常用方法：</p><ul><li>T newInstance(Object… initargs)：通过该构造方法创建对象。<ul><li>参数initargs：通过构造方法创建对象时传递的<strong>实际参数</strong></li><li>返回值：创建出来的对象</li></ul></li></ul><p>代码演示：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo03Constructor</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ClassNotFoundException, NoSuchMethodException, IllegalAccessException, InstantiationException, InvocationTargetException </span>&#123;</span><br><span class="line">        <span class="comment">//method1();</span></span><br><span class="line">        <span class="comment">//method2();</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Constructor getConstructors(Class... parameterTypes)：获取类中指定的构造方法。参数表示要获取的构造方法的参数列表</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * 获取空参的构造方法并使用构造方法创建对象</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">method2</span><span class="params">()</span> <span class="keyword">throws</span> ClassNotFoundException, NoSuchMethodException, IllegalAccessException, InvocationTargetException, InstantiationException </span>&#123;</span><br><span class="line">        Class&lt;?&gt; personClass = Class.forName(<span class="string">"com.sun.demo02_reflect.Person"</span>);</span><br><span class="line">        <span class="comment">//因为没有传递任何参数，所以获取的是空参数的构造方法</span></span><br><span class="line">        Constructor&lt;?&gt; constructor = personClass.getConstructor();</span><br><span class="line">        <span class="comment">//newInstance小括号表示调用构造方法时的实际参数，因为调用的时空参数的构造方法，所有没有实际参数</span></span><br><span class="line">        Object obj = constructor.newInstance();</span><br><span class="line">        System.out.println(obj);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Constructor[] getConstructors()：获取类中所有的构造方法</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">method1</span><span class="params">()</span> <span class="keyword">throws</span> ClassNotFoundException </span>&#123;</span><br><span class="line">        Class personClass = Class.forName(<span class="string">"com.sun.demo02_reflect.Person"</span>);</span><br><span class="line">        Constructor[] cs = personClass.getConstructors();</span><br><span class="line">        <span class="comment">//遍历</span></span><br><span class="line">        <span class="keyword">for</span> (Constructor c : cs) &#123;</span><br><span class="line">            System.out.println(c);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>获取带参数的构造方法：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo04Constructor</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 通过反射获取Person类的带参数的构造方法，并根据该方法创建对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> args</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ClassNotFoundException, NoSuchMethodException, IllegalAccessException, InvocationTargetException, InstantiationException </span>&#123;</span><br><span class="line">        Class&lt;?&gt; personClass = Class.forName(<span class="string">"com.sun.demo02_reflect.Person"</span>);</span><br><span class="line">        <span class="comment">//因为getConstructor第一个参数是String.class,第二个参数是int.class，所以表示获取的第一个参数为字符串，第二个参数为int的构造方法</span></span><br><span class="line">        Constructor&lt;?&gt; c = personClass.getConstructor(String<span class="class">.<span class="keyword">class</span>, <span class="title">int</span>.<span class="title">class</span>)</span>;</span><br><span class="line">        <span class="comment">//根据该构造方法创建对象，因为在调用nreInstance方法的时候传递的两个参数分别是张三，18，所以表示调用构造方法时传递的实际参数为张三，18</span></span><br><span class="line">        Object obj = c.newInstance(<span class="string">"张三"</span>, <span class="number">18</span>);</span><br><span class="line">        System.out.println(obj);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1-3-1-newInstance"><a href="#1-3-1-newInstance" class="headerlink" title="1.3.1 newInstance"></a>1.3.1 newInstance</h4><p>在Class中有一个方法叫newInstance,，可以十分方便的创建对象</p><ul><li><code>T newInstance()</code>:使用空参数的构造方法创建对象</li></ul><p>如果通过空参数的构造方法创建对象，那么不需要像之前那样先获取构造方法，然后通过构造方法创建对象了。</p><p>我们可以通过Class直接调用newInstance方法，利用空参数构造方法创建对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo06NewInstance</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ClassNotFoundException, IllegalAccessException, InstantiationException </span>&#123;</span><br><span class="line">        Class&lt;?&gt; clazz = Class.forName(<span class="string">"com.sun.demo02_reflect.Person"</span>);</span><br><span class="line"></span><br><span class="line">        Object obj = clazz.newInstance();</span><br><span class="line">        System.out.println(obj);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1-4-暴力反射"><a href="#1-4-暴力反射" class="headerlink" title="1.4 暴力反射"></a>1.4 暴力反射</h3><p>暴力反射：暴力反射可以<strong>获取</strong>类中<strong>任何权限</strong>的内容并使用。</p><blockquote><p>不推荐使用暴力反射，会破坏封装性</p></blockquote><p> 在Class中，有一些方法可以获取到类中的所有权限的构造方法：</p><ul><li><code>Constructor[] getDeclaredConstructors()</code>：获取类中所有的构造方法</li><li><code>Constructor getDeclaredConstructor(Class... parameterTypes)</code>：获取类中指定的构造方法，参数是构造方法的参数列表</li></ul><blockquote><p>上面的方法可以获取到任何权限的构造方法。</p><p>注意：通过上面的方法虽然可以获取到私有的成员，但是不能直接使用。因为Java中有一个权限检查机制，私有的东西是不能在外面使用的。我们可以取消这个权限检查机制。</p></blockquote><p>反射有关的类：</p><ul><li>Constructor：构造方法</li><li>Method：成员方法</li><li>Field：成员变量</li></ul><p>上面这三个类都有一个父类叫做AccessibleObject，在AccessibleObject中有一个方法可以取消检查机制。</p><ul><li><code>void setAccessible(boolean flag)</code>：如果参数是true表示取消权限检查</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo05Constructor</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ClassNotFoundException, NoSuchMethodException, IllegalAccessException, InstantiationException, InvocationTargetException </span>&#123;</span><br><span class="line">        <span class="comment">//method();</span></span><br><span class="line">        method2();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">method2</span><span class="params">()</span> <span class="keyword">throws</span> NoSuchMethodException, ClassNotFoundException, IllegalAccessException, InvocationTargetException, InstantiationException </span>&#123;</span><br><span class="line">        Class&lt;?&gt; aClass = Class.forName(<span class="string">"com.sun.demo02_reflect.Person"</span>);</span><br><span class="line">        Constructor&lt;?&gt; c = aClass.getDeclaredConstructor(String<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        <span class="comment">//取消权限检查</span></span><br><span class="line">        c.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">        Object obj = c.newInstance(<span class="string">"张三"</span>);</span><br><span class="line">        System.out.println(obj);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">method</span><span class="params">()</span> <span class="keyword">throws</span> ClassNotFoundException </span>&#123;</span><br><span class="line">        Class aClass = Class.forName(<span class="string">"com.sun.demo02_reflect.Person"</span>);</span><br><span class="line">        Constructor[] dcs = aClass.getDeclaredConstructors();</span><br><span class="line">        <span class="keyword">for</span> (Constructor dc : dcs) &#123;</span><br><span class="line">            System.out.println(dc);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1-5-反射之操作成员方法"><a href="#1-5-反射之操作成员方法" class="headerlink" title="1.5 反射之操作成员方法"></a>1.5 反射之操作成员方法</h3><p>在Class中有一些功能，可以获取类中的成员方法</p><ul><li><code>Method[] getMethods()</code>:获取类中的所有成员方法</li><li><code>Method getMethod(String name, Class... parameterTypes)</code>：获取指定的成员方法。参数name表示要获取的方法的名字。参数parameterTypes表示方法的参数列表</li></ul><blockquote><p>注意：上面的的两个方法只能获取public权限的方法，不能获取其他权限</p><p><strong>如果想要获取其他权限的方法，需要使用暴力反射</strong></p></blockquote><p>其中Method表示方法，里面的功能：</p><ul><li><code>Object invoke(Object obj, Object... args)</code>:让该方法执行<ul><li>参数obj：表示通过哪个对象调用了该方法。如果是静态方法，该参数可以传递null</li><li>参数args：调用该方法时，传递的实际参数</li><li>返回值：表示方法调用后的返回值。</li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo07Method</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ClassNotFoundException, NoSuchMethodException, IllegalAccessException, InvocationTargetException, InstantiationException </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//method();</span></span><br><span class="line">        method1();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Method getMethod(String name, Class... parameterTypes)：获取指定的成员方法。</span></span><br><span class="line"><span class="comment">     * 参数name表示要获取的方法的名字。参数parameterTypes表示方法的参数列表</span></span><br><span class="line"><span class="comment">     * 获取sleep方法并执行</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">method1</span><span class="params">()</span> <span class="keyword">throws</span> ClassNotFoundException, NoSuchMethodException, InvocationTargetException, IllegalAccessException, InstantiationException </span>&#123;</span><br><span class="line">        Class&lt;?&gt; clazz = Class.forName(<span class="string">"com.sun.demo02_reflect.Person"</span>);</span><br><span class="line">        <span class="comment">//第一个参数表示方法的名字，</span></span><br><span class="line">        <span class="comment">//第二个参数时可变参数，该参数位置没有传递任何东西，表示获取的方法时空参数的方法</span></span><br><span class="line">        Method sleepMethod = clazz.getMethod(<span class="string">"sleep"</span>);</span><br><span class="line">        <span class="comment">//创建Person对象，以后调用方法时使用</span></span><br><span class="line">        Object obj = clazz.newInstance();</span><br><span class="line">        <span class="comment">//调用方法invoke，让sleep方法执行</span></span><br><span class="line">        <span class="comment">//因为通过sleepMethod调用了invoke方法，sleepMethod对象表示的时sleep方法，所有sleep方法执行了</span></span><br><span class="line">        <span class="comment">// 因为invoke方法第一个参数传递的时obj，表示obj调用了sleep</span></span><br><span class="line">        <span class="comment">// 因为invoke方法第二个参数没有传递任何数据，所以表示调用sleep方法时，没有传递任何内容，</span></span><br><span class="line">        sleepMethod.invoke(obj); <span class="comment">//相当于 obj.sleep()</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Method[] getMethods():获取类中的所有成员方法</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> ClassNotFoundException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">method</span><span class="params">()</span> <span class="keyword">throws</span> ClassNotFoundException </span>&#123;</span><br><span class="line">        Class&lt;?&gt; clazz = Class.forName(<span class="string">"com.sun.demo02_reflect.Person"</span>);</span><br><span class="line">        Method[] methods = clazz.getMethods();</span><br><span class="line">        <span class="keyword">for</span> (Method method : methods) &#123;</span><br><span class="line">            System.out.println(method);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>操作有参数有返回值的成员方法</strong>：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo08Method</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ClassNotFoundException, NoSuchMethodException, IllegalAccessException, InstantiationException, InvocationTargetException </span>&#123;</span><br><span class="line">        Class&lt;?&gt; clazz = Class.forName(<span class="string">"com.sun.demo02_reflect.Person"</span>);</span><br><span class="line">        Method m = clazz.getMethod(<span class="string">"eat"</span>, String<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        Object obj = m.invoke(clazz.newInstance(), <span class="string">"馒头"</span>);</span><br><span class="line">        System.out.println(obj);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Person类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sleep</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"睡觉觉。。。"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">eat</span><span class="params">(String food)</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"吃"</span> + food);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"粑粑"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Person&#123;"</span> +</span><br><span class="line">                <span class="string">"name='"</span> + name + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", age="</span> + age +</span><br><span class="line">                <span class="string">'&#125;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Person</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">Person</span><span class="params">(String name)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    set\get略...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1-6-反射操作成员变量【了解】"><a href="#1-6-反射操作成员变量【了解】" class="headerlink" title="1.6 反射操作成员变量【了解】"></a>1.6 反射操作成员变量【了解】</h3><p>在Class中有一些方法可以获取到类中的成员变量</p><ul><li><code>Field[] getFields()</code>：获取类中所有的成员变量</li><li><code>Field getField(String name)</code>：获取类中指定的成员变量，参数是成员变量的名字。</li></ul><blockquote><p>上面的两个方法只能获取public权限的成员变量，其他权限无法获取。</p><p><strong>如果想要获取其他权限的方法，需要使用暴力反射</strong></p></blockquote><p>Field表示成员变量，里面功能：</p><ul><li>void set(Object obj, Object value):给成员变量赋值。<ul><li>参数obj：表示给哪个对象的成员变量赋值。</li><li>参数value：将该成员变量赋成什么值</li></ul></li><li>Object get(Object obj)：获取成员变量的值。<ul><li>参数obj：表示获取哪个对象的成员变量的值。</li><li>返回值：获取到的结果</li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo09ReflectField</span> </span>&#123;</span><br><span class="line">    <span class="comment">//获取Person类的hobby属性，然后进行赋值取值操作</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ClassNotFoundException, NoSuchFieldException, IllegalAccessException, InstantiationException </span>&#123;</span><br><span class="line">        <span class="comment">//获取Person类的Class</span></span><br><span class="line">        Class clazz = Class.forName(<span class="string">"com.itheima.demo01_reflect.Person"</span>);</span><br><span class="line">        <span class="comment">//获取Person类中的hobby属性</span></span><br><span class="line">        Field field = clazz.getField(<span class="string">"hobby"</span>);</span><br><span class="line">        <span class="comment">//创建Person对象</span></span><br><span class="line">        Object obj = clazz.newInstance();</span><br><span class="line">        <span class="comment">//给对象hobby属性赋值</span></span><br><span class="line">        field.set(obj, <span class="string">"写代码"</span>); <span class="comment">//相当于 obj.hobby = "写代码";</span></span><br><span class="line">        System.out.println(obj);</span><br><span class="line">        <span class="comment">//获取hobby属性的值</span></span><br><span class="line">        <span class="comment">//获取obj的hobby属性的值</span></span><br><span class="line">        Object result = field.get(obj);</span><br><span class="line">        System.out.println(result);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1-7-反射练习"><a href="#1-7-反射练习" class="headerlink" title="1.7 反射练习"></a>1.7 反射练习</h3><p>要求：将类名和方法名放到文件中，通过读取文件的方式决定创建哪个类的对象以及调用哪个方法</p><p>步骤：</p><ol><li>创建配置文件，保存类名和方法名</li><li>创建Properties集合</li><li>创建输入流</li><li>调用load方法，将文件的键值对加载到集合中</li><li>调用Properties集合根据建获取值</li><li>获取该类的Class文件</li><li>通过Class调用getMethod，获取对应的方法</li><li>让方法执行</li></ol><p>代码示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo01Test</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ClassNotFoundException, IllegalAccessException, InstantiationException, NoSuchMethodException, InvocationTargetException, IOException </span>&#123;</span><br><span class="line">        Properties prop = <span class="keyword">new</span> Properties();</span><br><span class="line">        FileInputStream in = <span class="keyword">new</span> FileInputStream(<span class="string">"day17\\prop.properties"</span>);</span><br><span class="line">        prop.load(in);</span><br><span class="line">        in.close();</span><br><span class="line">        Class&lt;?&gt; name = Class.forName(prop.getProperty(<span class="string">"className"</span>));</span><br><span class="line">        Method m = name.getMethod(prop.getProperty(<span class="string">"methodName"</span>));</span><br><span class="line">        Object obj = name.newInstance();</span><br><span class="line">        Object invoke = m.invoke(obj);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Teacher</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">teach</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"老师讲课..."</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">study</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"学生学习..."</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>配置文件内容</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">className</span> = <span class="string">com.sun.demo03_reflect_test.Student</span></span><br><span class="line"><span class="attr">methodName</span> = <span class="string">study</span></span><br></pre></td></tr></table></figure><h2 id="三、注解"><a href="#三、注解" class="headerlink" title="三、注解"></a>三、注解</h2><h3 id="3-1-注解介绍"><a href="#3-1-注解介绍" class="headerlink" title="3.1 注解介绍"></a>3.1 注解介绍</h3><ul><li><p>注解是JDK1.5开始有的</p></li><li><p>注解可以加在<strong>类</strong>上，<strong>方法</strong>上，<strong>变量</strong>上</p></li><li><p>程序可以根据注解完成一些功能</p></li></ul><blockquote><p>注释和注解：</p><ul><li>注释：是给程序员看的，注释不会被编译执行</li><li>注解：是给程序看的，程序可以根据注解完成一些功能</li></ul></blockquote><p><strong>常见的注解：</strong></p><ul><li><code>@Override</code>：该注解用来验证一个方法是否重写父类的方法</li><li><code>@FunctionalInterface</code>：该注解用来验证一个接口是否是函数式接口。</li><li><code>@Deprecated</code>：标记已过时</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo01Anno</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        method();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Deprecated</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">method</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"method..."</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-2-自定义注解"><a href="#3-2-自定义注解" class="headerlink" title="3.2 自定义注解"></a>3.2 自定义注解</h3><p>格式：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> 注解名&#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在注解中可以提供一些属性，格式：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">数据类型 属性名();</span><br><span class="line">数据类型 属性名() <span class="keyword">default</span> 默认值;</span><br></pre></td></tr></table></figure><p><strong>注意，注解的属性只能是下面这个类型：</strong></p><ul><li>八种基本类型 byte short int long float double char boolean</li><li>String，Class，枚举，注解</li><li>以上所有类型的数组</li></ul><p><strong>注解的使用格式</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">@注解名</span><br><span class="line">@注解名(属性名<span class="number">1</span>=属性值<span class="number">1</span>,属性名<span class="number">2</span>=属性值,...)</span><br></pre></td></tr></table></figure><p>代码示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> Student &#123;</span><br><span class="line">    <span class="comment">//姓名</span></span><br><span class="line">    <span class="function">String <span class="title">name</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="comment">//年龄</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">age</span><span class="params">()</span> <span class="keyword">default</span> 0</span>;</span><br><span class="line">    <span class="comment">//爱好</span></span><br><span class="line">    String[] hobbies();</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo02Anno</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Student</span>(name = <span class="string">"张三"</span>,hobbies = &#123;<span class="string">"唱"</span>,<span class="string">"跳"</span>,<span class="string">"rap"</span>,<span class="string">"篮球"</span>&#125;)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">method</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-2-1-注解使用的注解事项"><a href="#3-2-1-注解使用的注解事项" class="headerlink" title="3.2.1 注解使用的注解事项"></a>3.2.1 注解使用的注解事项</h4><ul><li>如果注解中有属性没有默认值，那么在使用时，必须给这些属性赋值</li><li>如果注解中的属性有默认值，那么在使用注解时，可以不赋值</li><li>如果直接的属性是数组类型，那么在赋值时可以用大括号包裹多个元素</li><li>如果注解的属性是数组类型时，并且只赋值一个元素的情况下，可以省略大括号</li></ul><h4 id="3-2-2-注解中的特殊属性value"><a href="#3-2-2-注解中的特殊属性value" class="headerlink" title="3.2.2 注解中的特殊属性value"></a>3.2.2 注解中的特殊属性value</h4><p><strong>如果注解中只有一个没有默认值的属性，并且这个属性叫做value，那么在给该属性赋值时，可以省略属性名，否则必须写全。</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> Book &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//提供value属性：表示书名</span></span><br><span class="line">    <span class="function">String <span class="title">value</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// @Book(value = "Java")</span></span><br><span class="line"><span class="meta">@Book</span>(<span class="string">"Java"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo03Anno</span> </span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-3-元注解"><a href="#3-3-元注解" class="headerlink" title="3.3 元注解"></a>3.3 元注解</h3><h4 id="3-3-1-介绍"><a href="#3-3-1-介绍" class="headerlink" title="3.3.1 介绍"></a>3.3.1 介绍</h4><ul><li>元注解本身就是注解</li><li>元注解是修饰注解的注解</li></ul><p><strong>常见的元注解：</strong></p><ul><li><code>@Target</code>：用来限制注解的使用位置</li><li><code>@Retention</code>：用来限制注解的生命周期</li></ul><h4 id="3-3-2-Target"><a href="#3-3-2-Target" class="headerlink" title="3.3.2 @Target"></a>3.3.2 @Target</h4><p><code>@Target</code>是一个元注解</p><p><strong>作用：</strong>这个元注解用来限制注解的使用位置。如果某个注解<strong>不使用@Target进行修饰</strong>，那么这个注解<strong>可以用在任何位置</strong>（类上,方法上,变量上…）</p><p>在@Target这个元注解中，只有一个属性叫做value，那么在给该属性赋值时，可以省略属性名。value属性表示被修饰的注解可以在哪个位置使用</p><ul><li>这个value是ElementType数组类型的，ElementType是枚举类型，枚举就是特殊的类，枚举中的每一个属性都是自身的一个对象</li><li>在给value属性赋值时，我们需要使用<strong>ElementType</strong>中的<strong>属性</strong>，每一个属性都有自己的作用：<ul><li><code>ElementType.TYPE</code>，类、接口</li><li><code>ElementType.FIELD</code>，成员变量</li><li><code>ElementType.METHOD</code>，成员方法</li><li><code>ElementType.PARAMETER</code>，方法参数</li><li><code>ElementType.CONSTRUCTOR</code>，构造方法</li><li><code>ElementType.LOCAL_VARIABLE</code>，局部变量</li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// @Target(ElementType.TYPE) //被修饰的注解只能用在类上</span></span><br><span class="line"><span class="comment">// @Target(ElementType.METHOD) //被修饰的注解只能用在方法上</span></span><br><span class="line"><span class="meta">@Target</span>(&#123;ElementType.TYPE,ElementType.METHOD&#125;)  <span class="comment">//被修饰的注解可以用在类以及方法上，</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> MyAnno &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-3-3-Retention"><a href="#3-3-3-Retention" class="headerlink" title="3.3.3 @Retention"></a>3.3.3 @Retention</h4><p><code>@Retention</code>这个元注解设置注解的生命周期，如果某个注解不使用@Retention进行修饰，那么该注解在源代码阶段以及编译后的.class中有效，一旦运行，就会消失。</p><p>@Retention里面有一个属性叫做value，该属性表示被修饰的注解的生命周期，这个value是RetentionPolicy类型的</p><ul><li>RetentionPolicy是枚举类型，我们使用@Retention元注解时，可以给value属性赋值为<strong>RetentionPolicy属性值</strong>：<ul><li><code>RetentionPolicy.SOURCE</code>:被修饰的注解只在源代码中有效，在编译后的.class以及运行时期内存中是没有的</li><li><code>RetentionPolicy.CLASS</code>：被修饰的注解在源代码阶段以及编译后的class文件中有效，在运行时器内存中是没有的【<strong>默认值</strong>】</li><li><code>RetentionPolicy.RUNTIME</code>：被修饰的注解，在源代码阶段和以及编译后的class文件、运行时器内存中都有效。</li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Retention</span>(RetentionPolicy.SOURCE) <span class="comment">//被修饰的注解只在源代码阶段有效</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> MyAnno &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Retention</span>(RetentionPolicy.CLASS) <span class="comment">//被修饰的注解在源代码阶段和class文件中有效</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> MyAnno2 &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Retention</span>(RetentionPolicy.RUNTIME) <span class="comment">//被修饰的注解在任何时候都有效</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> MyAnno3&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-4-注解的解析"><a href="#3-4-注解的解析" class="headerlink" title="3.4 注解的解析"></a>3.4 注解的解析</h3><p><strong>注解解析</strong>：就是获取注解中的内容【属性】，然后使用。</p><p><strong>解析相关API：</strong></p><ul><li><p><code>Annotation</code>：是所有注解的跟接口，所有的注解都会默认实现这个接口</p></li><li><p><code>AnnotatedElement</code>：这个接口定义了操作注解的方法</p><ul><li><code>Annotation[] getAnnotations()</code>：获取所有的注解</li><li><code>T getAnnotation(Class annotationClass)</code>：获取指定的注解。参数表示注解的CLass</li><li><code>boolean isAnnotationPresent(Class annotationClass)</code>：判断是否存在指定的注解，参数是注解的Class</li></ul></li></ul><blockquote><p>反射有关的类：Class、Constructor、Method、Filed 都实现了AnnotatedElement这个接口。</p></blockquote><p>注解的解析要结合反射技术实现：</p><ul><li>如果要操作类上的注解，通过Class对象调用上面的方法进行操作</li><li>如果要操作构造方法上的注解，通过Constructor对象调用上面的方法进行操作</li><li>如果要操作成员方法上的注解，通过Method对象调用上面的方法进行操作</li></ul><h4 id="3-4-1-练习"><a href="#3-4-1-练习" class="headerlink" title="3.4.1 练习"></a>3.4.1 练习</h4><p>要求：</p><ul><li>定义一个Book注解类里面定义一些属性</li><li>定义一个BookStore类，在该类上加上定义好的注解。</li><li>获取注解的属性并输出</li></ul><p>分析：获取BookStore类上面的注解，可以先获取BookStore对象的CLass对象，通过Class对象调用注解解析有关的方法就是在操作BookStore类上的注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Retention</span>(RetentionPolicy.RUNTIME)<span class="comment">//设置注解在运行时也有效</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> Book &#123;</span><br><span class="line">    <span class="comment">//书名</span></span><br><span class="line">    <span class="function">String <span class="title">name</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="comment">//价格</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">price</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="comment">//作者</span></span><br><span class="line">    <span class="function">String <span class="title">author</span><span class="params">()</span> <span class="keyword">default</span> "佚名"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Book</span>(name = <span class="string">"水浒传"</span>,price = <span class="number">100</span>,author = <span class="string">"施耐庵"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BookStore</span> </span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo01ParseAnno</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ClassNotFoundException </span>&#123;</span><br><span class="line"></span><br><span class="line">        Class clazz = Class.forName(<span class="string">"com.sun.demo07_parse_anno.BookStore"</span>);</span><br><span class="line">        <span class="keyword">boolean</span> flag = clazz.isAnnotationPresent(Book<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        System.out.println(flag);</span><br><span class="line">        <span class="keyword">if</span> (flag)&#123;</span><br><span class="line">            <span class="comment">//条件成立，表示BookStore上有注解，那么就可以获取注解</span></span><br><span class="line">            Annotation anno = clazz.getAnnotation(Book<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">            <span class="comment">//向下转型，将Annotation向下转成Book</span></span><br><span class="line">            Book book = (Book) anno;</span><br><span class="line">            <span class="comment">//获取属性</span></span><br><span class="line">            System.out.println(book.name());</span><br><span class="line">            System.out.println(book.author());</span><br><span class="line">            System.out.println(book.price());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>注意：在定义注解时一定要指定注解的生命周期，不然则默认使用RetentionPolicy.CLASS属性值，导致解析不到，因为注解并没有跟随程序进入运行内存，需要指定生命周期为@Retention(RetentionPolicy.RUNTIME)，运行时也有效，才能被解析到。</p></blockquote><h3 id="3-5-练习——模拟单元测试"><a href="#3-5-练习——模拟单元测试" class="headerlink" title="3.5 练习——模拟单元测试"></a>3.5 练习——模拟单元测试</h3><p>要求：自定义@MyTest注解，然后在一个类中的多个方法上使用@MyTest注解，然后运行带有@MyTest注解的方法。</p><p>步骤：</p><ol><li>获取TestDemo的Class对象<ol start="2"><li>创建TestDemo对象</li></ol></li><li>通过Class对象调用getMethods获取所有的成员方法</li><li>遍历这些成员方法，拿到里面的每一个方法（Method）</li><li>判断该方法上有没有@MyTest注解。</li><li>如果有该注解，就让这个方法执行。</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Target</span>(ElementType.METHOD) <span class="comment">//限制该注解只能用在方法上</span></span><br><span class="line"><span class="meta">@Retention</span>(RetentionPolicy.RUNTIME) <span class="comment">//在运行时内存中也有效</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> MyTest &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestDemo</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">methodOne</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"methodOne"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@MyTest</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">methodTwo</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"methodTwo"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">methodThree</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"methodThree"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@MyTest</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">methodFour</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"methodFour"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">methodFive</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"methodFive"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo01Test</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IllegalAccessException, InstantiationException, ClassNotFoundException, InvocationTargetException </span>&#123;</span><br><span class="line">        Class testDemo = Class.forName(<span class="string">"com.sun.demo08_anno_test.TestDemo"</span>);</span><br><span class="line">        Object obj = testDemo.newInstance();</span><br><span class="line">        Method[] methods = testDemo.getMethods();</span><br><span class="line">        <span class="keyword">for</span> (Method method : methods) &#123;</span><br><span class="line">            <span class="keyword">boolean</span> flag = method.isAnnotationPresent(MyTest<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">            <span class="keyword">if</span> (flag)&#123;</span><br><span class="line">                method.invoke(obj);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="四、动态代理"><a href="#四、动态代理" class="headerlink" title="四、动态代理"></a>四、动态代理</h2><p><strong>动态代理</strong>：可以对一个类(对象)的功能进行<strong>增强</strong>。</p><ul><li>动态：会在程序运行过程中，创建一个代理类以及对象</li><li>代理：会创建一个代理对象对原有的对象进行增强。</li></ul><p>在Proxy类中有一个方法，叫做<code>newProxyInstance</code>，这个方法可以创建一个代理对象：</p><ul><li><code>static Object newProxyInstance(ClassLoader loader, Class[] interfaces, InvocationHandler h)</code>：该方法可以创建动态代理对象并返回<ul><li><code>参数loader</code>：表示类加载器，<strong>固定写法，当前类.class.getClassLoader();</strong></li><li><code>参数interfaces</code>：代理对象实现的接口.这些接口一般与被代理对象实现的接口一致。<strong>固定写法：被代理对象.getClass.getInterfaces();</strong></li><li><code>参数h</code>：参数时InvocationHandle类型，表示执行处理类(真正是接口)，里面有一个<strong>方法叫做invoke</strong></li></ul></li></ul><p><code>Object invoke(Object proxy, Method method, Object[] args)</code>：<strong>这个invoke方法会在每次动态代理对象调用任何方法的时候执行</strong></p><ul><li><strong>参数proxy：表示代理对象</strong></li><li><strong>参数method：代理对象调用的方法</strong></li><li><strong>参数args：代理对象调用方法时的实际参数</strong></li><li><strong>返回值：代理对象调用方法后产出结果</strong></li></ul><p>代码演示：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 小汽车接口，里面定义了小汽车的功能</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Carable</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 跑</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 说话</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">String <span class="title">say</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Car</span> <span class="keyword">implements</span> <span class="title">Carable</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"小汽车在跑..."</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">say</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"有人按喇叭了..."</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"滴滴"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo01ProxyTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//创建对象</span></span><br><span class="line">        Carable car = <span class="keyword">new</span> Car();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//创建一个动态代理对象【对Car进行代理，进行增强】</span></span><br><span class="line">        Carable superCar = (Carable) Proxy.newProxyInstance(Demo01ProxyTest<span class="class">.<span class="keyword">class</span>.<span class="title">getClassLoader</span>(), <span class="title">car</span>.<span class="title">getClass</span>().<span class="title">getInterfaces</span>(), <span class="title">new</span> <span class="title">InvocationHandler</span>() </span>&#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> Object <span class="title">invoke</span><span class="params">(Object proxy, Method method, Object[] args)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">                <span class="comment">//判断调用的方法是不是run,如果是run，在正确</span></span><br><span class="line">                <span class="keyword">if</span> (<span class="string">"run"</span>.equals(method.getName()))&#123;</span><br><span class="line">                    System.out.println(<span class="string">"跑着跑着飞起来了"</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">//System.out.println(method);</span></span><br><span class="line">                <span class="comment">//通过被代理对象调用method方法，让方法去执行[放行操作]</span></span><br><span class="line">                Object obj = method.invoke(car,args);</span><br><span class="line">                <span class="keyword">return</span> obj;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        superCar.run();</span><br><span class="line">        String result = superCar.say();</span><br><span class="line">        System.out.println(result);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、类加载器&quot;&gt;&lt;a href=&quot;#一、类加载器&quot; class=&quot;headerlink&quot; title=&quot;一、类加载器&quot;&gt;&lt;/a&gt;一、类加载器&lt;/h2&gt;&lt;h3 id=&quot;1-1-类的加载时机&quot;&gt;&lt;a href=&quot;#1-1-类的加载时机&quot; class=&quot;headerlink&quot; title=&quot;1.1 类的加载时机&quot;&gt;&lt;/a&gt;1.1 类的加载时机&lt;/h3&gt;&lt;p&gt;当我们第一次使用某个类时，这个类会加载到方法区。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;创建类的实例(创建对象)&lt;/li&gt;
&lt;li&gt;类的静态变量，或者为静态变量赋值&lt;/li&gt;
&lt;li&gt;类的静态方法&lt;/li&gt;
&lt;li&gt;使用反射方式来强制创建某个类或接口对象的&lt;code&gt;java.lang.Class&lt;/code&gt;对象。&lt;/li&gt;
&lt;li&gt;初始化某个类的子类&lt;/li&gt;
&lt;li&gt;直接使用java.exe命令来运行某个主类&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;以上六种情况的任何一种，都可以导致JVM将一个类加载到方法区。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Java" scheme="http://sunmoon.com/categories/Java/"/>
    
    
      <category term="设计模式" scheme="http://sunmoon.com/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
      <category term="反射" scheme="http://sunmoon.com/tags/%E5%8F%8D%E5%B0%84/"/>
    
      <category term="注解" scheme="http://sunmoon.com/tags/%E6%B3%A8%E8%A7%A3/"/>
    
      <category term="动态代理" scheme="http://sunmoon.com/tags/%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>NIO&amp;AIO</title>
    <link href="http://sunmoon.com/2020/08/09/NIO-AIO/"/>
    <id>http://sunmoon.com/2020/08/09/NIO-AIO/</id>
    <published>2020-08-09T08:09:36.000Z</published>
    <updated>2020-08-09T08:10:58.215Z</updated>
    
    <content type="html"><![CDATA[<h2 id="NIO"><a href="#NIO" class="headerlink" title="NIO"></a>NIO</h2><h3 id="NIO介绍"><a href="#NIO介绍" class="headerlink" title="NIO介绍"></a>NIO介绍</h3><p>同步和异步（线程通信的机制）</p><ul><li>同步：线程在完成某个功能时，必须等待这个功能执行完才能再继续往下执行。</li><li>异步：线程在完成功能的时候，不用等到该功能执行结束也可以去做其他事情。 得到该功能结束后，系统会通知线程该功能执行完了</li></ul><p>阻塞和非阻塞(线程的状态)</p><ul><li>阻塞：线程在执行任务时，会挂起。</li><li>非阻塞：线程在执行任务时，不会挂起，可以继续执行其他任务。</li></ul><a id="more"></a><p>BIO：同步阻塞IO<br>NIO：同步非阻塞IO<br>AIO：异步非阻塞IO</p><blockquote><p>NIO有三个重要的组成部分，Buffer， Channel， Selector</p></blockquote><h3 id="Buffer"><a href="#Buffer" class="headerlink" title="Buffer"></a>Buffer</h3><h4 id="Buffer的创建"><a href="#Buffer的创建" class="headerlink" title="Buffer的创建"></a>Buffer的创建</h4><p>Buffer是缓冲区，本质就是由数组组成的。</p><blockquote><p>在NIO中，数据都是要在缓冲区进行操作的。</p></blockquote><p>常见的缓冲区</p><ul><li>ByteBuffer</li><li>CharBuffer</li><li>DoubleBuffer</li><li>FloatBuffer</li><li>IntBuffer</li><li>LongBuffer</li><li>ShortBuffer</li></ul><p>ByteBuffer的三种创建方式：</p><ul><li><code>static ByteBuffer allocate(int capacity)</code>：创建一个字节缓冲区并返回，参数是缓冲区的长度（间接缓冲区）</li><li><code>static ByteBuffer allocateDirect(int capacity)</code>：创建一个字节缓冲区并返回，参数是缓冲区的长度（直接缓冲区）</li><li><code>static ByteBuffer wrap(byte[] array)</code>：根据字节数组创建字节缓冲区并返回（间接缓冲区）</li></ul><blockquote><ul><li>间接缓冲区：在Java的内存中创建的缓冲区。</li><li>直接缓冲区：在系统内存中创建的缓冲区。</li><li>间接缓冲区的创建和销毁效率比直接缓冲区要高，但是工作效率比直接缓冲区要低。</li></ul></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo01Buffer</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// static ByteBuffer allocate(int capacity)：创建一个字节缓冲区并返回，参数是缓冲区的长度（间接缓冲区）</span></span><br><span class="line">        ByteBuffer buffer = ByteBuffer.allocate(<span class="number">10</span>);</span><br><span class="line">        <span class="comment">//将ByteBuffer转成数组，然后借助工具类Arrays.toString输出</span></span><br><span class="line">        System.out.println(Arrays.toString(buffer.array()));</span><br><span class="line"></span><br><span class="line">        <span class="comment">//static ByteBuffer allocateDirect(int capacity)：创建一个字节缓冲区并返回，参数是缓冲区的长度（直接缓冲区）</span></span><br><span class="line">        ByteBuffer buffer2 = ByteBuffer.allocateDirect(<span class="number">10</span>);</span><br><span class="line">        System.out.println(buffer2);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//static ByteBuffer wrap(byte[] array)：根据字节数组创建字节缓冲区并返回（间接缓冲区）</span></span><br><span class="line">        ByteBuffer buffer3 = ByteBuffer.wrap(<span class="string">"hello"</span>.getBytes());</span><br><span class="line">        System.out.println(Arrays.toString(buffer3.array()));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Buffer的put方法"><a href="#Buffer的put方法" class="headerlink" title="Buffer的put方法"></a>Buffer的put方法</h4><p>在ByteBuffer中有一些方法叫做put，可以向缓冲区中添加元素。</p><ul><li><code>ByteBuffer put(byte b)</code>：向当前位置添加一个字节。</li><li><code>ByteBuffer put(byte[] src)</code>：向当前位置添加一个字节数组。</li><li><code>ByteBuffer put(byte[] src, int offset, int length)</code>：添加字节数组的一部分。参数offset是数组起始索引，参数length是元素个数</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo02BufferPut</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//获取缓冲区</span></span><br><span class="line">        ByteBuffer buffer = ByteBuffer.allocate(<span class="number">10</span>);</span><br><span class="line">        <span class="comment">//ByteBuffer put(byte b)：向当前位置添加一个字节。</span></span><br><span class="line">        buffer.put((<span class="keyword">byte</span>) <span class="number">100</span>);</span><br><span class="line">        buffer.put((<span class="keyword">byte</span>) <span class="number">101</span>);</span><br><span class="line">        buffer.put((<span class="keyword">byte</span>) <span class="number">102</span>);</span><br><span class="line">        <span class="comment">//ByteBuffer put(byte[] src)：向当前位置添加一个字节数组。</span></span><br><span class="line">        <span class="keyword">byte</span>[] bArr = &#123;<span class="number">90</span>, <span class="number">91</span>, <span class="number">92</span>, <span class="number">93</span>, <span class="number">94</span>&#125;;</span><br><span class="line">        <span class="comment">//buffer.put(bArr);</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//ByteBuffer put(byte[] src, int offset, int length)：添加字节数组的一部分。参数offset是数组起始索引，参数length是元素个数</span></span><br><span class="line">        buffer.put(bArr, <span class="number">1</span>, <span class="number">3</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//输出</span></span><br><span class="line">        System.out.println(Arrays.toString(buffer.array()));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Buffer的capacity方法"><a href="#Buffer的capacity方法" class="headerlink" title="Buffer的capacity方法"></a>Buffer的capacity方法</h4><p>在ByteBuffer中有一个方法叫做capacity，可以获取到缓冲区的容量</p><ul><li><code>int capacity()</code>：返回缓冲区的容量。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo03Capacity</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//获取缓冲区</span></span><br><span class="line">        ByteBuffer buffer = ByteBuffer.allocate(<span class="number">10</span>);</span><br><span class="line">        <span class="comment">//输出容量</span></span><br><span class="line">        System.out.println(<span class="string">"容量："</span> + buffer.capacity());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Buffer的limit方法"><a href="#Buffer的limit方法" class="headerlink" title="Buffer的limit方法"></a>Buffer的limit方法</h4><p>在ByteBuffer中，有一个方法叫做limit，可以对缓冲区进行限制（比如限制缓冲区中只能使用前5个元素</p><ul><li><p><code>int limit()</code>：获取缓冲区的限制。</p></li><li><p><code>Buffer limit(int newLimit)</code>：设置缓冲区的限制。 参数表示新的限制，比如参数是5，就表示只能使用5个元素</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo04Limit</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//获取缓冲区</span></span><br><span class="line">        ByteBuffer buffer = ByteBuffer.allocate(<span class="number">10</span>);</span><br><span class="line">        <span class="comment">//输出</span></span><br><span class="line">        System.out.println(<span class="string">"容量："</span> + buffer.capacity() + <span class="string">"，限制："</span> + buffer.limit());</span><br><span class="line">        <span class="comment">//设置limit</span></span><br><span class="line">        buffer.limit(<span class="number">2</span>);</span><br><span class="line">        System.out.println(<span class="string">"容量："</span> + buffer.capacity() + <span class="string">"，限制："</span> + buffer.limit());</span><br><span class="line"></span><br><span class="line">        <span class="comment">//添加元素</span></span><br><span class="line">        buffer.put((<span class="keyword">byte</span>) <span class="number">100</span>);</span><br><span class="line">        buffer.put((<span class="keyword">byte</span>) <span class="number">101</span>);</span><br><span class="line">        <span class="comment">//限制了只能使用前两个元素，如果添加第三个，就会报错</span></span><br><span class="line">        buffer.put((<span class="keyword">byte</span>) <span class="number">102</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Buffer的position方法"><a href="#Buffer的position方法" class="headerlink" title="Buffer的position方法"></a>Buffer的position方法</h4><p>在ByteBuffer中有一个方法叫做Position，可以获取以及设置缓冲区的元素位置(位置是几，将来就是在哪个位置添加)</p><ul><li><p><code>int position()</code>：获取缓冲区的元素位置。</p></li><li><p><code>Buffer position(int newPosition)</code>：设置缓冲区的元素位置，参数表示新设置的位置。</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo05Position</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//获取缓冲区</span></span><br><span class="line">        ByteBuffer buffer = ByteBuffer.allocate(<span class="number">10</span>);</span><br><span class="line">        <span class="comment">//输出缓冲区的信息</span></span><br><span class="line">        System.out.println(<span class="string">"位置："</span> + buffer.position() + <span class="string">", 限制："</span> + buffer.limit() + <span class="string">", 容量："</span> + buffer.capacity());</span><br><span class="line">        <span class="comment">//添加</span></span><br><span class="line">        buffer.put((<span class="keyword">byte</span>) <span class="number">100</span>);</span><br><span class="line">        buffer.put((<span class="keyword">byte</span>) <span class="number">101</span>);</span><br><span class="line">        buffer.put((<span class="keyword">byte</span>) <span class="number">102</span>);</span><br><span class="line">        <span class="comment">//输出缓冲区的信息</span></span><br><span class="line">        System.out.println(<span class="string">"位置："</span> + buffer.position() + <span class="string">", 限制："</span> + buffer.limit() + <span class="string">", 容量："</span> + buffer.capacity());</span><br><span class="line">        <span class="comment">//设置缓冲区的位置</span></span><br><span class="line">        buffer.position(<span class="number">0</span>);</span><br><span class="line">        System.out.println(<span class="string">"位置："</span> + buffer.position() + <span class="string">", 限制："</span> + buffer.limit() + <span class="string">", 容量："</span> + buffer.capacity());</span><br><span class="line">        buffer.put((<span class="keyword">byte</span>) <span class="number">50</span>);</span><br><span class="line">        buffer.put((<span class="keyword">byte</span>) <span class="number">51</span>);</span><br><span class="line">        <span class="comment">//输出</span></span><br><span class="line">        System.out.println(Arrays.toString(buffer.array()));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Buffer的mark方法"><a href="#Buffer的mark方法" class="headerlink" title="Buffer的mark方法"></a>Buffer的mark方法</h4><p>在ByteBuffer中有一个方法叫做mark，可以设置缓冲区的标记</p><ul><li><code>Buffer mark()</code>：设置缓冲区的标记</li><li><code>Buffer reset()</code>：恢复之前的标记</li></ul><blockquote><p>调用mark方法时position是几，那么调用reset方法后恢复的position就是几。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Deo06Mark</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//获取缓冲区</span></span><br><span class="line">        ByteBuffer buffer = ByteBuffer.allocate(<span class="number">10</span>);</span><br><span class="line">        <span class="comment">//输出缓冲区的信息</span></span><br><span class="line">        System.out.println(<span class="string">"位置："</span> + buffer.position() + <span class="string">", 限制："</span> + buffer.limit() + <span class="string">", 容量："</span> + buffer.capacity());</span><br><span class="line">        <span class="comment">//添加</span></span><br><span class="line">        buffer.put((<span class="keyword">byte</span>) <span class="number">100</span>);</span><br><span class="line">        buffer.put((<span class="keyword">byte</span>) <span class="number">101</span>);</span><br><span class="line">        buffer.put((<span class="keyword">byte</span>) <span class="number">102</span>);</span><br><span class="line">        System.out.println(<span class="string">"位置："</span> + buffer.position() + <span class="string">", 限制："</span> + buffer.limit() + <span class="string">", 容量："</span> + buffer.capacity());</span><br><span class="line">        <span class="comment">//设置标记</span></span><br><span class="line">        buffer.mark();</span><br><span class="line">        <span class="comment">//添加</span></span><br><span class="line">        buffer.put((<span class="keyword">byte</span>) <span class="number">103</span>);</span><br><span class="line">        buffer.put((<span class="keyword">byte</span>) <span class="number">104</span>);</span><br><span class="line">        System.out.println(<span class="string">"位置："</span> + buffer.position() + <span class="string">", 限制："</span> + buffer.limit() + <span class="string">", 容量："</span> + buffer.capacity());</span><br><span class="line">        <span class="comment">//调用reset，恢复之间做标记是的位置.</span></span><br><span class="line">        buffer.reset();</span><br><span class="line">        System.out.println(<span class="string">"位置："</span> + buffer.position() + <span class="string">", 限制："</span> + buffer.limit() + <span class="string">", 容量："</span> + buffer.capacity());</span><br><span class="line">        buffer.put((<span class="keyword">byte</span>) <span class="number">10</span>);</span><br><span class="line">        buffer.put((<span class="keyword">byte</span>) <span class="number">11</span>);</span><br><span class="line">        <span class="comment">//输出元素</span></span><br><span class="line">        System.out.println(Arrays.toString(buffer.array()));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Buffer的其他方法"><a href="#Buffer的其他方法" class="headerlink" title="Buffer的其他方法"></a>Buffer的其他方法</h4><p><code>Buffer flip()</code>：缩小limit的范围</p><ul><li>将limit设置到position位置。</li><li>将position设置为0</li><li>丢弃标记</li></ul><p><code>Buffer clear()</code>:还原缓冲区的状态。</p><ul><li>将limit设置到capacity</li><li>将position设置为0</li><li>丢弃标记</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo07OtherMethod</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//获取缓冲区</span></span><br><span class="line">        ByteBuffer buffer = ByteBuffer.allocate(<span class="number">10</span>);</span><br><span class="line">        <span class="comment">//输出缓冲区的信息</span></span><br><span class="line">        System.out.println(<span class="string">"位置："</span> + buffer.position() + <span class="string">", 限制："</span> + buffer.limit() + <span class="string">", 容量："</span> + buffer.capacity());</span><br><span class="line">        <span class="comment">//添加</span></span><br><span class="line">        buffer.put((<span class="keyword">byte</span>) <span class="number">100</span>);</span><br><span class="line">        buffer.put((<span class="keyword">byte</span>) <span class="number">101</span>);</span><br><span class="line">        buffer.put((<span class="keyword">byte</span>) <span class="number">102</span>);</span><br><span class="line">        System.out.println(<span class="string">"位置："</span> + buffer.position() + <span class="string">", 限制："</span> + buffer.limit() + <span class="string">", 容量："</span> + buffer.capacity());</span><br><span class="line">        <span class="comment">//缩小limit范围</span></span><br><span class="line">        buffer.flip();</span><br><span class="line">        System.out.println(<span class="string">"位置："</span> + buffer.position() + <span class="string">", 限制："</span> + buffer.limit() + <span class="string">", 容量："</span> + buffer.capacity());</span><br><span class="line">        <span class="comment">//还原缓冲区状态</span></span><br><span class="line">        buffer.clear();</span><br><span class="line">        System.out.println(<span class="string">"位置："</span> + buffer.position() + <span class="string">", 限制："</span> + buffer.limit() + <span class="string">", 容量："</span> + buffer.capacity());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Channel通道"><a href="#Channel通道" class="headerlink" title="Channel通道"></a>Channel通道</h3><p> Channel表示<strong>通道</strong>，在NIO中数据的读写都是使用通道完成的。我们可以将通道看成之前的流，只不过流是单向的，通道是双向的，通道既有读取的方法，也有写方法。</p><p>常见的通道：</p><ul><li>FileChannel：从文件读取数据的</li><li>DatagramChannel：读写UDP网络协议数据</li><li>SocketChannel：读写TCP网络协议数据</li><li>ServerSocketChannel：可以监听TCP连接</li></ul><h4 id="FileChannel复制文件"><a href="#FileChannel复制文件" class="headerlink" title="FileChannel复制文件"></a>FileChannel复制文件</h4><p>通过NIO的方式复制文件，如果要对文件读写，需要使用FileChannel。</p><p>如何获取<code>FileChannel</code>：</p><ul><li>在<code>FileInputStream</code>和<code>FileOutputStream</code>中，有一个方法叫做<code>getChannel</code>，可以获取通道<ul><li><code>FileChannel getChannel()</code>：获取通道。</li></ul></li></ul><p>在通道（Channel）中还有用于读写的方法</p><ul><li><code>int write(ByteBuffer src)</code>:写数据，参数是缓冲区。</li><li><code>int read(ByteBuffer dst)</code>：读取数据，参数是缓冲区</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo01Channel</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="comment">//创建字节流</span></span><br><span class="line">        FileInputStream fis = <span class="keyword">new</span> FileInputStream(<span class="string">"d:\\aa.jpg"</span>);</span><br><span class="line">        FileOutputStream fos = <span class="keyword">new</span> FileOutputStream(<span class="string">"d:\\bb.jpg"</span>);</span><br><span class="line">        <span class="comment">//获取通道</span></span><br><span class="line">        FileChannel inChannel = fis.getChannel();</span><br><span class="line">        FileChannel outChannel = fos.getChannel();</span><br><span class="line">        <span class="comment">//先定义缓冲区</span></span><br><span class="line">        ByteBuffer buffer = ByteBuffer.allocate(<span class="number">1024</span>);<span class="comment">//</span></span><br><span class="line">        <span class="comment">//定义变量，表示读取到的字节个数</span></span><br><span class="line">        <span class="keyword">int</span> len;</span><br><span class="line">        <span class="comment">//开始循环</span></span><br><span class="line">        <span class="keyword">while</span> ((len = inChannel.read(buffer)) != -<span class="number">1</span>) &#123;</span><br><span class="line">            <span class="comment">//如果条件成立，就表示读取到了数据，那么就进行处理。</span></span><br><span class="line">            <span class="comment">//缩小limit范围（将limit设置到position位置），读取到几个，就让缓冲区中的几个元素是有效的。</span></span><br><span class="line">            buffer.flip();</span><br><span class="line">            <span class="comment">//将读取到的数据写到目的地文件了</span></span><br><span class="line">            outChannel.write(buffer);</span><br><span class="line">            <span class="comment">//重置缓冲区（将position设置为0，将limit设置到capacity，丢弃标记）</span></span><br><span class="line">            buffer.clear();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//释放资源</span></span><br><span class="line">        fos.close();</span><br><span class="line">        fis.close();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="RandomAccessFile-复制文件"><a href="#RandomAccessFile-复制文件" class="headerlink" title="RandomAccessFile 复制文件"></a>RandomAccessFile 复制文件</h4><p>上例直接使用FileChannel结合ByteBuffer实现的管道读写，但并不能提高文件的读写效率。</p><p> ByteBuffer有个子类：<code>MappedByteBuffer</code>，它可以创建一个“直接缓冲区”，并可以将文件直接映射至内存，可以提高大文件的读写效率。</p><p><code>RandomAccessFile</code>类（是一个可以设置读写模式的IO流类）:</p><ul><li><code>RandomAccessFile(String name, String mode)</code>: 第一个参数是字符串的文件路径，第二个参数是模式。举例：”r”表示只读。 “rw”表示读写</li></ul><p>RandomAccessFile其他的方法：</p><ul><li><code>FileChannel getChannel()</code>：获取通道</li></ul><p>FileChannel获取MappedByteBuffer方法</p><ul><li><code>MappedByteBuffer map(FileChannel.MapMode mode, long position, long size)</code>：获取直接缓冲区<ul><li>参数mode：表示模式</li><li>参数position：表示起始位置</li><li>参数size：映射的大小</li></ul></li></ul><blockquote><p>注意：上面的方式不能复制超过2G的文件。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo02FastCopy</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="comment">//创建RandomAccessFile对象</span></span><br><span class="line">        <span class="comment">//创建的RandomAccessFile，绑定了源文件，模式只读</span></span><br><span class="line">        RandomAccessFile source = <span class="keyword">new</span> RandomAccessFile(<span class="string">"d:\\aa.rar"</span>, <span class="string">"r"</span>);</span><br><span class="line">        <span class="comment">//创建的RandomAccessFile，绑定了目的地文件，模式读写</span></span><br><span class="line">        RandomAccessFile target = <span class="keyword">new</span> RandomAccessFile(<span class="string">"d:\\bb.rar"</span>, <span class="string">"rw"</span>);</span><br><span class="line">        <span class="comment">//获取通道</span></span><br><span class="line">        FileChannel inChannel = source.getChannel();</span><br><span class="line">        FileChannel outChannel = target.getChannel();</span><br><span class="line">        <span class="comment">//记录时间</span></span><br><span class="line">        <span class="keyword">long</span> start = System.currentTimeMillis();</span><br><span class="line">        <span class="comment">//获取源文件大小</span></span><br><span class="line">        <span class="keyword">long</span> size = inChannel.size();</span><br><span class="line">        <span class="comment">//获取MappedByteBuffer缓冲区</span></span><br><span class="line">        MappedByteBuffer mbbi = inChannel.map(FileChannel.MapMode.READ_ONLY, <span class="number">0</span>, size);</span><br><span class="line">        MappedByteBuffer mbbo = outChannel.map(FileChannel.MapMode.READ_WRITE, <span class="number">0</span>, size);</span><br><span class="line">        <span class="comment">//遍历mbbi，将每一个字节都放入到mbbo缓冲区中.</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; size; i++) &#123;</span><br><span class="line">            <span class="comment">//获取到mbbi中索引为i的字节</span></span><br><span class="line">            <span class="keyword">byte</span> b = mbbi.get();</span><br><span class="line">            <span class="comment">//将获取到的放入到mbbo中</span></span><br><span class="line">            mbbo.put(i);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//记录时间</span></span><br><span class="line">        <span class="keyword">long</span> end = System.currentTimeMillis();</span><br><span class="line">        System.out.println(end - start);</span><br><span class="line">        <span class="comment">//释放资源</span></span><br><span class="line">        target.close();</span><br><span class="line">        source.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="SocketChannel网络通信"><a href="#SocketChannel网络通信" class="headerlink" title="SocketChannel网络通信"></a>SocketChannel网络通信</h4><h5 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h5><p>SocketChannel表示客户端通道，我们可以使用该类表示TCP中的客户端。</p><p>如何获取SocketChannel</p><ul><li><code>static SocketChannel open()</code>：获取SocketChannel</li></ul><p>SocketChannel方法：</p><ul><li><code>boolean connect(SocketAddress remote)</code>：连接服务器。参数是目标服务器的IP地址以及端口号</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo01Client</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="comment">//获取SocketChannel对象</span></span><br><span class="line">        SocketChannel socketChannel = SocketChannel.open();</span><br><span class="line">        <span class="comment">//连接服务器</span></span><br><span class="line">        socketChannel.connect(<span class="keyword">new</span> InetSocketAddress(<span class="string">"localhost"</span>, <span class="number">8888</span>));</span><br><span class="line">        <span class="comment">//给服务器发送数据</span></span><br><span class="line">        <span class="comment">//将要发送的数据封装到缓冲区中</span></span><br><span class="line">        ByteBuffer buffer = ByteBuffer.wrap(<span class="string">"你好"</span>.getBytes());</span><br><span class="line">        <span class="comment">//将数据发送给服务器</span></span><br><span class="line">        socketChannel.write(buffer);</span><br><span class="line">        <span class="comment">//接收服务器回复过来的数据</span></span><br><span class="line">        <span class="comment">//创建一个长度是1024的缓冲区，用来接收服务器回复过来的数据</span></span><br><span class="line">        ByteBuffer buffer2 = ByteBuffer.allocate(<span class="number">1024</span>);</span><br><span class="line">        <span class="comment">//接收服务器的数据</span></span><br><span class="line">        socketChannel.read(buffer2);</span><br><span class="line">        <span class="comment">//缩小limit限制</span></span><br><span class="line">        buffer2.flip();</span><br><span class="line">        <span class="comment">//将缓冲区的内容转成字符串输出。</span></span><br><span class="line">        System.out.println(<span class="keyword">new</span> String(buffer2.array(), <span class="number">0</span>, buffer2.limit()));</span><br><span class="line">        <span class="comment">//释放资源</span></span><br><span class="line">        socketChannel.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="服务器"><a href="#服务器" class="headerlink" title="服务器"></a>服务器</h5><p>ServerSocketChannel是服务器通道，我们可以使用这个类来表示TCP端的服务器。</p><p>ServerSocketChannel获取方式：</p><ul><li><code>static ServerSocketChannel open()</code>：获取ServerSocketChannel对象。</li></ul><p>ServerSocketChannel其他方法；</p><ul><li><p><code>ServerSocketChannel bind(SocketAddress local)</code>：参数要绑定自己程序的端口号。</p></li><li><p><code>SocketChannel accept()</code>：监听并获取客户端的请求（通道）</p></li><li><p><code>SelectableChannel configureBlocking(boolean block)</code>：设置是否为阻塞状态，如果是false，表示非阻塞</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo02Server</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="comment">//获取服务器通道</span></span><br><span class="line">        ServerSocketChannel serverSocketChannel = ServerSocketChannel.open();</span><br><span class="line">        <span class="comment">//设置服务器为非阻塞</span></span><br><span class="line">        <span class="comment">//serverSocketChannel.configureBlocking(false);</span></span><br><span class="line">        <span class="comment">//给服务器绑定端口号</span></span><br><span class="line">        serverSocketChannel.bind(<span class="keyword">new</span> InetSocketAddress(<span class="number">8888</span>));</span><br><span class="line">        <span class="comment">//监听客户端的请求</span></span><br><span class="line">        SocketChannel socketChannel = serverSocketChannel.accept();</span><br><span class="line">        System.out.println(<span class="string">"有客户端来连接了"</span>);</span><br><span class="line">        <span class="comment">//获取客户端发送过来的数据</span></span><br><span class="line">        <span class="comment">//定义ByteBuffer用来保存客户端发来的数据</span></span><br><span class="line">        ByteBuffer buffer = ByteBuffer.allocate(<span class="number">1024</span>);</span><br><span class="line">        <span class="comment">//通过通道接受数据</span></span><br><span class="line">        socketChannel.read(buffer);</span><br><span class="line">        <span class="comment">//缩小limit范围。</span></span><br><span class="line">        buffer.flip();</span><br><span class="line">        <span class="comment">//输出读取到的内容</span></span><br><span class="line">        System.out.println(<span class="keyword">new</span> String(buffer.array(), <span class="number">0</span>, buffer.limit()));</span><br><span class="line">        <span class="comment">//给客户端回复数据</span></span><br><span class="line">        <span class="comment">//创建缓冲区，用来保存发送的数据</span></span><br><span class="line">        ByteBuffer buffer2 = ByteBuffer.wrap(<span class="string">"收到"</span>.getBytes());</span><br><span class="line">        <span class="comment">//使用通道将数据写给客户端</span></span><br><span class="line">        socketChannel.write(buffer2);</span><br><span class="line">        <span class="comment">//释放资源</span></span><br><span class="line">        socketChannel.close();</span><br><span class="line">        serverSocketChannel.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Selector选择器"><a href="#Selector选择器" class="headerlink" title="Selector选择器"></a>Selector选择器</h3><p>Selector选择器可以实现多路复用的效果。我们可以使用一个Selector监听三个服务器的状态，哪个服务器有客户端来请求了，那么我们就可以让哪个服务器去处理客户端的请求。</p><p>如何获取Selector选择器：</p><ul><li><code>static Selector open()</code>：获取一个选择器。</li></ul><p>如何将通道注册到选择器：</p><ul><li><p><code>channel.configureBlocking(false)</code>：将通道设置为非阻塞。</p></li><li><p><code>SelectionKey key = channel.register(selector,SelectionKey.OP_ACCEPT)</code>：参数selector表示选择器。<code>SelectionKey.OP_ACCEPT</code>表示监听服务器接受就绪事件。</p></li></ul><p>Selector选择器中的方法：</p><ul><li><p><code>Set&lt;SelectionKey&gt; keys()</code>：获取已经注册到选择器的通道（编号）并放入到Set集合中返回。 SelectionKey可以理解为通道的编号</p></li><li><p><code>Set&lt;SelectionKey&gt; selectedKeys()</code>: 获取已经连接的通道（编号）并放入到Set集合中返回。</p></li><li><p><code>int select()</code>：调用select方法后，程序会等着，一直到有客户端来连接。</p></li></ul><h4 id="Selector的基本使用"><a href="#Selector的基本使用" class="headerlink" title="Selector的基本使用"></a>Selector的基本使用</h4><p>要求：使用Selector选择器监听三个服务器的状态。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo01Selector</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="comment">//创建三个服务器，并将三个服务器设置为非阻塞</span></span><br><span class="line">        ServerSocketChannel serverSocketChannelOne = ServerSocketChannel.open();</span><br><span class="line">        serverSocketChannelOne.bind(<span class="keyword">new</span> InetSocketAddress(<span class="number">7777</span>));</span><br><span class="line">        serverSocketChannelOne.configureBlocking(<span class="keyword">false</span>);<span class="comment">//设置为非阻塞</span></span><br><span class="line"></span><br><span class="line">        ServerSocketChannel serverSocketChannelTwo = ServerSocketChannel.open();</span><br><span class="line">        serverSocketChannelTwo.bind(<span class="keyword">new</span> InetSocketAddress(<span class="number">8888</span>));</span><br><span class="line">        serverSocketChannelTwo.configureBlocking(<span class="keyword">false</span>);<span class="comment">//设置为非阻塞</span></span><br><span class="line"></span><br><span class="line">        ServerSocketChannel serverSocketChannelThree = ServerSocketChannel.open();</span><br><span class="line">        serverSocketChannelThree.bind(<span class="keyword">new</span> InetSocketAddress(<span class="number">9999</span>));</span><br><span class="line">        serverSocketChannelThree.configureBlocking(<span class="keyword">false</span>);<span class="comment">//设置为非阻塞</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取Selector选择器</span></span><br><span class="line">        Selector selector = Selector.open();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//让上面三个服务器通道注册到Selector选择器上</span></span><br><span class="line">        serverSocketChannelOne.register(selector, SelectionKey.OP_ACCEPT);</span><br><span class="line">        serverSocketChannelTwo.register(selector, SelectionKey.OP_ACCEPT);</span><br><span class="line">        serverSocketChannelThree.register(selector, SelectionKey.OP_ACCEPT);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//死循环，让程序一直执行(选择器一直监听服务器通道的状态)</span></span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">            <span class="comment">//调用选择器的select方法，等着客户端来连接服务器</span></span><br><span class="line">            selector.select();</span><br><span class="line">            <span class="comment">//如果程序向下执行，表示有客户端来连接了。就获取已经连接的服务器通道</span></span><br><span class="line">            Set&lt;SelectionKey&gt; selectionKeys = selector.selectedKeys();</span><br><span class="line">            <span class="comment">//获取迭代器</span></span><br><span class="line">            Iterator&lt;SelectionKey&gt; iterator = selectionKeys.iterator();</span><br><span class="line">            <span class="comment">//遍历</span></span><br><span class="line">            <span class="keyword">while</span> (iterator.hasNext()) &#123;</span><br><span class="line">                <span class="comment">//获取遍历到的元素</span></span><br><span class="line">                SelectionKey selectionKey = iterator.next();</span><br><span class="line">                <span class="comment">//通过selectionKey获取到通道</span></span><br><span class="line">                ServerSocketChannel serverSocketChannel = (ServerSocketChannel) selectionKey.channel();</span><br><span class="line">                <span class="comment">//让服务器监听客户端请求</span></span><br><span class="line">                SocketChannel socketChannel = serverSocketChannel.accept();</span><br><span class="line">                <span class="comment">//获取缓冲区，用来保存接收到的数据</span></span><br><span class="line">                ByteBuffer buffer = ByteBuffer.allocate(<span class="number">1024</span>);</span><br><span class="line">                <span class="comment">//进行读取</span></span><br><span class="line">                socketChannel.read(buffer);</span><br><span class="line">                <span class="comment">//缩小缓冲区的limit范围</span></span><br><span class="line">                buffer.flip();</span><br><span class="line">                <span class="comment">//输出读取到的内容</span></span><br><span class="line">                System.out.println(<span class="keyword">new</span> String(buffer.array(), <span class="number">0</span>, buffer.limit()));</span><br><span class="line">                <span class="comment">//客户端通道关闭</span></span><br><span class="line">                socketChannel.close();</span><br><span class="line">                <span class="comment">//如果某个服务器处理完了客户端请求，那么就从集合中删除。</span></span><br><span class="line">                iterator.remove();<span class="comment">//删除遍历的元素</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo02Client</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">new</span> Thread(() -&gt; &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="comment">//获取SocketChannel</span></span><br><span class="line">                SocketChannel socketChannel = SocketChannel.open();</span><br><span class="line">                <span class="comment">//连接服务器</span></span><br><span class="line">                socketChannel.connect(<span class="keyword">new</span> InetSocketAddress(<span class="string">"localhost"</span>, <span class="number">7777</span>));</span><br><span class="line">                <span class="comment">//准备缓冲区，保存要发送的数据</span></span><br><span class="line">                ByteBuffer buffer = ByteBuffer.wrap(<span class="string">"我要连接7777"</span>.getBytes());</span><br><span class="line">                <span class="comment">//将数据发给服务器</span></span><br><span class="line">                socketChannel.write(buffer);</span><br><span class="line">                <span class="comment">//释放资源</span></span><br><span class="line">                socketChannel.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;).start();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">new</span> Thread(() -&gt; &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="comment">//获取SocketChannel</span></span><br><span class="line">                SocketChannel socketChannel = SocketChannel.open();</span><br><span class="line">                <span class="comment">//连接服务器</span></span><br><span class="line">                socketChannel.connect(<span class="keyword">new</span> InetSocketAddress(<span class="string">"localhost"</span>, <span class="number">8888</span>));</span><br><span class="line">                <span class="comment">//准备缓冲区，保存要发送的数据</span></span><br><span class="line">                ByteBuffer buffer = ByteBuffer.wrap(<span class="string">"我要连接8888"</span>.getBytes());</span><br><span class="line">                <span class="comment">//将数据发给服务器</span></span><br><span class="line">                socketChannel.write(buffer);</span><br><span class="line">                <span class="comment">//释放资源</span></span><br><span class="line">                socketChannel.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;).start();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">new</span> Thread(() -&gt; &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="comment">//获取SocketChannel</span></span><br><span class="line">                SocketChannel socketChannel = SocketChannel.open();</span><br><span class="line">                <span class="comment">//连接服务器</span></span><br><span class="line">                socketChannel.connect(<span class="keyword">new</span> InetSocketAddress(<span class="string">"localhost"</span>, <span class="number">9999</span>));</span><br><span class="line">                <span class="comment">//准备缓冲区，保存要发送的数据</span></span><br><span class="line">                ByteBuffer buffer = ByteBuffer.wrap(<span class="string">"我要连接9999"</span>.getBytes());</span><br><span class="line">                <span class="comment">//将数据发给服务器</span></span><br><span class="line">                socketChannel.write(buffer);</span><br><span class="line">                <span class="comment">//释放资源</span></span><br><span class="line">                socketChannel.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;).start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="AIO"><a href="#AIO" class="headerlink" title="AIO"></a>AIO</h3><p>AIO有关的通道：</p><ul><li><p><code>AsynchronousSocketChannel</code>：TCP中的客户端异步通道</p></li><li><p><code>AsynchronousServerSocketChannel</code>：TCP中的服务器异步通道</p></li><li><p><code>AsynchronousFileChannel</code>：文件操作的异步通道</p></li><li><p><code>AsynchronousDatagramChannel</code>：UDP通信异步通道</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo01Server</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException, ExecutionException, InterruptedException </span>&#123;</span><br><span class="line">        <span class="comment">//获取一个异步服务器通道</span></span><br><span class="line">        AsynchronousServerSocketChannel asynchronousServerSocketChannel = AsynchronousServerSocketChannel.open();</span><br><span class="line">        <span class="comment">//绑定端口号</span></span><br><span class="line">        asynchronousServerSocketChannel.bind(<span class="keyword">new</span> InetSocketAddress(<span class="number">8888</span>));</span><br><span class="line">        <span class="comment">//监听客户端的请求</span></span><br><span class="line">        Future&lt;AsynchronousSocketChannel&gt; accept = asynchronousServerSocketChannel.accept();</span><br><span class="line">        <span class="comment">//调用get方法，获取服务器监听到的客户端通道</span></span><br><span class="line">        AsynchronousSocketChannel asynchronousSocketChannel = accept.get();</span><br><span class="line">        <span class="comment">//创建ByteBuffer缓冲区，用来接收读取到的数据</span></span><br><span class="line">        ByteBuffer buffer = ByteBuffer.allocate(<span class="number">1024</span>);</span><br><span class="line">        <span class="comment">//调用read方法进行读取</span></span><br><span class="line">        Future&lt;Integer&gt; readFuture = asynchronousSocketChannel.read(buffer);</span><br><span class="line">        <span class="comment">//判断如果read方法没有读取结束，那么就去干一些其他事情</span></span><br><span class="line">        <span class="keyword">if</span> (!readFuture.isDone()) &#123;</span><br><span class="line">            Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//缩小缓冲区limit限制</span></span><br><span class="line">        buffer.flip();</span><br><span class="line">        <span class="comment">//输出读取到的结果</span></span><br><span class="line">        System.out.println(<span class="keyword">new</span> String(buffer.array(), <span class="number">0</span>, buffer.limit()));</span><br><span class="line">        <span class="comment">//释放资源</span></span><br><span class="line">        asynchronousSocketChannel.close();</span><br><span class="line">        asynchronousServerSocketChannel.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    AsynchronousSocketChannel：TCP中的客户端异步通道</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo02Client</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException, InterruptedException </span>&#123;</span><br><span class="line">        <span class="comment">//获取客户端异步通道</span></span><br><span class="line">        AsynchronousSocketChannel asynchronousSocketChannel = AsynchronousSocketChannel.open();</span><br><span class="line">        <span class="comment">//连接服务器</span></span><br><span class="line">        Future&lt;Void&gt; future = asynchronousSocketChannel.connect(<span class="keyword">new</span> InetSocketAddress(<span class="string">"localhost"</span>, <span class="number">8888</span>));</span><br><span class="line">        <span class="comment">//判断如果连接没有建立成功，就做一些其他事情</span></span><br><span class="line">        <span class="keyword">if</span>(!future.isDone()) &#123;</span><br><span class="line">            Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//让客户端给服务器发送数据</span></span><br><span class="line">        ByteBuffer buffer = ByteBuffer.wrap(<span class="string">"你好"</span>.getBytes());</span><br><span class="line">        <span class="comment">//调用方法，发送数据</span></span><br><span class="line">        asynchronousSocketChannel.write(buffer);</span><br><span class="line">        <span class="comment">//释放资源</span></span><br><span class="line">        asynchronousSocketChannel.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;NIO&quot;&gt;&lt;a href=&quot;#NIO&quot; class=&quot;headerlink&quot; title=&quot;NIO&quot;&gt;&lt;/a&gt;NIO&lt;/h2&gt;&lt;h3 id=&quot;NIO介绍&quot;&gt;&lt;a href=&quot;#NIO介绍&quot; class=&quot;headerlink&quot; title=&quot;NIO介绍&quot;&gt;&lt;/a&gt;NIO介绍&lt;/h3&gt;&lt;p&gt;同步和异步（线程通信的机制）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;同步：线程在完成某个功能时，必须等待这个功能执行完才能再继续往下执行。&lt;/li&gt;
&lt;li&gt;异步：线程在完成功能的时候，不用等到该功能执行结束也可以去做其他事情。 得到该功能结束后，系统会通知线程该功能执行完了&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;阻塞和非阻塞(线程的状态)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;阻塞：线程在执行任务时，会挂起。&lt;/li&gt;
&lt;li&gt;非阻塞：线程在执行任务时，不会挂起，可以继续执行其他任务。&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="Java" scheme="http://sunmoon.com/categories/Java/"/>
    
    
      <category term="基础" scheme="http://sunmoon.com/tags/%E5%9F%BA%E7%A1%80/"/>
    
      <category term="学习" scheme="http://sunmoon.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="NIO" scheme="http://sunmoon.com/tags/NIO/"/>
    
      <category term="AIO" scheme="http://sunmoon.com/tags/AIO/"/>
    
  </entry>
  
  <entry>
    <title>JUnit单元测试、Socket网络编程</title>
    <link href="http://sunmoon.com/2020/08/07/JUnit%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95%E3%80%81Socket%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/"/>
    <id>http://sunmoon.com/2020/08/07/JUnit%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95%E3%80%81Socket%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/</id>
    <published>2020-08-07T11:55:28.000Z</published>
    <updated>2020-08-07T12:02:31.241Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、JUnit单元测试"><a href="#一、JUnit单元测试" class="headerlink" title="一、JUnit单元测试"></a>一、JUnit单元测试</h2><p>JUnit是单元测试，可以替代程序中的main方法，程序可以直接从单元测试方法直接开始执行。</p><p>如果在一个方法上加上<code>@Test</code>注解，那么这个方法就是单元测试方法了，程序就可以从这个方法直接开始执行了。</p><a id="more"></a><h3 id="1-1-基本使用"><a href="#1-1-基本使用" class="headerlink" title="1.1 基本使用"></a>1.1 基本使用</h3><p>单元测试方法的要求：</p><ul><li>方法一般以test开头(<strong>软性规定</strong>)</li><li>方法用public修饰，没有参数没有返回值(<strong>硬性规定</strong>)</li></ul><p>单元测试方法的执行：</p><ul><li>方式一：选中方法右键run</li><li>方式二：选中类，然后右键run【执行该类中的所有单元测试方法】</li></ul><p>代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo01Junit</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFunction</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"testFunction"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testMethod</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"testMethod"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1-2-单元测试的其他注解"><a href="#1-2-单元测试的其他注解" class="headerlink" title="1.2 单元测试的其他注解"></a>1.2 单元测试的其他注解</h3><p><code>JUnit4</code>：</p><ul><li><code>@Before</code>:使用该注解修饰的方法，会在每次单元测试方法执行之前执行</li><li><code>@After</code>：使用该注解修饰的方法，会在每次单元测试方法执行之后执行</li><li><code>@BeforeClass</code>:使用该注解修饰的方法，会在所有方法执行之前执行，只执行一次。</li><li><code>@AfterClass</code>:使用该注解修饰的方法，会在所有方法执行之后执行，只执行一次。</li></ul><p>注意：<code>BeforeClass</code>和<code>AfterClass</code>注解修饰的方法必须使用<code>static</code>静态修饰</p><p><code>JUnit5</code>：</p><ul><li><code>@BeforeEach</code>：用来修饰方法，该方法会在每一个测试方法执行之前执行一次。</li><li><code>@AfterEach</code>：用来修饰方法，该方法会在每一个测试方法执行之后执行一次。</li><li><code>@BeforeAll</code>：用来静态修饰方法，该方法会在所有测试方法之前执行一次。</li><li><code>@AfterAll</code>：用来静态修饰方法，该方法会在所有测试方法之后执行一次。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo02JUnit</span> </span>&#123;</span><br><span class="line">    <span class="meta">@AfterClass</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">afterClassMethod</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"afterClassMethod..."</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@BeforeClass</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">beforeClassMethod</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"beforeClassMethod..."</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@After</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">afterMethod</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"afterMethod..."</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Before</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">beforeMethod</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"beforeMethod..."</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testMethod</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"testMethod..."</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFunction</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"testFunction..."</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="二、网络编程入门"><a href="#二、网络编程入门" class="headerlink" title="二、网络编程入门"></a>二、网络编程入门</h2><h3 id="2-1-IP地址介绍"><a href="#2-1-IP地址介绍" class="headerlink" title="2.1 IP地址介绍"></a>2.1 IP地址介绍</h3><p><strong>IP地址：是网络中对于设备的一个唯一的标识(编号)</strong></p><p><img data-src="/image/IP%E5%9C%B0%E5%9D%80%E4%BB%8B%E7%BB%8D.png" alt="IP地址介绍"></p><h3 id="2-2-端口号"><a href="#2-2-端口号" class="headerlink" title="2.2 端口号"></a>2.2 端口号</h3><p><strong>端口号：在计算机中对于应用程序的唯一标识</strong></p><p><img data-src="/image/%E7%AB%AF%E5%8F%A3%E5%8F%B7%E4%BB%8B%E7%BB%8D.png" alt="端口号介绍"></p><h3 id="2-3-客户端和服务器"><a href="#2-3-客户端和服务器" class="headerlink" title="2.3 客户端和服务器"></a>2.3 客户端和服务器</h3><p>图解:</p><p><img data-src="/image/%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%92%8C%E6%9C%8D%E5%8A%A1%E5%99%A8.png" alt="客户端和服务器"></p><h3 id="2-4-TCP中的IO流"><a href="#2-4-TCP中的IO流" class="headerlink" title="2.4 TCP中的IO流"></a>2.4 TCP中的IO流</h3><p>图解：</p><p><img data-src="/image/TCP%E4%B8%AD%E7%9A%84IO%E6%B5%81.png" alt="TCP中的IO流"></p><h2 id="三、TCP通信程序"><a href="#三、TCP通信程序" class="headerlink" title="三、TCP通信程序"></a>三、TCP通信程序</h2><h3 id="3-1-概述"><a href="#3-1-概述" class="headerlink" title="3.1 概述"></a>3.1 概述</h3><p>TCP ==&gt;Transfer Control Protocol ==&gt; 传输控制协议</p><p>TCP协议是面向连接的通信协议，即在传输数据前先在客户端和服务器端建立逻辑连接，然后再传输数据。它提供了两台计算机之间可靠无差错的数据传输。</p><p>TCP协议的特点：</p><ul><li>面向连接的协议</li></ul><ul><li>只能由客户端主动发送数据给服务器端，服务器端接收到数据之后，可以给客户端响应数据。</li></ul><ul><li>通过三次握手建立连接，连接成功形成数据传输通道。</li></ul><ul><li>通过四次挥手断开连接</li><li>基于IO流进行数据传输</li><li>传输数据大小没有限制</li></ul><ul><li>因为面向连接的协议，速度慢，但是是可靠的协议。</li></ul><p>TCP协议的使用场景</p><ul><li>文件上传和下载</li><li>邮件发送和接收</li><li>远程登录</li></ul><p><strong>TCP协议相关的类</strong>：</p><ul><li><code>Socket</code>：该类的对象就代表客户端程序。</li><li><code>ServerSocket</code>：该类的对象就代表服务器端程序</li></ul><p><strong>Socket类构造方法</strong>：</p><ul><li><code>Socket(String host, int port)</code>：参数host是目标服务器的ip地址，参数port目标服务器程序的端口号</li></ul><blockquote><p>注意：只要执行该方法，就会立即连接指定的服务器程序，如果连接不成功，则会抛出异常。</p></blockquote><p><strong>ServerSocket类的构造方法</strong>：</p><ul><li><code>ServerSocket(int port)</code>:参数表示服务器程序的端口</li><li>特有方法：<ul><li><code>Socket accept()</code>:监听(等待)并获取客户端的请求(Socket)</li></ul></li></ul><p><strong>Socket类常用方法：</strong></p><ul><li><code>OutputStream getOutputStream()</code>:获取字节输出流，该流用来发送数据</li><li><code>InputStream getInputStream()</code>:获取字节输入流，该流用来接收数据</li><li><code>void close()</code>:释放资源</li></ul><h3 id="3-2-TCP通信基本案例"><a href="#3-2-TCP通信基本案例" class="headerlink" title="3.2 TCP通信基本案例"></a>3.2 TCP通信基本案例</h3><h4 id="3-2-1-TCP案例客户端"><a href="#3-2-1-TCP案例客户端" class="headerlink" title="3.2.1 TCP案例客户端"></a>3.2.1 TCP案例客户端</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * TCP客户端的实现步骤：</span></span><br><span class="line"><span class="comment"> *      1.创建socket对象，表示客户端，并要指定要连接的服务器ip地址以及端口号</span></span><br><span class="line"><span class="comment"> *      2.通过socket调用getOutputStream获取字节输出流，该流用来向服务器发送数据</span></span><br><span class="line"><span class="comment"> *      3.通过流调用write方法，写(发)数据</span></span><br><span class="line"><span class="comment"> *      4.通过socket调用getInputStream获取字节输入流，该流用来读取都武器发送过类的数据</span></span><br><span class="line"><span class="comment"> *      5.通过流调用read()方法，读取(接收)数据</span></span><br><span class="line"><span class="comment"> *      6.释放资源</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Sunmoon</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo01Client</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="comment">//1.创建socket对象，表示客户端，并要指定要连接的服务器ip地址以及端口号</span></span><br><span class="line">        <span class="comment">//创建Socket对象是会主动连接服务器，如果连接失败，会报错。【三次握手】</span></span><br><span class="line">        Socket socket = <span class="keyword">new</span> Socket(<span class="string">"127.0.0.1"</span>,<span class="number">1234</span>);</span><br><span class="line">        <span class="comment">//2.通过socket调用getOutputStream获取字节输出流，该流用来向服务器发送数据</span></span><br><span class="line">        OutputStream out = socket.getOutputStream();</span><br><span class="line">        <span class="comment">//3.通过流调用write方法，写(发)数据</span></span><br><span class="line">        out.write(<span class="string">"Hello!"</span>.getBytes());</span><br><span class="line">        <span class="comment">//4.通过socket调用getInputStream获取字节输入流，该流用来读取都武器发送过类的数据</span></span><br><span class="line">        InputStream in = socket.getInputStream();</span><br><span class="line">        <span class="keyword">byte</span>[] bArr = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">        <span class="comment">// 5.通过流调用read()方法，读取(接收)数据</span></span><br><span class="line">        <span class="keyword">int</span> len = in.read(bArr);</span><br><span class="line">        System.out.println(<span class="keyword">new</span> String(bArr,<span class="number">0</span>,len));</span><br><span class="line">        <span class="comment">// 6.释放资源</span></span><br><span class="line">        socket.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-2-2-TCP案例服务器端"><a href="#3-2-2-TCP案例服务器端" class="headerlink" title="3.2.2 TCP案例服务器端"></a>3.2.2 TCP案例服务器端</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment"> * TCP服务器端实现步骤：</span></span><br><span class="line"><span class="comment"> *      1.创建一个ServerSocket，表示TCP服务器</span></span><br><span class="line"><span class="comment"> *      2.通过ServerSocket调用accept方法监听并获取客户端的请求(客户端Socket)</span></span><br><span class="line"><span class="comment"> *      3.通过socket调用getInputStream方法获取输入流，接收客户端发送过来的数据</span></span><br><span class="line"><span class="comment"> *      4.通过流掉用read方法接收数据</span></span><br><span class="line"><span class="comment"> *      5.通过socket调用getOutputStream方法获取输出流，用来给客户端发送数据</span></span><br><span class="line"><span class="comment"> *      6.通过流调用write方法，写数据</span></span><br><span class="line"><span class="comment"> *      7.释放资源</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo02Server</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        ServerSocket server = <span class="keyword">new</span> ServerSocket(<span class="number">1234</span>);</span><br><span class="line">        Socket socket = server.accept();</span><br><span class="line">        InputStream in = socket.getInputStream();</span><br><span class="line">        <span class="keyword">byte</span>[] bArr = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">        <span class="keyword">int</span> len = in.read(bArr);</span><br><span class="line">        System.out.println(<span class="keyword">new</span> String(bArr,<span class="number">0</span>,len));</span><br><span class="line">        OutputStream out = socket.getOutputStream();</span><br><span class="line">        out.write(<span class="string">"收到"</span>.getBytes());</span><br><span class="line">        socket.close();</span><br><span class="line">        server.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="四、综合案例"><a href="#四、综合案例" class="headerlink" title="四、综合案例"></a>四、综合案例</h2><h3 id="4-1-文件上传案例"><a href="#4-1-文件上传案例" class="headerlink" title="4.1 文件上传案例"></a>4.1 文件上传案例</h3><p>分析：</p><p><img data-src="/image/%E4%B8%8A%E4%BC%A0%E6%A1%88%E4%BE%8B%E5%88%86%E6%9E%90.png" alt="上传案例分析"></p><p><strong>多线程实现：</strong></p><p>客户端任务类:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Task</span> <span class="keyword">implements</span> <span class="title">Runnable</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//创建客户端</span></span><br><span class="line">            Socket socket = <span class="keyword">new</span> Socket(<span class="string">"127.0.0.1"</span>,<span class="number">59512</span>);</span><br><span class="line">            <span class="comment">//创建字节输入流读取要上传的文件</span></span><br><span class="line">            InputStream is = <span class="keyword">new</span> FileInputStream(<span class="string">"E:\\file_test\\client\\1.png"</span>);</span><br><span class="line">            <span class="comment">//获取输出流对象，向服务器发送数据</span></span><br><span class="line">            OutputStream out = socket.getOutputStream();</span><br><span class="line">            <span class="comment">//创建字节数组</span></span><br><span class="line">            <span class="keyword">byte</span>[] bytes = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span> * <span class="number">8</span>];</span><br><span class="line">            <span class="comment">//定义变量</span></span><br><span class="line">            <span class="keyword">int</span> len;</span><br><span class="line">            <span class="comment">//循环读取</span></span><br><span class="line">            <span class="keyword">while</span> ((len = is.read(bytes)) != -<span class="number">1</span>)&#123;</span><br><span class="line">                <span class="comment">//向服务器写数据</span></span><br><span class="line">                out.write(bytes,<span class="number">0</span>,len);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//关流</span></span><br><span class="line">            is.close();</span><br><span class="line">            <span class="comment">//告知服务器写完毕</span></span><br><span class="line">            socket.shutdownOutput();</span><br><span class="line">            <span class="comment">//获取输入流对象，接收客户端会显数据</span></span><br><span class="line">            InputStream in = socket.getInputStream();</span><br><span class="line">            <span class="keyword">while</span> ((len = in.read(bytes)) != -<span class="number">1</span>)&#123;</span><br><span class="line">                System.out.println(<span class="keyword">new</span> String(bytes,<span class="number">0</span>,len));</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//关闭客户端</span></span><br><span class="line">            socket.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>客户端：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Client</span>  </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">        ExecutorService e = Executors.newFixedThreadPool(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">        e.submit(<span class="keyword">new</span> Task());</span><br><span class="line">        e.submit(<span class="keyword">new</span> Task());</span><br><span class="line">        e.submit(<span class="keyword">new</span> Task());</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>服务器端：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainApp</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="comment">//创建服务器对象</span></span><br><span class="line">        ServerSocket server = <span class="keyword">new</span> ServerSocket(<span class="number">59512</span>);</span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">            <span class="comment">//开启监听</span></span><br><span class="line">            Socket socket = server.accept();</span><br><span class="line">            <span class="comment">//每次监听到请求都开启一个新线程</span></span><br><span class="line">            <span class="keyword">new</span> Thread(() -&gt; &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    <span class="comment">//创建字节输出流，写数据,随机生成文件名</span></span><br><span class="line">                    OutputStream os = <span class="keyword">new</span> FileOutputStream(<span class="string">"E:\\file_test\\server\\"</span> + UUID.randomUUID() + <span class="string">".png"</span>);</span><br><span class="line">                    <span class="comment">//调用getInputStream方法接收数据</span></span><br><span class="line">                    InputStream in = socket.getInputStream();</span><br><span class="line">                    <span class="comment">//定义字节数组</span></span><br><span class="line">                    <span class="keyword">byte</span>[] bytes = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span> * <span class="number">8</span>];</span><br><span class="line">                    <span class="comment">//定义变量</span></span><br><span class="line">                    <span class="keyword">int</span> len;</span><br><span class="line">                    <span class="comment">//循环读取</span></span><br><span class="line">                    <span class="keyword">while</span> ((len = in.read(bytes)) != -<span class="number">1</span>) &#123;</span><br><span class="line">                        os.write(bytes, <span class="number">0</span>, len);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="comment">//关闭资源</span></span><br><span class="line">                    os.close();</span><br><span class="line">                    <span class="comment">//获取字节输出流，给客户端回显</span></span><br><span class="line">                    OutputStream out = socket.getOutputStream();</span><br><span class="line">                    out.write(<span class="string">"上传成功"</span>.getBytes());</span><br><span class="line">                    socket.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;).start();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-2-模拟B-S服务器"><a href="#4-2-模拟B-S服务器" class="headerlink" title="4.2 模拟B\S服务器"></a>4.2 模拟B\S服务器</h3><p>准备一个web页面，可以放在模块文件夹下，然后通过<code>本机IP+端口号</code>即可访问页面，查看到页面内容。</p><p>代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo01Server</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="comment">//创建ServerSocket服务器</span></span><br><span class="line">        ServerSocket serverSocket = <span class="keyword">new</span> ServerSocket(<span class="number">1234</span>);</span><br><span class="line">        <span class="comment">//死循环，使用死循环一直监听请求，并处理操作</span></span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">            <span class="comment">//通过服务器调用accept方法，监听客户端请求</span></span><br><span class="line">            Socket socket = serverSocket.accept();</span><br><span class="line">            <span class="comment">//每监听到请求，就创建新的线程执行任务</span></span><br><span class="line">            <span class="keyword">new</span> Thread(()-&gt;&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    <span class="comment">//创建字节输入流，用来读取index.html文件的内容</span></span><br><span class="line">                    InputStream is = <span class="keyword">new</span> FileInputStream(<span class="string">"xxx\\index.html"</span>);</span><br><span class="line">                    <span class="comment">//通过Socket调用getOutputStream，获取输出流，用来向浏览器【客户端】发送数据</span></span><br><span class="line">                    OutputStream out = socket.getOutputStream();</span><br><span class="line">                    <span class="comment">//如果浏览器作为客户端访问服务器，要遵循http协议。</span></span><br><span class="line">                    <span class="comment">//根据http协议规范，服务器回复给浏览器的前三行数据是固定的</span></span><br><span class="line">                    out.write(<span class="string">"HTTP/1.1 200 OK\r\n"</span>.getBytes());<span class="comment">//第一行</span></span><br><span class="line">                    out.write(<span class="string">"Content-Type=html/text\r\n"</span>.getBytes());<span class="comment">//第二行</span></span><br><span class="line">                    out.write(<span class="string">"\r\n"</span>.getBytes());<span class="comment">//第三行是一个空换行。</span></span><br><span class="line">                    <span class="comment">//开始将html文件中的内容写给浏览器</span></span><br><span class="line">                    <span class="keyword">int</span> i;</span><br><span class="line">                    <span class="keyword">while</span> ((i = is.read()) != -<span class="number">1</span>) &#123;</span><br><span class="line">                        out.write(i);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="comment">//关闭资源</span></span><br><span class="line">                    is.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;).start();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、JUnit单元测试&quot;&gt;&lt;a href=&quot;#一、JUnit单元测试&quot; class=&quot;headerlink&quot; title=&quot;一、JUnit单元测试&quot;&gt;&lt;/a&gt;一、JUnit单元测试&lt;/h2&gt;&lt;p&gt;JUnit是单元测试，可以替代程序中的main方法，程序可以直接从单元测试方法直接开始执行。&lt;/p&gt;
&lt;p&gt;如果在一个方法上加上&lt;code&gt;@Test&lt;/code&gt;注解，那么这个方法就是单元测试方法了，程序就可以从这个方法直接开始执行了。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Java" scheme="http://sunmoon.com/categories/Java/"/>
    
    
      <category term="基础" scheme="http://sunmoon.com/tags/%E5%9F%BA%E7%A1%80/"/>
    
      <category term="学习" scheme="http://sunmoon.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="JUnit" scheme="http://sunmoon.com/tags/JUnit/"/>
    
      <category term="Socket" scheme="http://sunmoon.com/tags/Socket/"/>
    
  </entry>
  
  <entry>
    <title>Propertoes类、缓冲流、转换流、序列化流、装饰者模式、commons-io工具包</title>
    <link href="http://sunmoon.com/2020/08/06/Propertoes%E7%B1%BB%E3%80%81%E7%BC%93%E5%86%B2%E6%B5%81%E3%80%81%E8%BD%AC%E6%8D%A2%E6%B5%81%E3%80%81%E5%BA%8F%E5%88%97%E5%8C%96%E6%B5%81%E3%80%81%E8%A3%85%E9%A5%B0%E8%80%85%E6%A8%A1%E5%BC%8F%E3%80%81commons-io%E5%B7%A5%E5%85%B7%E5%8C%85/"/>
    <id>http://sunmoon.com/2020/08/06/Propertoes%E7%B1%BB%E3%80%81%E7%BC%93%E5%86%B2%E6%B5%81%E3%80%81%E8%BD%AC%E6%8D%A2%E6%B5%81%E3%80%81%E5%BA%8F%E5%88%97%E5%8C%96%E6%B5%81%E3%80%81%E8%A3%85%E9%A5%B0%E8%80%85%E6%A8%A1%E5%BC%8F%E3%80%81commons-io%E5%B7%A5%E5%85%B7%E5%8C%85/</id>
    <published>2020-08-06T11:44:21.000Z</published>
    <updated>2020-08-28T14:26:19.211Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、IO资源的处理"><a href="#一、IO资源的处理" class="headerlink" title="一、IO资源的处理"></a>一、IO资源的处理</h2><h3 id="1-1-JDK7之前的处理"><a href="#1-1-JDK7之前的处理" class="headerlink" title="1.1 JDK7之前的处理"></a>1.1 JDK7之前的处理</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo01Exception</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Writer w = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">             w = <span class="keyword">new</span> FileWriter(<span class="string">"xxx\\file01.txt"</span>);</span><br><span class="line">             w.write(<span class="string">"你好"</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="comment">//判断w不是null，那么才表示流成功创建了，那么才关闭</span></span><br><span class="line">                <span class="keyword">if</span> (w != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    w.close();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="1-2-JDK7的处理"><a href="#1-2-JDK7的处理" class="headerlink" title="1.2 JDK7的处理"></a>1.2 JDK7的处理</h3><p>在JDK7的时候，多了一种try…with…resource语句，可以快捷的处理IO流中的异常以及施放资源的问题。</p><p>格式：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>(创建流对象的代码)&#123;</span><br><span class="line"></span><br><span class="line">&#125; <span class="keyword">catch</span>(类名 变量名)&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>在try小括号中创建的流对象，只要流对象创建出来了，肯定会自动调用close方法，关闭流。</p><p>小括号中也可以创建多个对象，多个对象之间用分号隔开。</p></blockquote><p>使用示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo02Exception</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//小括号中创建的流对象，整个try...catch执行完后，会自动调用close方法</span></span><br><span class="line">        <span class="keyword">try</span> (Writer w = <span class="keyword">new</span> FileWriter(<span class="string">"xxx\\file02.txt"</span>);)&#123;</span><br><span class="line">            w.write(<span class="string">"hello"</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>小贴士：</p><p>在try小括号中创建的对象，必须实现AutoCloseable接口。</p></blockquote><h2 id="二、Properties类-属性集"><a href="#二、Properties类-属性集" class="headerlink" title="二、Properties类(属性集)"></a>二、Properties类(属性集)</h2><p>Properties是一个双列集合，也叫做属性集。</p><p>特点：</p><ul><li>Properties实现类Map接口，拥有Map接口中所有的方法</li><li>Properties没有泛型，键和值都是字符串</li><li>Properties可以从流中(文件中)中读取键值对</li></ul><p>构造方法：</p><ul><li><code>Properties()</code>:空参的构造方法</li></ul><p>其他方法：</p><ul><li><code>Object setProperty(String key, String value)</code>:添加键值对</li><li><code>String getProperty(String key)</code>:根据键获取值</li><li><code>Set&lt;String&gt; stringPropertyNames()</code>：获取所有键并放入Set集合中返回</li></ul><p>使用示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo01Properties</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Properties p = <span class="keyword">new</span> Properties();</span><br><span class="line">        <span class="comment">//添加键值对</span></span><br><span class="line">        p.setProperty(<span class="string">"s001"</span>,<span class="string">"hehe"</span>);</span><br><span class="line">        p.setProperty(<span class="string">"s002"</span>,<span class="string">"haha"</span>);</span><br><span class="line">        p.setProperty(<span class="string">"s003"</span>,<span class="string">"heihei"</span>);</span><br><span class="line">        <span class="comment">//输出Properties</span></span><br><span class="line">        System.out.println(p);</span><br><span class="line">        <span class="comment">//根据键获取值</span></span><br><span class="line">        System.out.println(p.getProperty(<span class="string">"s001"</span>));</span><br><span class="line">        System.out.println(p.getProperty(<span class="string">"s002"</span>));</span><br><span class="line">        <span class="comment">//Set&lt;String&gt; stringPropertyNames()：获取所有键并放入Set集合中返回</span></span><br><span class="line">        Set&lt;String&gt; keys = p.stringPropertyNames();</span><br><span class="line">        <span class="keyword">for</span> (String key : keys) &#123;</span><br><span class="line">            System.out.println(key + <span class="string">"-"</span> + p.getProperty(key));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-1-Properties有关流的方法"><a href="#2-1-Properties有关流的方法" class="headerlink" title="2.1 Properties有关流的方法"></a>2.1 Properties有关流的方法</h3><p>Properties有关流的方法，<strong>可以从文件中获取键值对</strong>：</p><ul><li><code>void load(InputStream inStream)</code>：参数需要传递字节输入流</li><li><code>void load(Reader reader)</code>：参数需要传递字符输入流</li></ul><blockquote><p>load方法可以传递输入流，该输入流绑定的文件是什么，就可以从该文件中加载(读取)键值对</p></blockquote><p><strong>使用load方法读取文件的要求</strong>：</p><ul><li>文件一般以<code>【.properties】</code>结尾(<strong>软性要求</strong>，properties文件也叫做配置文件)</li><li>文件中的键值对必须按照指定格式存放(<strong>硬性要求</strong>)<ul><li>例如：<ul><li>键 = 值(username = jack)</li><li>键和值之间用=号隔开，每个键值对换一行</li></ul></li></ul></li></ul><p>使用示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">文件内容：</span><br><span class="line">username = JJ</span><br><span class="line">password = <span class="number">123456</span></span><br><span class="line">gender = man</span><br><span class="line">    </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo02Properties</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="comment">//创建Properties对象</span></span><br><span class="line">        Properties p = <span class="keyword">new</span> Properties();</span><br><span class="line">        <span class="comment">//创建输入流，绑定文件</span></span><br><span class="line">        InputStream is = <span class="keyword">new</span> FileInputStream(<span class="string">"xxx\\prop.properties"</span>);</span><br><span class="line">        <span class="comment">//在家文件到Properties中</span></span><br><span class="line">        p.load(is);</span><br><span class="line">        <span class="comment">//输出</span></span><br><span class="line">        System.out.println(p);</span><br><span class="line">        <span class="comment">//关闭流</span></span><br><span class="line">        is.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="三、ResourceBundle"><a href="#三、ResourceBundle" class="headerlink" title="三、ResourceBundle"></a>三、ResourceBundle</h2><p>除了Properties之外，在Java中还提供了<strong>ResourceBundle用来读取properties配置文件</strong>中的内容。</p><p><strong>ResourceBundle操作更简便。</strong></p><p>ResourceBundle是一个<strong>抽象类</strong>，如果要用，需要使用子类，他的子类对象不是需要我们new的，而是要通过ResourceBundle的<strong>静态方法获取</strong>的。</p><p><strong>ResourceBundle获取对象的方法</strong>：</p><ul><li><code>static ResourceBundle getBundle(String baseName)</code>：获取ResourceBundle子类对象，参数表示要操作的配置文件</li></ul><blockquote><p>ResourceBundle对<strong>配置文件位置</strong>的要求：</p><ul><li>ResourceBundle读取的properties文件必须放在src目录下，在调用getBundle传递文件路径时，不要带扩展名。</li></ul></blockquote><p><strong>ResourceBundle其他方法</strong>：</p><ul><li><code>String getString(Stirring key)</code>：根据键获取值。</li></ul><p><strong>使用示例</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo01ResourceBundle</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">//获取ResourceBundle对象，参数传递配置文件名。</span></span><br><span class="line">        ResourceBundle bundle = ResourceBundle.getBundle(<span class="string">"target"</span>);</span><br><span class="line">        System.out.println(bundle.getString(<span class="string">"username"</span>));</span><br><span class="line">        System.out.println(bundle.getString(<span class="string">"password"</span>));</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="四、缓冲流"><a href="#四、缓冲流" class="headerlink" title="四、缓冲流"></a>四、缓冲流</h2><h3 id="4-1-概述"><a href="#4-1-概述" class="headerlink" title="4.1 概述"></a>4.1 概述</h3><p>缓冲流,也叫高效流，是对4个基本的FileXxx流的增强，所以也是4个流，按照数据类型分类：</p><ul><li>字节缓冲流<ul><li>字节输入缓冲流：<code>BufferedInputStream</code></li><li>字节输出缓冲流：<code>BufferedOutputStream</code></li></ul></li><li>字符缓冲流<ul><li>字符输入缓冲流：<code>BufferedReader</code></li><li>字符输出缓冲流：<code>BufferedWriter</code></li></ul></li></ul><blockquote><p>小贴士：</p><ul><li>缓冲流的特点是效率高，缓冲流内部有一个缓冲区，可以提高效率【缓冲区使用的就是数组】</li><li>缓冲流本身并不具备读或写的功能，它的作用是给其他流提供加速</li></ul></blockquote><h3 id="4-2-字节缓冲流"><a href="#4-2-字节缓冲流" class="headerlink" title="4.2 字节缓冲流"></a>4.2 字节缓冲流</h3><p><strong>构造方法：</strong></p><ul><li><code>BufferedInputStream(InputStream in)</code>：参数需要传递一个字节输入流</li><li><code>BufferedOutputStream(OutputStream out)</code>：参数需要传递一个字节输出流</li></ul><p><strong>字节缓冲流的使用方式、方法和字节流的方法相同。</strong></p><p><strong>效率对比及使用示例：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//使用普通字节流一次读写一个字节的方式复制文件</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo01Copy</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        InputStream is = <span class="keyword">new</span> FileInputStream(<span class="string">"xxx\\1.png"</span>);</span><br><span class="line">        OutputStream os = <span class="keyword">new</span> FileOutputStream(<span class="string">"xxx\\1_new.png"</span>);</span><br><span class="line">        <span class="keyword">int</span> i;</span><br><span class="line">        <span class="keyword">long</span> start = System.currentTimeMillis();</span><br><span class="line">        <span class="keyword">while</span> ((i = is.read()) != -<span class="number">1</span>)&#123;</span><br><span class="line">            os.write(i);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">long</span> end = System.currentTimeMillis();</span><br><span class="line">        System.out.println(<span class="string">"共耗时:"</span> + (end-start));<span class="comment">//大概需要15000ms完成复制</span></span><br><span class="line">        os.close();</span><br><span class="line">        is.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//使用字节缓冲流一次读取一个字节的方式复制文件</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo02BufferedStream</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        BufferedInputStream bis = <span class="keyword">new</span> BufferedInputStream(<span class="keyword">new</span> FileInputStream(<span class="string">"xxx\\1.png"</span>));</span><br><span class="line">        BufferedOutputStream bos = <span class="keyword">new</span> BufferedOutputStream(<span class="keyword">new</span> FileOutputStream(<span class="string">"xxx\\1_new.png"</span>));</span><br><span class="line">        <span class="keyword">int</span> i;</span><br><span class="line">        <span class="keyword">long</span> start = System.currentTimeMillis();</span><br><span class="line">        <span class="keyword">while</span> ((i = bis.read()) != -<span class="number">1</span>)&#123;</span><br><span class="line">            bos.write(i);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">long</span> end = System.currentTimeMillis();</span><br><span class="line">        System.out.println(end-start);<span class="comment">//大概需要100ms完成复制</span></span><br><span class="line">        bos.close();</span><br><span class="line">        bis.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//使用字节缓冲流结合字节数组的方式复制文件</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo03BufferedStream</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        BufferedInputStream bis = <span class="keyword">new</span> BufferedInputStream(<span class="keyword">new</span> FileInputStream(<span class="string">"xxx\\1.png"</span>));</span><br><span class="line">        BufferedOutputStream bos = <span class="keyword">new</span> BufferedOutputStream(<span class="keyword">new</span> FileOutputStream(<span class="string">"xxx\\1_new.png"</span>));</span><br><span class="line">        <span class="keyword">byte</span>[] bytes = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">        <span class="keyword">int</span> len;</span><br><span class="line">        <span class="keyword">long</span> start = System.currentTimeMillis();</span><br><span class="line">        <span class="keyword">while</span> ((len = bis.read(bytes)) != -<span class="number">1</span>)&#123;</span><br><span class="line">            bos.write(bytes,<span class="number">0</span>,len);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">long</span> end = System.currentTimeMillis();</span><br><span class="line">        System.out.println(end-start);<span class="comment">//大概需要10ms完成复制</span></span><br><span class="line">        bos.close();</span><br><span class="line">        bis.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>对比上面三种方式复制文件，可以得知，效率是越来愈高的，使用缓冲流进行文件的操作可以很大程度的提高效率。</p></blockquote><h3 id="4-3-字符缓冲流"><a href="#4-3-字符缓冲流" class="headerlink" title="4.3 字符缓冲流"></a>4.3 字符缓冲流</h3><p>构造方法：</p><ul><li><code>BufferedReader(Reader in)</code>：参数需要传递字符输入流</li><li><code>BufferedWriter(Writer out)</code>：参数需要传递字符输出流</li></ul><p><strong>字节缓冲流的使用方式、方法和字节流的方法相同。</strong></p><p>字符缓冲流中的特有方法：</p><ul><li>在BufferedWriter里面有一个方法newLine(),可以实现跨平台的换行<ul><li><code>void newLine()</code>:写一个换行，这个换行是跨平台的</li></ul></li><li>在BufferedReader里面有一个方法readLine()，可以读一行数据<ul><li><code>String readLine()</code>：一次读取一行数据，并以字符串形式返回读取到的数据。如果已经读取结束了，返回值是null</li></ul></li></ul><p>使用示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo04BufferedStream</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        method1();</span><br><span class="line">        method2();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * String readLine():一次读取一行数据，并以字符串形式返回读取到的数据。如果已经读取结束了，返回值是null</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> IOException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">method2</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        BufferedReader br = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> FileReader(<span class="string">"xxx\\file03.txt"</span>));</span><br><span class="line">        String s;</span><br><span class="line">        <span class="keyword">while</span> ((s = br.readLine()) != <span class="keyword">null</span>)&#123;</span><br><span class="line">            System.out.println(s);</span><br><span class="line">        &#125;</span><br><span class="line">        br.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * void newLine():写一个换行，这个换行是跨平台的</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> IOException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">method1</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        BufferedWriter bw = <span class="keyword">new</span> BufferedWriter(<span class="keyword">new</span> FileWriter(<span class="string">"xxx\\file03.txt"</span>));</span><br><span class="line">        bw.write(<span class="string">"窗前明月光，"</span>);</span><br><span class="line">        bw.newLine();</span><br><span class="line">        bw.write(<span class="string">"疑是地上霜。"</span>);</span><br><span class="line">        bw.flush();</span><br><span class="line">        bw.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-4-练习——文本排序"><a href="#4-4-练习——文本排序" class="headerlink" title="4.4 练习——文本排序"></a>4.4 练习——文本排序</h3><p>需求：使用缓冲流读取文章内容依据文章开始的序号完成下面文章内容的排序，然后写入到新文件中。(下面的文字内容由序号开始每段内容单独占一行)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3</span>.侍中、侍郎郭攸之、费祎、董允等，此皆良实，志虑忠纯，是以先帝简拔以遗陛下。愚以为宫中之事，事无大小，悉以咨之，然后施行，必得裨补阙漏，有所广益。</span><br><span class="line"><span class="number">8</span>.愿陛下托臣以讨贼兴复之效，不效，则治臣之罪，以告先帝之灵。若无兴德之言，则责攸之、祎、允等之慢，以彰其咎；陛下亦宜自谋，以咨诹善道，察纳雅言，深追先帝遗诏，臣不胜受恩感激。</span><br><span class="line"><span class="number">4</span>.将军向宠，性行淑均，晓畅军事，试用之于昔日，先帝称之曰能，是以众议举宠为督。愚以为营中之事，悉以咨之，必能使行阵和睦，优劣得所。</span><br><span class="line"><span class="number">2</span>.宫中府中，俱为一体，陟罚臧否，不宜异同。若有作奸犯科及为忠善者，宜付有司论其刑赏，以昭陛下平明之理，不宜偏私，使内外异法也。</span><br><span class="line"><span class="number">1</span>.先帝创业未半而中道崩殂，今天下三分，益州疲弊，此诚危急存亡之秋也。然侍卫之臣不懈于内，忠志之士忘身于外者，盖追先帝之殊遇，欲报之于陛下也。诚宜开张圣听，以光先帝遗德，恢弘志士之气，不宜妄自菲薄，引喻失义，以塞忠谏之路也。</span><br><span class="line"><span class="number">9</span>.今当远离，临表涕零，不知所言。</span><br><span class="line"><span class="number">6</span>.臣本布衣，躬耕于南阳，苟全性命于乱世，不求闻达于诸侯。先帝不以臣卑鄙，猥自枉屈，三顾臣于草庐之中，咨臣以当世之事，由是感激，遂许先帝以驱驰。后值倾覆，受任于败军之际，奉命于危难之间，尔来二十有一年矣。</span><br><span class="line"><span class="number">7</span>.先帝知臣谨慎，故临崩寄臣以大事也。受命以来，夙夜忧叹，恐付托不效，以伤先帝之明，故五月渡泸，深入不毛。今南方已定，兵甲已足，当奖率三军，北定中原，庶竭驽钝，攘除奸凶，兴复汉室，还于旧都。此臣所以报先帝而忠陛下之职分也。至于斟酌损益，进尽忠言，则攸之、祎、允之任也。</span><br><span class="line"><span class="number">5</span>.亲贤臣，远小人，此先汉所以兴隆也；亲小人，远贤臣，此后汉所以倾颓也。先帝在时，每与臣论此事，未尝不叹息痛恨于桓、灵也。侍中、尚书、长史、参军，此悉贞良死节之臣，愿陛下亲之信之，则汉室之隆，可计日而待也。</span><br></pre></td></tr></table></figure><p>代码实现：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo05Test</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="comment">//1.创建集合，用来保存读取到的每行课文。</span></span><br><span class="line">        List&lt;String&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="comment">//2.创建字符输入缓冲流，用来读取。</span></span><br><span class="line">        BufferedReader br = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> FileReader(<span class="string">"xxx\\in.txt"</span>));</span><br><span class="line">        String line;</span><br><span class="line">        <span class="comment">//3.开始读取，一次读取一行</span></span><br><span class="line">        <span class="keyword">while</span> ((line = br.readLine()) != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="comment">//4.将读取到的的这行数据添加到集和中</span></span><br><span class="line">            list.add(line);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//5.关闭流</span></span><br><span class="line">        br.close();</span><br><span class="line">        <span class="comment">//6.根据首个字符对集合中的内容进行排序</span></span><br><span class="line">        Collections.sort(list, (o1, o2) -&gt; o1.charAt(<span class="number">0</span>) - o2.charAt(<span class="number">0</span>));</span><br><span class="line">        <span class="comment">//7.创建字符输出缓冲流，用来写</span></span><br><span class="line">        BufferedWriter bw = <span class="keyword">new</span> BufferedWriter(<span class="keyword">new</span> FileWriter(<span class="string">"xxx\\out.txt"</span>));</span><br><span class="line">        <span class="comment">//8.遍历集合，拿到集合中的每一个元素</span></span><br><span class="line">        <span class="keyword">for</span> (String strLine : list) &#123;</span><br><span class="line">            <span class="comment">//9.将遍历到的元素写到目的地文件</span></span><br><span class="line">            bw.write(strLine);</span><br><span class="line">            <span class="comment">//10.换行</span></span><br><span class="line">            bw.newLine();</span><br><span class="line">            <span class="comment">//11.刷新流</span></span><br><span class="line">            bw.flush();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//12.关闭流</span></span><br><span class="line">        bw.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="五、转换流"><a href="#五、转换流" class="headerlink" title="五、转换流"></a>五、转换流</h2><h3 id="5-1-字符编码和字符集"><a href="#5-1-字符编码和字符集" class="headerlink" title="5.1 字符编码和字符集"></a>5.1 字符编码和字符集</h3><p>编码和解码：</p><ul><li>编码：字符 -&gt; 字节</li><li>解码；字节 -&gt; 字符</li></ul><p>字符编码Character Encoding : 就是一套自然语言的字符与二进制数之间的对应规则。</p><p>字符集Charset：也叫编码表。是一个系统支持的所有字符的集合，包括各国家文字、标点符号、图形符号、数字等。</p><table><thead><tr><th>字符集</th><th>占用字节数</th><th>描述</th></tr></thead><tbody><tr><td>ASCII码表</td><td>1字节</td><td>有128个英文字母数字以及标点符号。</td></tr><tr><td>ISO8859-1(Latin)</td><td>1字节</td><td>有256个内容。包含了ASCII码表的内容以及拉丁文。</td></tr><tr><td>GB2312(1980)</td><td>1或2字节</td><td>支持六千多个汉字或者字符</td></tr><tr><td>BIG5</td><td>1或2字节</td><td>支持繁体字</td></tr><tr><td>GBK</td><td>1或2字节</td><td>支持两万多汉字或者字符。</td></tr></tbody></table><p>国际标准码表(unicode)：unicode中可以保存任何国家的任何语言，在unicode中每个字符都是使用两个字节保存的。在unicode8.0版本，甚至保存emoji。</p><p>万国码：UTF-8</p><ul><li>UTF-32：每一个字符都使用4个字节保存。</li><li>UTF-16：每一个字符都使用2或3或4个字节保存。</li><li>UTF-8：每一个字符都使用1或2或3或4个字节保存。</li></ul><blockquote><p>在GBK中每一个汉字占2个字节。</p><p>在UTF-8编码中每一个汉字占3个字节。</p></blockquote><blockquote><p>小贴士：</p><ul><li>在IDEA中，使用的默认编码是UTF-8</li><li>在windows中， 使用的默认编码是UTF-8（最近win10更新，新版本的win10默认编码已经变成utf-8）</li></ul></blockquote><h3 id="5-2-编码引出的问题"><a href="#5-2-编码引出的问题" class="headerlink" title="5.2 编码引出的问题"></a>5.2 编码引出的问题</h3><p>下面代码使用FileReader读取GBK文件的内容。</p><p>FileReader会使用idea默认编码UTF-8方式进行读取，此时文件的编码是GBK，两种编码不一致，于是产生了问题。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo01FileReader</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">        FileReader fr = <span class="keyword">new</span> FileReader(<span class="string">"E:\\file_test\\cc.txt"</span>);</span><br><span class="line">        <span class="keyword">int</span> read = fr.read();</span><br><span class="line">        System.out.println((<span class="keyword">char</span>) read);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>如果要指定编码进行读取，那么就可以使用转换流去做。</p></blockquote><h3 id="5-3-InputStreamReader"><a href="#5-3-InputStreamReader" class="headerlink" title="5.3 InputStreamReader"></a>5.3 InputStreamReader</h3><p><strong>InputStreamReader</strong>是转换流，用来<strong>读</strong>，可以按照<strong>指定编码</strong>将文件中的数据读取到Java程序中。</p><ul><li>InputStreamReader是字符流，会以字符为单位进行读取</li></ul><p>构造方法：</p><ul><li><code>InputStreamReader(InputStream in)</code>：参数需要传递一个字节输入流，使用该构造方法创建的转换流对象会使用idea默认的编码(utf-8)进行读取</li><li><code>InputStreamReader(InputStream in , String charsetName)</code>：第一个参数是字节输入流，第二个蚕食是编码方式。可以指定编码进行读取</li></ul><p><strong>InputStreamReader是使用方式和字符流的使用方式一样</strong></p><p>使用示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo02InoutStreamReader</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="comment">// readGBK();</span></span><br><span class="line">        readUTF8();</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//读取utf-8文件</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">readUTF8</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="comment">// InputStreamReader isr = new InputStreamReader(new FileInputStream("E:\\file_test\\file02-utf8.txt"),"utf8");</span></span><br><span class="line">        InputStreamReader isr = <span class="keyword">new</span> InputStreamReader(<span class="keyword">new</span> FileInputStream(<span class="string">"E:\\file_test\\file02-utf8.txt"</span>));</span><br><span class="line">        <span class="keyword">int</span> i;</span><br><span class="line">        <span class="keyword">while</span> ((i = isr.read()) != -<span class="number">1</span>)&#123;</span><br><span class="line">            System.out.println((<span class="keyword">char</span>) i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//读取GBK文件</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">readGBK</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        InputStreamReader isr = <span class="keyword">new</span> InputStreamReader(<span class="keyword">new</span> FileInputStream(<span class="string">"E:\\file_test\\file01-gbk.txt"</span>),<span class="string">"GBK"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> i;</span><br><span class="line">        <span class="keyword">while</span> ((i = isr.read()) != -<span class="number">1</span>)&#123;</span><br><span class="line">            System.out.println((<span class="keyword">char</span>) i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-4-OutputStreamWriter"><a href="#5-4-OutputStreamWriter" class="headerlink" title="5.4 OutputStreamWriter"></a>5.4 OutputStreamWriter</h3><p><strong>OutputStreamWriter</strong>是一个转换流，用来<strong>写</strong>，可以将Java程序中的数据按照<strong>指定编码</strong>写到文件中。</p><ul><li>OutputStreamWriter是一个字符流，会以字符为单位写数据</li></ul><p>构造方法：</p><ul><li><code>OutputStreamWriter(OutputStream out)</code>:参数要传递字节输出流。会使用idea默认的编码(utf-8)进行写操作</li><li><code>OutputStreamWriter(OutputStream out, String charsetName)</code>:第一个参数要传递字节输出流，第二个参数表示编码方式。会使用指定的编码进行写操作</li></ul><p><strong>OutputStreamWriter和字符流写数据的方法一样</strong></p><p>使用示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo03OutputStreamWriter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        writeGBK();</span><br><span class="line">        writeUTF8();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">writeUTF8</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="comment">// OutputStreamWriter osw = new OutputStreamWriter(new FileOutputStream("E:\\file_test\\writeUTF8.txt"),"UTF8");</span></span><br><span class="line">        OutputStreamWriter osw = <span class="keyword">new</span> OutputStreamWriter(<span class="keyword">new</span> FileOutputStream(<span class="string">"E:\\file_test\\writeUTF8.txt"</span>));</span><br><span class="line">        osw.write(<span class="string">"你好"</span>);</span><br><span class="line">        osw.flush();</span><br><span class="line">        osw.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">writeGBK</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        OutputStreamWriter osw = <span class="keyword">new</span> OutputStreamWriter(<span class="keyword">new</span> FileOutputStream(<span class="string">"E:\\file_test\\writeGBK.txt"</span>),<span class="string">"GBK"</span>);</span><br><span class="line">        osw.write(<span class="string">"你好"</span>);</span><br><span class="line">        osw.flush();</span><br><span class="line">        osw.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="六、序列化"><a href="#六、序列化" class="headerlink" title="六、序列化"></a>六、序列化</h2><h3 id="6-1-概述"><a href="#6-1-概述" class="headerlink" title="6.1 概述"></a>6.1 概述</h3><p><strong>序列化</strong>：把对象信息持久化存储到硬盘中，保存为一个文件。</p><p><strong>反序列化</strong>：读取保存在硬盘中的文件，进行反序列化，获取对象的信息。</p><h3 id="6-2-ObjectOutputStream类"><a href="#6-2-ObjectOutputStream类" class="headerlink" title="6.2 ObjectOutputStream类"></a>6.2 ObjectOutputStream类</h3><p><strong>ObjectOutputStream</strong>是<strong>序列化流</strong>，可以将Java程序中的对象序列化到文件中。</p><p>构造方法：</p><ul><li><code>ObjectOutputStream(OutputStream out)</code>：参数需要传递字节输出流</li></ul><p>ObjectOutputStream写对象的方法【<strong>特有方法</strong>】</p><ul><li><code>void writeObject(Object obj)</code>：向文件中写对象</li></ul><p>使用示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo01ObjectOutputStream</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        ObjectOutputStream oos = <span class="keyword">new</span> ObjectOutputStream(<span class="keyword">new</span> FileOutputStream(<span class="string">"xxx\\file01-obj.txt"</span>));</span><br><span class="line">        Person p = <span class="keyword">new</span> Person(<span class="string">"张三"</span>,<span class="number">15</span>);</span><br><span class="line">        oos.writeObject(p);</span><br><span class="line">        oos.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Person类略....</span><br></pre></td></tr></table></figure><blockquote><p>注意!!!</p><ul><li>想要进行序列化的接口必须实现Serializable接口</li></ul><p>Serializable：序列化接口</p><ul><li>Serializable里面没有任何东西，这个接口只是起到一个标记作用，必须实现接口，那么类的对象才可以被序列化，才可以写到文件中</li></ul></blockquote><h3 id="6-3-ObjectInputStream类"><a href="#6-3-ObjectInputStream类" class="headerlink" title="6.3 ObjectInputStream类"></a>6.3 ObjectInputStream类</h3><p>ObjectInputStream是反序列化流，可以将文件中的对象读取到Java程序中</p><p>构造方法：</p><ul><li><code>ObjectInputStream(InputStream in)</code>：参数传递一个字节输入流</li></ul><p>ObjectInputStream读对象的方法【<strong>特有方法</strong>】</p><ul><li><code>Object readObject()</code>:从文件中读取对象</li></ul><p>使用示例</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo02ObjectInputStream</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException, ClassNotFoundException </span>&#123;</span><br><span class="line">        ObjectInputStream ois = <span class="keyword">new</span> ObjectInputStream(<span class="keyword">new</span> FileInputStream(<span class="string">"xxx\\file01-obj.txt"</span>));</span><br><span class="line">        Object obj = ois.readObject();</span><br><span class="line"></span><br><span class="line">        System.out.println((Person)obj);</span><br><span class="line">        ois.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>注意：</p><p>如果使用反序列化流读取数据，如果读取的对象所属的类不存在，那么会报错[<strong>ClassNotFoundException</strong>]</p></blockquote><h3 id="6-4-序列化中注意事项"><a href="#6-4-序列化中注意事项" class="headerlink" title="6.4 序列化中注意事项"></a>6.4 序列化中注意事项</h3><p><strong>static</strong>和<strong>transient</strong>关键字</p><ul><li>被static修饰的属性不能被序列化。被static修饰的属性属于类，不属于对象，而序列化操作写的是对象。</li><li>如果我们不希望某个属性被序列化，同时不希望使用static关键字，那么可以使用transient。<ul><li>transient表示瞬态，被transient修饰的属性无法被序列化。</li></ul></li></ul><p>例如：</p><ul><li><p><code>private transient int age;</code></p></li><li><p><code>private static int age;</code></p></li></ul><h3 id="6-5-序列化中的序列号"><a href="#6-5-序列化中的序列号" class="headerlink" title="6.5 序列化中的序列号"></a>6.5 序列化中的序列号</h3><p><strong>问题</strong>：在进行反序列的的时候，从文件中读取对象时，会对比文件中保存的版本号和class文件中的版本号是否一致，如果不一致，就会报错。如果要解决版本号冲突问题，我们可以给类固定一个版本号，不管该类怎么修改，版本号都不变。这样就解决了问题。</p><p><strong>解决方法</strong>：可以在类中提供一个常量<code>serialVersionUID</code>，该常量就表示类的版本号，我们可以自己手动提供版本号。</p><p>定义<code>serialVersionUID</code>要求：</p><ul><li>必须被<code>private static final</code> 修饰</li><li>必须是<code>long</code>类型的</li><li>名字必须叫做<code>serialVersionUID</code></li></ul><h3 id="6-6-练习"><a href="#6-6-练习" class="headerlink" title="6.6 练习"></a>6.6 练习</h3><p>要求：</p><ul><li>将存有多个学生对象的集合序列化，保存到list.txt中</li><li>反序列化，并遍历集合，打印对象信息</li></ul><p>代码实现：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line">    </span><br><span class="line">    get/set/构造方法略...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>注意：Student类也需要实现Serilizable接口</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo05Test</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException, ClassNotFoundException </span>&#123;</span><br><span class="line">        <span class="comment">//1.创建集合，用来保存学生</span></span><br><span class="line">        List&lt;Student&gt; stuList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="comment">//2.添加学生</span></span><br><span class="line">        stuList.add(<span class="keyword">new</span> Student(<span class="string">"张三"</span>,<span class="number">18</span>));</span><br><span class="line">        stuList.add(<span class="keyword">new</span> Student(<span class="string">"李四"</span>,<span class="number">19</span>));</span><br><span class="line">        stuList.add(<span class="keyword">new</span> Student(<span class="string">"王五"</span>,<span class="number">20</span>));</span><br><span class="line">        <span class="comment">//3.创建ObjectOutputStream序列化流，用来写对象</span></span><br><span class="line">        ObjectOutputStream oos = <span class="keyword">new</span> ObjectOutputStream(<span class="keyword">new</span> FileOutputStream(<span class="string">"xxx\\stuList.txt"</span>));</span><br><span class="line">        <span class="comment">//4.调用write方法，将集合写到文件中</span></span><br><span class="line">        oos.writeObject(stuList);</span><br><span class="line">        <span class="comment">//5.释放资源</span></span><br><span class="line">        oos.close();</span><br><span class="line">        <span class="comment">//6.创建ObjectInputStream反序列化流，用来读</span></span><br><span class="line">        ObjectInputStream ois = <span class="keyword">new</span> ObjectInputStream(<span class="keyword">new</span> FileInputStream(<span class="string">"xxx\\stuList.txt"</span>));</span><br><span class="line">        <span class="comment">//7.调用readObject方法读取对象</span></span><br><span class="line">        List&lt;Student&gt; list = (List&lt;Student&gt;) ois.readObject();</span><br><span class="line">        <span class="comment">//8.释放资源</span></span><br><span class="line">        ois.close();</span><br><span class="line">        <span class="comment">//9.遍历读取到的集合中的对象，输出里面的信息</span></span><br><span class="line">        <span class="keyword">for</span> (Student student : list) &#123;</span><br><span class="line">            System.out.println(student);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="七、打印流"><a href="#七、打印流" class="headerlink" title="七、打印流"></a>七、打印流</h2><p><code>PrintStream</code>是打印流。</p><p>打印流特点：</p><ul><li>只有输出，没有输入</li><li>打印流写数据十分方便</li></ul><p>构造方法：</p><ul><li><code>PrintStream(String fileName)</code>：参数需要传递字符串类型的文件路径</li><li><code>PrintStream(File file)</code>：参数需要传递File类型的文件</li><li><code>PrintStream(OutputStream out)</code>：参数需要传递字节输出流</li></ul><p>特有方法：</p><ul><li><code>void print(任何类型)</code>:写数据</li><li><code>void println(任何类型)</code>:写数据并换行</li></ul><p>使用示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo01PrintStream</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> FileNotFoundException </span>&#123;</span><br><span class="line">        PrintStream ps = <span class="keyword">new</span> PrintStream(<span class="string">"xxx\\file06.txt"</span>);</span><br><span class="line">        <span class="comment">// ps.print("你好");</span></span><br><span class="line">        <span class="comment">// ps.print("你也蛮好的");</span></span><br><span class="line">        ps.println(<span class="number">97</span>);</span><br><span class="line">        ps.println(<span class="number">98</span>);</span><br><span class="line">        ps.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>注意：打印流在打印上面97、98的时候，直接写的是数字97、98。不像字节流出现a、b</p></blockquote><h3 id="7-1-扩展"><a href="#7-1-扩展" class="headerlink" title="7.1 扩展"></a>7.1 扩展</h3><p><code>System.out.println</code>中的<code>System.out</code>就是打印流</p><p><code>System.out</code>叫做<code>标准输出流</code>，该流的目的地是控制台。</p><p>可以通过System中的静态方法叫做<code>setOut()</code>改变这个标准输出流的目的地</p><ul><li><code>static void setOut(PrintStream out)</code>：重新分配”标准“输出流。参数PrintStream目的地是什么，将来System.out的目的地就是什么</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo02PrintStream</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> FileNotFoundException </span>&#123;</span><br><span class="line">        PrintStream ps = <span class="keyword">new</span> PrintStream(<span class="string">"xxx\\file07.txt"</span>);</span><br><span class="line">        System.setOut(ps);</span><br><span class="line">        System.out.println(<span class="string">"HelloWorld!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="八、装饰设计模式"><a href="#八、装饰设计模式" class="headerlink" title="八、装饰设计模式"></a>八、装饰设计模式</h2><p><strong>装饰器设计模式：在不改变原有类，并且不适用继承的前提下，对一个类进行增强。</strong></p><ul><li>装饰的类和被装饰的类要实现一个接口</li><li>在装饰的类中接收被装饰的对象</li><li>在需要增强的方法中直接写增强后的内容</li><li>如果某个方法不需要增强，直接通过被装饰的类调用该方法</li></ul><h3 id="8-1-Demo演示"><a href="#8-1-Demo演示" class="headerlink" title="8.1 Demo演示"></a>8.1 Demo演示</h3><p>要求：使用超级刘德华(装饰的类)对原来的类(被装饰的类)进行增强(对刘德华的功能进行扩展)</p><p>接口：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 明星接口</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Star</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 唱歌</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">sing</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 跳舞</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">dance</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>被装饰的类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LiuDeHua</span> <span class="keyword">implements</span> <span class="title">Star</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sing</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"刘德华在唱歌"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">dance</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"刘德华在跳舞"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>装饰者类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SuperLiuDeHua</span> <span class="keyword">implements</span> <span class="title">Star</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 接收被装饰(增强)的对象</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> LiuDeHua liuDeHua;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 提供构造方法，用来接收外界传递过来的liudehua对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> liuDeHua</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">SuperLiuDeHua</span><span class="params">(LiuDeHua liuDeHua)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.liuDeHua = liuDeHua;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 对唱歌方法进行增强</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sing</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"刘德华在鸟巢唱歌，下面很多粉丝尖叫~~~"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 不对跳舞的方法进行增强，直接通过刘德华调用跳舞的方法</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">dance</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        liuDeHua.dance();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo01Test</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        LiuDeHua l = <span class="keyword">new</span> LiuDeHua();</span><br><span class="line">        l.sing();</span><br><span class="line">        l.dance();</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 创建超级刘德华</span></span><br><span class="line"><span class="comment">         * 必须要传递要增强的对象，也就是一个普通的刘德华</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        SuperLiuDeHua superLiuDeHua = <span class="keyword">new</span> SuperLiuDeHua(l);</span><br><span class="line">        superLiuDeHua.sing();<span class="comment">//增强的方法</span></span><br><span class="line">        superLiuDeHua.dance();<span class="comment">//没有被增强</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="九、commons-io工具包"><a href="#九、commons-io工具包" class="headerlink" title="九、commons-io工具包"></a>九、commons-io工具包</h2><p>commons-io是由第三方(Apache)提供的对于IO流操作的工具包</p><p>如果要使用第三方工具包，一般需要导入jar包</p><blockquote><p>jar就是java的压缩包，里面会有很多的class文件，供我们使用</p><p>如果导入了jar包，这个jar包中的类就都可以使用了</p></blockquote><p>导入jar步骤：</p><ul><li>在当前模块下面新建一个文件夹lib</li><li>将jar包复制到lib文件夹下</li><li>模块上右键，点击 [add as library]</li></ul><h3 id="9-1-方法介绍"><a href="#9-1-方法介绍" class="headerlink" title="9.1 方法介绍"></a>9.1 方法介绍</h3><p>IOUtils里面的方法：</p><ul><li><code>static int copy(InputStream input, OutputStream output)</code>:把input输入流中的内容拷贝到output输出流中，返回拷贝的字节个数(适合文件大小为2GB以下)</li><li><code>static long copyLarge(InputStream input, OutputStream output)</code>:把input输入流中的内容拷贝到output输出流中，返回拷贝的字节个数(适合文件大小为2GB以上)</li></ul><p>FileUtils里面的方法：</p><ul><li><p><code>static void copyFileToDirectory(File srcFile, File destDir)</code> ：复制文件到另外一个目录下。srcFile表示要复制的文件，destDir表示要复制到的文件夹</p></li><li><p><code>static void copyDirectoryToDirectory(File srcDir , File destDir )</code>：复制srcDir目录到destDir位置。srcDir表示源文件夹，destDir表示目标文件夹</p></li></ul><p><strong>代码演示：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo01Test</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        IOUtils.copy(<span class="keyword">new</span> FileInputStream(<span class="string">"xxx\\1.png"</span>),<span class="keyword">new</span> FileOutputStream(<span class="string">"xxx\\2.png"</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、IO资源的处理&quot;&gt;&lt;a href=&quot;#一、IO资源的处理&quot; class=&quot;headerlink&quot; title=&quot;一、IO资源的处理&quot;&gt;&lt;/a&gt;一、IO资源的处理&lt;/h2&gt;&lt;h3 id=&quot;1-1-JDK7之前的处理&quot;&gt;&lt;a href=&quot;#1-1-JDK7之前的处理&quot; class=&quot;headerlink&quot; title=&quot;1.1 JDK7之前的处理&quot;&gt;&lt;/a&gt;1.1 JDK7之前的处理&lt;/h3&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Demo01Exception&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String[] args)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Writer w = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             w = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; FileWriter(&lt;span class=&quot;string&quot;&gt;&quot;xxx\\file01.txt&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             w.write(&lt;span class=&quot;string&quot;&gt;&quot;你好&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (IOException e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            e.printStackTrace();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; &lt;span class=&quot;keyword&quot;&gt;finally&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;//判断w不是null，那么才表示流成功创建了，那么才关闭&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (w != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    w.close();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (IOException e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                e.printStackTrace();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Java" scheme="http://sunmoon.com/categories/Java/"/>
    
    
      <category term="基础" scheme="http://sunmoon.com/tags/%E5%9F%BA%E7%A1%80/"/>
    
      <category term="学习" scheme="http://sunmoon.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="IO流" scheme="http://sunmoon.com/tags/IO%E6%B5%81/"/>
    
      <category term="设计模式" scheme="http://sunmoon.com/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
      <category term="装饰器模式" scheme="http://sunmoon.com/tags/%E8%A3%85%E9%A5%B0%E5%99%A8%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
</feed>
