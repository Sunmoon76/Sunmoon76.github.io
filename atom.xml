<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>清风的博客</title>
  
  <subtitle>山水有相逢，山不动，水不停</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://sunmoon.com/"/>
  <updated>2020-09-15T12:50:59.528Z</updated>
  <id>http://sunmoon.com/</id>
  
  <author>
    <name>Sunmoon</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Redis入门</title>
    <link href="http://sunmoon.com/2020/09/15/Redis%E5%85%A5%E9%97%A8/"/>
    <id>http://sunmoon.com/2020/09/15/Redis%E5%85%A5%E9%97%A8/</id>
    <published>2020-09-15T12:42:05.000Z</published>
    <updated>2020-09-15T12:50:59.528Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、NoSQL"><a href="#一、NoSQL" class="headerlink" title="一、NoSQL"></a>一、NoSQL</h2><h3 id="1-1-NoSQL介绍"><a href="#1-1-NoSQL介绍" class="headerlink" title="1.1 NoSQL介绍"></a>1.1 NoSQL介绍</h3><p>NoSQL，泛指非关系型的数据库，NoSQL即Not-Only SQL，它可以作为关系型数据库的良好补充。</p><p><img data-src="/img/NoSQL%E4%BB%8B%E7%BB%8D.png" alt="NoSQL介绍"></p><a id="more"></a><p><strong>为什么学习NoSQL？</strong></p><blockquote><p>互联网产品的特点：高并发、高可用、高性能、海量数据</p></blockquote><p><img data-src="/img/NoSQL%E7%9A%84%E5%BA%94%E7%94%A8.png" alt="NoSQL的应用"></p><blockquote><p>关系型数据库与NoSQL数据库并非对立而是互补的关系，即通常情况下使用关系型数据库，在适合<br>使用NoSQL的时候使用NoSQL数据库，NoSQL数据库对关系型数据库的不足进行弥补。  </p></blockquote><h3 id="2-2-NoSQL的主流产品"><a href="#2-2-NoSQL的主流产品" class="headerlink" title="2.2 NoSQL的主流产品"></a>2.2 NoSQL的主流产品</h3><table><thead><tr><th>分类</th><th>特点</th><th>代表产品</th></tr></thead><tbody><tr><td>键值存储</td><td>数据一般存在内存中，读写速度快(10w/s)，适合作为缓存服务</td><td>redis</td></tr><tr><td>文档型数据库</td><td>数据结构要求不严格，适合存储结构不确定或者价值较低的数据</td><td>mongdb</td></tr><tr><td>列存储数据库</td><td>查找速度快，更容易进行分布式扩展，适合作为文件存储服务</td><td>Hbase</td></tr><tr><td>图形数据库</td><td>使用“图结构”进行存储，适合做社交网络计算等等</td><td>Neo4j</td></tr></tbody></table><p><strong>图形数据库介绍</strong></p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">https://blog.csdn.net/xlgen157387/article/details/79085901</span></span><br></pre></td></tr></table></figure><blockquote><p>关系数据库，只需要学习一套SQL规范，就可以操作几乎所有关系数据库</p><p>非关系型数据库，每一种产品都是独立的，比如进行学会了redis、mongodb</p></blockquote><h2 id="二、Redis"><a href="#二、Redis" class="headerlink" title="二、Redis"></a>二、Redis</h2><h3 id="2-1-Redis介绍"><a href="#2-1-Redis介绍" class="headerlink" title="2.1 Redis介绍"></a>2.1 Redis介绍</h3><p>Redis（Remote Dictionary Server）是用C语言开发的一个开源的高性能键值对数据库。它的所有数据都是保存在<span style="color:red">内存中</span>的,这也就决定了其读写速度之快,是其它硬盘保存数据的系统所无法匹敌的。</p><p>官方曾经给出过一组测试数据，50个并发执行100000个请求: 读的速度是110000次/s,写的速度是81000次/s。</p><h3 id="2-2-Redis服务器安装和使用"><a href="#2-2-Redis服务器安装和使用" class="headerlink" title="2.2 Redis服务器安装和使用"></a>2.2 Redis服务器安装和使用</h3><p><strong>下载</strong></p><ul><li>Reids官网地址：<a href="http://redis.io" target="_blank" rel="noopener">http://redis.io</a></li><li>中文网地址：<a href="https://www.redis.net.cn/" target="_blank" rel="noopener">https://www.redis.net.cn/</a></li><li>GitHub地址：<a href="https://github.com/MSOpenTech/redis/tags" target="_blank" rel="noopener">https://github.com/MSOpenTech/redis/tags</a></li></ul><p><strong>安装</strong></p><ul><li>windows绿色版，解压即用</li></ul><p><strong>目录</strong></p><p><img data-src="/img/redis%E7%9B%AE%E5%BD%95.png" alt="redis目录"></p><table><thead><tr><th>目录或文件</th><th>作用</th></tr></thead><tbody><tr><td>redis-benchmark</td><td>性能测试工具</td></tr><tr><td>redis-check-aof</td><td>AOF文件修复工具</td></tr><tr><td>redis-check-dump</td><td>RDB文件检查工具（快照持久化文件）</td></tr><tr><td>redis-cli</td><td>命令行客户端</td></tr><tr><td>redis-server</td><td>启动redis服务器</td></tr><tr><td>redis.windows.conf</td><td>redis核心配置文件</td></tr></tbody></table><p> <strong>启动</strong></p><blockquote><p>windows平台使用</p></blockquote><p><img data-src="/img/redis%E5%90%AF%E5%8A%A8.png" alt="redis启动"></p><blockquote><p>linux平台使用</p></blockquote><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">* </span>在当前解压后的目录下  cmd进入dos窗口</span><br><span class="line"><span class="code">先启动 redis-server.exe redis.windows.conf</span></span><br><span class="line"><span class="code">再启动 redis-cli.exe</span></span><br></pre></td></tr></table></figure><h3 id="2-3-Redis数据结构"><a href="#2-3-Redis数据结构" class="headerlink" title="2.3 Redis数据结构"></a>2.3 Redis数据结构</h3><p>Redis采用的是键值对存储，键的类型只能为字符串，值支持五种数据类型：</p><blockquote><ul><li>字符串：String</li><li>哈希：HashMap</li><li>双向链表：LinkedList</li><li>无序集合：HashSet</li><li>有序集合：LinkedHashSet</li></ul></blockquote><p><img data-src="/img/redis%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84.png" alt="redis数据结构"></p><h3 id="2-4-Redis命令操作"><a href="#2-4-Redis命令操作" class="headerlink" title="2.4 Redis命令操作"></a>2.4 Redis命令操作</h3><p>Redis命令是用来操作Redis数据库的, 就相当于操作MySql数据库时的SQL语句。</p><p>Redis的命令根据要操作的值的数据结构的不同而不同, 每种数据类型都有自己的操作命令</p><h4 id="2-4-1-String字符串"><a href="#2-4-1-String字符串" class="headerlink" title="2.4.1 String字符串"></a>2.4.1 String字符串</h4><p>字符串类型是Redis中最为基础的数据存储类型。</p><p>在Redis中字符串类型的Value最多可以容纳的数据长度是512m。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">* </span>新增（更新）</span><br><span class="line"><span class="code">set key "value" </span></span><br><span class="line"><span class="code">注意：value值内容有空格，外面需要加引号</span></span><br><span class="line"><span class="bullet">* </span>查询</span><br><span class="line"><span class="code">get key</span></span><br><span class="line"><span class="bullet">* </span>删除</span><br><span class="line"><span class="code">del key</span></span><br><span class="line"><span class="bullet">* </span>新增并指定存活时间</span><br><span class="line"><span class="code">setex key seconds value</span></span><br><span class="line"><span class="code">ttl key  查看存活时间</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">* </span>根据键判断记录是否存在</span><br><span class="line"><span class="code">exists key</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">* </span>主键自增（类似于MySQL中的，auto_increment）</span><br><span class="line"><span class="code">set id 1</span></span><br><span class="line"><span class="code">incr id</span></span><br></pre></td></tr></table></figure><p><img data-src="/img/redis%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8Bstring1.png" alt="redis数据结构之string1"></p><p><img data-src="/img/redis%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8Bstring2.png" alt="redis数据结构之string2"></p><p><img data-src="/img/redis%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8Bstring3.png" alt="redis数据结构之string3"></p><h4 id="2-4-2-Hash哈希"><a href="#2-4-2-Hash哈希" class="headerlink" title="2.4.2 Hash哈希"></a>2.4.2 Hash哈希</h4><p>Hash类型极其类似于java中的Map,值里面可以存放一组组的键值对</p><p>该类型非常适合于存储java中对象的信息</p><p><img data-src="/img/redis%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8Bhash1.png" alt="redis数据结构之hash1"></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">* </span>新增（更新）</span><br><span class="line"><span class="code">hset key hkey hvalue</span></span><br><span class="line"><span class="bullet">* </span>查询</span><br><span class="line"><span class="code">hget key hkey 查询具体元素</span></span><br><span class="line"><span class="code">hgetall key   查询所有元素</span></span><br><span class="line"><span class="bullet">* </span>删除</span><br><span class="line"><span class="code">hdel key hkey 删除指定元素</span></span><br><span class="line"><span class="code">del  key      删除整个hash</span></span><br></pre></td></tr></table></figure><p><img data-src="/img/redis%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8Bhash2.png" alt="redis数据结构之hash2"></p><h4 id="2-4-3-List列表"><a href="#2-4-3-List列表" class="headerlink" title="2.4.3 List列表"></a>2.4.3 List列表</h4><p>List类型底层是一个双向字符串链表。里面的元素是有序的，可重复的</p><p>我们可以从链表的任何一端进行元素的增删</p><p><img data-src="/img/redis%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8Blist1.png" alt="redis数据结构之list1"></p><p><img data-src="/img/redis%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8Blist2.png" alt="redis数据结构之list2"></p><h4 id="2-4-4-Set集合-无序"><a href="#2-4-4-Set集合-无序" class="headerlink" title="2.4.4 Set集合(无序)"></a>2.4.4 Set集合(无序)</h4><p>Set类型底层是一张hash表。里面的元素是无序的，不可重复的</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">* </span>新增</span><br><span class="line"><span class="code">sadd key value</span></span><br><span class="line"><span class="bullet">* </span>查询</span><br><span class="line"><span class="code">smembers key</span></span><br><span class="line"><span class="bullet">* </span>删除</span><br><span class="line"><span class="code">srem key value</span></span><br></pre></td></tr></table></figure><p><img data-src="/img/redis%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8Bset1.png" alt="redis数据结构之set1"></p><h4 id="2-4-5-ZSet集合-有序"><a href="#2-4-5-ZSet集合-有序" class="headerlink" title="2.4.5 ZSet集合(有序)"></a>2.4.5 ZSet集合(有序)</h4><p>Zset,也称sortedSet, 在Set的基础上，加入了有序功能，在添加元素的时候，允许指定一个分数，它会按照这个分数排序</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">* </span>新增</span><br><span class="line"><span class="code">zadd key 分值 value</span></span><br><span class="line"><span class="bullet">* </span>查询</span><br><span class="line"><span class="code">zrange key start end [withscores] 升序</span></span><br><span class="line"><span class="code">zrevrange key start end [withscores] 降序</span></span><br><span class="line"><span class="bullet">* </span>删除</span><br><span class="line"><span class="code">zrem key value</span></span><br></pre></td></tr></table></figure><p><img data-src="/img/redis%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8Bzset1.png" alt="redis数据结构之zset1"></p><h4 id="2-4-6-通用命令"><a href="#2-4-6-通用命令" class="headerlink" title="2.4.6 通用命令"></a>2.4.6 通用命令</h4><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">* </span>模糊查询键</span><br><span class="line"><span class="code">keys *</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">* </span>删除多个键</span><br><span class="line"><span class="code">del key [key] [key]</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">* </span>根据键判断值类型 </span><br><span class="line"><span class="code">type key</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">* </span>选择数据库</span><br><span class="line"><span class="code">select 库名[0~15]</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">* </span>清空当前数据库</span><br><span class="line"><span class="code">flushdb</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">* </span>清空所有数据库</span><br><span class="line"><span class="code">flushall</span></span><br></pre></td></tr></table></figure><h3 id="2-5-Redis持久化"><a href="#2-5-Redis持久化" class="headerlink" title="2.5 Redis持久化"></a>2.5 Redis持久化</h3><p>Redis的数据都是存在在内存之中的，那么这样一旦出现宕机，势必会导致数据的丢失，这就需要持久化操作，也就是要将redis在内存中的数据写到硬盘上保存。</p><p>注意：redis虽然有持久化操作，但是其全部数据依旧都在内存中存在,也就是说硬盘上的只是为了安全和<span style="color:red">备份</span>。</p><blockquote><p>Redis提供了两种数据持久化的方式，分别是RDB和AOF。</p></blockquote><p><strong>RDB：默认开启，不需要配置</strong></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">* </span>手动持久化【了解】</span><br><span class="line"><span class="code">bgsave</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">* </span>自动持久化</span><br><span class="line"><span class="code">在redis运行期间，根据指定时间规则，将内存的数据集进行快照拍摄，持久化到硬盘 【dump.rdb】</span></span><br><span class="line"><span class="code">在redis.windows.conf配置文件中，可以查看（修改）时间规则</span></span><br><span class="line"><span class="code">        save 900 1</span></span><br><span class="line"><span class="code">        save 300 10</span></span><br><span class="line"><span class="code">        save 60 10000</span></span><br></pre></td></tr></table></figure><p><img data-src="/img/redisRDB%E9%85%8D%E7%BD%AE.png" alt="redisRDB配置"></p><p><strong>AOF：默认关闭，需手动开启</strong></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">* </span>在redis运行期间，以日志记录方式监控写操作，持久化到硬盘【appendonly.aof】</span><br><span class="line"></span><br><span class="line"><span class="bullet">* </span>在redis.windows.conf配置文件中开启</span><br><span class="line"><span class="code">appendonly no --&gt; appendonly yes</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">* </span>三种日志监控规则</span><br><span class="line"><span class="code"># appendfsync always 每次（写操作）修改时，进行持久化</span></span><br><span class="line"><span class="code">    appendfsync everysec 每秒，持久化一次</span></span><br><span class="line"><span class="code">    # appendfsync no     在CPU空闲期，进行持久化</span></span><br></pre></td></tr></table></figure><blockquote><p>RDB和AOF二种持久化机制可以同时存在</p></blockquote><p><strong>在开发中使用哪种机制进行持久化？</strong></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">* </span>RDB：应用在缓存服务器场景</span><br><span class="line"><span class="code">优点：性能高，降低磁盘IO</span></span><br><span class="line"><span class="code">缺点：redis容灾后，容易丢失数据</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">* </span>AOF：应用在数据库服务器场景</span><br><span class="line"><span class="code">优点：不容易丢失数据（日志）</span></span><br><span class="line"><span class="code">缺点：速度稍慢（能够秒杀mysql等产品的...）</span></span><br></pre></td></tr></table></figure><h2 id="三、Jedis"><a href="#三、Jedis" class="headerlink" title="三、Jedis"></a>三、Jedis</h2><p>Redis作为一款优秀的缓存服务器存在，大多数语言都提供了连接Redis的驱动包，在java中，比较出名的是Jedis和Redisson，我们今天以Jedis为例学习，看看如何是用程序操作redis。</p><h3 id="3-1-Jedis使用"><a href="#3-1-Jedis使用" class="headerlink" title="3.1 Jedis使用"></a>3.1 Jedis使用</h3><p><strong>常用API</strong></p><table><thead><tr><th>方法</th><th>解释</th></tr></thead><tbody><tr><td>new Jedis(host, port)</td><td>创建jedis对象，参数host是redis服务器地址，参数port是redis服务端口</td></tr><tr><td>set(key,value)</td><td>设置字符串类型的数据</td></tr><tr><td>get(key)</td><td>获得字符串类型的数据</td></tr><tr><td>hset(key,field,value)</td><td>设置哈希类型的数据</td></tr><tr><td>hget(key,field)</td><td>获得哈希类型的数据</td></tr><tr><td>lpush(key,values)</td><td>设置列表类型的数据</td></tr><tr><td>lpop(key)</td><td>列表左面弹栈</td></tr><tr><td>rpop(key)</td><td>列表右面弹栈</td></tr><tr><td>del(key)</td><td>删除指定的key</td></tr></tbody></table><h4 id="快速入门"><a href="#快速入门" class="headerlink" title="快速入门"></a>快速入门</h4><h5 id="Ⅰ-导入坐标"><a href="#Ⅰ-导入坐标" class="headerlink" title="Ⅰ 导入坐标"></a>Ⅰ 导入坐标</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>redis.clients<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jedis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.9.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>maven官方提供坐标搜索仓库：<a href="https://mvnrepository.com/" target="_blank" rel="noopener">https://mvnrepository.com/</a></p></blockquote><h5 id="Ⅱ-编写代码"><a href="#Ⅱ-编写代码" class="headerlink" title="Ⅱ 编写代码"></a>Ⅱ 编写代码</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JedisTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span><span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        <span class="comment">// 1.创建jedis连接对象</span></span><br><span class="line">        Jedis jedis = <span class="keyword">new</span> Jedis(<span class="string">"127.0.0.1"</span>, <span class="number">6379</span>);</span><br><span class="line">        <span class="comment">// 2.调用set方法</span></span><br><span class="line">        jedis.set(<span class="string">"mystr"</span>, <span class="string">"传智播客"</span>);</span><br><span class="line">        <span class="comment">// 3.释放资源</span></span><br><span class="line">        jedis.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test02</span><span class="params">()</span><span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        <span class="comment">// 1.创建jedis连接对象</span></span><br><span class="line">        Jedis jedis = <span class="keyword">new</span> Jedis();</span><br><span class="line">        <span class="comment">// 2.调用get方法</span></span><br><span class="line">        System.out.println(jedis.get(<span class="string">"mystr"</span>));</span><br><span class="line">        <span class="comment">// 3.释放资源</span></span><br><span class="line">        jedis.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-2-Jedis连接池"><a href="#4-2-Jedis连接池" class="headerlink" title="4.2 Jedis连接池"></a>4.2 Jedis连接池</h3><p>jedis连接资源的创建与销毁是非常消耗性能的，所以我们不希望频繁的创建和销毁它.基于这样的需求,就有了jedisPool技术。</p><h4 id="快速入门-1"><a href="#快速入门-1" class="headerlink" title="快速入门"></a>快速入门</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JedisPoolTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">// 1.创建连接池对象</span></span><br><span class="line">        JedisPool jedisPool = <span class="keyword">new</span> JedisPool(<span class="string">"127.0.0.1"</span>, <span class="number">6379</span>);</span><br><span class="line">        <span class="comment">// 2.从池中获取连接</span></span><br><span class="line">        Jedis jedis = jedisPool.getResource();</span><br><span class="line">        <span class="comment">// 3.操作api实现CRUD</span></span><br><span class="line">        jedis.setex(<span class="string">"sms_code"</span>, <span class="number">300</span>, <span class="string">"996571"</span>);</span><br><span class="line">        <span class="comment">// 4.归还到连接池</span></span><br><span class="line">        jedis.close(); <span class="comment">// 底层使用了动态代理，进行增强</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test02</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">// 指定连接池配置参数</span></span><br><span class="line">        JedisPoolConfig config = <span class="keyword">new</span> JedisPoolConfig();</span><br><span class="line">        config.setMaxTotal(<span class="number">50</span>); <span class="comment">// 最大连接数</span></span><br><span class="line">        config.setMinIdle(<span class="number">10</span>); <span class="comment">// 空闲期，保留连接数</span></span><br><span class="line">        config.setMaxWaitMillis(<span class="number">3000</span>);<span class="comment">// 等待时间</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1.创建连接池对象</span></span><br><span class="line">        JedisPool jedisPool = <span class="keyword">new</span> JedisPool(config, <span class="string">"127.0.0.1"</span>, <span class="number">6379</span>);</span><br><span class="line">        <span class="comment">// 2.从池中获取连接</span></span><br><span class="line">        Jedis jedis = jedisPool.getResource();</span><br><span class="line">        <span class="comment">// 3.操作api实现CRUD</span></span><br><span class="line">        System.out.println(jedis.get(<span class="string">"sms_code"</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 4.归还到连接池</span></span><br><span class="line">        jedis.close(); <span class="comment">// 底层使用了动态代理，进行增强</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="连接池工具类"><a href="#连接池工具类" class="headerlink" title="连接池工具类"></a>连接池工具类</h4><blockquote><p>JedisUtils</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JedisUtils</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> JedisPool jedisPool;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String host;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Integer port;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Integer maxTotal;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Integer maxIdle;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 初始化连接池</span></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            ResourceBundle jedis = ResourceBundle.getBundle(<span class="string">"jedis"</span>);</span><br><span class="line">            <span class="comment">// 读取配置文件给变量赋值</span></span><br><span class="line">            <span class="comment">// 获取类加载读取 jedis.properties 获取io流</span></span><br><span class="line">            InputStream is = JedisUtils.class.getClassLoader().getResourceAsStream("jedis.properties");</span><br><span class="line">            <span class="comment">// 创建properties对象 加载io流</span></span><br><span class="line">            Properties properties = <span class="keyword">new</span> Properties();</span><br><span class="line">            properties.load(is);</span><br><span class="line">            <span class="comment">// 给变量赋值</span></span><br><span class="line">            host = properties.getProperty(<span class="string">"jedis.host"</span>);</span><br><span class="line">            port = Integer.parseInt(properties.getProperty(<span class="string">"jedis.port"</span>));</span><br><span class="line">            maxTotal = Integer.parseInt(properties.getProperty(<span class="string">"jedis.maxTotal"</span>));</span><br><span class="line">            maxIdle = Integer.parseInt(properties.getProperty(<span class="string">"jedis.maxIdle"</span>));</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 创建连接池配置对象</span></span><br><span class="line">            JedisPoolConfig jedisPoolConfig = <span class="keyword">new</span> JedisPoolConfig();</span><br><span class="line">            jedisPoolConfig.setMaxTotal(maxTotal);</span><br><span class="line">            jedisPoolConfig.setMaxIdle(maxIdle);</span><br><span class="line">            <span class="comment">// 创建连接池对象</span></span><br><span class="line">            jedisPool = <span class="keyword">new</span> JedisPool(jedisPoolConfig, host, port);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 提供获取jedis连接的方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Jedis <span class="title">getJedis</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> jedisPool.getResource();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>jedis.properties</p></blockquote><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">jedis.host</span>=<span class="string">localhost</span></span><br><span class="line"><span class="meta">jedis.port</span>=<span class="string">6379</span></span><br><span class="line"><span class="meta">jedis.maxTotal</span>=<span class="string">50</span></span><br><span class="line"><span class="meta">jedis.maxIdle</span>=<span class="string">10</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、NoSQL&quot;&gt;&lt;a href=&quot;#一、NoSQL&quot; class=&quot;headerlink&quot; title=&quot;一、NoSQL&quot;&gt;&lt;/a&gt;一、NoSQL&lt;/h2&gt;&lt;h3 id=&quot;1-1-NoSQL介绍&quot;&gt;&lt;a href=&quot;#1-1-NoSQL介绍&quot; class=&quot;headerlink&quot; title=&quot;1.1 NoSQL介绍&quot;&gt;&lt;/a&gt;1.1 NoSQL介绍&lt;/h3&gt;&lt;p&gt;NoSQL，泛指非关系型的数据库，NoSQL即Not-Only SQL，它可以作为关系型数据库的良好补充。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&quot;/img/NoSQL%E4%BB%8B%E7%BB%8D.png&quot; alt=&quot;NoSQL介绍&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="非关系型数据库" scheme="http://sunmoon.com/categories/%E9%9D%9E%E5%85%B3%E7%B3%BB%E5%9E%8B%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="NoSQL" scheme="http://sunmoon.com/categories/%E9%9D%9E%E5%85%B3%E7%B3%BB%E5%9E%8B%E6%95%B0%E6%8D%AE%E5%BA%93/NoSQL/"/>
    
    
      <category term="redis" scheme="http://sunmoon.com/tags/redis/"/>
    
      <category term="jedis" scheme="http://sunmoon.com/tags/jedis/"/>
    
  </entry>
  
  <entry>
    <title>Maven基础</title>
    <link href="http://sunmoon.com/2020/09/10/Maven%E5%9F%BA%E7%A1%80/"/>
    <id>http://sunmoon.com/2020/09/10/Maven%E5%9F%BA%E7%A1%80/</id>
    <published>2020-09-10T12:59:05.000Z</published>
    <updated>2020-09-11T07:59:08.266Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、Maven简介"><a href="#一、Maven简介" class="headerlink" title="一、Maven简介"></a>一、Maven简介</h2><h3 id="1-1-Maven是什么"><a href="#1-1-Maven是什么" class="headerlink" title="1.1. Maven是什么?"></a>1.1. Maven是什么?</h3><p>Maven 翻译为”专家”、”内行”，是 Apache 下的一个纯 Java 开发的开源项目。</p><p><strong>一个对 Maven 比较正式的定义是这么说的：</strong></p><p>Maven 是一个项目管理工具，它包含了一个项目对象模型，一组标准集合，一个项目生命周期，一个依赖管理系统，和用来运行定义在生命周期阶段中插件目标的工具。</p><a id="more"></a><h3 id="1-2-Maven能解决什么问题"><a href="#1-2-Maven能解决什么问题" class="headerlink" title="1.2 Maven能解决什么问题"></a>1.2 Maven能解决什么问题</h3><p>可以用更通俗的方式来说明。我们知道，项目开发不仅仅是写写代码而已，期间会伴随着各种必不可少的事情要做，下面列举几个感受一下： </p><ol><li>我们需要引用各种jar包，尤其是比较大的工程，引用的jar包往往有几十个乃至上百个，每用到一种jar包，都需要手动引入工程目录，而且经常遇到各种让人抓狂的jar包冲突，版本冲突。</li><li>我们写好的java文件，需要通过javac编译成class文件才能交给JVM运行。这项工作可以由各种集成开发工具帮我们完成 Eclipse、IDEA 等都可以将代码即时编译。 </li><li>世界上没有不存在 bug 的代码，因此写完了代码，我们还要写一些单元测试，然后一个个的运行来检验代码质量。 </li><li>再优雅的代码也是要出来卖的。我们后面还需要把代码与各种配置文件、资源整合到一起，进行打包。如果是 web 项目，还需要将之发布到服务器 。</li></ol><p>试想，如果现在有一种工具，可以把你从上面的繁琐工作中解放出来，能帮你构建工程，管理 jar包，编译代码，还能帮你自动运行单元测试，打包，生成报表，甚至能帮你部署项目，生成 Web 站点，你会心动吗？ Maven 就可以解决上面所提到的这些问题。 </p><h3 id="1-3-Maven的两个核心功能"><a href="#1-3-Maven的两个核心功能" class="headerlink" title="1.3 Maven的两个核心功能"></a>1.3 Maven的两个核心功能</h3><h4 id="1-3-1-依赖管理"><a href="#1-3-1-依赖管理" class="headerlink" title="1.3.1 依赖管理"></a>1.3.1 依赖管理</h4><p>传统的 WEB 工程中，我们必须将工程所依赖的 jar 包复制到工程中，导致了工程的变得很大。 </p><p>maven的 WEB 工程中不直接将jar包导入到工程中，而是通过在 pom.xml 文件中添加所需jar包的坐标。项目运行时，通过读取坐标到一个专门用于“存放jar包仓库”（Maven仓库）找到相应的jar包。</p><p><img data-src="/img/maven%E4%BE%9D%E8%B5%96%E7%AE%A1%E7%90%861.png" alt="maven依赖管理1"></p><p><img data-src="/img/maven%E4%BE%9D%E8%B5%96%E7%AE%A1%E7%90%862.png" alt="maven依赖管理2"></p><h4 id="1-3-2-项目构建"><a href="#1-3-2-项目构建" class="headerlink" title="1.3.2 项目构建"></a>1.3.2 项目构建</h4><p>我们开发的项目，往往都要经历编译、测试、打包、安装，部署等一系列过程。</p><ul><li><p>什么是构建项目</p><ul><li>指的是项目从编译、测试、打包、安装，部署整个过程都交给maven进行管理，这个过程称为构建。     </li></ul></li><li><p>一键构建</p><ul><li>指的是整个构建过程，使用 maven 一个命令可以轻松完成整个工作。 </li></ul></li></ul><p><img data-src="/img/maven%E9%A1%B9%E7%9B%AE%E6%9E%84%E5%BB%BA.png" alt="maven项目构建"></p><h2 id="二、Maven安装和使用"><a href="#二、Maven安装和使用" class="headerlink" title="二、Maven安装和使用"></a>二、Maven安装和使用</h2><h3 id="2-1-Maven下载和安装"><a href="#2-1-Maven下载和安装" class="headerlink" title="2.1 Maven下载和安装"></a>2.1 Maven下载和安装</h3><p><strong>下载</strong></p><ul><li>Maven官网下载地址 ：<a href="http://maven.apache.org/download.cgi" target="_blank" rel="noopener">http://maven.apache.org/download.cgi</a></li></ul><p><strong>安装</strong></p><ul><li>Maven使用java语言开发的，解压即可运行</li><li>注意：Maven依赖 JAVA_HOME</li></ul><p><img data-src="/img/maven%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84.png" alt="maven目录结构"></p><p><strong>目录</strong></p><ul><li>bin：存放了 maven 的命令，比如我们前面用到的 mvn tomcat7:run</li><li>boot：存放了一些 maven 本身的引导程序，如类加载器等</li><li>conf：存放了 maven 的一些配置文件，如 setting.xml 文件</li><li>lib：存放了 maven 本身运行所需的一些 jar 包</li></ul><p><strong>环境变量</strong></p><ul><li>MAVEN_HOME: maven安装目录</li></ul><p><img data-src="/img/%E9%85%8D%E7%BD%AEmaven%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F1.png" alt="配置maven环境变量1"></p><p><img data-src="/img/%E9%85%8D%E7%BD%AEmaven%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F2.png" alt="配置maven环境变量2"></p><p><strong>打开cmd窗口测试</strong></p><ul><li>输入：<code>mvn -v</code>回车即可，显示maven的版本信息表示成功。</li></ul><h3 id="2-2-Maven仓库"><a href="#2-2-Maven仓库" class="headerlink" title="2.2 Maven仓库"></a>2.2 Maven仓库</h3><h4 id="2-2-1-Maven仓库的分类"><a href="#2-2-1-Maven仓库的分类" class="headerlink" title="2.2.1 Maven仓库的分类"></a>2.2.1 Maven仓库的分类</h4><p>本地仓库：</p><ul><li>项目通过jar坐标，先从本地仓库找对应jar包，如果找不到会从远程仓库（互联网）去下载 jar 包，保存在本地仓库（在程序员的电脑上），第二次就不需要从远程仓库去下载了。</li></ul><p>远程仓库：</p><ul><li>中央仓库：<ul><li>由专业团队（maven团队）统一维护。中央仓库的地址：<a href="https://repo1.maven.org/maven2/" target="_blank" rel="noopener">https://repo1.maven.org/maven2/</a></li></ul></li><li>私服：<ul><li>架设在公司局域网内，提供给内部的人员使用。</li></ul></li><li>第三方仓库：<ul><li>中央仓库只有一个国内使用非常慢，我们可以更换为：阿里云镜像</li></ul></li></ul><p><img data-src="/img/maven%E4%BB%93%E5%BA%93.png" alt="maven仓库"></p><h4 id="2-2-2-Maven本地仓库配置"><a href="#2-2-2-Maven本地仓库配置" class="headerlink" title="2.2.2 Maven本地仓库配置"></a>2.2.2 Maven本地仓库配置</h4><p>修改 maven的安装目录/conf/settings.xml 文件的标签</p><ul><li><code>&lt;localRepository&gt;本地仓库地址&lt;/localRepository&gt;</code></li></ul><p><img data-src="/img/maven%E6%9C%AC%E5%9C%B0%E4%BB%93%E5%BA%93%E9%85%8D%E7%BD%AE.png" alt="maven本地仓库配置"></p><h4 id="2-2-3-Maven仓库国内镜像配置"><a href="#2-2-3-Maven仓库国内镜像配置" class="headerlink" title="2.2.3 Maven仓库国内镜像配置"></a>2.2.3 Maven仓库国内镜像配置</h4><p>修改 maven 根目录下的 conf 文件夹中的 setting.xml 文件，在 mirrors 节点上，添加内容如下：</p><blockquote><p>maven仓库阿里镜像</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>alimaven<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun maven<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.aliyun.com/nexus/content/groups/public/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>central<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span>        </span><br><span class="line"><span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img data-src="/img/maven%E5%9B%BD%E5%86%85%E9%95%9C%E5%83%8F%E9%85%8D%E7%BD%AE.png" alt="maven国内镜像配置"></p><h3 id="2-3-Maven坐标和依赖"><a href="#2-3-Maven坐标和依赖" class="headerlink" title="2.3 Maven坐标和依赖"></a>2.3 Maven坐标和依赖</h3><p>创建Maven工程，会有一个<code>pom.xml</code>，是Maven工成的核心配置文件，可以进行依赖管理：</p><p><img data-src="/img/maven%E4%BE%9D%E8%B5%96%E7%AE%A1%E7%90%86.png" alt="maven依赖管理"></p><h3 id="2-4-Maven工程结构"><a href="#2-4-Maven工程结构" class="headerlink" title="2.4 Maven工程结构"></a>2.4 Maven工程结构</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">* </span>java项目</span><br><span class="line"><span class="code">java工程（项目名）</span></span><br><span class="line"><span class="code">--| src目录（存放项目的源代码和配置文件）</span></span><br><span class="line"><span class="code">--| main目录（存放运行环境代码）</span></span><br><span class="line"><span class="code">--| java目录（存放java源代码）</span></span><br><span class="line"><span class="code">--| resources目录（存放配置文件）</span></span><br><span class="line"><span class="code">--| test目录（存放测试环境代码）</span></span><br><span class="line"><span class="code">--| java目录（存放java源代码）</span></span><br><span class="line"><span class="code">--| resources目录（存放配置文件）</span></span><br><span class="line"><span class="code">--| target目录（存放编译后的代码）</span></span><br><span class="line"><span class="code">--| pom.xml（maven的核心配置文件，实现依赖管理）</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">* </span>web项目</span><br><span class="line"><span class="code">web工程（项目名）</span></span><br><span class="line"><span class="code">--| src目录（存放项目的源代码和配置文件）</span></span><br><span class="line"><span class="code">--| main目录（存放运行环境代码）</span></span><br><span class="line"><span class="code">--| java目录（存放java源代码）</span></span><br><span class="line"><span class="code">--| resources目录（存放配置文件）</span></span><br><span class="line"><span class="code">--| webapp目录（存放页面资源）</span></span><br><span class="line"><span class="code">--| WEB-INF目录</span></span><br><span class="line"><span class="code">--| index.jsp</span></span><br><span class="line"><span class="code">--| test目录（存放测试环境代码）</span></span><br><span class="line"><span class="code">--| java目录（存放java源代码）</span></span><br><span class="line"><span class="code">--| resources目录（存放配置文件）</span></span><br><span class="line"><span class="code">--| target目录（存放编译后的代码）</span></span><br><span class="line"><span class="code">--| pom.xml（maven的核心配置文件，实现依赖管理）</span></span><br></pre></td></tr></table></figure><h2 id="三、Maven的生命周期和插件"><a href="#三、Maven的生命周期和插件" class="headerlink" title="三、Maven的生命周期和插件"></a>三、Maven的生命周期和插件</h2><h3 id="3-1-Maven常用命令和插件"><a href="#3-1-Maven常用命令和插件" class="headerlink" title="3.1 Maven常用命令和插件"></a>3.1 Maven常用命令和插件</h3><p>我们可以在 cmd 中通过一系列的 maven 命令，来对我们的工程进行编译、测试、打包、安装、部署。 </p><ul><li><code>clean</code>：<strong>maven工程的清理命令，执行clean会删除target目录及内容。</strong></li><li><code>compile</code>：<strong>maven工程的编译命令，作用是将 src/main/java 下的文件编译为class文件输出到target目录下。</strong></li><li><code>test</code>：<strong>maven工程的测试命令，作用是执行 src/test/java 下单元测试类，并编译为class文件。</strong></li><li><code>package</code>：<strong>maven工程的打包命令，对于java工程执行package打成jar包，对于web工程打成war包。</strong> </li><li><code>install</code>：<strong>maven工程的安装命令，执行install将mave工程打成jar包或war包，并发布到本地仓库。</strong> </li><li><code>deploy</code>：<strong>maven工程部署命令，将jar或war包部署到私服中。</strong></li></ul><h3 id="3-2-生命周期"><a href="#3-2-生命周期" class="headerlink" title="3.2 生命周期"></a>3.2 生命周期</h3><p>maven 对项目构建过程分为<strong>“三套相互独立的”</strong>生命周期，这三套生命周期分别是：</p><ul><li>Clean Lifecycle(清理生命周期)<ul><li>在进行真正的构建之前进行一些清理工作。</li><li>命令:clean</li></ul></li><li>Default Lifecycle(默认生命周期)<ul><li>构建的核心部分，编译，测试，打包，部署等等。</li><li>命令: compile  test  package  install  deploy</li></ul></li><li>Site Lifecycle(站点生命周期)<ul><li>生成项目报告，站点，发布站点。 </li><li>命令: site</li></ul></li></ul><blockquote><p>小贴士：</p><ul><li>在同一个生命周期中的命令,执行后面的命令,前面的命令自动执行</li></ul></blockquote><h3 id="3-3-Maven概念模型"><a href="#3-3-Maven概念模型" class="headerlink" title="3.3 Maven概念模型"></a>3.3 Maven概念模型</h3><p><img data-src="/img/maven%E6%A6%82%E5%BF%B5%E6%A8%A1%E5%9E%8B.png" alt="maven概念模型"></p><h3 id="3-4-扩展：依赖管理"><a href="#3-4-扩展：依赖管理" class="headerlink" title="3.4 扩展：依赖管理"></a>3.4 扩展：依赖管理</h3><p>在导入依赖的时候，我们也可以指定依赖的作用范围：</p><table><thead><tr><th>依赖范围</th><th>编译期有效</th><th>测试期有效</th><th>运行期有效</th><th>例子</th></tr></thead><tbody><tr><td>compile（默认）</td><td>Y</td><td>Y</td><td>Y</td><td>mybatis</td></tr><tr><td>test</td><td>-</td><td>Y</td><td>-</td><td>junit</td></tr><tr><td>provided</td><td>Y</td><td>Y</td><td>-</td><td>servlet-api</td></tr><tr><td>runtime</td><td>-</td><td>Y</td><td>Y</td><td>JDBC驱动</td></tr><tr><td>system</td><td>Y</td><td>Y</td><td>-</td><td>本地，maven仓库之外的库</td></tr></tbody></table><p>解释：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">* </span>compile</span><br><span class="line"><span class="code">默认依赖范围，作用域在编译、测试、运行时都有效。</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">* </span>test</span><br><span class="line"><span class="code">作用域在测试时有效。编译和运行时不需要，比如：Junit。</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">* </span>provided</span><br><span class="line"><span class="code">作用域在编译、测试时有效。运行时不需要，比如： servlet api 被 tomcat 容器提供。 </span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">* </span>runtime</span><br><span class="line"><span class="code">作用域在测试、运行时有效。编译时不需要，比如：jdbc的驱动包。 </span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">* </span>system</span><br><span class="line"><span class="code">system范围依赖与provided类似，jar包在本地磁盘而不是maven仓库</span></span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--依赖管理--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--作用范围--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--作用范围--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.47<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--作用范围--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、Maven简介&quot;&gt;&lt;a href=&quot;#一、Maven简介&quot; class=&quot;headerlink&quot; title=&quot;一、Maven简介&quot;&gt;&lt;/a&gt;一、Maven简介&lt;/h2&gt;&lt;h3 id=&quot;1-1-Maven是什么&quot;&gt;&lt;a href=&quot;#1-1-Maven是什么&quot; class=&quot;headerlink&quot; title=&quot;1.1. Maven是什么?&quot;&gt;&lt;/a&gt;1.1. Maven是什么?&lt;/h3&gt;&lt;p&gt;Maven 翻译为”专家”、”内行”，是 Apache 下的一个纯 Java 开发的开源项目。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;一个对 Maven 比较正式的定义是这么说的：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Maven 是一个项目管理工具，它包含了一个项目对象模型，一组标准集合，一个项目生命周期，一个依赖管理系统，和用来运行定义在生命周期阶段中插件目标的工具。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Maven" scheme="http://sunmoon.com/categories/Maven/"/>
    
    
      <category term="maven介绍" scheme="http://sunmoon.com/tags/maven%E4%BB%8B%E7%BB%8D/"/>
    
      <category term="依赖管理" scheme="http://sunmoon.com/tags/%E4%BE%9D%E8%B5%96%E7%AE%A1%E7%90%86/"/>
    
      <category term="相关配置" scheme="http://sunmoon.com/tags/%E7%9B%B8%E5%85%B3%E9%85%8D%E7%BD%AE/"/>
    
      <category term="maven仓库" scheme="http://sunmoon.com/tags/maven%E4%BB%93%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>Mybatis注解开发&amp;分页查询</title>
    <link href="http://sunmoon.com/2020/09/09/Mybatis%E6%B3%A8%E8%A7%A3%E5%BC%80%E5%8F%91-%E5%88%86%E9%A1%B5%E6%9F%A5%E8%AF%A2/"/>
    <id>http://sunmoon.com/2020/09/09/Mybatis%E6%B3%A8%E8%A7%A3%E5%BC%80%E5%8F%91-%E5%88%86%E9%A1%B5%E6%9F%A5%E8%AF%A2/</id>
    <published>2020-09-09T13:39:20.000Z</published>
    <updated>2020-09-09T14:17:07.159Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一-核心配置文件总结"><a href="#一-核心配置文件总结" class="headerlink" title="一  核心配置文件总结"></a>一  核心配置文件总结</h2><p><strong>SqlMapConfig.xml 中配置的内容和顺序如下：</strong>  </p><ul><li>properties（属性）</li><li>settings（全局配置参数）</li><li>typeAliases（类型别名）</li><li>typeHandlers（类型处理器）</li><li>objectFactory（对象工厂）</li><li>plugins（插件）</li><li>environments（数据库环境配置）<ul><li>environment（数据库环境子属性对象）<ul><li>transactionManager（事务管理）</li><li>dataSource（数据源）</li></ul></li></ul></li><li>mappers（映射器）</li></ul><a id="more"></a><h3 id="1-1-properties标签"><a href="#1-1-properties标签" class="headerlink" title="1.1 properties标签"></a>1.1 properties标签</h3><blockquote><p>加载外部的properties文件</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">properties</span> <span class="attr">resource</span>=<span class="string">"jdbc.properties"</span>&gt;</span><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="1-2-settings标签"><a href="#1-2-settings标签" class="headerlink" title="1.2 settings标签"></a>1.2 settings标签</h3><blockquote><p>全局参数配置</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">settings</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--开启懒加载--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">"lazyLoadingEnabled"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 指定触发延迟加载的方法 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">"lazyLoadTriggerMethods"</span> <span class="attr">value</span>=<span class="string">""</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="1-3-typeAliases标签"><a href="#1-3-typeAliases标签" class="headerlink" title="1.3 typeAliases标签"></a>1.3 typeAliases标签</h3><blockquote><p>为 Java 类型设置一个别名</p></blockquote><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1. </span>单个定义别名（了解）</span><br><span class="line"></span><br><span class="line"><span class="code">    &lt;typeAliases&gt;</span></span><br><span class="line"><span class="code">        &lt;typeAlias type="com.xxx.domain.User" alias="user"&gt;&lt;/typeAlias&gt;</span></span><br><span class="line"><span class="code">    &lt;/typeAliases&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">1. </span>使用包的形式批量定义别名</span><br><span class="line"></span><br><span class="line"><span class="code">    &lt;typeAliases&gt;</span></span><br><span class="line"><span class="code">        &lt;package name="com.xxx.domain"&gt;&lt;/package&gt;</span></span><br><span class="line"><span class="code">    &lt;/typeAliases&gt;</span></span><br></pre></td></tr></table></figure><h3 id="1-4-mappers标签"><a href="#1-4-mappers标签" class="headerlink" title="1.4 mappers标签"></a>1.4 mappers标签</h3><blockquote><p>加载映射配置</p></blockquote><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1. </span>加载指定的src目录下的映射文件，例如：</span><br><span class="line"></span><br><span class="line"><span class="code">&lt;mapper resource="com/xxx/mapper/UserMapper.xml"/&gt;</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">2. </span>加载指定包目录下的映射接口，例如：</span><br><span class="line"></span><br><span class="line"><span class="code">&lt;mapper class="com.xxx.mapper.UserMapper"/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">3. </span>加载并扫描指定包下所有的映射文件（接口），例如：</span><br><span class="line"></span><br><span class="line"><span class="code">    &lt;!--配置映射文件--&gt;</span></span><br><span class="line"><span class="code">    &lt;mappers&gt;</span></span><br><span class="line"><span class="code">       &lt;!-- &lt;mapper resource="com/itheima/mapper/UserMapper.xml"&gt;&lt;/mapper&gt;--&gt;</span></span><br><span class="line"><span class="code">        &lt;!--使用扫描包的方式有一个前置条件，映射文件命名必须跟映射接口一致，且在同一包下--&gt;</span></span><br><span class="line"><span class="code">        &lt;package name="com.xxx.mapper"&gt;&lt;/package&gt;</span></span><br><span class="line"><span class="code">    &lt;/mappers&gt;</span></span><br></pre></td></tr></table></figure><h3 id="1-5-environments标签"><a href="#1-5-environments标签" class="headerlink" title="1.5 environments标签"></a>1.5 environments标签</h3><blockquote><p>数据源环境配置</p></blockquote><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">"mysql"</span>&gt;</span></span></span><br><span class="line"><span class="code">    &lt;environment id="mysql"&gt;</span></span><br><span class="line"><span class="code">    &lt;!--事务管理器：使用JDBC--&gt;</span></span><br><span class="line"><span class="code">        &lt;transactionManager type="JDBC"/&gt;</span></span><br><span class="line"><span class="code">        &lt;!--数据源：使用内置连接池--&gt;</span></span><br><span class="line"><span class="code">        &lt;dataSource type="POOLED"&gt;</span></span><br><span class="line"><span class="code">            &lt;property name="driver" value="$&#123;jdbc.driver&#125;"/&gt;</span></span><br><span class="line"><span class="code">            &lt;property name="url" value="$&#123;jdbc.url&#125;"/&gt;</span></span><br><span class="line"><span class="code">            &lt;property name="username" value="$&#123;jdbc.username&#125;"/&gt;</span></span><br><span class="line"><span class="code">            &lt;property name="password" value="$&#123;jdbc.password&#125;"/&gt;</span></span><br><span class="line"><span class="code">        &lt;/dataSource&gt;</span></span><br><span class="line"><span class="code">    &lt;/environment&gt;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span></span><br></pre></td></tr></table></figure><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1. </span>其中，事务管理器（transactionManager）类型有两种：</span><br><span class="line"><span class="bullet">* </span>JDBC：</span><br><span class="line"><span class="code">这个配置就是直接使用了JDBC 的提交和回滚设置，它依赖于从数据源得到的连接来管理事务作用域。</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">* </span>MANAGED：</span><br><span class="line"><span class="code">这个配置几乎没做什么。它从来不提交或回滚一个连接，而是让容器来管理事务的整个生命周期。</span></span><br><span class="line"><span class="code">例如：mybatis与spring整合后，事务交给spring容器管理。</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">2. </span>其中，数据源（dataSource）常用类型有二种：</span><br><span class="line"><span class="bullet">* </span>UNPOOLED：</span><br><span class="line"><span class="code">这个数据源的实现只是每次被请求时打开和关闭连接。</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">* </span>POOLED：</span><br><span class="line"><span class="code">这种数据源的实现利用“池”的概念将 JDBC 连接对象组织起来。</span></span><br></pre></td></tr></table></figure><h2 id="二、Mybatis注解"><a href="#二、Mybatis注解" class="headerlink" title="二、Mybatis注解"></a>二、Mybatis注解</h2><p>近年来注解开发越来越流行，Mybatis也可以使用注解开发方式，这样我们就可以减少编写Mapper映射文件了。我们先围绕一些基本的CRUD来学习，再学习复杂映射多表操作。</p><h3 id="2-1-Mybatis常用注解"><a href="#2-1-Mybatis常用注解" class="headerlink" title="2.1 Mybatis常用注解"></a>2.1 Mybatis常用注解</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">* </span>@Insert：实现新增，代替了<span class="xml"><span class="tag">&lt;<span class="name">insert</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="bullet">* </span>@Update：实现更新，代替了<span class="xml"><span class="tag">&lt;<span class="name">update</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">update</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="bullet">* </span>@Delete：实现删除，代替了<span class="xml"><span class="tag">&lt;<span class="name">delete</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="bullet">* </span>@Select：实现查询，代替了<span class="xml"><span class="tag">&lt;<span class="name">select</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="bullet">* </span>@Result：实现结果集封装，代替了<span class="xml"><span class="tag">&lt;<span class="name">result</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="bullet">* </span>@Results：可以与@Result 一起使用，封装多个结果集，代替了<span class="xml"><span class="tag">&lt;<span class="name">resultMap</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="bullet">* </span>@One：实现一对一结果集封装，代替了<span class="xml"><span class="tag">&lt;<span class="name">association</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">association</span>&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="bullet">* </span>@Many：实现一对多结果集封装，代替了<span class="xml"><span class="tag">&lt;<span class="name">collection</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">collection</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h3 id="2-2-Mybatis注解单表操作"><a href="#2-2-Mybatis注解单表操作" class="headerlink" title="2.2 Mybatis注解单表操作"></a>2.2 Mybatis注解单表操作</h3><p><strong>代码示例：</strong></p><ul><li>UserMapper接口</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserMapper</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Select</span>(<span class="string">"select * from user where id = #&#123;id&#125;"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">findById</span><span class="params">(Integer id)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Select</span>(<span class="string">"select id as uid ,username as uname,birthday as bir , sex as gender ,address as addr from user"</span>)</span><br><span class="line">    <span class="meta">@Results</span>(&#123;</span><br><span class="line">            <span class="meta">@Result</span>(column = <span class="string">"uid"</span>, property = <span class="string">"id"</span>, id = <span class="keyword">true</span>),  <span class="comment">// 相当于&lt;id&gt;&lt;/id&gt;</span></span><br><span class="line">            <span class="meta">@Result</span>(column = <span class="string">"uname"</span>, property = <span class="string">"username"</span>), <span class="comment">// 相当于&lt;result&gt;&lt;/result&gt;</span></span><br><span class="line">            <span class="meta">@Result</span>(column = <span class="string">"bir"</span>, property = <span class="string">"birthday"</span>),</span><br><span class="line">            <span class="meta">@Result</span>(column = <span class="string">"gender"</span>, property = <span class="string">"sex"</span>),</span><br><span class="line">            <span class="meta">@Result</span>(column = <span class="string">"addr"</span>, property = <span class="string">"address"</span>)</span><br><span class="line">    &#125;) <span class="comment">// 相当于&lt;resultMap&gt;&lt;/resultMap&gt;</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findAll</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Insert</span>(<span class="string">"insert into user values(null,#&#123;username&#125;,#&#123;birthday&#125;,#&#123;sex&#125;,#&#123;address&#125;)"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">(User user)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Update</span>(<span class="string">"update user set username = #&#123;username&#125;,sex = #&#123;sex&#125;,address = #&#123;address&#125;,birthday= #&#123;birthday&#125; where id = #&#123;id&#125;"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">(User user)</span></span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Delete</span>(<span class="string">"delete from user where id = #&#123;id&#125;"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delete</span><span class="params">(Integer id)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>测试</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserMapperTest</span> <span class="keyword">extends</span> <span class="title">BaseMapperTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">// 获取代理对象</span></span><br><span class="line">        UserMapper userMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        <span class="comment">// 查询单个</span></span><br><span class="line">       <span class="comment">/* User user = userMapper.findById(41);</span></span><br><span class="line"><span class="comment">        System.out.println(user);*/</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 查询所有</span></span><br><span class="line">       <span class="comment">/* List&lt;User&gt; list = userMapper.findAll();</span></span><br><span class="line"><span class="comment">        for (User user : list) &#123;</span></span><br><span class="line"><span class="comment">            System.out.println(user);</span></span><br><span class="line"><span class="comment">        &#125;*/</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 添加</span></span><br><span class="line">       <span class="comment">/* User user = new User();</span></span><br><span class="line"><span class="comment">        user.setUsername("印度小啊三");</span></span><br><span class="line"><span class="comment">        user.setAddress("恒河");</span></span><br><span class="line"><span class="comment">        user.setBirthday(new Date());</span></span><br><span class="line"><span class="comment">        user.setSex("不详");</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        userMapper.save(user);*/</span></span><br><span class="line"></span><br><span class="line">       <span class="comment">// 修改</span></span><br><span class="line">        <span class="comment">/*User user = new User();</span></span><br><span class="line"><span class="comment">        user.setId(58);</span></span><br><span class="line"><span class="comment">        user.setUsername("印度啊三");</span></span><br><span class="line"><span class="comment">        user.setAddress("恒河");</span></span><br><span class="line"><span class="comment">        user.setBirthday(new Date());</span></span><br><span class="line"><span class="comment">        user.setSex("男");</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        userMapper.update(user);*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 删除</span></span><br><span class="line">        userMapper.delete(<span class="number">58</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-3-Mybatis注解多表操作"><a href="#2-3-Mybatis注解多表操作" class="headerlink" title="2.3 Mybatis注解多表操作"></a>2.3 Mybatis注解多表操作</h3><p>之前我们在映射文件中通过配置<code>&lt;resultMap&gt;、&lt;association&gt;、&lt;collection&gt;</code>来实现复杂关系映射。</p><p>使用注解开发后，我们可以使用<code>@Results、@Result，@One、@Many</code>注解组合完成复杂关系的配置。</p><p><img data-src="/img/%E5%A4%9A%E8%A1%A8%E6%9F%A5%E8%AF%A2%E7%9B%B8%E5%85%B3%E6%B3%A8%E8%A7%A31.png" alt="多表查询相关注解1"></p><p><img data-src="/img/%E5%A4%9A%E8%A1%A8%E6%9F%A5%E8%AF%A2%E7%9B%B8%E5%85%B3%E6%B3%A8%E8%A7%A32.png" alt="多表查询相关注解2"></p><h4 id="2-3-1-一对一查询基于注解开发"><a href="#2-3-1-一对一查询基于注解开发" class="headerlink" title="2.3.1 一对一查询基于注解开发"></a>2.3.1 一对一查询基于注解开发</h4><blockquote><p>需求：查询一个订单，与此同时查询出该订单所属的用户</p></blockquote><p><strong>一对一查询语句</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> orders <span class="keyword">where</span> <span class="keyword">id</span> = <span class="comment">#&#123;id&#125;;</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="string">`user`</span> <span class="keyword">WHERE</span> <span class="keyword">id</span> = <span class="comment">#&#123;订单的uid&#125;;</span></span><br></pre></td></tr></table></figure><ul><li>OrderMapper接口</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">OrderMapper</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 一对一关系查询</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Select</span>(<span class="string">"select * from orders where id = #&#123;id&#125;"</span>)</span><br><span class="line">    <span class="function">Order <span class="title">findById</span><span class="params">(Integer id)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>UserMapper接口</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 查询用户信息及其下属的订单信息角色信息</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Select</span>(<span class="string">"select * from user where id = #&#123;id&#125;"</span>)</span><br><span class="line"><span class="function">User <span class="title">findById</span><span class="params">(Integer id)</span></span>;</span><br></pre></td></tr></table></figure><ul><li>注解嵌套</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">OrderMapper</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 一对一关系查询</span></span><br><span class="line"><span class="comment">     * 查询订单id及所属用户</span></span><br><span class="line"><span class="comment">     * 根据订单id查询订单</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Select</span>(<span class="string">"select * from orders where id = #&#123;id&#125;"</span>)</span><br><span class="line">    <span class="meta">@Results</span>(&#123;</span><br><span class="line">            <span class="meta">@Result</span>(column = <span class="string">"id"</span>,property = <span class="string">"id"</span>,id = <span class="keyword">true</span>),</span><br><span class="line">            <span class="meta">@Result</span>(column = <span class="string">"ordertime"</span>,property = <span class="string">"ordertime"</span>),</span><br><span class="line">            <span class="meta">@Result</span>(column = <span class="string">"money"</span>,property = <span class="string">"money"</span>),</span><br><span class="line">        <span class="comment">// 一对一关系</span></span><br><span class="line">            <span class="meta">@Result</span>(property = <span class="string">"user"</span>,column = <span class="string">"uid"</span>,one = <span class="meta">@One</span>(select = <span class="string">"com.xxx.mapper.UserMapper.findById"</span>))</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="function">Order <span class="title">findById</span><span class="params">(Integer id)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>测试</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">    <span class="comment">//工具类获取sqlSession对象</span></span><br><span class="line">    SqlSession sqlSession = MybatisUtils.openSession();</span><br><span class="line">    </span><br><span class="line">    OrderMapper mapper = sqlSession.getMapper(OrderMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    Order order = mapper.findById(<span class="number">1</span>);</span><br><span class="line">    System.out.println(order);</span><br><span class="line">    <span class="comment">//工具类释放资源</span></span><br><span class="line">    MybatisUtils.releases(sqlSession);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-3-2-一对多基于注解开发"><a href="#2-3-2-一对多基于注解开发" class="headerlink" title="2.3.2 一对多基于注解开发"></a>2.3.2 一对多基于注解开发</h4><blockquote><p>需求：查询一个用户，与此同时查询出该用户具有的订单</p></blockquote><p><strong>一对多查询语句</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="string">`user`</span> <span class="keyword">where</span> <span class="keyword">id</span> = <span class="comment">#&#123;id&#125;;</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> orders <span class="keyword">where</span> uid = <span class="comment">#&#123;用户id&#125;;</span></span><br></pre></td></tr></table></figure><ul><li>UserMapper接口</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 一对多嵌套查询</span></span><br><span class="line"><span class="meta">@Select</span>(<span class="string">"SELECT * FROM `user` WHERE id = #&#123;id&#125;"</span>)</span><br><span class="line"><span class="meta">@Results</span>(&#123;</span><br><span class="line">    <span class="meta">@Result</span>(column = <span class="string">"id"</span>,property = <span class="string">"id"</span>,id=<span class="keyword">true</span>),</span><br><span class="line">    <span class="meta">@Result</span>(column = <span class="string">"birthday"</span>,property =<span class="string">"birthday"</span> ),</span><br><span class="line">    <span class="meta">@Result</span>(column = <span class="string">"sex"</span>,property =<span class="string">"sex"</span> ),</span><br><span class="line">    <span class="meta">@Result</span>(column = <span class="string">"username"</span>,property =<span class="string">"username"</span> ),</span><br><span class="line">    <span class="meta">@Result</span>(column = <span class="string">"address"</span>,property =<span class="string">"address"</span> ),</span><br><span class="line">    <span class="comment">// &lt;collection property="orderList" column="id" select="com.xxx.mapper.OrderMapper.findByUid"&gt;&lt;/collection&gt;</span></span><br><span class="line">    <span class="meta">@Result</span>(property = <span class="string">"orderList"</span>,column = <span class="string">"id"</span>,many = <span class="meta">@Many</span>(select = <span class="string">"com.xxx.mapper.OrderMapper.findByUid"</span>))</span><br><span class="line">&#125;)</span><br><span class="line"><span class="function"><span class="keyword">public</span> User <span class="title">findByIdWithOrderList</span><span class="params">(Integer id)</span></span>;</span><br></pre></td></tr></table></figure><ul><li>测试</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 一对多测试</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    <span class="comment">//工具类获取sqlSession对象</span></span><br><span class="line">    SqlSession sqlSession = MybatisUtils.openSession();</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 创建代理对象</span></span><br><span class="line">    UserMapper userMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    <span class="comment">// 根据用户id查询</span></span><br><span class="line">    User user = userMapper.findByIdWithOrderList(<span class="number">41</span>);</span><br><span class="line">    System.out.println(user.getOrderList());</span><br><span class="line">    System.out.println(user);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//工具类释放资源</span></span><br><span class="line">    MybatisUtils.releases(sqlSession);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-3-3-多对多基于注解开发"><a href="#2-3-3-多对多基于注解开发" class="headerlink" title="2.3.3 多对多基于注解开发"></a>2.3.3 多对多基于注解开发</h4><blockquote><p>需求：查询一个用户，与此同时查询该用户所具有的角色列表</p></blockquote><p><strong>sql语句</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="keyword">user</span> <span class="keyword">where</span> <span class="keyword">id</span> = <span class="comment">#&#123;id&#125;</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="keyword">role</span> r <span class="keyword">INNER</span> <span class="keyword">JOIN</span> user_role ur <span class="keyword">ON</span> r.id = ur.rid <span class="keyword">WHERE</span> uid = <span class="comment">#&#123;用户id&#125;</span></span><br></pre></td></tr></table></figure><p>代码示例</p><ul><li>UserMapper接口</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Select</span>(<span class="string">"select * from user where id = #&#123;id&#125;"</span>)</span><br><span class="line"><span class="meta">@Results</span>(&#123;</span><br><span class="line">    <span class="meta">@Result</span>(column = <span class="string">"id"</span>,property = <span class="string">"id"</span>,id = <span class="keyword">true</span>),</span><br><span class="line">    <span class="meta">@Result</span>(column = <span class="string">"username"</span>, property = <span class="string">"username"</span>),</span><br><span class="line">    <span class="meta">@Result</span>(column = <span class="string">"birthday"</span>, property = <span class="string">"birthday"</span>),</span><br><span class="line">    <span class="meta">@Result</span>(column = <span class="string">"sex"</span>, property = <span class="string">"sex"</span>),</span><br><span class="line">    <span class="meta">@Result</span>(column = <span class="string">"address"</span>, property = <span class="string">"address"</span>),</span><br><span class="line">    <span class="meta">@Result</span>(property = <span class="string">"orderList"</span>, column = <span class="string">"id"</span>, many = <span class="meta">@Many</span>(select = <span class="string">"com.xxx.mapper.OrderMapper.findByUid"</span>)),</span><br><span class="line">    <span class="meta">@Result</span>(property = <span class="string">"roleList"</span>, column = <span class="string">"id"</span>, many = <span class="meta">@Many</span>(select = <span class="string">"com.xxx.mapper.RoleMapper.findByUid"</span>))</span><br><span class="line">&#125;)</span><br><span class="line"><span class="function">User <span class="title">findById</span><span class="params">(Integer id)</span></span>;</span><br></pre></td></tr></table></figure><ul><li>RoleMapper接口</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 根据用户id查询角色信息</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> uid 用户id</span></span><br><span class="line"><span class="comment">* <span class="doctag">@return</span> 角色列表</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">@Select</span>(<span class="string">"SELECT * FROM role r INNER JOIN user_role ur ON r.id = ur.rid WHERE uid = #&#123;uid&#125;"</span>)</span><br><span class="line"><span class="function">List&lt;Role&gt; <span class="title">findByUid</span><span class="params">(Integer uid)</span></span>;</span><br></pre></td></tr></table></figure><ul><li>测试</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 多对多(一对多)关系查询</span></span><br><span class="line"><span class="comment">     * 查询用户及其角色信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">    <span class="comment">//工具类获取sqlSession对象</span></span><br><span class="line">    SqlSession sqlSession = MybatisUtils.openSession();</span><br><span class="line">   </span><br><span class="line">    UserMapper mapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    User user = mapper.findById(<span class="number">41</span>);</span><br><span class="line">    System.out.println(user.getRoleList());</span><br><span class="line">    System.out.println(user);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//工具类释放资源</span></span><br><span class="line">    MybatisUtils.releases(sqlSession);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-4-注解配置延迟加载"><a href="#2-4-注解配置延迟加载" class="headerlink" title="2.4 注解配置延迟加载"></a>2.4 注解配置延迟加载</h3><blockquote><p>不管是一对一、一对多还是多对多 ，在注解配置中都有fetchType的属性</p></blockquote><p>在<code>@One</code>和<code>@Many</code>注解中都提供了一个属性，<code>fetchType</code>，是一个枚举类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> FetchType &#123;</span><br><span class="line">    LAZY,</span><br><span class="line">    EAGER,</span><br><span class="line">    DEFAULT;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">FetchType</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>三种取值分别的含义是：</p><ul><li><code>fetchType = FetchType.LAZY</code>：表示懒加载</li><li><code>fetchType = FetchType.EAGER</code>：表示立即加载</li><li><code>fetchType = FetchType.DEFAULT</code>：表示使用全局配置</li></ul><p>代码示例：</p><h3 id="2-5-二级缓存"><a href="#2-5-二级缓存" class="headerlink" title="2.5 二级缓存"></a>2.5 二级缓存</h3><blockquote><p>在Mapper接口中使用注解配置二级缓存即可</p><ul><li>在接口上加上注解<code>@CacheNamespace</code>即可，表示使用了二级缓存<ul><li><strong>注意：要在对应的实体上实现序列化接口</strong></li></ul></li></ul></blockquote><p><strong>代码示例：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@CacheNamespace</span><span class="comment">//使用二级缓存</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserMapper</span> </span>&#123;...&#125;</span><br></pre></td></tr></table></figure><h2 id="三、Mybatis实现分页查询"><a href="#三、Mybatis实现分页查询" class="headerlink" title="三、Mybatis实现分页查询"></a>三、Mybatis实现分页查询</h2><blockquote><p>实现B/S架构的分页查询</p></blockquote><p>如何实现分页查询</p><ul><li><p>物理分页：可以操作数据库实现（MySQL的limit关键字）</p></li><li><p>逻辑分页：查询所有，通过java代码进行逻辑分页【已经淘汰】</p></li></ul><p>MySQL分页回顾：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- sql语法</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> 表名 <span class="keyword">limit</span> 开始索引,每页显示个数;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 模拟百度分页，共19条记录，一页展示5条</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 第一页</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> 表名 <span class="keyword">limit</span> <span class="number">0</span>,<span class="number">5</span>;</span><br><span class="line"><span class="comment">-- 第二页</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> 表名 <span class="keyword">limit</span> <span class="number">5</span>,<span class="number">5</span>;</span><br><span class="line"><span class="comment">-- 第三页</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> 表名 <span class="keyword">limit</span> <span class="number">10</span>,<span class="number">5</span>;</span><br><span class="line"><span class="comment">-- 第四页</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> 表名 <span class="keyword">limit</span> <span class="number">15</span>,<span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 索引公式</span></span><br><span class="line">index  = (当前页-1) × 每页显示个数;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 明确一个事项：当前页和每页显示的个数都是由用户(前端)提供的</span></span><br></pre></td></tr></table></figure><p>分页查询流程分析：</p><p><img data-src="/img/%E5%88%86%E9%A1%B5%E6%9F%A5%E8%AF%A2%E5%88%86%E6%9E%90.png" alt="分页查询分析"></p><ul><li>创建分页对象PageBean</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PageBean</span>&lt;<span class="title">E</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer totalCount;<span class="comment">// 总记录数</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer totalPage;<span class="comment">// 总页数</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> List&lt;E&gt; list;<span class="comment">// 结果集</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer pageNum;<span class="comment">// 当前页</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer pageSize;<span class="comment">// 每页个数</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>代码执行流程分析</li></ul><p><img data-src="/img/BS%E7%BB%93%E6%9E%84%E5%88%86%E9%A1%B5%E6%9F%A5%E8%AF%A2%E6%B5%81%E7%A8%8B%E5%88%86%E6%9E%90.png" alt="BS结构分页查询流程分析"></p><ul><li>service层核心代码：</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 分页查询</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> PageBean&lt;Route&gt; <span class="title">findByPage</span><span class="params">(Integer pageNum, Integer pageSize)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 获取RouteDao代理对象</span></span><br><span class="line">    SqlSession sqlSession = MyBatisUtils.openSession();</span><br><span class="line">    RouteMapper routeMapper = sqlSession.getMapper(RouteMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    <span class="comment">// 1.创建PageBean对象</span></span><br><span class="line">    PageBean&lt;Route&gt; pb = <span class="keyword">new</span> PageBean&lt;&gt;();</span><br><span class="line">    <span class="comment">// 2.封装当前页和每页个数</span></span><br><span class="line">    pb.setPageNum(pageNum);</span><br><span class="line">    pb.setPageSize(pageSize);</span><br><span class="line">    <span class="comment">// 3.调用dao查询总记录数并封装</span></span><br><span class="line">    Integer totalCount = routeMapper.findCount();</span><br><span class="line">    pb.setTotalCount(totalCount);</span><br><span class="line">    <span class="comment">// 4.计算总页数并封装</span></span><br><span class="line">    Integer totalPage = (<span class="keyword">int</span>) Math.ceil(totalCount * <span class="number">1.0</span> / pageSize);</span><br><span class="line">    pb.setTotalPage(totalPage);</span><br><span class="line">    <span class="comment">// 5.计算开始索引</span></span><br><span class="line">    Integer index = (pageNum - <span class="number">1</span>) * pageSize;</span><br><span class="line">    <span class="comment">// 6.调用dao查询结果集并封装</span></span><br><span class="line">    List&lt;Route&gt; list = routeMapper.findList(index,pageSize);</span><br><span class="line">    pb.setList(list);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 释放资源</span></span><br><span class="line">    MyBatisUtils.release(sqlSession);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 7.返回PageBean对象</span></span><br><span class="line">    <span class="keyword">return</span> pb;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>dao层核心(接口+映射文件)<ul><li>接口</li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 查询总记录数</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* <span class="doctag">@return</span> 总记录数</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function">Integer <span class="title">findTotalCount</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 分页查询</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> start    起始索引</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> pageSize 每页显示条数</span></span><br><span class="line"><span class="comment">* <span class="doctag">@return</span> 查询到的线路信息</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function">List&lt;Route&gt; <span class="title">findByPage</span><span class="params">(@Param(<span class="string">"start"</span>)</span> Integer start, @<span class="title">Param</span><span class="params">(<span class="string">"pageSize"</span>)</span> Integer pageSize)</span>;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.xxx.dao.RouteDao"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findTotalCount"</span> <span class="attr">resultType</span>=<span class="string">"java.lang.Integer"</span>&gt;</span></span><br><span class="line">        select count(*) from tab_route</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByPage"</span> <span class="attr">resultType</span>=<span class="string">"com.xxx.domain.Route"</span>&gt;</span></span><br><span class="line">        select * from tab_route limit #&#123;start&#125;,#&#123;pageSize&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="四、Lombok和MybatisX插件"><a href="#四、Lombok和MybatisX插件" class="headerlink" title="四、Lombok和MybatisX插件"></a>四、Lombok和MybatisX插件</h2><p>Lombok提供了简单的注解的形式来帮助我们简化消除一些必须有但显得很臃肿的 java 代码。通过使用对应的注解，可以在编译源码的时候生成对应的方法，所以不会影响任何运行效率。</p><h3 id="4-1-Lombok"><a href="#4-1-Lombok" class="headerlink" title="4.1 Lombok"></a>4.1 Lombok</h3><h4 id="4-1-1-常用的-Lombok注解"><a href="#4-1-1-常用的-Lombok注解" class="headerlink" title="4.1.1 常用的 Lombok注解"></a>4.1.1 常用的 Lombok注解</h4><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">* </span>@Data：注解在类上；生成toString，getter/setter</span><br><span class="line"></span><br><span class="line"><span class="bullet">* </span>@NoArgsConstructor：注解在类上；为类提供一个无参的构造方法</span><br><span class="line"></span><br><span class="line"><span class="bullet">* </span>@AllArgsConstructor：注解在类上；为类提供一个全参的构造方法</span><br></pre></td></tr></table></figure><h4 id="4-1-2-IDEA配置Lombok插件支持"><a href="#4-1-2-IDEA配置Lombok插件支持" class="headerlink" title="4.1.2 IDEA配置Lombok插件支持"></a>4.1.2 IDEA配置Lombok插件支持</h4><ul><li>在设置setting 中找到plugins。在检索框中检索lombok：</li></ul><p><img data-src="/img/Lombok%E6%8F%92%E4%BB%B6%E5%AE%89%E8%A3%851.png" alt="Lombok插件安装1"></p><ul><li>在setting中找到下图界面，在右侧红框出打钩：</li></ul><p><img data-src="/img/Lombok%E6%8F%92%E4%BB%B6%E5%AE%89%E8%A3%852.png" alt="Lombok插件安装2"></p><ul><li>重启idea，大功告成</li></ul><blockquote><p>注意：使用Lombok注解生成get/set等方法也需要导入Lombok的jar包才可以使用</p></blockquote><p><strong>Lombok注解使用演示：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Route</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> rid;<span class="comment">//线路id</span></span><br><span class="line">    <span class="keyword">private</span> String rname;<span class="comment">//线路名称</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">double</span> price;<span class="comment">//线路价格</span></span><br><span class="line">    <span class="keyword">private</span> String rimage;<span class="comment">//线路图</span></span><br><span class="line">    <span class="keyword">private</span> String routeIntroduce;<span class="comment">// 线路描述</span></span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-2-MybatisX"><a href="#4-2-MybatisX" class="headerlink" title="4.2 MybatisX"></a>4.2 MybatisX</h3><p>MybatisX 是一款基于 IDEA 的快速开发插件，为效率而生，主要功能有：</p><ul><li>Java 与 XML 调回跳转</li><li>Mapper 方法自动生成 XML</li></ul><h4 id="4-2-1-IDEA配置MybatisX插件支持"><a href="#4-2-1-IDEA配置MybatisX插件支持" class="headerlink" title="4.2.1 IDEA配置MybatisX插件支持"></a>4.2.1 IDEA配置MybatisX插件支持</h4><p>打开 IDEA，进入 File -&gt; Settings -&gt; Plugins，搜索 <code>mybatisx</code> 并安装</p><blockquote><p>IDEA2018操作</p></blockquote><p><img data-src="/img/MybatisX%E6%8F%92%E4%BB%B6%E5%AE%89%E8%A3%85.png" alt="MybatisX插件安装"></p><blockquote><p>安装完后重启IDEA</p></blockquote><h4 id="4-2-2-项目中使用"><a href="#4-2-2-项目中使用" class="headerlink" title="4.2.2 项目中使用"></a>4.2.2 项目中使用</h4><p><img data-src="/img/%E4%BD%BF%E7%94%A8MybatisX.gif" alt="使用MybatisX"></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一-核心配置文件总结&quot;&gt;&lt;a href=&quot;#一-核心配置文件总结&quot; class=&quot;headerlink&quot; title=&quot;一  核心配置文件总结&quot;&gt;&lt;/a&gt;一  核心配置文件总结&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;SqlMapConfig.xml 中配置的内容和顺序如下：&lt;/strong&gt;  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;properties（属性）&lt;/li&gt;
&lt;li&gt;settings（全局配置参数）&lt;/li&gt;
&lt;li&gt;typeAliases（类型别名）&lt;/li&gt;
&lt;li&gt;typeHandlers（类型处理器）&lt;/li&gt;
&lt;li&gt;objectFactory（对象工厂）&lt;/li&gt;
&lt;li&gt;plugins（插件）&lt;/li&gt;
&lt;li&gt;environments（数据库环境配置）&lt;ul&gt;
&lt;li&gt;environment（数据库环境子属性对象）&lt;ul&gt;
&lt;li&gt;transactionManager（事务管理）&lt;/li&gt;
&lt;li&gt;dataSource（数据源）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;mappers（映射器）&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="框架" scheme="http://sunmoon.com/categories/%E6%A1%86%E6%9E%B6/"/>
    
      <category term="Mybatis" scheme="http://sunmoon.com/categories/%E6%A1%86%E6%9E%B6/Mybatis/"/>
    
    
      <category term="Mybatis注解" scheme="http://sunmoon.com/tags/Mybatis%E6%B3%A8%E8%A7%A3/"/>
    
      <category term="分页查询" scheme="http://sunmoon.com/tags/%E5%88%86%E9%A1%B5%E6%9F%A5%E8%AF%A2/"/>
    
      <category term="Lombok插件" scheme="http://sunmoon.com/tags/Lombok%E6%8F%92%E4%BB%B6/"/>
    
      <category term="MybatisX插件" scheme="http://sunmoon.com/tags/MybatisX%E6%8F%92%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>Mybatis高级</title>
    <link href="http://sunmoon.com/2020/09/07/Mybatis%E9%AB%98%E7%BA%A7/"/>
    <id>http://sunmoon.com/2020/09/07/Mybatis%E9%AB%98%E7%BA%A7/</id>
    <published>2020-09-07T14:17:41.000Z</published>
    <updated>2020-09-07T14:24:38.577Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、Mybatis动态SQL"><a href="#一、Mybatis动态SQL" class="headerlink" title="一、Mybatis动态SQL"></a>一、Mybatis动态SQL</h2><h3 id="1-1-什么是动态SQL"><a href="#1-1-什么是动态SQL" class="headerlink" title="1.1 什么是动态SQL"></a>1.1 什么是动态SQL</h3><p><strong>先来看一个需求</strong></p><p>把页面输入的id和username封装到User实体中，并作为条件查询数据库</p><p><img data-src="/img/%E5%8A%A8%E6%80%81sql_%E9%9C%80%E6%B1%82.png" alt="动态sql_需求"></p><p><strong>这个时候我们执行的sql就有多种可能</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">-- 如果id和用户名不为空</span><br><span class="line">select * from user where id&#x3D; #&#123;id&#125; and username &#x3D; #&#123;username&#125;</span><br><span class="line"></span><br><span class="line">-- 如果只有id</span><br><span class="line">select * from user where id&#x3D; #&#123;id&#125; </span><br><span class="line"></span><br><span class="line">-- 如果只有用户名</span><br><span class="line">select * from user where username &#x3D; #&#123;username&#125;</span><br><span class="line"></span><br><span class="line">-- 如果id和用户名都为空</span><br><span class="line">select * from user</span><br></pre></td></tr></table></figure><blockquote><p>像上面这样, 根据传入的参数不同, 需要执行的SQL的结构就会不同，这就是动态SQL。</p></blockquote><a id="more"></a><h3 id="1-2-环境搭建"><a href="#1-2-环境搭建" class="headerlink" title="1.2 环境搭建"></a>1.2 环境搭建</h3><p><img data-src="/img/%E5%8A%A8%E6%80%81sql_%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA.png" alt="动态sql_环境搭建"></p><h3 id="1-3-if-和-where-标签"><a href="#1-3-if-和-where-标签" class="headerlink" title="1.3 if 和 where 标签"></a>1.3 if 和 where 标签</h3><p>需求：页面输入的id和username封装到User实体中，并作为条件查询数据库</p><h4 id="接口"><a href="#接口" class="headerlink" title="接口"></a>接口</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// if 和 where 标签</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findByIf</span><span class="params">(User user)</span></span>;</span><br></pre></td></tr></table></figure><h4 id="映射"><a href="#映射" class="headerlink" title="映射"></a>映射</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    if和where标签</span></span><br><span class="line"><span class="comment">    if：条件判断</span></span><br><span class="line"><span class="comment">    where：动态where,如果没有条件where关键字不在拼接，如果有条件去掉第一个 and | or</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByIf"</span> <span class="attr">parameterType</span>=<span class="string">"com.sun.domain.User"</span> <span class="attr">resultType</span>=<span class="string">"com.sun.domain.User"</span>&gt;</span></span><br><span class="line">    select * from user</span><br><span class="line">   <span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"id != null"</span>&gt;</span></span><br><span class="line">           and id = #&#123;id&#125;</span><br><span class="line">       <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"username != null"</span>&gt;</span></span><br><span class="line">           and username = #&#123;username&#125;</span><br><span class="line">       <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserMapperTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> SqlSession sqlSession;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> UserMapper userMapper;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Before</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">before</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 1.获取sqlSession</span></span><br><span class="line">        sqlSession = MyBatisUtils.openSession();</span><br><span class="line">        <span class="comment">// 2.创建UserMapper代理对象</span></span><br><span class="line">        userMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@After</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">after</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 4.释放资源</span></span><br><span class="line">        MyBatisUtils.release(sqlSession);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// if和where标签测试</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test02</span><span class="params">()</span><span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        <span class="comment">// 封装条件</span></span><br><span class="line">        User user = <span class="keyword">new</span> User();</span><br><span class="line">         user.setId(<span class="number">41</span>);</span><br><span class="line">         user.setUsername(<span class="string">"老王"</span>);</span><br><span class="line">        <span class="comment">// 执行查询</span></span><br><span class="line">        List&lt;User&gt; list = userMapper.findByIf(user);</span><br><span class="line">        System.out.println(list);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h4><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">* </span>if标签用于单分支条件判断, 相当于java中的if关键字</span><br><span class="line"><span class="bullet">* </span>where标签作用</span><br><span class="line"><span class="code">当where代码块中的条件都不成立的时候, where不在拼接</span></span><br><span class="line"><span class="code">当where代码块中的条件至少有一个成立的时候，它会帮你去掉第一个and|or</span></span><br></pre></td></tr></table></figure><h3 id="1-4-if-和-set-标签"><a href="#1-4-if-和-set-标签" class="headerlink" title="1.4 if 和 set 标签"></a>1.4 if 和 set 标签</h3><blockquote><p>需求：动态更新user表数据，如果该属性有值就更新，没有值不做处理</p></blockquote><h4 id="接口-1"><a href="#接口-1" class="headerlink" title="接口"></a>接口</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// set标签</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateIf</span><span class="params">(User user)</span></span>;</span><br></pre></td></tr></table></figure><h4 id="映射-1"><a href="#映射-1" class="headerlink" title="映射"></a>映射</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--set标签：帮你去掉最后一个逗号 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">"updateIf"</span> <span class="attr">parameterType</span>=<span class="string">"com.sun.domain.User"</span>&gt;</span></span><br><span class="line">    update user</span><br><span class="line">    <span class="tag">&lt;<span class="name">set</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"username != null"</span>&gt;</span></span><br><span class="line">            username = #&#123;username&#125; ,</span><br><span class="line">        <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"birthday != null"</span>&gt;</span></span><br><span class="line">            birthday = #&#123;birthday&#125; ,</span><br><span class="line">        <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"sex != null"</span>&gt;</span></span><br><span class="line">            sex = #&#123;sex&#125; ,</span><br><span class="line">        <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"address != null"</span>&gt;</span></span><br><span class="line">            address = #&#123;address&#125;,</span><br><span class="line">        <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line">    where id = #&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="测试-1"><a href="#测试-1" class="headerlink" title="测试"></a>测试</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// set标签</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test03</span><span class="params">()</span><span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">    <span class="comment">// 封装修改的内容</span></span><br><span class="line">    User user = <span class="keyword">new</span> User();</span><br><span class="line">    user.setId(<span class="number">54</span>);</span><br><span class="line">    user.setUsername(<span class="string">"西西"</span>);</span><br><span class="line">    <span class="comment">// 执行更新</span></span><br><span class="line">    userMapper.updateIf(user);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="小结-1"><a href="#小结-1" class="headerlink" title="小结"></a>小结</h4><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">* </span>set标签作用</span><br><span class="line"><span class="code">在代码块之前加入一个set关键字  </span></span><br><span class="line"><span class="code">删除掉代码块中的最后一个逗号（,）</span></span><br></pre></td></tr></table></figure><h3 id="1-5-foreach标签"><a href="#1-5-foreach标签" class="headerlink" title="1.5 foreach标签"></a>1.5 foreach标签</h3><blockquote><p>需求：根据多个id查询，user对象的集合</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> <span class="keyword">id</span> <span class="keyword">in</span> (<span class="number">41</span>,<span class="number">43</span>,<span class="number">46</span>);</span><br></pre></td></tr></table></figure><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">* </span><span class="xml"><span class="tag">&lt;<span class="name">foreach</span>&gt;</span></span>标签用于遍历集合，它的属性：</span><br><span class="line"></span><br><span class="line"><span class="code">    • collection：代表要遍历的集合元素</span></span><br><span class="line"></span><br><span class="line"><span class="code">    • open：代表语句的开始部分</span></span><br><span class="line"></span><br><span class="line"><span class="code">    • close：代表结束部分</span></span><br><span class="line"></span><br><span class="line"><span class="code">    • item：代表遍历集合的每个元素，生成的变量名</span></span><br><span class="line"></span><br><span class="line"><span class="code">    • sperator：代表分隔符</span></span><br></pre></td></tr></table></figure><p><strong>传递参数三种场景</strong></p><ul><li>普通list集合</li><li>普通array数组</li><li>实体中list | array</li></ul><h4 id="接口-2"><a href="#接口-2" class="headerlink" title="接口"></a>接口</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 普通list集合</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findList</span><span class="params">(List&lt;Integer&gt; ids)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 普通array数组</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findArray</span><span class="params">(Integer[] ids)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 实体中的list属性</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findQueryVo</span><span class="params">(QueryVo queryVo)</span></span>;</span><br></pre></td></tr></table></figure><h4 id="映射-2"><a href="#映射-2" class="headerlink" title="映射"></a>映射</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    foreach之普通list</span></span><br><span class="line"><span class="comment">        collection属性值只能为：list | collection</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findList"</span> <span class="attr">parameterType</span>=<span class="string">"list"</span> <span class="attr">resultType</span>=<span class="string">"com.sun.domain.User"</span>&gt;</span></span><br><span class="line">    select * from user where id in</span><br><span class="line">    <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">collection</span>=<span class="string">"list"</span> <span class="attr">open</span>=<span class="string">"("</span> <span class="attr">close</span>=<span class="string">")"</span> <span class="attr">item</span>=<span class="string">"id"</span> <span class="attr">separator</span>=<span class="string">","</span>&gt;</span></span><br><span class="line">        #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    foreach之普通array</span></span><br><span class="line"><span class="comment">        collection属性值只能为：array</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findArray"</span> <span class="attr">parameterType</span>=<span class="string">"integer"</span> <span class="attr">resultType</span>=<span class="string">"com.sun.domain.User"</span>&gt;</span></span><br><span class="line">    select * from user where id in</span><br><span class="line">    <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">collection</span>=<span class="string">"array"</span> <span class="attr">open</span>=<span class="string">"("</span> <span class="attr">close</span>=<span class="string">")"</span> <span class="attr">item</span>=<span class="string">"id"</span> <span class="attr">separator</span>=<span class="string">","</span>&gt;</span></span><br><span class="line">        #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    foreach之实体中的list属性</span></span><br><span class="line"><span class="comment">          collection属性值只能为：list属性的名称</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findQueryVo"</span> <span class="attr">parameterType</span>=<span class="string">"com.sun.domain.QueryVo"</span> <span class="attr">resultType</span>=<span class="string">"com.sun.domain.User"</span>&gt;</span></span><br><span class="line">     select * from user where id in</span><br><span class="line">     <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">collection</span>=<span class="string">"ids"</span> <span class="attr">open</span>=<span class="string">"("</span> <span class="attr">close</span>=<span class="string">")"</span> <span class="attr">item</span>=<span class="string">"id"</span> <span class="attr">separator</span>=<span class="string">","</span>&gt;</span></span><br><span class="line">         #&#123;id&#125;</span><br><span class="line">     <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="测试-2"><a href="#测试-2" class="headerlink" title="测试"></a>测试</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// foreach标签</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test04</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    <span class="comment">// 普通list</span></span><br><span class="line">  <span class="comment">/*  List&lt;Integer&gt; ids = new ArrayList&lt;&gt;();</span></span><br><span class="line"><span class="comment">    ids.add(41);</span></span><br><span class="line"><span class="comment">    ids.add(43);</span></span><br><span class="line"><span class="comment">    ids.add(46);</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    List&lt;User&gt; resultList1 = userMapper.findList(ids);</span></span><br><span class="line"><span class="comment">    System.out.println(resultList1);*/</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 普通array</span></span><br><span class="line">  <span class="comment">/*  Integer[] ids = &#123;41, 43, 46&#125;;</span></span><br><span class="line"><span class="comment">    List&lt;User&gt; userList = userMapper.findArray(ids);</span></span><br><span class="line"><span class="comment">    System.out.println(userList);*/</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 实体list属性</span></span><br><span class="line">    QueryVo queryVo = <span class="keyword">new</span> QueryVo();</span><br><span class="line">    List&lt;Integer&gt; ids = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    ids.add(<span class="number">41</span>);</span><br><span class="line">    ids.add(<span class="number">43</span>);</span><br><span class="line">    ids.add(<span class="number">46</span>);</span><br><span class="line">    queryVo.setIds(ids);</span><br><span class="line">    List&lt;User&gt; userList = userMapper.findQueryVo(queryVo);</span><br><span class="line">    System.out.println(userList);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="小结-2"><a href="#小结-2" class="headerlink" title="小结"></a>小结</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">* foreach标签的collection属性根据传输的java类型不同而采用不同的值</span><br><span class="line">集合：list   </span><br><span class="line">数组：array   </span><br><span class="line">实体：实体的属性名</span><br></pre></td></tr></table></figure><h3 id="1-6-SQL片段"><a href="#1-6-SQL片段" class="headerlink" title="1.6 SQL片段"></a>1.6 SQL片段</h3><p><strong>应用场景</strong></p><p>映射文件中可将重复的 sql 提取出来，使用时用 include 引用即可，最终达到 sql 复用的目的</p><p><img data-src="/img/sql%E4%BB%A3%E7%A0%81%E7%89%87%E6%AE%B5.png" alt="sql代码片段"></p><h2 id="二、Mybatis多表查询"><a href="#二、Mybatis多表查询" class="headerlink" title="二、Mybatis多表查询"></a>二、Mybatis多表查询</h2><h3 id="2-1-表关系回顾"><a href="#2-1-表关系回顾" class="headerlink" title="2.1 表关系回顾"></a>2.1 表关系回顾</h3><blockquote><p>在关系型数据库中，表关系分为以下三种：</p></blockquote><p><img data-src="/img/%E8%A1%A8%E5%85%B3%E7%B3%BB%E5%9B%9E%E9%A1%BE.png" alt="表关系回顾"></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">* </span>在数据库中表建立关系：通过主外键关联</span><br><span class="line"></span><br><span class="line"><span class="bullet">* </span>在java中实体建立关系：通过属性关联</span><br><span class="line"></span><br><span class="line"><span class="bullet">* </span>在mybatis框架中把（多对一）也可以理解（一对一）</span><br><span class="line"><span class="code">在订单的角度去看，一个订单只从属于一个用户</span></span><br></pre></td></tr></table></figure><blockquote><p>本次讲解多表查询</p></blockquote><p><img data-src="/img/mybatis%E5%A4%9A%E8%A1%A8%E6%9F%A5%E8%AF%A2.png" alt="mybatis多表查询"></p><h3 id="2-2-环境搭建"><a href="#2-2-环境搭建" class="headerlink" title="2.2 环境搭建"></a>2.2 环境搭建</h3><h4 id="①-创建java模块，导入jar包"><a href="#①-创建java模块，导入jar包" class="headerlink" title="① 创建java模块，导入jar包"></a>① 创建java模块，导入jar包</h4><p><img data-src="/img/%E5%A4%9A%E8%A1%A8%E6%9F%A5%E8%AF%A2%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA.png" alt="多表查询环境搭建"></p><h4 id="②-准备三个实体类"><a href="#②-准备三个实体类" class="headerlink" title="② 准备三个实体类"></a>② 准备三个实体类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 用户</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    <span class="keyword">private</span> Date birthday;</span><br><span class="line">    <span class="keyword">private</span> String sex;</span><br><span class="line">    <span class="keyword">private</span> String address;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 订单实体类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Order</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Date ordertime;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Double money;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 角色</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Role</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String role_name;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String role_desc;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="③-创建三个接口和三个映射文件"><a href="#③-创建三个接口和三个映射文件" class="headerlink" title="③ 创建三个接口和三个映射文件"></a>③ 创建三个接口和三个映射文件</h4><p><img data-src="/img/%E4%B8%89%E4%B8%AA%E6%8E%A5%E5%8F%A3%E5%92%8C%E6%98%A0%E5%B0%84%E6%96%87%E4%BB%B6.png" alt="三个接口和映射文件"></p><h4 id="④-创建mybatis核心文件"><a href="#④-创建mybatis核心文件" class="headerlink" title="④ 创建mybatis核心文件"></a>④ 创建mybatis核心文件</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">configuration</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Config 3.0//EN"</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-config.dtd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--配置存储数据库信息的配置文件--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span> <span class="attr">resource</span>=<span class="string">"jdbc.properties"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">"mysql"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">"mysql"</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--配置事务管理器--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">"JDBC"</span>/&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--配置连接池--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">"POOLED"</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--配置数据库基本四项--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driver"</span> <span class="attr">value</span>=<span class="string">"com.mysql.jdbc.Driver"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">"jdbc:mysql://localhost:3306/mybatis_db"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"root"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"root"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--配置映射--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">"com/sun/mapper/UserMapper.xml"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">"com/sun/mapper/OrderMapper.xml"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">"com/sun/mapper/RoleMapper.xml"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="⑤-导入MybatisUtils工具类"><a href="#⑤-导入MybatisUtils工具类" class="headerlink" title="⑤ 导入MybatisUtils工具类"></a>⑤ 导入MybatisUtils工具类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Mybatis工具类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Sunmoon</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MybatisUtils</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> SqlSessionFactory factory;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> InputStream in;</span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//加载mybatis核心配置文件</span></span><br><span class="line">            in = Resources.getResourceAsStream(<span class="string">"mybatis-config.xml"</span>);</span><br><span class="line">            <span class="comment">// 构建者创建工厂</span></span><br><span class="line">            factory = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(in);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"mybatis初始化异常"</span>);</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="comment">// 释放资源</span></span><br><span class="line">            <span class="keyword">if</span> (in!=<span class="keyword">null</span>)&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    in.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 提供获取连接会话的方法</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 会话对象</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> SqlSession <span class="title">openSession</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> factory.openSession();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 提交事务归还连接的方法</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> session 会话对象</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">releases</span><span class="params">(SqlSession session)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (session!=<span class="keyword">null</span>)&#123;</span><br><span class="line">            session.commit();</span><br><span class="line">            session.close();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="⑥-抽取测试基类"><a href="#⑥-抽取测试基类" class="headerlink" title="⑥ 抽取测试基类"></a>⑥ 抽取测试基类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Mapper单元测试基类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BaseMapperTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> SqlSession sqlSession;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Before</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">before</span><span class="params">()</span></span>&#123;</span><br><span class="line">        sqlSession = MybatisUtils.openSession();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@After</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">after</span><span class="params">()</span></span>&#123;</span><br><span class="line">        MybatisUtils.releases(sqlSession);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-3-一对一"><a href="#2-3-一对一" class="headerlink" title="2.3 一对一"></a>2.3 一对一</h3><p>一对一查询模型**</p><p>用户表和订单表的关系为，一个用户有多个订单，一个订单只从属于一个用户</p><blockquote><p>需求：查询一个订单，与此同时查询出该订单所属的用户</p></blockquote><p><img data-src="/img/%E4%B8%80%E5%AF%B9%E4%B8%80%E6%9F%A5%E8%AF%A2%E6%A8%A1%E5%9E%8B.png" alt="一对一查询模型"></p><p><strong>sql语句</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> orders o <span class="keyword">INNER</span> <span class="keyword">JOIN</span> <span class="string">`user`</span> u <span class="keyword">ON</span> o.<span class="string">`uid`</span> = u.<span class="string">`id`</span> <span class="keyword">WHERE</span> o.id = <span class="number">1</span></span><br></pre></td></tr></table></figure><h4 id="①-实体和表映射关系"><a href="#①-实体和表映射关系" class="headerlink" title="① 实体和表映射关系"></a>① 实体和表映射关系</h4><p><img data-src="/img/%E4%B8%80%E5%AF%B9%E4%B8%80_%E5%AE%9E%E4%BD%93%E5%92%8C%E8%A1%A8%E6%98%A0%E5%B0%84%E5%85%B3%E7%B3%BB.png" alt="一对一_实体和表映射关系"></p><h4 id="②-创建Order实体"><a href="#②-创建Order实体" class="headerlink" title="② 创建Order实体"></a>② 创建Order实体</h4><p><img data-src="/img/order%E5%AE%9E%E4%BD%93.png" alt="order实体"></p><h4 id="③-编写OrderMapper接口"><a href="#③-编写OrderMapper接口" class="headerlink" title="③ 编写OrderMapper接口"></a>③ 编写OrderMapper接口</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">OrderMapper</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 根据订单id查询，返回订单信息和用户信息</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Order <span class="title">findByIdWithUser</span><span class="params">(Integer id)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="④-编写OrderMapper-xml"><a href="#④-编写OrderMapper-xml" class="headerlink" title="④ 编写OrderMapper.xml"></a>④ 编写OrderMapper.xml</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.sun.mapper.OrderMapper"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--一对一手动映射封装--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"orderBaseMap"</span> <span class="attr">type</span>=<span class="string">"com.sun.domain.Order"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">"id"</span> <span class="attr">property</span>=<span class="string">"id"</span>&gt;</span><span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"ordertime"</span> <span class="attr">property</span>=<span class="string">"ordertime"</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"money"</span> <span class="attr">property</span>=<span class="string">"money"</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">            association 一对一关联封装</span></span><br><span class="line"><span class="comment">                property="user" 订单中的实体属性名</span></span><br><span class="line"><span class="comment">                javaType="com.itheima.domain.User" 该属性对应的java类型</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">association</span> <span class="attr">property</span>=<span class="string">"user"</span> <span class="attr">javaType</span>=<span class="string">"com.sun.domain.User"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">"uid"</span> <span class="attr">property</span>=<span class="string">"id"</span>&gt;</span><span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"username"</span> <span class="attr">property</span>=<span class="string">"username"</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"birthday"</span> <span class="attr">property</span>=<span class="string">"birthday"</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"sex"</span> <span class="attr">property</span>=<span class="string">"sex"</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"address"</span> <span class="attr">property</span>=<span class="string">"address"</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">association</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">     一对一查询</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByIdWithUser"</span> <span class="attr">parameterType</span>=<span class="string">"integer"</span> <span class="attr">resultMap</span>=<span class="string">"orderBaseMap"</span>&gt;</span></span><br><span class="line">        SELECT * FROM orders o INNER JOIN `user` u ON o.`uid` = u.`id` WHERE o.id = #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="⑤-测试"><a href="#⑤-测试" class="headerlink" title="⑤ 测试"></a>⑤ 测试</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OrderMapperTest</span> <span class="keyword">extends</span> <span class="title">BaseMapperTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 一对一测试</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span><span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        <span class="comment">// 获取代理对象</span></span><br><span class="line">        OrderMapper orderMapper = sqlSession.getMapper(OrderMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 查询</span></span><br><span class="line">        Order order = orderMapper.findByIdWithUser(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        System.out.println(order);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="⑥-一对一代码关系图"><a href="#⑥-一对一代码关系图" class="headerlink" title="⑥ 一对一代码关系图"></a>⑥ 一对一代码关系图</h4><p><img data-src="/img/%E4%B8%80%E5%AF%B9%E4%B8%80%E4%BB%A3%E7%A0%81%E5%85%B3%E7%B3%BB%E5%9B%BE.png" alt="一对一代码关系图"></p><h3 id="2-4-一对多"><a href="#2-4-一对多" class="headerlink" title="2.4 一对多"></a>2.4 一对多</h3><p><strong>一对多查询模型</strong></p><p>用户表和订单表的关系为，一个用户有多个订单，一个订单只从属于一个用户</p><blockquote><p>需求：查询一个用户，与此同时查询出该用户具有的订单</p></blockquote><p><img data-src="/img/%E4%B8%80%E5%AF%B9%E5%A4%9A%E6%9F%A5%E8%AF%A2%E6%A8%A1%E5%9E%8B.png" alt="一对多查询模型"></p><p><strong>sql语句</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> *,o.id <span class="keyword">AS</span> <span class="keyword">oid</span> <span class="keyword">FROM</span> <span class="string">`user`</span> u <span class="keyword">INNER</span> <span class="keyword">JOIN</span> orders o <span class="keyword">ON</span> u.<span class="string">`id`</span> = o.<span class="string">`uid`</span> <span class="keyword">WHERE</span> u.id = <span class="number">41</span></span><br></pre></td></tr></table></figure><h4 id="①-实体和表映射关系-1"><a href="#①-实体和表映射关系-1" class="headerlink" title="① 实体和表映射关系"></a>① 实体和表映射关系</h4><p> <img data-src="/img/%E4%B8%80%E5%AF%B9%E5%A4%9A%E5%AE%9E%E4%BD%93%E5%92%8C%E8%A1%A8%E7%9A%84%E6%98%A0%E5%B0%84%E6%83%AF%E6%80%A7%E7%B3%BB.png" alt="一对多实体和表的映射惯性系"></p><h4 id="②-编写User实体"><a href="#②-编写User实体" class="headerlink" title="② 编写User实体"></a>② 编写User实体</h4><p><img data-src="/img/User%E5%AE%9E%E4%BD%93.png" alt="User实体"></p><h4 id="③-编写UserMapper接口"><a href="#③-编写UserMapper接口" class="headerlink" title="③ 编写UserMapper接口"></a>③ 编写UserMapper接口</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserMapper</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 一对多根据用户id，查询用户和订单信息</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">findByIdWithOrderList</span><span class="params">(Integer id)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="④-编写UserMapper-xml"><a href="#④-编写UserMapper-xml" class="headerlink" title="④ 编写UserMapper.xml"></a>④ 编写UserMapper.xml</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.sun.mapper.UserMapper"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--一对多手动映射--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"userWithOrderMap"</span> <span class="attr">type</span>=<span class="string">"com.sun.domain.User"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">"id"</span> <span class="attr">property</span>=<span class="string">"id"</span>&gt;</span><span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"username"</span> <span class="attr">property</span>=<span class="string">"username"</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"birthday"</span> <span class="attr">property</span>=<span class="string">"birthday"</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"sex"</span> <span class="attr">property</span>=<span class="string">"sex"</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"address"</span> <span class="attr">property</span>=<span class="string">"address"</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">            一对多封装使用collection标签</span></span><br><span class="line"><span class="comment">                property="orderList" 是user实体的订单属集合名称</span></span><br><span class="line"><span class="comment">                ofType="com.itheima.domain.Order" 封装数据的java类型，可以简单理解为list的泛型</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">collection</span> <span class="attr">property</span>=<span class="string">"orderList"</span> <span class="attr">ofType</span>=<span class="string">"com.sun.domain.Order"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">"oid"</span> <span class="attr">property</span>=<span class="string">"id"</span>&gt;</span><span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"ordertime"</span> <span class="attr">property</span>=<span class="string">"ordertime"</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"money"</span> <span class="attr">property</span>=<span class="string">"money"</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">collection</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        一对多根据用户id，查询用户和订单信息</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByIdWithOrderList"</span> <span class="attr">parameterType</span>=<span class="string">"integer"</span> <span class="attr">resultMap</span>=<span class="string">"userWithOrderMap"</span>&gt;</span></span><br><span class="line">        SELECT *,o.id AS oid FROM `user` u INNER JOIN orders o ON u.`id` = o.`uid` WHERE u.id = #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="⑤-测试-1"><a href="#⑤-测试-1" class="headerlink" title="⑤ 测试"></a>⑤ 测试</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserMapperTest</span> <span class="keyword">extends</span> <span class="title">BaseMapperTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 一对多测试</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span><span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        <span class="comment">// 创建代理对象</span></span><br><span class="line">        UserMapper userMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        <span class="comment">// 根据用户id查询</span></span><br><span class="line">        User user = userMapper.findByIdWithOrderList(<span class="number">41</span>);</span><br><span class="line"></span><br><span class="line">        System.out.println(user);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="⑥-一对多代码关系图"><a href="#⑥-一对多代码关系图" class="headerlink" title="⑥ 一对多代码关系图"></a>⑥ 一对多代码关系图</h4><p><img data-src="/img/%E4%B8%80%E5%AF%B9%E5%A4%9A%E5%85%B3%E7%B3%BB%E4%BB%A3%E7%A0%81%E5%9B%BE.png" alt="一对多关系代码图"></p><h3 id="2-5-多对多"><a href="#2-5-多对多" class="headerlink" title="2.5 多对多"></a>2.5 多对多</h3><p><strong>多对多查询的模型</strong></p><p>用户表和角色表的关系为，一个用户有多个角色，一个角色被多个用户使用</p><blockquote><p>需求：查询用户同时查询出该用户的所有角色</p></blockquote><p><img data-src="/img/%E5%A4%9A%E5%AF%B9%E5%A4%9A%E6%9F%A5%E8%AF%A2%E6%A8%A1%E5%9E%8B.png" alt="多对多查询模型"></p><p><strong>注意：多对多实现代码流程跟一对多是一样的，只是sql语句稍有不同</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="string">`user`</span> u</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> user_role ur <span class="keyword">ON</span> u.id = ur.<span class="string">`uid`</span> <span class="comment">-- 用户关联中间表</span></span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> <span class="keyword">role</span> r <span class="keyword">ON</span> ur.<span class="string">`rid`</span> = r.<span class="string">`id`</span> <span class="comment">-- 中间表关联用户</span></span><br><span class="line"><span class="keyword">WHERE</span> u.id = <span class="number">41</span></span><br></pre></td></tr></table></figure><h4 id="①-实体和表映射关系-2"><a href="#①-实体和表映射关系-2" class="headerlink" title="① 实体和表映射关系"></a>① 实体和表映射关系</h4><p>  <img data-src="/img/%E5%A4%9A%E5%AF%B9%E5%A4%9A%E5%AE%9E%E4%BD%93%E5%92%8C%E8%A1%A8%E7%9A%84%E6%98%A0%E5%B0%84%E5%85%B3%E7%B3%BB.png" alt="多对多实体和表的映射关系"></p><h4 id="②-编写User和Role实体"><a href="#②-编写User和Role实体" class="headerlink" title="② 编写User和Role实体"></a>② 编写User和Role实体</h4><p> <img data-src="/img/User%E5%AE%9E%E4%BD%932.png" alt="User实体2"></p><h4 id="③-编写UserMapper接口-1"><a href="#③-编写UserMapper接口-1" class="headerlink" title="③ 编写UserMapper接口"></a>③ 编写UserMapper接口</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserMapper</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 多对多根据用户id，查询用户和角色信息</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">findByIdWithRoleList</span><span class="params">(Integer id)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="④-编写UserMapper-xml-1"><a href="#④-编写UserMapper-xml-1" class="headerlink" title="④ 编写UserMapper.xml"></a>④ 编写UserMapper.xml</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    多对多手动映射封装</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"userWithRoleMap"</span> <span class="attr">type</span>=<span class="string">"com.sun.domain.User"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">"id"</span> <span class="attr">property</span>=<span class="string">"id"</span>&gt;</span><span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"username"</span> <span class="attr">property</span>=<span class="string">"username"</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"birthday"</span> <span class="attr">property</span>=<span class="string">"birthday"</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"sex"</span> <span class="attr">property</span>=<span class="string">"sex"</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"address"</span> <span class="attr">property</span>=<span class="string">"address"</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        多对多手动映射使用collection标签</span></span><br><span class="line"><span class="comment">            property="roleList" 需要封装实体list集合的属性名</span></span><br><span class="line"><span class="comment">            ofType="com.itheima.domain.Role" 该集合泛型的java类型</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">collection</span> <span class="attr">property</span>=<span class="string">"roleList"</span> <span class="attr">ofType</span>=<span class="string">"com.sun.domain.Role"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">"rid"</span> <span class="attr">property</span>=<span class="string">"id"</span>&gt;</span><span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"role_name"</span> <span class="attr">property</span>=<span class="string">"role_name"</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"role_desc"</span> <span class="attr">property</span>=<span class="string">"role_desc"</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">collection</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    多对多根据用户id，查询用户和角色信息</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByIdWithRoleList"</span> <span class="attr">parameterType</span>=<span class="string">"integer"</span> <span class="attr">resultMap</span>=<span class="string">"userWithRoleMap"</span>&gt;</span></span><br><span class="line">    SELECT * FROM `user` u</span><br><span class="line">        INNER JOIN user_role ur ON u.id = ur.`uid`</span><br><span class="line">        INNER JOIN role r ON ur.`rid` = r.`id`</span><br><span class="line">        WHERE u.id = #&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="⑤-测试-2"><a href="#⑤-测试-2" class="headerlink" title="⑤ 测试"></a>⑤ 测试</h4><p> <img data-src="/img/%E5%A4%9A%E5%AF%B9%E5%A4%9A%E6%B5%8B%E8%AF%95.png" alt="多对多测试"></p><h3 id="2-6-知识小结"><a href="#2-6-知识小结" class="headerlink" title="2.6 知识小结"></a>2.6 知识小结</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">一对一配置：使用<span class="xml"><span class="tag">&lt;<span class="name">resultMap</span>&gt;</span></span>+<span class="xml"><span class="tag">&lt;<span class="name">association</span>&gt;</span></span>做配置</span><br><span class="line"><span class="code">association:</span></span><br><span class="line"><span class="code">    property：关联的实体属性名</span></span><br><span class="line"><span class="code">    javaType：关联的实体类型</span></span><br><span class="line"></span><br><span class="line">一对多配置：使用<span class="xml"><span class="tag">&lt;<span class="name">resultMap</span>&gt;</span></span>+<span class="xml"><span class="tag">&lt;<span class="name">collection</span>&gt;</span></span>做配置</span><br><span class="line"><span class="code">collection：</span></span><br><span class="line"><span class="code">property：关联的集合属性名</span></span><br><span class="line"><span class="code">ofType：关联的集合泛型类型</span></span><br><span class="line"></span><br><span class="line">多对多配置：使用<span class="xml"><span class="tag">&lt;<span class="name">resultMap</span>&gt;</span></span>+<span class="xml"><span class="tag">&lt;<span class="name">collection</span>&gt;</span></span>做配置</span><br><span class="line"><span class="code">collection：</span></span><br><span class="line"><span class="code">property：关联的集合属性名</span></span><br><span class="line"><span class="code">ofType：关联的集合泛型类型</span></span><br><span class="line"><span class="code"></span></span><br><span class="line">多对多的配置跟一对多很相似，难度在于SQL语句的编写。</span><br></pre></td></tr></table></figure><h2 id="三、Mybatis嵌套查询"><a href="#三、Mybatis嵌套查询" class="headerlink" title="三、Mybatis嵌套查询"></a>三、Mybatis嵌套查询</h2><h3 id="3-1-什么是嵌套查询"><a href="#3-1-什么是嵌套查询" class="headerlink" title="3.1 什么是嵌套查询"></a>3.1 什么是嵌套查询</h3><p>嵌套查询就是将原来多表查询中的联合查询语句拆成单个表的查询，再使用mybatis的语法嵌套在一起。</p><blockquote><p><strong>需求</strong>：查询一个订单，与此同时查询出该订单所属的用户</p></blockquote><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">* </span>关联查询：</span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="code">SELECT * FROM orders o INNER JOIN `user` u ON o.`uid` = u.`id` WHERE o.id = 1 </span></span><br><span class="line"><span class="bullet">* </span>缺点</span><br><span class="line"><span class="code">sql语句比较复杂</span></span><br><span class="line"><span class="code">多表查询会产生笛卡尔积</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">* </span>嵌套查询：</span><br><span class="line"><span class="code">1.先根据订单id查询订单信息</span></span><br><span class="line"><span class="code">select * from orders where id = 1;</span></span><br><span class="line"><span class="code">2.根据订单信息中的uid再去查询用户信息</span></span><br><span class="line"><span class="code">select * from user where id = 41;</span></span><br><span class="line"><span class="code">3.再由mybatis进行组合嵌套</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">* </span>优点</span><br><span class="line"><span class="code">sql写起来简单</span></span><br><span class="line"><span class="code">嵌套查询不会出现笛卡尔积</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">* </span>缺点</span><br><span class="line"><span class="code">需要编写二个单体映射封装，在进行嵌套组合，步骤较为繁琐</span></span><br></pre></td></tr></table></figure><h3 id="3-2-环境搭建"><a href="#3-2-环境搭建" class="headerlink" title="3.2 环境搭建"></a>3.2 环境搭建</h3><p>复制多表查询的模块，清除测试和mapper.xml文件中的代码即可…</p><h3 id="3-3-一对一"><a href="#3-3-一对一" class="headerlink" title="3.3 一对一"></a>3.3 一对一</h3><blockquote><p>需求：查询一个订单，与此同时查询出该订单所属的用户</p></blockquote><p><strong>sql语句</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 1.先根据订单id查询订单信息</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> orders <span class="keyword">where</span> <span class="keyword">id</span> = <span class="number">1</span>;</span><br><span class="line"><span class="comment">-- 2.根据订单信息中的uid再去查询用户信息</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> <span class="keyword">id</span> = <span class="number">41</span>;</span><br><span class="line"><span class="comment">-- 3.再由mybatis进行组合嵌套</span></span><br></pre></td></tr></table></figure><h4 id="①-OrderMapper接口"><a href="#①-OrderMapper接口" class="headerlink" title="① OrderMapper接口"></a>① OrderMapper接口</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">OrderMapper</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 一对一嵌套查询</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Order <span class="title">findByIdWithUser</span><span class="params">(Integer id)</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="②-OrderMapper映射"><a href="#②-OrderMapper映射" class="headerlink" title="② OrderMapper映射"></a>② OrderMapper映射</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.sun.mapper.OrderMapper"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--一对一嵌套查询--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByIdWithUser"</span> <span class="attr">parameterType</span>=<span class="string">"integer"</span> <span class="attr">resultType</span>=<span class="string">"com.sun.domain.Order"</span>&gt;</span></span><br><span class="line">        select * from orders where id = #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="③-UserMapper接口"><a href="#③-UserMapper接口" class="headerlink" title="③ UserMapper接口"></a>③ UserMapper接口</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserMapper</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 根据用户id查询用户信息</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">findById</span><span class="params">(Integer id)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="④-UserMapper映射"><a href="#④-UserMapper映射" class="headerlink" title="④ UserMapper映射"></a>④ UserMapper映射</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.sun.mapper.UserMapper"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findById"</span> <span class="attr">parameterType</span>=<span class="string">"integer"</span> <span class="attr">resultType</span>=<span class="string">"com.sun.domain.User"</span>&gt;</span></span><br><span class="line">        select * from user where id = #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="⑤-mybatis嵌套组合"><a href="#⑤-mybatis嵌套组合" class="headerlink" title="⑤ mybatis嵌套组合"></a>⑤ mybatis嵌套组合</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.sun.mapper.OrderMapper"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--一对一嵌套查询手动封装--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"orderWithUserMap"</span> <span class="attr">type</span>=<span class="string">"com.sun.domain.Order"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">"id"</span> <span class="attr">property</span>=<span class="string">"id"</span>&gt;</span><span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"ordertime"</span> <span class="attr">property</span>=<span class="string">"ordertime"</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"money"</span> <span class="attr">property</span>=<span class="string">"money"</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">            一对一嵌套</span></span><br><span class="line"><span class="comment">                 column="uid" 就是订单表的查询结果 uid作为条件</span></span><br><span class="line"><span class="comment">                 select="com.sun.mapper.UserMapper.findById" 去调用（UserMapper中findById方法）实现单表查询</span></span><br><span class="line"><span class="comment">                 最后通过association组合嵌套，封装到 Order实体中user属性汇总</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">association</span> <span class="attr">property</span>=<span class="string">"user"</span> <span class="attr">column</span>=<span class="string">"uid"</span> <span class="attr">select</span>=<span class="string">"com.sun.mapper.UserMapper.findById"</span>&gt;</span><span class="tag">&lt;/<span class="name">association</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--一对一嵌套查询--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByIdWithUser"</span> <span class="attr">parameterType</span>=<span class="string">"integer"</span> <span class="attr">resultMap</span>=<span class="string">"orderWithUserMap"</span>&gt;</span></span><br><span class="line">        select * from orders where id = #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="⑥-测试"><a href="#⑥-测试" class="headerlink" title="⑥ 测试"></a>⑥ 测试</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OrderMapperTest</span> <span class="keyword">extends</span> <span class="title">BaseMapperTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 一对一测试</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span><span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        <span class="comment">// 获取代理对象</span></span><br><span class="line">        OrderMapper orderMapper = sqlSession.getMapper(OrderMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 查询</span></span><br><span class="line">        Order order = orderMapper.findByIdWithUser(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        System.out.println(order);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="⑦-嵌套关系"><a href="#⑦-嵌套关系" class="headerlink" title="⑦ 嵌套关系"></a>⑦ 嵌套关系</h4><p><img data-src="/img/%E5%B5%8C%E5%A5%97%E5%85%B3%E7%B3%BB_%E4%B8%80%E5%AF%B9%E4%B8%80.png" alt="嵌套关系_一对一"></p><h3 id="3-4-一对多"><a href="#3-4-一对多" class="headerlink" title="3.4 一对多"></a>3.4 一对多</h3><blockquote><p>需求：查询一个用户，与此同时查询出该用户具有的订单</p></blockquote><p><strong>sql语句</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 1.先根据用户id查询用户信息</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> <span class="keyword">id</span> = <span class="number">41</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 2.再根据用户id查询订单列表</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> orders <span class="keyword">where</span> uid = <span class="number">41</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 3.最后由mybatis进行组合嵌套</span></span><br></pre></td></tr></table></figure><h4 id="①-UserMapper接口"><a href="#①-UserMapper接口" class="headerlink" title="① UserMapper接口"></a>① UserMapper接口</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 一对多嵌套查询</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> User <span class="title">findByIdWithOrderList</span><span class="params">(Integer id)</span></span>;</span><br></pre></td></tr></table></figure><h4 id="②-UserMapper映射"><a href="#②-UserMapper映射" class="headerlink" title="② UserMapper映射"></a>② UserMapper映射</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByIdWithOrderList"</span> <span class="attr">parameterType</span>=<span class="string">"integer"</span> <span class="attr">resultType</span>=<span class="string">"com.sun.domain.User"</span>&gt;</span></span><br><span class="line">    select * from user where id = #&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="③-OrderMapper接口"><a href="#③-OrderMapper接口" class="headerlink" title="③ OrderMapper接口"></a>③ OrderMapper接口</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 根据uid查询订单列表</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;Order&gt; <span class="title">findByUid</span><span class="params">(Integer uid)</span></span>;</span><br></pre></td></tr></table></figure><h4 id="④-OrderMapper映射"><a href="#④-OrderMapper映射" class="headerlink" title="④ OrderMapper映射"></a>④ OrderMapper映射</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByUid"</span> <span class="attr">parameterType</span>=<span class="string">"integer"</span> <span class="attr">resultType</span>=<span class="string">"com.sun.domain.Order"</span>&gt;</span></span><br><span class="line">    select * from orders where uid = #&#123;uid&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="⑤-mybatis嵌套组合-1"><a href="#⑤-mybatis嵌套组合-1" class="headerlink" title="⑤ mybatis嵌套组合"></a>⑤ mybatis嵌套组合</h4><blockquote><p>用户嵌套订单，UserMapper.xml</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--一对多手动映射封装--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"userWithOrderMap"</span> <span class="attr">type</span>=<span class="string">"com.sun.domain.User"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">"id"</span> <span class="attr">property</span>=<span class="string">"id"</span>&gt;</span><span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"username"</span> <span class="attr">property</span>=<span class="string">"username"</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"birthday"</span> <span class="attr">property</span>=<span class="string">"birthday"</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"sex"</span> <span class="attr">property</span>=<span class="string">"sex"</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"address"</span> <span class="attr">property</span>=<span class="string">"address"</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        一对多嵌套</span></span><br><span class="line"><span class="comment">             column="id" 用户表查询结果作为条件</span></span><br><span class="line"><span class="comment">             select="com.sun.mapper.OrderMapper.findByUid"  调用（OerderMapper中findByUid方法）查询 订单列表</span></span><br><span class="line"><span class="comment">             最后由mybatis组合嵌套封装到 user实体的orderList属性中</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">collection</span> <span class="attr">property</span>=<span class="string">"orderList"</span> <span class="attr">column</span>=<span class="string">"id"</span> <span class="attr">select</span>=<span class="string">"com.sun.mapper.OrderMapper.findByUid"</span>&gt;</span><span class="tag">&lt;/<span class="name">collection</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByIdWithOrderList"</span> <span class="attr">parameterType</span>=<span class="string">"integer"</span> <span class="attr">resultMap</span>=<span class="string">"userWithOrderMap"</span>&gt;</span></span><br><span class="line">    select * from user where id = #&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="⑥-测试-1"><a href="#⑥-测试-1" class="headerlink" title="⑥ 测试"></a>⑥ 测试</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserMapperTest</span> <span class="keyword">extends</span> <span class="title">BaseMapperTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 一对多测试</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">// 创建代理对象</span></span><br><span class="line">        UserMapper userMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        <span class="comment">// 根据用户id查询</span></span><br><span class="line">        User user = userMapper.findByIdWithOrderList(<span class="number">41</span>);</span><br><span class="line"></span><br><span class="line">        System.out.println(user);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="⑦-嵌套关系-1"><a href="#⑦-嵌套关系-1" class="headerlink" title="⑦ 嵌套关系"></a>⑦ 嵌套关系</h4><p> <img data-src="/img/%E5%B5%8C%E5%A5%97%E5%85%B3%E7%B3%BB_%E4%B8%80%E5%AF%B9%E5%A4%9A.png" alt="嵌套关系_一对多"></p><h3 id="3-5-多对多"><a href="#3-5-多对多" class="headerlink" title="3.5 多对多"></a>3.5 多对多</h3><blockquote><p>需求：查询用户同时查询出该用户的所有角色</p></blockquote><blockquote><p>站在用户一方，此用户具有多个角色，实现步骤和一对多一样</p></blockquote><p><strong>sql语句</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 1.先根据用户id查询用户信息</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> <span class="keyword">id</span> = <span class="number">41</span>;</span><br><span class="line"><span class="comment">-- 2.再根据用户id查询角色列表</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">role</span> r <span class="keyword">inner</span> <span class="keyword">join</span> user_role ur <span class="keyword">on</span> ur.rid = r.id <span class="keyword">where</span> ur.uid= <span class="number">41</span>;</span><br><span class="line"><span class="comment">-- 3.最后由mybatis进行组合嵌套</span></span><br></pre></td></tr></table></figure><h4 id="①-UserMapper接口-1"><a href="#①-UserMapper接口-1" class="headerlink" title="① UserMapper接口"></a>① UserMapper接口</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 多对多嵌套查询</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> User <span class="title">findByIdWithRoleList</span><span class="params">(Integer id)</span></span>;</span><br></pre></td></tr></table></figure><h4 id="②-UserMapper映射-1"><a href="#②-UserMapper映射-1" class="headerlink" title="② UserMapper映射"></a>② UserMapper映射</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByIdWithRoleList"</span> <span class="attr">parameterType</span>=<span class="string">"integer"</span> <span class="attr">resultType</span>=<span class="string">"com.sun.domain.User"</span>&gt;</span></span><br><span class="line">    select * from user where id = #&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="③-RoleMapper接口"><a href="#③-RoleMapper接口" class="headerlink" title="③ RoleMapper接口"></a>③ RoleMapper接口</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">RoleMapper</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 根据用户id查询角色列表</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Role&gt; <span class="title">findByUid</span><span class="params">(Integer uid)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="④-RoleMapper映射"><a href="#④-RoleMapper映射" class="headerlink" title="④ RoleMapper映射"></a>④ RoleMapper映射</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.sun.mapper.RoleMapper"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByUid"</span> <span class="attr">parameterType</span>=<span class="string">"integer"</span> <span class="attr">resultType</span>=<span class="string">"com.sun.domain.Role"</span>&gt;</span></span><br><span class="line">        select * from role r inner join user_role ur on ur.rid = r.id where ur.uid= #&#123;uid&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="⑤-mybatis嵌套组合-2"><a href="#⑤-mybatis嵌套组合-2" class="headerlink" title="⑤ mybatis嵌套组合"></a>⑤ mybatis嵌套组合</h4><blockquote><p>用户嵌套角色，定位UserMapper.xml</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--多对多嵌套手动封装--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"userWithRoleMap"</span> <span class="attr">type</span>=<span class="string">"com.sun.domain.User"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">"id"</span> <span class="attr">property</span>=<span class="string">"id"</span>&gt;</span><span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"username"</span> <span class="attr">property</span>=<span class="string">"username"</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"birthday"</span> <span class="attr">property</span>=<span class="string">"birthday"</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"sex"</span> <span class="attr">property</span>=<span class="string">"sex"</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"address"</span> <span class="attr">property</span>=<span class="string">"address"</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--多对多嵌套</span></span><br><span class="line"><span class="comment">        column="id" 用户表查询结果作为条件</span></span><br><span class="line"><span class="comment">        select="com.sun.mapper.RoleMapper.findByUid" 去调用（RoleMapper中findByUid方法） 查询角色列表</span></span><br><span class="line"><span class="comment">        最后由mybatis组合嵌套，封装到User实体的roleList属性中</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">collection</span> <span class="attr">property</span>=<span class="string">"roleList"</span> <span class="attr">column</span>=<span class="string">"id"</span> <span class="attr">select</span>=<span class="string">"com.sun.mapper.RoleMapper.findByUid"</span>&gt;</span><span class="tag">&lt;/<span class="name">collection</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByIdWithRoleList"</span> <span class="attr">parameterType</span>=<span class="string">"integer"</span> <span class="attr">resultMap</span>=<span class="string">"userWithRoleMap"</span>&gt;</span></span><br><span class="line">    select * from user where id = #&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="⑥-测试-2"><a href="#⑥-测试-2" class="headerlink" title="⑥ 测试"></a>⑥ 测试</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 多对多测试</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test02</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    <span class="comment">// 创建代理对象</span></span><br><span class="line">    UserMapper userMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    <span class="comment">// 根据用户id查询</span></span><br><span class="line">    User user = userMapper.findByIdWithRoleList(<span class="number">41</span>);</span><br><span class="line"></span><br><span class="line">    System.out.println(user);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="⑦-嵌套关系-2"><a href="#⑦-嵌套关系-2" class="headerlink" title="⑦ 嵌套关系"></a>⑦ 嵌套关系</h4><p> <img data-src="/img/%E5%B5%8C%E5%A5%97%E5%85%B3%E7%B3%BB_%E5%A4%9A%E5%AF%B9%E5%A4%9A.png" alt="嵌套关系_多对多"></p><h2 id="3-6-知识小结"><a href="#3-6-知识小结" class="headerlink" title="3.6 知识小结"></a>3.6 知识小结</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">一对一配置：使用<span class="xml"><span class="tag">&lt;<span class="name">resultMap</span>&gt;</span></span>+<span class="xml"><span class="tag">&lt;<span class="name">association</span>&gt;</span></span>做配置，通过column条件，执行select查询</span><br><span class="line"></span><br><span class="line">一对多配置：使用<span class="xml"><span class="tag">&lt;<span class="name">resultMap</span>&gt;</span></span>+<span class="xml"><span class="tag">&lt;<span class="name">collection</span>&gt;</span></span>做配置，通过column条件，执行select查询</span><br><span class="line"></span><br><span class="line">多对多配置：使用<span class="xml"><span class="tag">&lt;<span class="name">resultMap</span>&gt;</span></span>+<span class="xml"><span class="tag">&lt;<span class="name">collection</span>&gt;</span></span>做配置，通过column条件，执行select查询</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">总结一句话：二张表数据过大就使用嵌套查询，否则还是关联查询足以....</span><br></pre></td></tr></table></figure><h2 id="四-MyBatis加载策略"><a href="#四-MyBatis加载策略" class="headerlink" title="四 MyBatis加载策略"></a>四 MyBatis加载策略</h2><h3 id="4-1-什么是延迟加载？"><a href="#4-1-什么是延迟加载？" class="headerlink" title="4.1 什么是延迟加载？"></a>4.1 什么是延迟加载？</h3><p><strong>问题</strong></p><p>​    通过前面的学习，我们已经掌握了Mybatis中一对一，一对多，多对多关系的配置及实现，可以实现对象的关联查询。实际开发过程中很多时候我们并不需要总是在加载用户信息时就一定要加载他的订单信息。此时就是我们所说的延迟加载。</p><p><strong>举个栗子</strong></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">* </span>在一对多中，当我们有一个用户，它有个100个订单</span><br><span class="line"><span class="code">在查询用户的时候，要不要把关联的订单查出来？</span></span><br><span class="line"><span class="code">在查询订单的时候，要不要把关联的用户查出来？</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">* </span>回答</span><br><span class="line"><span class="code">在查询用户时，用户下的订单应该是，什么时候用，什么时候查询。【延迟（懒）加载】</span></span><br><span class="line"><span class="code">在查询订单时，订单所属的用户信息应该是随着订单一起查询出来。</span></span><br></pre></td></tr></table></figure><p><strong>延迟加载</strong></p><p>​    就是在需要用到数据时才进行加载，不需要用到数据时就不加载数据。延迟加载也称懒加载。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">* </span>在多表中：</span><br><span class="line"><span class="code">一对多，多对多：通常情况下采用延迟加载</span></span><br><span class="line"><span class="code">一对一：通常情况下采用立即加载</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">* </span>注意：</span><br><span class="line"><span class="code">延迟加载是基于嵌套查询来实现的</span></span><br></pre></td></tr></table></figure><h3 id="4-2-配置延迟加载"><a href="#4-2-配置延迟加载" class="headerlink" title="4.2 配置延迟加载"></a>4.2 配置延迟加载</h3><h4 id="4-2-1-全局延迟加载"><a href="#4-2-1-全局延迟加载" class="headerlink" title="4.2.1 全局延迟加载"></a>4.2.1 全局延迟加载</h4><p> <img data-src="/img/%E5%85%A8%E5%B1%80%E5%BB%B6%E8%BF%9F%E5%8A%A0%E8%BD%BD%E9%85%8D%E7%BD%AE.png" alt="全局延迟加载配置"></p><blockquote><p>在Mybatis的核心配置文件中可以使用setting标签开启全局的加载策略</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--settings设置--&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">settings</span>&gt;</span></span><br><span class="line">     <span class="comment">&lt;!--开启全局延迟加载功能了--&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">"lazyLoadingEnabled"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="4-2-2-局部延迟加载"><a href="#4-2-2-局部延迟加载" class="headerlink" title="4.2.2 局部延迟加载"></a>4.2.2 局部延迟加载</h4><blockquote><p>​    在Mapper映射文件中在association和collection标签中都有一个fetchType属性，通过修改它的值，可以修改局部的加载策略</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">fetchType 属性</span><br><span class="line">eager 立即加载</span><br><span class="line">lazy  延迟加载</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">association</span> <span class="attr">fetchType</span>=<span class="string">"eager"</span>&gt;</span><span class="tag">&lt;/<span class="name">association</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">collection</span> <span class="attr">fetchType</span>=<span class="string">"eager"</span>&gt;</span><span class="tag">&lt;/<span class="name">collection</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>注意：局部延迟加载优先级高于全局延迟加载，通常是为了覆盖全局延迟来设置的方式</p></blockquote><h3 id="4-3-触发加载"><a href="#4-3-触发加载" class="headerlink" title="4.3  触发加载"></a>4.3  触发加载</h3><p> <img data-src="/img/%E8%A7%A6%E5%8F%91%E5%8A%A0%E8%BD%BD.png" alt="触发加载"></p><blockquote><p>​    大家在配置了延迟加载策略后，发现即使没有调用关联对象的任何方法，但是在你调用当前对象的equals、clone、hashCode、toString方法时也会触发关联对象的查询。</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--settings设置--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">settings</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--开启全局延迟加载功能了--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">"lazyLoadingEnabled"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--关闭四个默认触发关联查询的功能，只有调用getOrderList()时才会触发关联查询--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">"lazyLoadTriggerMethods"</span> <span class="attr">value</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">setting</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="五-MyBatis缓存"><a href="#五-MyBatis缓存" class="headerlink" title="五 MyBatis缓存"></a>五 MyBatis缓存</h2><h3 id="5-1-什么是缓存"><a href="#5-1-什么是缓存" class="headerlink" title="5.1 什么是缓存"></a>5.1 什么是缓存</h3><p> <img data-src="/img/%E7%BC%93%E5%AD%98.png" alt="mybatis一级缓存"></p><blockquote><p>缓存就是计算机内存中的一块区域</p></blockquote><p><strong>为什么要使用缓存吗？</strong></p><blockquote><p>为了提高查询效率，减少磁盘IO，降低数据库访问压力</p></blockquote><p><strong>什么样的数据适合做缓存？</strong></p><blockquote><p>经常访问但又不经常修改的数据</p></blockquote><p>缓存是用来提高查询效率的，所有的持久层框架基本上都有缓存机制<br>Mybatis也提供了缓存策略，分为一级缓存，二级缓存</p><h3 id="5-2-一级缓存"><a href="#5-2-一级缓存" class="headerlink" title="5.2 一级缓存"></a>5.2 一级缓存</h3><h4 id="5-1-1-介绍"><a href="#5-1-1-介绍" class="headerlink" title="5.1.1 介绍"></a>5.1.1 介绍</h4><p>MyBatis一级缓存是：SqlSession级别的缓存，默认开启</p><p><img data-src="/img/mybatis%E4%B8%80%E7%BA%A7%E7%BC%93%E5%AD%98%E4%BB%8B%E7%BB%8D.png" alt="mybatis一级缓存介绍"></p><h4 id="5-1-2-验证"><a href="#5-1-2-验证" class="headerlink" title="5.1.2 验证"></a>5.1.2 验证</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 测试一级缓存</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test03</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    SqlSession sqlSession = MyBatisUtils.openSession();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 第一次查询</span></span><br><span class="line">    UserMapper userMapper1 = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    User user1 = userMapper1.findById(<span class="number">41</span>);</span><br><span class="line">    System.out.println(user1);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 手动清除缓存</span></span><br><span class="line">    sqlSession.clearCache();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 第二次查询</span></span><br><span class="line">    UserMapper userMapper2 = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    User user2 = userMapper2.findById(<span class="number">41</span>);</span><br><span class="line">    System.out.println(user2);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 关闭sqlSession</span></span><br><span class="line">    MyBatisUtils.release(sqlSession);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="5-1-3-分析"><a href="#5-1-3-分析" class="headerlink" title="5.1.3 分析"></a>5.1.3 分析</h4><p>一级缓存是SqlSession范围的缓存，不同的sqlsession之间的缓存区域是互相不影响的，执行SqlSession的C（增加）U（更新）D（删除）操作，或者调用clearCache()、commit()、close()方法，都会清空缓存</p><p> <img data-src="/img/mybatis%E4%B8%80%E7%BA%A7%E7%BC%93%E5%AD%98.png" alt="mybatis一级缓存"></p><h3 id="5-3-二级缓存"><a href="#5-3-二级缓存" class="headerlink" title="5.3 二级缓存"></a>5.3 二级缓存</h3><h4 id="5-2-1-介绍"><a href="#5-2-1-介绍" class="headerlink" title="5.2.1 介绍"></a>5.2.1 介绍</h4><p>​    MyBatis的二级缓存虽然是默认开启的，但需要在映射文件中配置<code>&lt;cache/&gt;</code>标签才能使用，而且要求实体类的必须实现序列化接口</p><p>  <img data-src="/img/mybatis%E4%BA%8C%E7%BA%A7%E7%BC%93%E5%AD%98%E4%BB%8B%E7%BB%8D.png" alt="mybatis二级缓存介绍"></p><h4 id="5-2-2-验证"><a href="#5-2-2-验证" class="headerlink" title="5.2.2 验证"></a>5.2.2 验证</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 测试二级缓存</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test04</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 模拟第一个用户</span></span><br><span class="line">    SqlSession sqlSession1 = MyBatisUtils.openSession();</span><br><span class="line">    UserMapper userMapper1 = sqlSession1.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    User user1 = userMapper1.findById(<span class="number">41</span>);</span><br><span class="line">    System.out.println(user1);</span><br><span class="line">    MyBatisUtils.release(sqlSession1);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 模拟第二个用户</span></span><br><span class="line">    SqlSession sqlSession2 = MyBatisUtils.openSession();</span><br><span class="line">    UserMapper userMapper2 = sqlSession2.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    User user2 = userMapper2.findById(<span class="number">41</span>);</span><br><span class="line">    System.out.println(user2);</span><br><span class="line">    MyBatisUtils.release(sqlSession2);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="5-1-3-分析-1"><a href="#5-1-3-分析-1" class="headerlink" title="5.1.3 分析"></a>5.1.3 分析</h4><p>​    二级缓存是mapper映射级别的缓存，多个SqlSession去操作同一个Mapper映射的sql语句，多个SqlSession可以共用二级缓存，二级缓存是跨SqlSession的。</p><p>二级缓存相比一级缓存的范围更大（按namespace来划分）</p><p> <img data-src="/img/mybatis%E4%BA%8C%E7%BA%A7%E7%BC%93%E5%AD%98.png" alt="mybatis二级缓存"></p><h3 id="5-4-知识小结"><a href="#5-4-知识小结" class="headerlink" title="5.4 知识小结"></a>5.4 知识小结</h3><p><img data-src="/img/Mybatis%E7%BC%93%E5%AD%98%E7%9F%A5%E8%AF%86%E5%B0%8F%E7%BB%93.png" alt="Mybatis缓存知识小结"></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1. </span>mybatis的缓存，都不需要我们手动存储和获取数据。mybatis自动维护的。</span><br><span class="line"></span><br><span class="line"><span class="bullet">2. </span>使用mybatis，如果是中小型项目，使用自带缓存的机制是可以满足需求的。如果是大型（分布式）项目，mybatis的缓存灵活性不足，需要使用第三方的缓存技术（redis）解决问题。</span><br></pre></td></tr></table></figure><p> <img data-src="/img/Mybatis%E4%BA%8C%E7%BA%A7%E7%BC%93%E5%AD%98%E5%AD%98%E5%9C%A8%E7%9A%84%E9%97%AE%E9%A2%98.png" alt="Mybatis二级缓存存在的问题"></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、Mybatis动态SQL&quot;&gt;&lt;a href=&quot;#一、Mybatis动态SQL&quot; class=&quot;headerlink&quot; title=&quot;一、Mybatis动态SQL&quot;&gt;&lt;/a&gt;一、Mybatis动态SQL&lt;/h2&gt;&lt;h3 id=&quot;1-1-什么是动态SQL&quot;&gt;&lt;a href=&quot;#1-1-什么是动态SQL&quot; class=&quot;headerlink&quot; title=&quot;1.1 什么是动态SQL&quot;&gt;&lt;/a&gt;1.1 什么是动态SQL&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;先来看一个需求&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;把页面输入的id和username封装到User实体中，并作为条件查询数据库&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&quot;/img/%E5%8A%A8%E6%80%81sql_%E9%9C%80%E6%B1%82.png&quot; alt=&quot;动态sql_需求&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;这个时候我们执行的sql就有多种可能&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;-- 如果id和用户名不为空&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;select * from user where id&amp;#x3D; #&amp;#123;id&amp;#125; and username &amp;#x3D; #&amp;#123;username&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-- 如果只有id&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;select * from user where id&amp;#x3D; #&amp;#123;id&amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-- 如果只有用户名&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;select * from user where username &amp;#x3D; #&amp;#123;username&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-- 如果id和用户名都为空&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;select * from user&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;blockquote&gt;
&lt;p&gt;像上面这样, 根据传入的参数不同, 需要执行的SQL的结构就会不同，这就是动态SQL。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="框架" scheme="http://sunmoon.com/categories/%E6%A1%86%E6%9E%B6/"/>
    
      <category term="Mybatis" scheme="http://sunmoon.com/categories/%E6%A1%86%E6%9E%B6/Mybatis/"/>
    
    
      <category term="多表查询" scheme="http://sunmoon.com/tags/%E5%A4%9A%E8%A1%A8%E6%9F%A5%E8%AF%A2/"/>
    
      <category term="持久层框架" scheme="http://sunmoon.com/tags/%E6%8C%81%E4%B9%85%E5%B1%82%E6%A1%86%E6%9E%B6/"/>
    
      <category term="mybatis" scheme="http://sunmoon.com/tags/mybatis/"/>
    
      <category term="嵌套查询" scheme="http://sunmoon.com/tags/%E5%B5%8C%E5%A5%97%E6%9F%A5%E8%AF%A2/"/>
    
      <category term="缓存" scheme="http://sunmoon.com/tags/%E7%BC%93%E5%AD%98/"/>
    
      <category term="动态sql" scheme="http://sunmoon.com/tags/%E5%8A%A8%E6%80%81sql/"/>
    
      <category term="加载策略" scheme="http://sunmoon.com/tags/%E5%8A%A0%E8%BD%BD%E7%AD%96%E7%95%A5/"/>
    
  </entry>
  
  <entry>
    <title>Mybatis基础</title>
    <link href="http://sunmoon.com/2020/09/06/Mybatis%E5%9F%BA%E7%A1%80/"/>
    <id>http://sunmoon.com/2020/09/06/Mybatis%E5%9F%BA%E7%A1%80/</id>
    <published>2020-09-06T14:09:55.000Z</published>
    <updated>2020-09-06T14:14:44.314Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、框架简介"><a href="#一、框架简介" class="headerlink" title="一、框架简介"></a>一、框架简介</h2><p><img data-src="/img/%E6%A1%86%E6%9E%B6%E7%AE%80%E4%BB%8B.png" alt="框架简介"></p><a id="more"></a><h3 id="1-1-回顾三层架构"><a href="#1-1-回顾三层架构" class="headerlink" title="1.1 回顾三层架构"></a>1.1 回顾三层架构</h3><p>在java语言中开发软件的架构是三层架构，之所以流行是因为有着清晰的任务划分。一般包括以下三层：  </p><ul><li>持久层：主要完成与数据库相关的操作，即对数据库的增删改查。  </li><li>业务层：主要根据功能需求完成业务逻辑的定义和实现。  </li><li>表现层：主要完成与软件用户的交互，需要有交互界面（UI）。  </li></ul><h3 id="1-2-框架"><a href="#1-2-框架" class="headerlink" title="1.2 框架"></a>1.2 框架</h3><p><strong>什么是框架？</strong></p><ul><li>把重复的代码工作抽取出来，让程序员把精力专注在核心的业务代码实现上。</li><li>框架可以理解为半成品软件，框架做好以后，接下来在它基础上进行开发  </li></ul><p><strong>为什么学习框架？</strong></p><ul><li>因为学了它之后，我们的开发确实变得简单。</li><li>企业开发中都在用，不会它，你就无法正常进入企业进行开发工作。</li></ul><p><strong>java中常见的框架？</strong></p><p>Java世界中的框架非常的多，每一个框架都是为了解决某一部分或某些问题而存在的。</p><ul><li><p>持久层框架：专注于解决数据持久化的框架。常用的有mybatis、hibernate、spring jdbc等等。</p></li><li><p>表现层框架：专注于解决与用户交互的框架。常见的有struts2、spring mvc等等。</p></li><li><p>全栈框架: 能在各层都给出解决方案的框架。比较著名的就是spring。</p></li></ul><p><strong>这么多框架，我们怎么选择呢?</strong></p><p>我们以企业中最常用的组合为准来学习Spring + Spring MVC + mybatis（SSM）</p><h2 id="二、Mybatis简介"><a href="#二、Mybatis简介" class="headerlink" title="二、Mybatis简介"></a>二、Mybatis简介</h2><h3 id="2-1-ORM概述"><a href="#2-1-ORM概述" class="headerlink" title="2.1 ORM概述"></a>2.1 ORM概述</h3><p><img data-src="/img/ORM%E6%A6%82%E8%BF%B0.png" alt="ORM概述"></p><p>ORM（Object Relational Mapping）对象关系映射，是一个针对持久层的理论思想。</p><ul><li>Object：对象，这里指的是java类</li><li>Relational：关系，这里指的是数据表</li><li>Mapping：映射，这里指的是java类和数据表之间建立的对应关系</li></ul><p><strong>ORM用来解决什么问题呢?</strong></p><p>一句话说，就是ORM思想可以让我们以面向对象的形式操作数据库</p><p> <strong>常见的ORM框架有哪些？</strong></p><ul><li>Hibernate（全自动ORM，是JPA实现的框架）</li><li>Mybatis（半自动ORM，实现自动封装实体、但是需要开发人员编写sql）</li></ul><h3 id="2-2-Mybatis介绍"><a href="#2-2-Mybatis介绍" class="headerlink" title="2.2 Mybatis介绍"></a>2.2 Mybatis介绍</h3><p><strong>历史</strong></p><ul><li>Mybatis本是apache的一个开源项目，名为iBatis。</li><li>2010年这个项目由apache迁移到了google，并且改名为Mybatis。</li><li>2013年迁移到Github。</li></ul><p><strong>简介</strong></p><p>Mybatis官网地址：<a href="http://www.mybatis.org/mybatis-3/" target="_blank" rel="noopener">http://www.mybatis.org/mybatis-3/</a> </p><ul><li><p>Mybatis是一款优秀的持久层框架，它不需要像JDBC那样去写复杂代码、手动设置参数、繁琐的处理结果集</p></li><li><p>它采用简单的XML配置 + 接口方法的形式实现对数据库的增删改查，使得让程序员只关注sql本身</p></li></ul><blockquote><p>小结：</p><ul><li>Mybatis可以是我们不需要再去编写JDBC繁琐的步骤了，通过<strong>配置文件+接口</strong>方式就可以实现CRUD，我们开发只需要关注sql</li></ul></blockquote><h2 id="三、Mybatis快速入门"><a href="#三、Mybatis快速入门" class="headerlink" title="三、Mybatis快速入门"></a>三、Mybatis快速入门</h2><p><strong>需求</strong></p><blockquote><p>查询数据库user表的所有记录，封装到User对象中。</p></blockquote><h3 id="3-1-开发步骤"><a href="#3-1-开发步骤" class="headerlink" title="3.1 开发步骤"></a>3.1 开发步骤</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1. </span>准备mybatis_db和user表</span><br><span class="line"></span><br><span class="line"><span class="bullet">2. </span>创建java模块，并导入相关jar包</span><br><span class="line"></span><br><span class="line"><span class="bullet">3. </span>创建User实体</span><br><span class="line"></span><br><span class="line"><span class="bullet">4. </span>编写映射文件 UserMapper.xml</span><br><span class="line"></span><br><span class="line"><span class="bullet">5. </span>编写核心文件 SqlMapConfig.xml （mybatis-config.xml）</span><br><span class="line"></span><br><span class="line"><span class="bullet">6. </span>编写测试</span><br></pre></td></tr></table></figure><h3 id="3-2-代码实现"><a href="#3-2-代码实现" class="headerlink" title="3.2 代码实现"></a>3.2 代码实现</h3><h4 id="Ⅰ-准备数据库和user表"><a href="#Ⅰ-准备数据库和user表" class="headerlink" title="Ⅰ 准备数据库和user表"></a>Ⅰ 准备数据库和user表</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">create database if not exists &#96;mybatis_db&#96;;</span><br><span class="line">USE &#96;mybatis_db&#96;;</span><br><span class="line">CREATE TABLE &#96;user&#96; (</span><br><span class="line">  &#96;id&#96; int(11) NOT NULL auto_increment,</span><br><span class="line">  &#96;username&#96; varchar(32) NOT NULL COMMENT &#39;用户名称&#39;,</span><br><span class="line">  &#96;birthday&#96; datetime default NULL COMMENT &#39;生日&#39;,</span><br><span class="line">  &#96;sex&#96; varchar(10) default NULL COMMENT &#39;性别&#39;,</span><br><span class="line">  &#96;address&#96; varchar(256) default NULL COMMENT &#39;地址&#39;,</span><br><span class="line">  PRIMARY KEY  (&#96;id&#96;)</span><br><span class="line">) ENGINE&#x3D;InnoDB DEFAULT CHARSET&#x3D;utf8;</span><br><span class="line"></span><br><span class="line">insert into &#96;user&#96;(&#96;id&#96;,&#96;username&#96;,&#96;birthday&#96;,&#96;sex&#96;,&#96;address&#96;) </span><br><span class="line">values (41,&#39;老王&#39;,&#39;2019-05-27 17:47:08&#39;,&#39;男&#39;,&#39;北京&#39;),</span><br><span class="line">(42,&#39;王小二&#39;,&#39;2019-03-02 15:09:37&#39;,&#39;女&#39;,&#39;北京金燕龙&#39;),</span><br><span class="line">(43,&#39;老李&#39;,&#39;2019-03-04 11:34:34&#39;,&#39;女&#39;,&#39;北京修正&#39;),</span><br><span class="line">(45,&#39;张三&#39;,&#39;2019-03-04 12:04:06&#39;,&#39;男&#39;,&#39;北京金燕龙&#39;),</span><br><span class="line">(46,&#39;王小二&#39;,&#39;2018-09-07 17:37:26&#39;,&#39;男&#39;,&#39;北京TBD&#39;),</span><br><span class="line">(48,&#39;小马宝莉&#39;,&#39;2019-03-08 11:44:00&#39;,&#39;女&#39;,&#39;北京修正&#39;);</span><br></pre></td></tr></table></figure><h4 id="Ⅱ-创建java模块，并导入相关jar包"><a href="#Ⅱ-创建java模块，并导入相关jar包" class="headerlink" title="Ⅱ 创建java模块，并导入相关jar包"></a>Ⅱ 创建java模块，并导入相关jar包</h4><p><img data-src="/img/mybatis%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%E2%80%94%E2%80%94%E5%88%9B%E5%BB%BAjava%E6%A8%A1%E5%9D%97.png" alt="mybatis快速入门——创建java模块"></p><h4 id="Ⅲ-创建User实体"><a href="#Ⅲ-创建User实体" class="headerlink" title="Ⅲ 创建User实体"></a>Ⅲ 创建User实体</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    <span class="keyword">private</span> Date birthday;</span><br><span class="line">    <span class="keyword">private</span> String sex;</span><br><span class="line">    <span class="keyword">private</span> String address;</span><br><span class="line">    <span class="comment">// setter、getter 略</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Ⅳ-编写映射文件-UserMapper-xml"><a href="#Ⅳ-编写映射文件-UserMapper-xml" class="headerlink" title="Ⅳ 编写映射文件 UserMapper.xml"></a>Ⅳ 编写映射文件 UserMapper.xml</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"UserMapper"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--查询所有--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findAll"</span> <span class="attr">resultType</span>=<span class="string">"com.sun.domain.User"</span>&gt;</span></span><br><span class="line">        select * from user</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="Ⅴ-编写核心文件-SqlMapConfig-xml-（mybatis-config-xml）"><a href="#Ⅴ-编写核心文件-SqlMapConfig-xml-（mybatis-config-xml）" class="headerlink" title="Ⅴ 编写核心文件 SqlMapConfig.xml （mybatis-config.xml）"></a>Ⅴ 编写核心文件 SqlMapConfig.xml （mybatis-config.xml）</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">configuration</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Config 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-config.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--配置数据库环境--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">"mysql"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--mysql环境--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">"mysql"</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--事务管理器--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">"JDBC"</span>&gt;</span><span class="tag">&lt;/<span class="name">transactionManager</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--数据源：使用内置连接池--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">"POOLED"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driver"</span> <span class="attr">value</span>=<span class="string">"com.mysql.jdbc.Driver"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">"jdbc:mysql://localhost:3306/mybatis_db"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"root"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"root"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--加载映射文件--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">"com/sun/mapper/UserMapper.xml"</span>&gt;</span><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="Ⅵ-测试"><a href="#Ⅵ-测试" class="headerlink" title="Ⅵ 测试"></a>Ⅵ 测试</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserMapperTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 查询所有</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">// 1.加载核心文件</span></span><br><span class="line">        InputStream in = Resources.getResourceAsStream(<span class="string">"SqlMapConfig.xml"</span>);</span><br><span class="line">        <span class="comment">// 2.构建工厂对象</span></span><br><span class="line">        SqlSessionFactory sqlSessionFactory = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(in);</span><br><span class="line">        <span class="comment">// 3.创建会话对象（简单理解为：connection）</span></span><br><span class="line">        SqlSession sqlSession = sqlSessionFactory.openSession();</span><br><span class="line">        <span class="comment">// 4.调用API执行sql语句</span></span><br><span class="line">        <span class="comment">// 参数：命名空间.id</span></span><br><span class="line">        List&lt;User&gt; list = sqlSession.selectList(<span class="string">"UserMapper.findAll"</span>);</span><br><span class="line">        <span class="keyword">for</span> (User user : list) &#123;</span><br><span class="line">            System.out.println(user);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 5.释放资源</span></span><br><span class="line">        sqlSession.close();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="四、Mybatis映射文件概述"><a href="#四、Mybatis映射文件概述" class="headerlink" title="四、Mybatis映射文件概述"></a>四、Mybatis映射文件概述</h2><p><img data-src="/img/mybatis%E6%98%A0%E5%B0%84%E6%96%87%E4%BB%B6%E6%A6%82%E8%BF%B0.png" alt="mybatis映射文件概述"></p><h2 id="五、Mybatis完成增删改查"><a href="#五、Mybatis完成增删改查" class="headerlink" title="五、Mybatis完成增删改查"></a>五、Mybatis完成增删改查</h2><h3 id="5-1-新增"><a href="#5-1-新增" class="headerlink" title="5.1 新增"></a>5.1 新增</h3><blockquote><p>需求: 向数据库user表新增一条记录</p></blockquote><h4 id="①-编写UserMapper-xml"><a href="#①-编写UserMapper-xml" class="headerlink" title="① 编写UserMapper.xml"></a>① 编写UserMapper.xml</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--添加记录--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">"save"</span> <span class="attr">parameterType</span>=<span class="string">"com.sun.domain.User"</span>&gt;</span></span><br><span class="line">    insert into user values(null,#&#123;username&#125;,#&#123;birthday&#125;,#&#123;sex&#125;,#&#123;address&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="②-编写测试类"><a href="#②-编写测试类" class="headerlink" title="② 编写测试类"></a>② 编写测试类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 添加记录</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test02</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    <span class="comment">// 1.加载核心文件</span></span><br><span class="line">    InputStream in = Resources.getResourceAsStream(<span class="string">"SqlMapConfig.xml"</span>);</span><br><span class="line">    <span class="comment">// 2.构建工厂对象</span></span><br><span class="line">    SqlSessionFactory sqlSessionFactory = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(in);</span><br><span class="line">    <span class="comment">// 3.创建会话对象（简单理解为：connection）</span></span><br><span class="line">    SqlSession sqlSession = sqlSessionFactory.openSession();</span><br><span class="line">    <span class="comment">// 4.调用api添加记录</span></span><br><span class="line">    User user = <span class="keyword">new</span> User();</span><br><span class="line">    user.setUsername(<span class="string">"jack"</span>);</span><br><span class="line">    user.setBirthday(<span class="keyword">new</span> Date());</span><br><span class="line">    user.setSex(<span class="string">"男"</span>);</span><br><span class="line">    user.setAddress(<span class="string">"上海"</span>);</span><br><span class="line">    <span class="keyword">int</span> i = sqlSession.insert(<span class="string">"UserMapper.save"</span>, user);</span><br><span class="line">    System.out.println(i);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 5.提交事务并释放资源</span></span><br><span class="line">    sqlSession.commit();</span><br><span class="line">    sqlSession.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="③-新增注意事项"><a href="#③-新增注意事项" class="headerlink" title="③ 新增注意事项"></a>③ 新增注意事项</h4><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1. </span>新增操作使用 <span class="xml"><span class="tag">&lt;<span class="name">insert</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span> 标签</span><br><span class="line"></span><br><span class="line"><span class="bullet">2. </span>parameterType属性为传递参数的java类型</span><br><span class="line"></span><br><span class="line"><span class="bullet">3. </span>#&#123;&#125; 相当于?占位符，花括号内写实体的属性名</span><br><span class="line"></span><br><span class="line"><span class="bullet">4. </span>新增操作的API使用 sqlSession.insert(“命名空间.id”,实体对象);</span><br><span class="line"></span><br><span class="line"><span class="bullet">5. </span>DML操作需要手动提交事务 sqlSession.commit()</span><br></pre></td></tr></table></figure><h3 id="5-2-修改"><a href="#5-2-修改" class="headerlink" title="5.2 修改"></a>5.2 修改</h3><blockquote><p>需求: 根据user的主键修改其他属性  </p></blockquote><h4 id="①-编写UserMapper-xml-1"><a href="#①-编写UserMapper-xml-1" class="headerlink" title="① 编写UserMapper.xml"></a>① 编写UserMapper.xml</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--修改记录--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">"update"</span> <span class="attr">parameterType</span>=<span class="string">"com.sun.domain.User"</span>&gt;</span></span><br><span class="line">    update user set username = #&#123;username&#125; , birthday = #&#123;birthday&#125; , sex = #&#123;sex&#125; ,address = #&#123;address&#125; where id = #&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="②-编写测试类-1"><a href="#②-编写测试类-1" class="headerlink" title="② 编写测试类"></a>② 编写测试类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 修改记录</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test03</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    <span class="comment">// 1.加载核心文件</span></span><br><span class="line">    InputStream in = Resources.getResourceAsStream(<span class="string">"SqlMapConfig.xml"</span>);</span><br><span class="line">    <span class="comment">// 2.构建工厂对象</span></span><br><span class="line">    SqlSessionFactory sqlSessionFactory = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(in);</span><br><span class="line">    <span class="comment">// 3.创建会话对象（简单理解为：connection）</span></span><br><span class="line">    SqlSession sqlSession = sqlSessionFactory.openSession();</span><br><span class="line">    <span class="comment">// 4.调用API实现修改操作</span></span><br><span class="line">    User user = <span class="keyword">new</span> User();</span><br><span class="line">    user.setId(<span class="number">50</span>);</span><br><span class="line">    user.setUsername(<span class="string">"呵呵"</span>);</span><br><span class="line">    user.setSex(<span class="string">"女"</span>);</span><br><span class="line">    user.setAddress(<span class="string">"葫芦岛"</span>);</span><br><span class="line">    user.setBirthday(<span class="keyword">new</span> Date());</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> i = sqlSession.update(<span class="string">"UserMapper.update"</span>, user);</span><br><span class="line">    System.out.println(i);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 5.提交事务并释放资源</span></span><br><span class="line">    sqlSession.commit();</span><br><span class="line">    sqlSession.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="③-修改注意事项"><a href="#③-修改注意事项" class="headerlink" title="③ 修改注意事项"></a>③ 修改注意事项</h4><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1. </span>修改操作使用 <span class="xml"><span class="tag">&lt;<span class="name">update</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">update</span>&gt;</span></span> 标签</span><br><span class="line"></span><br><span class="line"><span class="bullet">2. </span>parameterType属性为传递参数的java类型</span><br><span class="line"></span><br><span class="line"><span class="bullet">3. </span>#&#123;&#125; 相当于?占位符，花括号内写实体的属性名</span><br><span class="line"></span><br><span class="line"><span class="bullet">4. </span>修改操作的API使用 sqlSession.update(“命名空间.id”,实体对象);</span><br><span class="line"></span><br><span class="line"><span class="bullet">5. </span>DML操作需要手动提交事务 sqlSession.commit()</span><br></pre></td></tr></table></figure><h3 id="5-3-删除"><a href="#5-3-删除" class="headerlink" title="5.3 删除"></a>5.3 删除</h3><blockquote><p>需求:根据主键删除一个用户  </p></blockquote><h4 id="①-编写UserMapper-xml-2"><a href="#①-编写UserMapper-xml-2" class="headerlink" title="① 编写UserMapper.xml"></a>① 编写UserMapper.xml</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--删除记录--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">"delete"</span> <span class="attr">parameterType</span>=<span class="string">"java.lang.Integer"</span>&gt;</span></span><br><span class="line">    delete from user where id = #&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="②-编写测试类-2"><a href="#②-编写测试类-2" class="headerlink" title="② 编写测试类"></a>② 编写测试类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 删除记录</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test04</span><span class="params">()</span><span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">    <span class="comment">// 1.加载核心文件</span></span><br><span class="line">    InputStream in = Resources.getResourceAsStream(<span class="string">"SqlMapConfig.xml"</span>);</span><br><span class="line">    <span class="comment">// 2.构建工厂对象</span></span><br><span class="line">    SqlSessionFactory sqlSessionFactory = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(in);</span><br><span class="line">    <span class="comment">// 3.创建会话对象（简单理解为：connection）</span></span><br><span class="line">    SqlSession sqlSession = sqlSessionFactory.openSession();</span><br><span class="line">    <span class="comment">// 4.调用api实现删除操作</span></span><br><span class="line">    Integer id = <span class="number">50</span>;</span><br><span class="line">    sqlSession.delete(<span class="string">"UserMapper.delete"</span>, id);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 5.提交事务并释放资源</span></span><br><span class="line">    sqlSession.commit();</span><br><span class="line">    sqlSession.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="③-删除注意事项"><a href="#③-删除注意事项" class="headerlink" title="③ 删除注意事项"></a>③ 删除注意事项</h4><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1. </span>删除操作使用 <span class="xml"><span class="tag">&lt;<span class="name">delete</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span> 标签</span><br><span class="line"></span><br><span class="line"><span class="bullet">2. </span>parameterType属性为传递参数的java类型</span><br><span class="line"></span><br><span class="line"><span class="bullet">3. </span>#&#123;&#125; 相当于?占位符，如果传递是简单类型，花括号内随便写，通常做到见名之意即可</span><br><span class="line"></span><br><span class="line"><span class="bullet">4. </span>删除操作的API使用 sqlSession.delete(“命名空间.id”,主键);</span><br><span class="line"></span><br><span class="line"><span class="bullet">5. </span>DML操作需要手动提交事务 sqlSession.commit()</span><br></pre></td></tr></table></figure><h3 id="5-4-工具类"><a href="#5-4-工具类" class="headerlink" title="5.4 工具类"></a>5.4 工具类</h3><blockquote><p>编写了CRUD案例后，发现了测试代码加载文件、创建会话对象，都属于公共部分，可以抽取到工具类中，简化代码，提高效率</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyBatisUtils</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> SqlSessionFactory sqlSessionFactory;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 初始化mybatis环境</span></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 1.加载核心文件</span></span><br><span class="line">            InputStream in = Resources.getResourceAsStream(<span class="string">"SqlMapConfig.xml"</span>);</span><br><span class="line">            <span class="comment">// 2.构建工厂对象</span></span><br><span class="line">            sqlSessionFactory = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(in);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"mybatis框架初始化失败..."</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取sqlSession方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> SqlSession <span class="title">openSession</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> sqlSessionFactory.openSession();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 提交事务并释放资源</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">release</span><span class="params">(SqlSession sqlSession)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (sqlSession != <span class="keyword">null</span>) &#123;</span><br><span class="line">            sqlSession.commit();</span><br><span class="line">            sqlSession.close();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><blockquote><p>需求，查询id为 41这条记录</p></blockquote><h4 id="①-UserMapper-xml"><a href="#①-UserMapper-xml" class="headerlink" title="① UserMapper.xml"></a>① UserMapper.xml</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--查询一个--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findById"</span> <span class="attr">parameterType</span>=<span class="string">"java.lang.Integer"</span> <span class="attr">resultType</span>=<span class="string">"com.sun.domain.User"</span>&gt;</span></span><br><span class="line">    select * from user where id = #&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="②-测试代码"><a href="#②-测试代码" class="headerlink" title="② 测试代码"></a>② 测试代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 查询一个</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test05</span><span class="params">()</span><span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">    <span class="comment">// 1.获取sqlSession会话</span></span><br><span class="line">    SqlSession sqlSession = MyBatisUtils.openSession();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2.调用api查询</span></span><br><span class="line">    User user = sqlSession.selectOne(<span class="string">"UserMapper.findById"</span>, <span class="number">41</span>);</span><br><span class="line"></span><br><span class="line">    System.out.println(user);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 3.提交并释放资源</span></span><br><span class="line">    MyBatisUtils.release(sqlSession);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="六、Mybatis核心文件概述"><a href="#六、Mybatis核心文件概述" class="headerlink" title="六、Mybatis核心文件概述"></a>六、Mybatis核心文件概述</h2><h3 id="6-1-标签层级关系"><a href="#6-1-标签层级关系" class="headerlink" title="6.1 标签层级关系"></a>6.1 标签层级关系</h3><blockquote><p>MyBatis 的配置文件包含了会深深影响 MyBatis 行为的设置和属性信息。 配置文档的顶层结构如下：</p></blockquote><p><img data-src="/img/mybatis%E6%A0%B8%E5%BF%83%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E6%A0%87%E7%AD%BE%E5%B1%82%E7%BA%A7%E5%85%B3%E7%B3%BB.png" alt="mybatis核心配置文件标签层级关系"></p><h3 id="6-2-常用配置标签"><a href="#6-2-常用配置标签" class="headerlink" title="6.2 常用配置标签"></a>6.2 常用配置标签</h3><h4 id="environments标签"><a href="#environments标签" class="headerlink" title="environments标签"></a>environments标签</h4><blockquote><p>数据库环境的配置，支持多环境配置</p></blockquote><p><img data-src="/img/environments%E6%A0%87%E7%AD%BE.png" alt="environments标签"></p><h4 id="properties标签"><a href="#properties标签" class="headerlink" title="properties标签"></a>properties标签</h4><p><img data-src="/img/properties%E6%A0%87%E7%AD%BE.png" alt="properties标签"></p><h4 id="typeAliases标签"><a href="#typeAliases标签" class="headerlink" title="typeAliases标签"></a>typeAliases标签</h4><p><img data-src="/img/typeAliases%E6%A0%87%E7%AD%BE1.png" alt="typeAliases标签1"></p><p><img data-src="/img/typeAliases%E6%A0%87%E7%AD%BE2.png" alt="typeAliases标签2"></p><h4 id="mappers标签"><a href="#mappers标签" class="headerlink" title="mappers标签"></a>mappers标签</h4><blockquote><p>该标签的作用是加载映射文件的，加载方式有如下几种：</p></blockquote><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1. </span>加载指定的src目录下的映射文件，例如：</span><br><span class="line"><span class="code">&lt;mapper resource="com/sun/mapper/UserMapper.xml"/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">2. </span>加载指定接口的全限定名，例如：【注解开发】</span><br><span class="line"><span class="code">&lt;mapper class="com.sun.mapper.UserMapper"/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">3. </span>加载并扫描指定包下所有的接口，例如：【注解开发】</span><br><span class="line"><span class="code">&lt;package name="com.sun.mapper"/&gt;</span></span><br></pre></td></tr></table></figure><p>例如：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">"com/sun/mapper/UserMapper.xml"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="6-3-标签书写顺序"><a href="#6-3-标签书写顺序" class="headerlink" title="6.3 标签书写顺序"></a>6.3 标签书写顺序</h3><p><img data-src="/img/%E6%A0%87%E7%AD%BE%E4%B9%A6%E5%86%99%E9%A1%BA%E5%BA%8F.png" alt="标签书写顺序"></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">configuration</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Config 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-config.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--引入外置properties文件--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span> <span class="attr">resource</span>=<span class="string">"jdbc.properties"</span>&gt;</span><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--java类型别名配置--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--单个类型别名定义--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--&lt;typeAlias type="com.itheima.domain.User" alias="User"&gt;&lt;/typeAlias&gt;--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--把当前包内的所有java类型定义了别名，别名就是类名--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"com.sun.domain"</span>&gt;</span><span class="tag">&lt;/<span class="name">package</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--配置数据库环境--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">"mysql"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--mysql环境--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">"mysql"</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--事务管理器--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">"JDBC"</span>&gt;</span><span class="tag">&lt;/<span class="name">transactionManager</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--数据源：使用内置连接池--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">"POOLED"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driver"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.driver&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.url&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.username&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.password&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--加载映射文件--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">"com/sun/mapper/UserMapper.xml"</span>&gt;</span><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="七、Mybatis的API概述"><a href="#七、Mybatis的API概述" class="headerlink" title="七、Mybatis的API概述"></a>七、Mybatis的API概述</h2><h3 id="7-1-API介绍"><a href="#7-1-API介绍" class="headerlink" title="7.1 API介绍"></a>7.1 API介绍</h3><h4 id="7-1-1-Resources"><a href="#7-1-1-Resources" class="headerlink" title="7.1.1 Resources"></a>7.1.1 Resources</h4><ul><li>加载mybatis的核心配置文件，获取io流</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">InputStream inputStream = Resources.getResourceAsStream(<span class="string">"SqlMapConfig.xml"</span>);</span><br></pre></td></tr></table></figure><h4 id="7-1-2-SqlSessionFactoryBuilder"><a href="#7-1-2-SqlSessionFactoryBuilder" class="headerlink" title="7.1.2 SqlSessionFactoryBuilder"></a>7.1.2 SqlSessionFactoryBuilder</h4><ul><li>将mybatis配置文件加载到内存，构建出SqlSessionFactory工厂对象</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SqlSessionFactoryBuilder builder = <span class="keyword">new</span> SqlSessionFactoryBuilder(); </span><br><span class="line">SqlSessionFactory factory = builder.build(inputStream);</span><br></pre></td></tr></table></figure><h4 id="7-1-3-SqlSessionFactory"><a href="#7-1-3-SqlSessionFactory" class="headerlink" title="7.1.3 SqlSessionFactory"></a>7.1.3 SqlSessionFactory</h4><ul><li>这是一个工厂对象，对于这种创建和销毁都非常耗费资源的重量级对象，一个项目中只需要存在一个即可。<br>  也就是说，它的生命周期跟项目的生命周期是一致的(项目不亡，我不销毁)</li></ul><blockquote><p>它的任务是创建SqlSession会话底层</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 需要手动提交事务，DML语句才会持久化到数据库中</span></span><br><span class="line"><span class="function">SqlSession <span class="title">openSession</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置是否开启自动提交，如果设置为true，开启自动提交事务【了解】</span></span><br><span class="line"><span class="function">SqlSession <span class="title">openSession</span><span class="params">(<span class="keyword">boolean</span> autoCommit)</span></span>;</span><br></pre></td></tr></table></figure><h4 id="7-1-4-SqlSession【核心】"><a href="#7-1-4-SqlSession【核心】" class="headerlink" title="7.1.4 SqlSession【核心】"></a>7.1.4 SqlSession【核心】</h4><ul><li>这是Mybatis的一个核心对象。我们基于这个对象可以实现对数据的CRUD操作。</li></ul><blockquote><p>注意：对于这个对象应做到每个线程独有，每次用时打开，用完关闭。</p></blockquote><p><strong>执行语句的方法主要有：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;T&gt; <span class="function">T <span class="title">selectOne</span><span class="params">(String statement, Object parameter)</span></span>;</span><br><span class="line"></span><br><span class="line">&lt;E&gt; <span class="function">List&lt;E&gt; <span class="title">selectList</span><span class="params">(String statement, Object parameter)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">insert</span><span class="params">(String statement, Object parameter)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">update</span><span class="params">(String statement, Object parameter)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">delete</span><span class="params">(String statement, Object parameter)</span></span>;</span><br></pre></td></tr></table></figure><p><strong>操作事务的方法主要有：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">commit</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">rollback</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure><h3 id="7-2-配置关系"><a href="#7-2-配置关系" class="headerlink" title="7.2 配置关系"></a>7.2 配置关系</h3><p><img data-src="/img/%E9%85%8D%E7%BD%AE%E5%85%B3%E7%B3%BB.png" alt="配置关系"></p><h3 id="7-3-框架工作原理"><a href="#7-3-框架工作原理" class="headerlink" title="7.3 框架工作原理"></a>7.3 框架工作原理</h3><p><img data-src="/img/%E6%A1%86%E6%9E%B6%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86.png" alt="框架工作原理"></p><h2 id="八、Mybatis实现Dao层"><a href="#八、Mybatis实现Dao层" class="headerlink" title="八、Mybatis实现Dao层"></a>八、Mybatis实现Dao层</h2><h3 id="8-1-传统开发方式【了解】"><a href="#8-1-传统开发方式【了解】" class="headerlink" title="8.1 传统开发方式【了解】"></a>8.1 传统开发方式【了解】</h3><h4 id="①-创建新模块导入相关资源"><a href="#①-创建新模块导入相关资源" class="headerlink" title="① 创建新模块导入相关资源"></a>① 创建新模块导入相关资源</h4><p>略…</p><h4 id="②-创建UserMapper（UserDao）"><a href="#②-创建UserMapper（UserDao）" class="headerlink" title="② 创建UserMapper（UserDao）"></a>② 创建UserMapper（UserDao）</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserMapper</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 提供根据id查询的方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">findById</span><span class="params">(Integer id)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">// 1.加载核心文件</span></span><br><span class="line">        InputStream in = Resources.getResourceAsStream(<span class="string">"SqlMapConfig.xml"</span>);</span><br><span class="line">        <span class="comment">// 2.构建工厂</span></span><br><span class="line">        SqlSessionFactory sqlSessionFactory = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(in);</span><br><span class="line">        <span class="comment">// 3.创建会话</span></span><br><span class="line">        SqlSession sqlSession = sqlSessionFactory.openSession();</span><br><span class="line">        <span class="comment">// 4.执行sql</span></span><br><span class="line">        User user = sqlSession.selectOne(<span class="string">"UserMapper.findById"</span>, id);</span><br><span class="line">        <span class="comment">// 5.释放资源</span></span><br><span class="line">        sqlSession.close();</span><br><span class="line">        <span class="keyword">return</span> user;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="③-映射文件UserMapper-xml"><a href="#③-映射文件UserMapper-xml" class="headerlink" title="③ 映射文件UserMapper.xml"></a>③ 映射文件UserMapper.xml</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"UserMapper"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--查询一个--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findById"</span> <span class="attr">parameterType</span>=<span class="string">"int"</span> <span class="attr">resultType</span>=<span class="string">"com.sun.domain.User"</span>&gt;</span></span><br><span class="line">        select * from user where id = #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="④-模拟service进行测试"><a href="#④-模拟service进行测试" class="headerlink" title="④ 模拟service进行测试"></a>④ 模拟service进行测试</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span><span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        <span class="comment">// 调用dao【mapper】</span></span><br><span class="line">        UserMapper userMapper = <span class="keyword">new</span> UserMapper();</span><br><span class="line">        User user = userMapper.findById(<span class="number">41</span>);</span><br><span class="line">        System.out.println(user);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="⑤-通过观察UserMapper代码"><a href="#⑤-通过观察UserMapper代码" class="headerlink" title="⑤ 通过观察UserMapper代码"></a>⑤ 通过观察UserMapper代码</h4><blockquote><p>我们类+方法+参数+返回结果的命名规范，与sqlSession执行底层代码一致，这部分可以交给mybatis通过动态代理，自动生成…</p></blockquote><p><img data-src="/img/%E4%BC%A0%E7%BB%9F%E5%BC%80%E5%8F%91%E6%96%B9%E5%BC%8F%E2%91%A4.png" alt="传统开发方式⑤"></p><h3 id="8-2-接口代理开发方式【掌握】"><a href="#8-2-接口代理开发方式【掌握】" class="headerlink" title="8.2 接口代理开发方式【掌握】"></a>8.2 接口代理开发方式【掌握】</h3><p>采用 Mybatis 的基于接口代理方式实现 持久层 的开发，这种方式是我们后面进入企业的主流。</p><p>基于接口代理方式的开发只需要程序员编写 Mapper 接口，Mybatis 框架会为我们动态生成实现类的对象。</p><p><strong>需要遵循以下命名规范</strong></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1. </span>Mapper映射文件的namespace属性是接口的权限定名</span><br><span class="line"><span class="code">namespace="com.sun.mapper.UserMapper"</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">2. </span>select等标签的id属性名与接口的方法名一致</span><br><span class="line"><span class="code">  id="findById"</span></span><br><span class="line"><span class="code"> </span></span><br><span class="line"><span class="bullet">3. </span>select等标签的parameterType的类型与方法的参数类型一致</span><br><span class="line"><span class="code">parameterType="int"</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">4. </span>select等标签的resultType的类型与方法的返回值类型一致</span><br><span class="line"><span class="code">resultType="com.sun.domain.User"</span></span><br></pre></td></tr></table></figure><p><img data-src="/img/%E6%8E%A5%E5%8F%A3%E4%BB%A3%E7%90%86%E5%BC%80%E5%8F%91%E6%96%B9%E5%BC%8F.png" alt="接口代理开发方式"></p><h4 id="①-新建模块创建、导入相关资源文件"><a href="#①-新建模块创建、导入相关资源文件" class="headerlink" title="① 新建模块创建、导入相关资源文件"></a>① 新建模块创建、导入相关资源文件</h4><p>略…</p><h4 id="②-编写UserMapper接口"><a href="#②-编写UserMapper接口" class="headerlink" title="② 编写UserMapper接口"></a>② 编写UserMapper接口</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserMapper</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 根据id查询</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">findById</span><span class="params">(Integer id)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="③-编写映射UserMapper-xml"><a href="#③-编写映射UserMapper-xml" class="headerlink" title="③ 编写映射UserMapper.xml"></a>③ 编写映射UserMapper.xml</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.sun.mapper.UserMapper"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--查询一个--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findById"</span> <span class="attr">parameterType</span>=<span class="string">"int"</span> <span class="attr">resultType</span>=<span class="string">"com.sun.domain.User"</span>&gt;</span></span><br><span class="line">        select * from user where id = #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="④-模拟service进行测试-1"><a href="#④-模拟service进行测试-1" class="headerlink" title="④ 模拟service进行测试"></a>④ 模拟service进行测试</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">// 1.获取sqlSession</span></span><br><span class="line">        SqlSession sqlSession = MyBatisUtils.openSession();</span><br><span class="line">        <span class="comment">// 2.创建UserMapper代理对象</span></span><br><span class="line">        UserMapper userMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        <span class="comment">// 3.执行sql</span></span><br><span class="line">        User user = userMapper.findById(<span class="number">41</span>);</span><br><span class="line">        System.out.println(user);</span><br><span class="line">        <span class="comment">// 4.释放资源</span></span><br><span class="line">        MyBatisUtils.release(sqlSession);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="8-3-了解Mybatis底层动态代理生成"><a href="#8-3-了解Mybatis底层动态代理生成" class="headerlink" title="8.3 了解Mybatis底层动态代理生成"></a>8.3 了解Mybatis底层动态代理生成</h3><p><img data-src="/img/mybatis%E5%BA%95%E5%B1%82%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86%E7%9A%84%E7%94%9F%E6%88%90.png" alt="mybatis底层动态代理的生成"></p><h2 id="九、Mybatis高级查询"><a href="#九、Mybatis高级查询" class="headerlink" title="九、Mybatis高级查询"></a>九、Mybatis高级查询</h2><h3 id="9-1-ResutlMap标签"><a href="#9-1-ResutlMap标签" class="headerlink" title="9.1 ResutlMap标签"></a>9.1 ResutlMap标签</h3><p>如果数据库结果集中的列名和要封装实体的属性名完全一致的话用 resultType 属性</p><p>如果数据库结果集中的列名和要封装实体的属性名有不一致的情况用 resultMap 属性，通过resultMap手动建立对象关系映射。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.sun.mapper.UserMapper"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        手动映射封装</span></span><br><span class="line"><span class="comment">            id="BaseMap" 该标签的唯一标识</span></span><br><span class="line"><span class="comment">            type="com.itheima.domain.User" 封装后的java类型</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"BaseMap"</span> <span class="attr">type</span>=<span class="string">"com.sun.domain.User"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">            column="uid" 数据库查询的字段名</span></span><br><span class="line"><span class="comment">            property="id" 需要封装到实体属性名</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">"uid"</span> <span class="attr">property</span>=<span class="string">"id"</span>&gt;</span><span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"name"</span> <span class="attr">property</span>=<span class="string">"username"</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"bir"</span> <span class="attr">property</span>=<span class="string">"birthday"</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"gender"</span> <span class="attr">property</span>=<span class="string">"sex"</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"addr"</span> <span class="attr">property</span>=<span class="string">"address"</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--查询一个--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findById"</span> <span class="attr">parameterType</span>=<span class="string">"int"</span> <span class="attr">resultMap</span>=<span class="string">"BaseMap"</span>&gt;</span></span><br><span class="line">        SELECT id AS uid,username AS `name`, birthday AS bir,sex AS gender, address AS addr FROM USER WHERE id = #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="9-2-多条件查询"><a href="#9-2-多条件查询" class="headerlink" title="9.2 多条件查询"></a>9.2 多条件查询</h3><ul><li>需求：根据id和username查询user表</li></ul><h4 id="方式一"><a href="#方式一" class="headerlink" title="方式一"></a>方式一</h4><ul><li>使用 <code>#{arg0}-#{arg1}</code> 或者 <code>#{param1}-#{param2}</code> 获取参数</li></ul><p>代码实现</p><ul><li>接口</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 多条件查询方式一</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findByIdAndUsername1</span><span class="params">(Integer id,String username)</span></span>;</span><br></pre></td></tr></table></figure><ul><li>映射</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    多条件查询方式一</span></span><br><span class="line"><span class="comment">        注意：此parameterType属性只能出现一次，如果传递多个值，可以省略</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByIdAndUsername1"</span> <span class="attr">resultType</span>=<span class="string">"com.sun.domain.User"</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- select * from user where id = #&#123;arg0&#125; and username = #&#123;arg1&#125; --&gt;</span></span><br><span class="line">    select * from user where id = #&#123;param1&#125; and username = #&#123;param2&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>测试</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 多条件查询测试</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test02</span><span class="params">()</span><span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">    List&lt;User&gt; list = userMapper.findByIdAndUsername1(<span class="number">41</span>, <span class="string">"老王"</span>);</span><br><span class="line">    System.out.println(list);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="方式二"><a href="#方式二" class="headerlink" title="方式二"></a>方式二</h4><ul><li>使用注解<code>@Param()</code>注解获取参数</li></ul><p>代码实现</p><ul><li>接口</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 多条件查询方式二</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findByIdAndUsername2</span><span class="params">(@Param(<span class="string">"id"</span>)</span> Integer id,@<span class="title">Param</span><span class="params">(<span class="string">"username"</span>)</span> String username)</span>;</span><br></pre></td></tr></table></figure><ul><li>映射</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">多条件查询方式二</span></span><br><span class="line"><span class="comment">    注意：此parameterType属性只能出现一次，如果传递多个值，可以省略</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByIdAndUsername2"</span> <span class="attr">resultType</span>=<span class="string">"com.sun.domain.User"</span>&gt;</span></span><br><span class="line">    select * from user where id = #&#123;id&#125; and username = #&#123;username&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>测试</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 多条件查询测试</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test02</span><span class="params">()</span><span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">    List&lt;User&gt; list = userMapper.findByIdAndUsername2(<span class="number">41</span>, <span class="string">"老王"</span>);</span><br><span class="line">    System.out.println(list);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="方式三"><a href="#方式三" class="headerlink" title="方式三"></a>方式三</h4><ul><li>使用实体对象传递参数</li></ul><p>代码实现</p><ul><li>接口</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 多条件查询方式三</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findByIdAndUsername3</span><span class="params">(User user)</span></span>;</span><br></pre></td></tr></table></figure><ul><li>映射</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">多条件查询方式三</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByIdAndUsername3"</span> <span class="attr">parameterType</span>=<span class="string">"com.sun.domain.User"</span> <span class="attr">resultType</span>=<span class="string">"com.sun.domain.User"</span>&gt;</span></span><br><span class="line">    select * from user where id = #&#123;id&#125; and username = #&#123;username&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>测试</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 多条件查询测试</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test02</span><span class="params">()</span><span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 实体封装条件</span></span><br><span class="line">    User param = <span class="keyword">new</span> User();</span><br><span class="line">    param.setId(<span class="number">41</span>);</span><br><span class="line">    param.setUsername(<span class="string">"老王"</span>);</span><br><span class="line"></span><br><span class="line">    List&lt;User&gt; list = userMapper.findByIdAndUsername3(param);</span><br><span class="line">    System.out.println(list);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="9-3-模糊查询"><a href="#9-3-模糊查询" class="headerlink" title="9.3 模糊查询"></a>9.3 模糊查询</h3><ul><li><strong>需求</strong>：根据username模糊查询user表</li></ul><h4 id="方式一-1"><a href="#方式一-1" class="headerlink" title="方式一"></a>方式一</h4><p>代码实现</p><ul><li>接口</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 模糊查询方式一</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findLikeUsername1</span><span class="params">(String username)</span></span>;</span><br></pre></td></tr></table></figure><ul><li>映射</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">           模糊查询方式一</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findLikeUsername1"</span> <span class="attr">parameterType</span>=<span class="string">"string"</span> <span class="attr">resultType</span>=<span class="string">"com.sun.domain.User"</span>&gt;</span></span><br><span class="line">    select * from user where username like #&#123;username&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>测试</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 测试模糊查询</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test03</span><span class="params">()</span><span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">    List&lt;User&gt; list = userMapper.findLikeUsername1(<span class="string">"%王%"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (User user : list) &#123;</span><br><span class="line">        System.out.println(user);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>%%是sql的语法，卸载Java中不太合适</p></blockquote><h4 id="方式二-1"><a href="#方式二-1" class="headerlink" title="方式二"></a>方式二</h4><p>代码实现</p><ul><li>接口</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 模糊查询方式二</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findLikeUsername2</span><span class="params">(String username)</span></span>;</span><br></pre></td></tr></table></figure><ul><li>映射</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">   模糊查询方式二</span></span><br><span class="line"><span class="comment">    oracle数据库 双引号除了别名的位置上，其他地方使用报错...</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findLikeUsername2"</span> <span class="attr">parameterType</span>=<span class="string">"string"</span> <span class="attr">resultType</span>=<span class="string">"com.sun.domain.User"</span>&gt;</span></span><br><span class="line">      select * from user where username like "%" #&#123;username&#125; "%"</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>测试</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 测试模糊查询</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test03</span><span class="params">()</span><span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">    List&lt;User&gt; list = userMapper.findLikeUsername2(<span class="string">"王"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (User user : list) &#123;</span><br><span class="line">        System.out.println(user);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="方式三-1"><a href="#方式三-1" class="headerlink" title="方式三"></a>方式三</h4><p>代码实现</p><ul><li>接口</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 模糊查询方式三</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findLikeUsername3</span><span class="params">(String username)</span></span>;</span><br></pre></td></tr></table></figure><ul><li>映射</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">   模糊查询方式三</span></span><br><span class="line"><span class="comment">    $&#123;&#125; 底层使用字符串拼接，可能会出现sql注入问题，开发绝对不用</span></span><br><span class="line"><span class="comment">    如果你传递的是简单数据类型 $&#123;value&#125;</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findLikeUsername3"</span> <span class="attr">parameterType</span>=<span class="string">"string"</span> <span class="attr">resultType</span>=<span class="string">"com.sun.domain.User"</span>&gt;</span></span><br><span class="line">      select * from user where username like '%$&#123;value&#125;%'</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>测试</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 测试模糊查询</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test03</span><span class="params">()</span><span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">    List&lt;User&gt; list = userMapper.findLikeUsername3(<span class="string">"王"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (User user : list) &#123;</span><br><span class="line">        System.out.println(user);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="方式四"><a href="#方式四" class="headerlink" title="方式四"></a>方式四</h4><blockquote><p>使用这种方式最合适</p></blockquote><p>代码实现</p><ul><li>接口</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 模糊查询方式四</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findLikeUsername4</span><span class="params">(String username)</span></span>;</span><br></pre></td></tr></table></figure><ul><li>映射</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">  <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">     模糊查询方式四</span></span><br><span class="line"><span class="comment">      使用concat()函数帮我们进行拼接，注意oracle数据库中此函数只能传递二个参数，需要进行嵌套</span></span><br><span class="line"><span class="comment">  --&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findLikeUsername4"</span> <span class="attr">parameterType</span>=<span class="string">"string"</span> <span class="attr">resultType</span>=<span class="string">"com.sun.domain.User"</span>&gt;</span></span><br><span class="line">        select * from user where username like  concat(concat('%',#&#123;username&#125;),'%')</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>测试</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 测试模糊查询</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test03</span><span class="params">()</span><span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">    List&lt;User&gt; list = userMapper.findLikeUsername4(<span class="string">"王"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (User user : list) &#123;</span><br><span class="line">        System.out.println(user);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="9-4-面试题"><a href="#9-4-面试题" class="headerlink" title="9.4 面试题"></a>9.4 面试题</h3><p><code>${}</code> 与 <code>#{}</code> 区别</p><p><strong><code>#{}</code>:表示一个占位符号</strong> </p><ul><li>通过<code>#{}</code>可以实现preparedStatement向占位符中设置值，自动进行java类型和jdbc类型转换，#{}可以有效防止sql注入。</li><li><code>#{}</code>可以接收简单类型值或实体属性值。 </li><li>如果parameterType传输单个简单类型值，<code>#{}</code>括号中名称任意。 </li></ul><p>*<em><code>${}</code>:表示拼接sql串 *</em></p><ul><li><p>通过<code>${}</code>底层使用statement对象内容拼接在sql中且不进行jdbc类型转换，会出现sql注入问题。</p></li><li><p><code>${}</code>可以接收简单类型值或实体属性值。</p></li><li><p>如果parameterType传输单个简单类型值，<code>${}</code>括号中只能是value。</p><ul><li><blockquote><p>补充：TextSqlNode.java 源码可以证明</p></blockquote></li></ul></li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">* </span>简单类型</span><br><span class="line"><span class="code">string、int（Integer）、long、double</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">* </span>实体（复杂）类型</span><br><span class="line"><span class="code">new User()</span></span><br></pre></td></tr></table></figure><h2 id="十、返回主键"><a href="#十、返回主键" class="headerlink" title="十、返回主键"></a>十、返回主键</h2><ul><li><strong>需求</strong>：向数据库保存一个用户后, 然后在控制台记录下此用户的主键值(id)</li></ul><p>代码实现：</p><ul><li>接口</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 返回主键</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">(User user)</span></span>;</span><br></pre></td></tr></table></figure><ul><li>映射</li><li>方式一</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        返回主键 方式一</span></span><br><span class="line"><span class="comment">            useGeneratedKeys="true" 开启返回主键功能</span></span><br><span class="line"><span class="comment">            keyColumn="id" 数据库主键列</span></span><br><span class="line"><span class="comment">            keyProperty="id" 实体主键属性</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">            这种方式操作虽然简单，但仅支持主键自增类型的数据库：mysql、sqlServer</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">"save"</span> <span class="attr">parameterType</span>=<span class="string">"com.sun.domain.User"</span> <span class="attr">useGeneratedKeys</span>=<span class="string">"true"</span> <span class="attr">keyColumn</span>=<span class="string">"id"</span> <span class="attr">keyProperty</span>=<span class="string">"id"</span>&gt;</span></span><br><span class="line">    insert into user values(null,#&#123;username&#125;,#&#123;birthday&#125;,#&#123;sex&#125;,#&#123;address&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>方式二</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        返回主键方式二</span></span><br><span class="line"><span class="comment">            keyColumn="id" 表的主键列</span></span><br><span class="line"><span class="comment">            keyProperty="id" 实体的主键属性</span></span><br><span class="line"><span class="comment">            resultType="int" 实体主键的java类型</span></span><br><span class="line"><span class="comment">            order="AFTER"  selectKey标签sql语句的执行时机</span></span><br><span class="line"><span class="comment">                before：在insert语句执行之前，执行</span></span><br><span class="line"><span class="comment">                after：在insert语句执行之后，执行</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">            这种方式虽然繁琐，但是通用...</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">"save"</span> <span class="attr">parameterType</span>=<span class="string">"com.sun.domain.User"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">selectKey</span> <span class="attr">keyColumn</span>=<span class="string">"id"</span> <span class="attr">keyProperty</span>=<span class="string">"id"</span> <span class="attr">resultType</span>=<span class="string">"int"</span> <span class="attr">order</span>=<span class="string">"AFTER"</span>&gt;</span></span><br><span class="line">        SELECT LAST_INSERT_ID()</span><br><span class="line">    <span class="tag">&lt;/<span class="name">selectKey</span>&gt;</span></span><br><span class="line">    insert into user values(#&#123;id&#125;,#&#123;username&#125;,#&#123;birthday&#125;,#&#123;sex&#125;,#&#123;address&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>测试</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 返回主键测试</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test04</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    User user = <span class="keyword">new</span> User();</span><br><span class="line">    user.setUsername(<span class="string">"lala"</span>);</span><br><span class="line">    user.setSex(<span class="string">"女"</span>);</span><br><span class="line">    user.setBirthday(<span class="keyword">new</span> Date());</span><br><span class="line">    user.setAddress(<span class="string">"衡水"</span>);</span><br><span class="line">    userMapper.save(user);</span><br><span class="line"></span><br><span class="line">    System.out.println(user.getId());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、框架简介&quot;&gt;&lt;a href=&quot;#一、框架简介&quot; class=&quot;headerlink&quot; title=&quot;一、框架简介&quot;&gt;&lt;/a&gt;一、框架简介&lt;/h2&gt;&lt;p&gt;&lt;img data-src=&quot;/img/%E6%A1%86%E6%9E%B6%E7%AE%80%E4%BB%8B.png&quot; alt=&quot;框架简介&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="框架" scheme="http://sunmoon.com/categories/%E6%A1%86%E6%9E%B6/"/>
    
      <category term="Mybatis" scheme="http://sunmoon.com/categories/%E6%A1%86%E6%9E%B6/Mybatis/"/>
    
    
      <category term="持久层框架" scheme="http://sunmoon.com/tags/%E6%8C%81%E4%B9%85%E5%B1%82%E6%A1%86%E6%9E%B6/"/>
    
      <category term="mybatis" scheme="http://sunmoon.com/tags/mybatis/"/>
    
  </entry>
  
  <entry>
    <title>JDBC&amp;Druid连接池</title>
    <link href="http://sunmoon.com/2020/09/05/JDBC-Druid%E8%BF%9E%E6%8E%A5%E6%B1%A0/"/>
    <id>http://sunmoon.com/2020/09/05/JDBC-Druid%E8%BF%9E%E6%8E%A5%E6%B1%A0/</id>
    <published>2020-09-05T13:17:49.000Z</published>
    <updated>2020-09-05T13:23:30.594Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、JDBC基础"><a href="#一、JDBC基础" class="headerlink" title="一、JDBC基础"></a>一、JDBC基础</h2><h3 id="1-1-概述"><a href="#1-1-概述" class="headerlink" title="1.1 概述"></a>1.1 概述</h3><p>Java 数据库连接（Java DataBase Connectivity）</p><ul><li>作用：通过Java语言操作数据库</li><li>本质：是官方（sun公司）定义的一套操作所有关系型数据库的规则&amp;，即接口。各个数据库厂商去实现这套接口，提供数据库驱动jar包。我们可以使用这套接口（JDBC）编程，真正执行的代码是驱动jar包中的实现类。</li></ul><a id="more"></a><p><img data-src="/img/JDBC%E6%A6%82%E8%BF%B0.png" alt="JDBC概述"></p><blockquote><p>面向接口编程</p></blockquote><p><img data-src="/img/%E9%9D%A2%E5%90%91%E6%8E%A5%E5%8F%A3%E7%BC%96%E7%A8%8B.png" alt="面向接口编程"></p><h3 id="1-2-快速入门"><a href="#1-2-快速入门" class="headerlink" title="1.2 快速入门"></a>1.2 快速入门</h3><ul><li>需求：通过java代码向数据库插入一条记录</li></ul><h4 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h4><h5 id="Ⅰ-准备数据库和表"><a href="#Ⅰ-准备数据库和表" class="headerlink" title="Ⅰ 准备数据库和表"></a>Ⅰ 准备数据库和表</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> jdbc;</span><br><span class="line"><span class="keyword">USE</span> jdbc;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">USER</span>(</span><br><span class="line">  <span class="string">`id`</span> <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span> AUTO_INCREMENT,</span><br><span class="line">  <span class="string">`uaername`</span> <span class="built_in">VARCHAR</span>(<span class="number">50</span>),</span><br><span class="line">  <span class="string">`password`</span> <span class="built_in">VARCHAR</span>(<span class="number">50</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h5 id="Ⅱ-创建Java模块，导入mysql驱动jar包"><a href="#Ⅱ-创建Java模块，导入mysql驱动jar包" class="headerlink" title="Ⅱ 创建Java模块，导入mysql驱动jar包"></a>Ⅱ 创建Java模块，导入mysql驱动jar包</h5><p><img data-src="/img/jdbc%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%E2%80%94%E2%80%94%E5%88%9B%E5%BB%BA%E6%A8%A1%E5%9D%97%E5%AF%BC%E5%85%A5jar%E5%8C%85.png" alt="jdbc快速入门——创建模块导入jar包"></p><h5 id="Ⅲ-步骤分析"><a href="#Ⅲ-步骤分析" class="headerlink" title="Ⅲ 步骤分析"></a>Ⅲ 步骤分析</h5><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1. </span>注册驱动</span><br><span class="line"><span class="bullet">2. </span>建立连接</span><br><span class="line"><span class="bullet">3. </span>编写sql</span><br><span class="line"><span class="bullet">4. </span>获取sql执行对象</span><br><span class="line"><span class="bullet">5. </span>发送sql并返回结果</span><br><span class="line"><span class="bullet">6. </span>处理结果</span><br><span class="line"><span class="bullet">7. </span>释放资源</span><br></pre></td></tr></table></figure><p><img data-src="/img/jdbc%E6%AD%A5%E9%AA%A4%E5%88%86%E6%9E%90.png" alt="jdbc步骤分析"></p><h5 id="Ⅳ-代码实现"><a href="#Ⅳ-代码实现" class="headerlink" title="Ⅳ 代码实现"></a>Ⅳ 代码实现</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JdbcQuick</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">// 1. 注册驱动</span></span><br><span class="line">        DriverManager.registerDriver(<span class="keyword">new</span> Driver());</span><br><span class="line">        <span class="comment">// 2. 建立连接</span></span><br><span class="line">        Connection connection = DriverManager.getConnection(<span class="string">"jdbc:mysql://localhost:3306/jdbc"</span>, <span class="string">"root"</span>, <span class="string">"root"</span>);</span><br><span class="line">        <span class="comment">// 3. 编写sql（分号可以省略）</span></span><br><span class="line">        String sql = <span class="string">"insert into user values(null,'哈哈','999');"</span>;</span><br><span class="line">        <span class="comment">// 4. 获取sql执行对象</span></span><br><span class="line">        Statement statement = connection.createStatement();</span><br><span class="line">        <span class="comment">// 5. 发送sql并返回结果</span></span><br><span class="line">        <span class="keyword">int</span> i = statement.executeUpdate(sql);</span><br><span class="line">        <span class="comment">// 6. 处理结果</span></span><br><span class="line">        <span class="keyword">if</span> (i &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">"添加成功"</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">"添加失败"</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 7. 释放资源</span></span><br><span class="line">        statement.close();</span><br><span class="line">        connection.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1-3-相关API介绍"><a href="#1-3-相关API介绍" class="headerlink" title="1.3 相关API介绍"></a>1.3 相关API介绍</h3><blockquote><p>在java.sql 包下</p></blockquote><ul><li><strong>DriverManager：驱动管理对象【工具类】</strong></li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1. </span>注册驱动</span><br><span class="line"><span class="code">静态方法：static void registerDriver(Driver driver) 【了解】</span></span><br><span class="line"><span class="code">我们观察mysql实现类内部代码，发现了静态代码也注册了一次驱动</span></span><br><span class="line"><span class="code">    static &#123;</span></span><br><span class="line"><span class="code">                try &#123;</span></span><br><span class="line"><span class="code">                    DriverManager.registerDriver(new Driver());</span></span><br><span class="line"><span class="code">                &#125; catch (SQLException var1) &#123;</span></span><br><span class="line"><span class="code">                    throw new RuntimeException("Can't register driver!");</span></span><br><span class="line"><span class="code">                &#125;</span></span><br><span class="line"><span class="code">            &#125;</span></span><br><span class="line"><span class="code">            </span></span><br><span class="line">   反射：Class.forName("com.mysql.jdbc.Driver"); </span><br><span class="line">   加载mysql的驱动类到jvm虚拟机，触发初始化方法</span><br><span class="line">   SPI:服务注册机制【了解】</span><br><span class="line"></span><br><span class="line"><span class="bullet">2. </span>建立连接</span><br><span class="line"><span class="code">static Connection getConnection(String url, String user, String password);</span></span><br><span class="line"><span class="code">参数</span></span><br><span class="line"><span class="code">url：固定格式</span></span><br><span class="line"><span class="code">语法：jdbc:mysql://主机地址:端口/数据库名</span></span><br><span class="line"><span class="code">实例：</span></span><br><span class="line"><span class="code">jdbc:mysql://localhost:3306/web15</span></span><br><span class="line"><span class="code">jdbc:mysql:///web15  【连接本机】</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="code">user：用户名</span></span><br><span class="line"><span class="code">password：密码</span></span><br></pre></td></tr></table></figure><ul><li><strong>Connection：数据库连接对象</strong></li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1. </span>获取sql执行对象</span><br><span class="line"><span class="code">Statement createStatement() 【了解】</span></span><br><span class="line"><span class="code">PreparedStatement prepareStatement(String sql)  【掌握】</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="bullet">2. </span>事务管理</span><br><span class="line"><span class="code">1）开启事务（关闭自动提交）</span></span><br><span class="line"><span class="code">void setAutoCommit(boolean autoCommit)  </span></span><br><span class="line"><span class="code">参数：</span></span><br><span class="line"><span class="code">true：开启自动提交</span></span><br><span class="line"><span class="code">flase：关闭自动提交</span></span><br><span class="line"><span class="code">2）提交事务</span></span><br><span class="line"><span class="code">void commit()  </span></span><br><span class="line"><span class="code">3）回滚事务</span></span><br><span class="line"><span class="code">void rollback()</span></span><br></pre></td></tr></table></figure><ul><li><strong>Statement：执行sql的对象</strong></li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1. </span>执行所有类型的sql语句 </span><br><span class="line"><span class="code">boolean execute(String sql)  </span></span><br><span class="line">-----------------------------------</span><br><span class="line"><span class="bullet">2. </span>执行DML类型的sql语句[常用]</span><br><span class="line"><span class="code">int executeUpdate(String sql)  </span></span><br><span class="line"><span class="code">参数：insert、delete、update</span></span><br><span class="line"><span class="code">返回值：影响行数</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">3. </span>执行DQL类型的sql语句[常用]</span><br><span class="line"><span class="code">ResultSet executeQuery(String sql)  </span></span><br><span class="line"><span class="code">参数：select</span></span><br><span class="line"><span class="code">返回值：查询后的结果集（单条、多条）</span></span><br></pre></td></tr></table></figure><ul><li><strong>ResultSet：结果集对象,封装查询结果</strong></li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1. </span>指针下移（通常与while、if结合使用）</span><br><span class="line"><span class="code">boolean next()</span></span><br><span class="line"><span class="code">返回值：</span></span><br><span class="line"><span class="code">true 有数据</span></span><br><span class="line"><span class="code">false 没数据</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">2. </span>获取数据</span><br><span class="line"><span class="code">T getXxx(int 列编号)</span></span><br><span class="line"><span class="code">T getXxx(String 列名)</span></span><br><span class="line"></span><br><span class="line"><span class="code">Object getObject(String 列名)</span></span><br><span class="line"><span class="code">String getString(String 列名)</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="code">注意：每一行数据对应java中的一个对象</span></span><br></pre></td></tr></table></figure><p><img data-src="/img/resultSet.png" alt="resultSet"></p><h3 id="1-4-使用JDBC实现CRUD操作"><a href="#1-4-使用JDBC实现CRUD操作" class="headerlink" title="1.4 使用JDBC实现CRUD操作"></a>1.4 使用JDBC实现CRUD操作</h3><h5 id="Ⅰ-C：添加一条记录到"><a href="#Ⅰ-C：添加一条记录到" class="headerlink" title="Ⅰ C：添加一条记录到"></a>Ⅰ C：添加一条记录到</h5><p>代码实现</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">cTest</span><span class="params">()</span> <span class="keyword">throws</span> ClassNotFoundException, SQLException </span>&#123;</span><br><span class="line">    <span class="comment">//注册驱动</span></span><br><span class="line">    Class.forName(<span class="string">"com.mysql.jdbc.Driver"</span>);</span><br><span class="line">    <span class="comment">//获取连接</span></span><br><span class="line">    Connection conn = DriverManager.getConnection(<span class="string">"jdbc:mysql://localhost:3306/jdbc"</span>, <span class="string">"root"</span>, <span class="string">"root"</span>);</span><br><span class="line">    <span class="comment">//定义sql</span></span><br><span class="line">    String sql = <span class="string">"insert into user values(null,'清风','123')"</span>;</span><br><span class="line">    <span class="comment">//获取执行sql对象</span></span><br><span class="line">    Statement stat = conn.createStatement();</span><br><span class="line">    <span class="comment">//执行sql</span></span><br><span class="line">    <span class="keyword">int</span> i = stat.executeUpdate(sql);</span><br><span class="line">    <span class="comment">//结果处理</span></span><br><span class="line">    <span class="keyword">if</span> (i&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        System.out.println(<span class="string">"添加成功！"</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">"添加失败！"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//释放资源</span></span><br><span class="line">    stat.close();</span><br><span class="line">    conn.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="Ⅱ-R：查询所有记录"><a href="#Ⅱ-R：查询所有记录" class="headerlink" title="Ⅱ R：查询所有记录"></a>Ⅱ R：查询所有记录</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">rTest</span><span class="params">()</span> <span class="keyword">throws</span> ClassNotFoundException, SQLException </span>&#123;</span><br><span class="line">    <span class="comment">//注册驱动</span></span><br><span class="line">    Class.forName(<span class="string">"com.mysql.jdbc.Driver"</span>);</span><br><span class="line">    <span class="comment">//获取连接</span></span><br><span class="line">    Connection conn = DriverManager.getConnection(<span class="string">"jdbc:mysql://localhost:3306/jdbc"</span>, <span class="string">"root"</span>, <span class="string">"root"</span>);</span><br><span class="line">    <span class="comment">//定义sql</span></span><br><span class="line">    String sql = <span class="string">"select * from user"</span>;</span><br><span class="line">    <span class="comment">//获取执行sql对象</span></span><br><span class="line">    Statement stat = conn.createStatement();</span><br><span class="line">    <span class="comment">//执行sql</span></span><br><span class="line">    ResultSet resultSet = stat.executeQuery(sql);</span><br><span class="line">    <span class="comment">//结果处理,遍历数据</span></span><br><span class="line">    <span class="keyword">while</span> (resultSet.next()) &#123;</span><br><span class="line">        System.out.println(resultSet.getInt(<span class="string">"id"</span>) + resultSet.getString(<span class="string">"username"</span>) + resultSet.getString(<span class="string">"password"</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//释放资源</span></span><br><span class="line">    resultSet.close();</span><br><span class="line">    stat.close();</span><br><span class="line">    conn.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="Ⅲ-U：修改记录"><a href="#Ⅲ-U：修改记录" class="headerlink" title="Ⅲ U：修改记录"></a>Ⅲ U：修改记录</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">uTest</span><span class="params">()</span> <span class="keyword">throws</span> SQLException, ClassNotFoundException </span>&#123;</span><br><span class="line">    <span class="comment">//注册驱动</span></span><br><span class="line">    Class.forName(<span class="string">"com.mysql.jdbc.Driver"</span>);</span><br><span class="line">    <span class="comment">//获取连接</span></span><br><span class="line">    Connection conn = DriverManager.getConnection(<span class="string">"jdbc:mysql://localhost:3306/jdbc"</span>, <span class="string">"root"</span>, <span class="string">"root"</span>);</span><br><span class="line">    <span class="comment">//定义sql</span></span><br><span class="line">    String sql = <span class="string">"update user set username = 'hello' where id = 4"</span>;</span><br><span class="line">    <span class="comment">//获取执行sql对象</span></span><br><span class="line">    Statement stat = conn.createStatement();</span><br><span class="line">    <span class="comment">//执行sql</span></span><br><span class="line">    <span class="keyword">int</span> i = stat.executeUpdate(sql);</span><br><span class="line">    <span class="comment">//结果处理</span></span><br><span class="line">    <span class="keyword">if</span> (i&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        System.out.println(<span class="string">"修改成功"</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">"修改失败"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//释放资源</span></span><br><span class="line">    stat.close();</span><br><span class="line">    conn.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="Ⅳ-D：删除记录"><a href="#Ⅳ-D：删除记录" class="headerlink" title="Ⅳ D：删除记录"></a>Ⅳ D：删除记录</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">dTest</span><span class="params">()</span> <span class="keyword">throws</span> ClassNotFoundException, SQLException </span>&#123;</span><br><span class="line">    <span class="comment">//注册驱动</span></span><br><span class="line">    Class.forName(<span class="string">"com.mysql.jdbc.Driver"</span>);</span><br><span class="line">    <span class="comment">//获取连接</span></span><br><span class="line">    Connection conn = DriverManager.getConnection(<span class="string">"jdbc:mysql://localhost:3306/jdbc"</span>, <span class="string">"root"</span>, <span class="string">"root"</span>);</span><br><span class="line">    <span class="comment">//定义sql</span></span><br><span class="line">    String sql = <span class="string">"delete from user where id = 4"</span>;</span><br><span class="line">    <span class="comment">//获取执行sql对象</span></span><br><span class="line">    Statement stat = conn.createStatement();</span><br><span class="line">    <span class="comment">//执行sql</span></span><br><span class="line">    <span class="keyword">int</span> i = stat.executeUpdate(sql);</span><br><span class="line">    <span class="comment">//结果处理</span></span><br><span class="line">    <span class="keyword">if</span> (i&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        System.out.println(<span class="string">"删除成功"</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">"删除失败"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//释放资源</span></span><br><span class="line">    stat.close();</span><br><span class="line">    conn.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1-5-工具类"><a href="#1-5-工具类" class="headerlink" title="1.5 工具类"></a>1.5 工具类</h3><p>通过上面案例需求我们会发现每次去执行SQL语句都需要注册驱动，获取连接，得到Statement，以及释放资源。发现很多重复的劳动，我们可以将重复的代码定义到一个工具类中。 </p><blockquote><p><strong>目的</strong>：简化书写，一劳永逸</p></blockquote><p>步骤分析：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JdbcUtils</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">   <span class="comment">// 1.注册驱动 </span></span><br><span class="line">   <span class="keyword">static</span>&#123;</span><br><span class="line">        Class.forName(<span class="string">"com.mysql.jdbc.Driver"</span>);</span><br><span class="line">   &#125;</span><br><span class="line"> </span><br><span class="line">   <span class="comment">// 2.建立连接</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title">getConnection</span><span class="params">()</span></span>&#123;</span><br><span class="line">       <span class="keyword">return</span>  DriverManager.getConnection(<span class="string">"jdbc:mysql://localhost:3306/jdbc"</span>, <span class="string">"root"</span>, <span class="string">"root"</span>);</span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line">   <span class="comment">// 3.释放资源</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">release</span><span class="params">(......)</span></span>&#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>代码实现</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JdbcUtils</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//注册驱动</span></span><br><span class="line">            Class.forName(<span class="string">"com.mysql.jdbc.Driver"</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 对外提供获取连接方法</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 连接对象</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title">getConnection</span><span class="params">()</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> DriverManager.getConnection(<span class="string">"jdbc:mysql://localhost:3306/jdbc"</span>, <span class="string">"root"</span>, <span class="string">"root"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 关闭资源</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> resultSet</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> statement</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> connection</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">release</span><span class="params">(ResultSet resultSet, Statement statement,Connection connection)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (resultSet != <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                resultSet.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (statement != <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                statement.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (connection != <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                connection.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">release</span><span class="params">(Statement statement,Connection connection)</span></span>&#123;</span><br><span class="line">        release(<span class="keyword">null</span>,statement,connection);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1-6-JDBC的事务操作"><a href="#1-6-JDBC的事务操作" class="headerlink" title="1.6 JDBC的事务操作"></a>1.6 JDBC的事务操作</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">* </span>事务</span><br><span class="line"><span class="code">如果一个包含多个步骤的业务操作，被事务管理，那么这些操作要么同时成功，要么同时失败。</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">* </span>MySQL操作</span><br><span class="line"><span class="code">1.开启事务</span></span><br><span class="line"><span class="code">begin</span></span><br><span class="line"><span class="code">2.提交事务</span></span><br><span class="line"><span class="code">commit</span></span><br><span class="line"><span class="code">3.回滚事务</span></span><br><span class="line"><span class="code">rollback</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">* </span>java操作（使用Connection对象）</span><br><span class="line"><span class="code">1.开启事务（关闭自动提交）</span></span><br><span class="line"><span class="code">void setAutoCommit(false);</span></span><br><span class="line"><span class="code">2.提交事务</span></span><br><span class="line"><span class="code">void commit();</span></span><br><span class="line"><span class="code">3.回滚事务</span></span><br><span class="line"><span class="code">void rollback();</span></span><br></pre></td></tr></table></figure><h4 id="转账案例"><a href="#转账案例" class="headerlink" title="转账案例"></a>转账案例</h4><h5 id="Ⅰ-准备表和数据"><a href="#Ⅰ-准备表和数据" class="headerlink" title="Ⅰ 准备表和数据"></a>Ⅰ 准备表和数据</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">account</span>(</span><br><span class="line">  <span class="string">`id`</span> <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span> AUTO_INCREMENT,</span><br><span class="line">  <span class="string">`user`</span> <span class="built_in">VARCHAR</span>(<span class="number">10</span>),</span><br><span class="line">  <span class="string">`balance`</span> <span class="keyword">DOUBLE</span></span><br><span class="line">);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">account</span> <span class="keyword">VALUES</span>(<span class="literal">NULL</span>,<span class="string">'张三'</span>,<span class="number">1000</span>),(<span class="literal">NULL</span>,<span class="string">'李四'</span>,<span class="number">1000</span>);</span><br></pre></td></tr></table></figure><h5 id="Ⅱ-异常捕获架构"><a href="#Ⅱ-异常捕获架构" class="headerlink" title="Ⅱ 异常捕获架构"></a>Ⅱ 异常捕获架构</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TXDemo</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testTx</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            </span><br><span class="line">        &#125;<span class="keyword">catch</span>(Exception e)&#123;</span><br><span class="line">            </span><br><span class="line">        &#125;<span class="keyword">finally</span>&#123;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="Ⅲ-嵌入事务代码"><a href="#Ⅲ-嵌入事务代码" class="headerlink" title="Ⅲ 嵌入事务代码"></a>Ⅲ 嵌入事务代码</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TXDemo</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testTx</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Connection connection = <span class="keyword">null</span>;</span><br><span class="line">        Statement statement = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 1.获取连接</span></span><br><span class="line">            connection = JdbcUtils.getConnection();</span><br><span class="line">            <span class="comment">// 2.开启事务</span></span><br><span class="line">            connection.setAutoCommit(<span class="keyword">false</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 3.处理业务逻辑（包含多条sql语句）</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// 4.提交事务</span></span><br><span class="line">            connection.commit();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="comment">// 5.回滚事务</span></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                connection.rollback();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e1) &#123;</span><br><span class="line">                e1.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="comment">// 6.释放资源</span></span><br><span class="line">            JdbcUtils.release(statement, connection);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="Ⅳ-代码实现-1"><a href="#Ⅳ-代码实现-1" class="headerlink" title="Ⅳ 代码实现"></a>Ⅳ 代码实现</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * JDBC的事务操作</span></span><br><span class="line"><span class="comment"> *      转账</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JdbcTransaction</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Connection conn = <span class="keyword">null</span>;</span><br><span class="line">        Statement stat = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 获取连接</span></span><br><span class="line">            conn = JdbcUtils.getConnection();</span><br><span class="line">            <span class="comment">// 关闭自动提交</span></span><br><span class="line">            conn.setAutoCommit(<span class="keyword">false</span>);</span><br><span class="line">            <span class="comment">// 定义张三转出sql语句</span></span><br><span class="line">            String sql1 = <span class="string">"update account set balance = balance - 100 where id = 1"</span>;</span><br><span class="line">            <span class="comment">// 获取执行sql的statement对象</span></span><br><span class="line">            stat = conn.createStatement();</span><br><span class="line">            <span class="comment">// 开始转账</span></span><br><span class="line">            <span class="keyword">int</span> i = stat.executeUpdate(sql1);</span><br><span class="line">            <span class="keyword">if</span> (i&gt;<span class="number">0</span>)&#123;</span><br><span class="line">                System.out.println(<span class="string">"张三转出..."</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="comment">//模拟系统故障</span></span><br><span class="line">            <span class="keyword">int</span> h = <span class="number">1</span> / <span class="number">0</span>;</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 定义李四转入sql</span></span><br><span class="line">            String sql2 = <span class="string">"update account set balance = balance + 100 where id = 2"</span>;</span><br><span class="line">            <span class="comment">// 开始执行</span></span><br><span class="line">            <span class="keyword">int</span> j = stat.executeUpdate(sql2);</span><br><span class="line">            <span class="keyword">if</span> (j&gt;<span class="number">0</span>)&#123;</span><br><span class="line">                System.out.println(<span class="string">"李四转入...."</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 全部执行完，提交事务</span></span><br><span class="line">            conn.commit();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            <span class="comment">// 出异常时，回滚</span></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                conn.rollback();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException ex) &#123;</span><br><span class="line">                ex.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="comment">// 释放资源</span></span><br><span class="line">            JdbcUtils.release(stat,conn);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="二、案例：用户登录"><a href="#二、案例：用户登录" class="headerlink" title="二、案例：用户登录"></a>二、案例：用户登录</h2><p><strong>需求：</strong>登录页面，用户输入账号和密码，实现登录网站功能</p><h3 id="2-1-需求分析"><a href="#2-1-需求分析" class="headerlink" title="2.1 需求分析"></a>2.1 需求分析</h3><p><img data-src="/img/%E7%99%BB%E5%BD%95%E6%A1%88%E4%BE%8B%E9%9C%80%E6%B1%82%E5%88%86%E6%9E%90.png" alt="登录案例需求分析"></p><h3 id="2-2-代码实现"><a href="#2-2-代码实现" class="headerlink" title="2.2 代码实现"></a>2.2 代码实现</h3><h5 id="Ⅰ-创建web模块，导入jar包"><a href="#Ⅰ-创建web模块，导入jar包" class="headerlink" title="Ⅰ 创建web模块，导入jar包"></a>Ⅰ 创建web模块，导入jar包</h5><p><img data-src="/img/%E7%99%BB%E9%99%86%E6%A1%88%E4%BE%8B%E5%AF%BC%E5%85%A5jar%E5%8C%85.png" alt="登陆案例导入jar包"></p><h5 id="Ⅱ-导入资源"><a href="#Ⅱ-导入资源" class="headerlink" title="Ⅱ 导入资源"></a>Ⅱ 导入资源</h5><p><img data-src="/img/%E7%99%BB%E5%BD%95%E6%A1%88%E4%BE%8B%E5%AF%BC%E5%85%A5%E9%A1%B5%E9%9D%A2%E8%B5%84%E6%BA%90.png" alt="登录案例导入页面资源"></p><h5 id="Ⅲ-login-jsp"><a href="#Ⅲ-login-jsp" class="headerlink" title="Ⅲ login.jsp"></a>Ⅲ login.jsp</h5><p><img data-src="/img/%E7%99%BB%E5%BD%95%E6%A1%88%E4%BE%8Blogin.jsp(1).png" alt="login.jsp"></p><p><img data-src="/img/%E7%99%BB%E5%BD%95%E6%A1%88%E4%BE%8Blogin.jsp(2).png" alt="login.jsp"></p><h5 id="Ⅳ-导入JdbcUtils"><a href="#Ⅳ-导入JdbcUtils" class="headerlink" title="Ⅳ 导入JdbcUtils"></a>Ⅳ 导入JdbcUtils</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sun.util;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * JDBC工具类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Sunmoon</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JdbcUtils</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Connection conn;</span><br><span class="line">    <span class="keyword">static</span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//注册驱动</span></span><br><span class="line">            Class.forName(<span class="string">"com.mysql.jdbc.Driver"</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title">getConnection</span><span class="params">()</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> DriverManager.getConnection(<span class="string">"jdbc:mysql://localhost:3306/jdbc"</span>, <span class="string">"root"</span>, <span class="string">"root"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">release</span><span class="params">(ResultSet resultSet, Statement statement,Connection connection)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (resultSet != <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                resultSet.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (statement != <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                statement.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (connection != <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                connection.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">release</span><span class="params">(Statement statement,Connection connection)</span></span>&#123;</span><br><span class="line">        release(<span class="keyword">null</span>,statement,connection);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="Ⅴ-LoginServlet"><a href="#Ⅴ-LoginServlet" class="headerlink" title="Ⅴ LoginServlet"></a>Ⅴ LoginServlet</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/LoginServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">// 1.接收请求参数</span></span><br><span class="line">        String username = request.getParameter(<span class="string">"username"</span>);</span><br><span class="line">        String password = request.getParameter(<span class="string">"password"</span>);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 2.jdbc查询数据库</span></span><br><span class="line">            <span class="comment">// 2.1 建立连接</span></span><br><span class="line">            Connection connection = JdbcUtils.getConnection();</span><br><span class="line">            <span class="comment">// 2.2 编写sql</span></span><br><span class="line">            <span class="comment">// String sql = "select * from user where username = 'admin' and password = '123'";</span></span><br><span class="line">            String sql = <span class="string">"select * from user where username = '"</span> + username + <span class="string">"' and password = '"</span> + password + <span class="string">"'"</span>;</span><br><span class="line">            System.out.println(sql);</span><br><span class="line">            <span class="comment">// 2.3 获取sql执行对象</span></span><br><span class="line">            Statement statement = connection.createStatement();</span><br><span class="line">            <span class="comment">// 2.4 发送sql并返回结果</span></span><br><span class="line">            ResultSet resultSet = statement.executeQuery(sql);</span><br><span class="line">            <span class="comment">// 3. 判断</span></span><br><span class="line">            <span class="keyword">if</span> (resultSet.next()) &#123; <span class="comment">// 登录成功</span></span><br><span class="line">                <span class="comment">// 从数据库中获取</span></span><br><span class="line">                String loginUsername = resultSet.getString(<span class="string">"username"</span>);</span><br><span class="line">                <span class="comment">// 登录人存入session</span></span><br><span class="line">                request.getSession().setAttribute(<span class="string">"loginUsername"</span>, loginUsername);</span><br><span class="line">                <span class="comment">// 重定向list.jsp</span></span><br><span class="line">                response.sendRedirect(request.getContextPath() + <span class="string">"/list.jsp"</span>);</span><br><span class="line"></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123; <span class="comment">// 登录失败</span></span><br><span class="line">                request.setAttribute(<span class="string">"error"</span>, <span class="string">"用户名或密码错误"</span>);</span><br><span class="line">                request.getRequestDispatcher(<span class="string">"/login.jsp"</span>).forward(request, response);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"数据库建立连接失败..."</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="Ⅵ-list-jsp"><a href="#Ⅵ-list-jsp" class="headerlink" title="Ⅵ list.jsp"></a>Ⅵ list.jsp</h5><p><img data-src="/img/%E7%99%BB%E5%BD%95%E6%A1%88%E4%BE%8Blist.jsp.png" alt="登录案例list.jsp"></p><h2 id="三、PreparedStatement"><a href="#三、PreparedStatement" class="headerlink" title="三、PreparedStatement"></a>三、PreparedStatement</h2><h3 id="3-1-概述"><a href="#3-1-概述" class="headerlink" title="3.1 概述"></a>3.1 概述</h3><p>我们让用户输入的信息和SQL语句进行字符串拼接。用户输入的内容作为了SQL语句语法的一部分，改变了原有SQL真正的意义，以上问题称为SQL注入。 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">-- 此sql原有的含义，是根据用户名和密码 查询</span><br><span class="line">SELECT * FROM USER WHERE username &#x3D; &#39;jack&#39; AND PASSWORD &#x3D; &#39;123&#39;；</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- 现在我们将用户输入的参数和sql字符语句进行拼接，改了sql原有的含义，只是根据用户名去查询（sql注入）</span><br><span class="line">SELECT * FROM USER WHERE username &#x3D; &#39;jack&#39;# &#39; and password &#x3D; &#39;&#39;；</span><br></pre></td></tr></table></figure><p><strong>解决sql注入问题</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 将实际参数采用？占位符代替</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="keyword">USER</span> <span class="keyword">WHERE</span> username = ? <span class="keyword">AND</span> <span class="keyword">PASSWORD</span> = ?</span><br></pre></td></tr></table></figure><p><strong>PreparedSatement使用步骤</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1.sql语句使用？占位符代替</span></span><br><span class="line">String sql = <span class="string">"SELECT * FROM USER WHERE username = ? AND PASSWORD = ?"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2.conn获取sql预编译执行对象,先把java中sql字符串发送给数据库进行预编译</span></span><br><span class="line">PreparedSatement pstmt = conn.prepareStatement(sql);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 3.给?赋予实际参数</span></span><br><span class="line">pstmt.setString(<span class="number">1</span>,<span class="string">"admin"</span>);</span><br><span class="line">pstmt.setObject(<span class="number">2</span>,<span class="string">"123"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 4.执行sql并返回结果，不需要再传递sql语句了</span></span><br><span class="line">ResultSet rs = pstmt.executeQuery();</span><br></pre></td></tr></table></figure><h3 id="3-2-改进登录案例"><a href="#3-2-改进登录案例" class="headerlink" title="3.2 改进登录案例"></a>3.2 改进登录案例</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/LoginServletPro"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginServletPro</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">// 1.接收请求参数</span></span><br><span class="line">        String username = request.getParameter(<span class="string">"username"</span>);</span><br><span class="line">        String password = request.getParameter(<span class="string">"password"</span>);</span><br><span class="line">        <span class="comment">// 声明对象</span></span><br><span class="line">        Connection connection = <span class="keyword">null</span>;</span><br><span class="line">        PreparedStatement preparedStatement = <span class="keyword">null</span>;</span><br><span class="line">        ResultSet resultSet = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 2.jdbc查询数据库</span></span><br><span class="line">            <span class="comment">// 2.1 建立连接</span></span><br><span class="line">            connection = JdbcUtils.getConnection();</span><br><span class="line">            <span class="comment">// 2.2 编写sql语句</span></span><br><span class="line">            String sql = <span class="string">"select * from user where username = ? and password = ?"</span>;</span><br><span class="line">            <span class="comment">// 2.3 获取sql预编译执行对象</span></span><br><span class="line">            preparedStatement = connection.prepareStatement(sql);</span><br><span class="line">            <span class="comment">// 2.4 设置实际参数</span></span><br><span class="line">            preparedStatement.setString(<span class="number">1</span>, username);</span><br><span class="line">            preparedStatement.setString(<span class="number">2</span>, password);</span><br><span class="line">            <span class="comment">// 2.5 执行sql并返回结果</span></span><br><span class="line">            resultSet = preparedStatement.executeQuery();</span><br><span class="line">            <span class="comment">// 3. 判断</span></span><br><span class="line">            <span class="keyword">if</span> (resultSet.next()) &#123; <span class="comment">// 登录成功</span></span><br><span class="line">                <span class="comment">// 从数据库中获取</span></span><br><span class="line">                String loginUsername = resultSet.getString(<span class="string">"username"</span>);</span><br><span class="line">                <span class="comment">// 登录人存入session</span></span><br><span class="line">                request.getSession().setAttribute(<span class="string">"loginUsername"</span>, loginUsername);</span><br><span class="line">                <span class="comment">// 重定向list.jsp</span></span><br><span class="line">                response.sendRedirect(request.getContextPath() + <span class="string">"/list.jsp"</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123; <span class="comment">// 登录失败</span></span><br><span class="line">                request.setAttribute(<span class="string">"error"</span>, <span class="string">"用户名或密码错误"</span>);</span><br><span class="line">                request.getRequestDispatcher(<span class="string">"/login.jsp"</span>).forward(request, response);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"数据库建立连接失败..."</span>);</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            JdbcUtils.release(resultSet, preparedStatement, connection);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>PreparedStatement使用步骤小结：</p><ol><li>建立连接</li><li>编写sql，?占位符代替实际参数</li><li>获取sql预编译执行对象</li><li>给?设置实际参数</li><li>执行sql并返回结果</li><li>处理结果</li><li>释放资源</li></ol></blockquote><h3 id="3-3-PreparedStatement优点"><a href="#3-3-PreparedStatement优点" class="headerlink" title="3.3 PreparedStatement优点"></a>3.3 PreparedStatement优点</h3><ul><li>防止sql注入，提高程序的安全性</li><li>减少编译次数，提高程序的效率</li></ul><h2 id="四、连接池"><a href="#四、连接池" class="headerlink" title="四、连接池"></a>四、连接池</h2><h3 id="4-1-概述"><a href="#4-1-概述" class="headerlink" title="4.1 概述"></a>4.1 概述</h3><p><img data-src="/img/%E8%BF%9E%E6%8E%A5%E6%B1%A0%E6%A6%82%E8%BF%B01.png" alt="连接池概述"></p><p>连接池其实就是一个容器(集合)，存放数据库连接的容器。</p><p>当系统初始化好后，容器被创建，容器中会申请一些连接对象，当用户来访问数据库时，从容器中获取连接对象，用户访问完之后，会将连接对象归还给容器。</p><p><strong>优点</strong></p><ul><li>节约资源，减轻服务器压力</li><li>提高连接复用性，用户访问高效</li></ul><p><strong>实现</strong></p><p>Java为数据库连接池提供了公共的接口: DataSource ，各个连接池厂商去实现这套接口，提供jar包。</p><p><img data-src="/img/%E8%BF%9E%E6%8E%A5%E6%B1%A0%E6%A6%82%E8%BF%B02.png" alt="连接池概述2"></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">* </span>DataSource （javax.sql）</span><br><span class="line"><span class="code">功能</span></span><br><span class="line"><span class="bullet">* </span>获取连接：Connection getConnection()</span><br><span class="line"><span class="bullet">* </span>归还连接：connection.close()</span><br><span class="line"><span class="code">连接池底层对connection.close()进行了增强，使用动态代理，不再是释放资源而是归还连接..</span></span><br></pre></td></tr></table></figure><p><strong>常用的连接池技术</strong></p><ul><li>C3P0：数据库连接池技术，使用它的开源项目有Hibernate、Spring等。</li><li><span style="color:red">Druid</span>：(德鲁伊)阿里巴巴提供的数据库连接池技术，是目前最好的数据库连接池。</li><li>HikariCP：日本开发的连接池技术,称之为效率最高的一款连接池,springboot默认的连接池</li></ul><p><strong>其他的连接池</strong>(了解)</p><ul><li>boneCP：数据库连接池技术，体积小速度快。</li><li>DBCP：Apache提供的数据库连接池技术。</li></ul><h3 id="4-2-Druid连接池的使用"><a href="#4-2-Druid连接池的使用" class="headerlink" title="4.2 Druid连接池的使用"></a>4.2 Druid连接池的使用</h3><p> <strong>导入环境(相关jar包)</strong></p><p><img data-src="/img/%E5%AF%BC%E5%85%A5Druid%E8%BF%9E%E6%8E%A5%E6%B1%A0jar%E5%8C%85.png" alt="导入Druid连接池jar包"></p><h4 id="4-2-1-硬编码"><a href="#4-2-1-硬编码" class="headerlink" title="4.2.1 硬编码"></a>4.2.1 硬编码</h4><p>相关参数配置</p><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>jdbcUrl</td><td>连接数据库的url：mysql : jdbc:mysql://localhost:3306/数据库名</td></tr><tr><td>username</td><td>数据库的用户名</td></tr><tr><td>password</td><td>数据库密码</td></tr><tr><td>driverClassName</td><td>驱动类名。根据url自动识别，这一项可配可不配，如果不配置druid会根据 url自动识别dbType，然后选择相应的driverClassName(建议配置下)</td></tr><tr><td>initialSize</td><td>初始化时建立物理连接的个数。初始化发生在显示调用init方法，或者第一次 getConnection时。(不配置默认为0)</td></tr><tr><td>maxActive</td><td>最大连接池数量(不配置默认为8)</td></tr><tr><td>minIdle</td><td>最小连接池数量</td></tr><tr><td>maxWait</td><td>获取连接时最大等待时间，单位毫秒。</td></tr></tbody></table><p>代码演示</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 硬编码方式编写 druid连接池</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo1</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">// 1.创建druid连接池对象</span></span><br><span class="line">        DruidDataSource druidDataSource = <span class="keyword">new</span> DruidDataSource();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.设置数据库基本四项（驱动、url、username、password）</span></span><br><span class="line">        druidDataSource.setDriverClassName(<span class="string">"com.mysql.jdbc.Driver"</span>);</span><br><span class="line">        druidDataSource.setUrl(<span class="string">"jdbc:mysql://localhost:3306/jdbc"</span>);</span><br><span class="line">        druidDataSource.setUsername(<span class="string">"root"</span>);</span><br><span class="line">        druidDataSource.setPassword(<span class="string">"root"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置容器参数</span></span><br><span class="line">        druidDataSource.setInitialSize(<span class="number">5</span>); <span class="comment">// 初始化5个连接对象</span></span><br><span class="line">        druidDataSource.setMaxActive(<span class="number">10</span>); <span class="comment">// 最大连接数10个</span></span><br><span class="line">        druidDataSource.setMinIdle(<span class="number">6</span>); <span class="comment">// 空闲期保留6个连接对象、</span></span><br><span class="line">        druidDataSource.setMaxWait(<span class="number">3000</span>); <span class="comment">// 第11个人访问时，等待3秒</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3.获取连接对象</span></span><br><span class="line">        DruidPooledConnection connection = druidDataSource.getConnection();</span><br><span class="line">        System.out.println(<span class="string">"使用连接操作数据库："</span>+connection);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 4.归还到连接池</span></span><br><span class="line">        connection.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>上面的代码将可能会修改的参数，写死在java代码中，不方便后期项目的迭代和维护…</p></blockquote><h4 id="4-2-2-配置文件"><a href="#4-2-2-配置文件" class="headerlink" title="4.2.2 配置文件"></a>4.2.2 配置文件</h4><blockquote><p>配置文件要求在src根目录下</p></blockquote><blockquote><p><code>druid.properties</code> 配置文件内容</p></blockquote><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 数据库基本四项</span></span><br><span class="line"><span class="attr">driverClassName</span>=<span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line"><span class="attr">url</span>=<span class="string">jdbc:mysql://127.0.0.1:3306/jdbc</span></span><br><span class="line"><span class="attr">username</span>=<span class="string">root</span></span><br><span class="line"><span class="attr">password</span>=<span class="string">root</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 初始化个数</span></span><br><span class="line"><span class="attr">initialSize</span>=<span class="string">5</span></span><br><span class="line"><span class="comment"># 最大连接个数</span></span><br><span class="line"><span class="attr">maxActive</span>=<span class="string">10</span></span><br><span class="line"><span class="comment"># 等待时间，毫秒</span></span><br><span class="line"><span class="attr">maxWait</span>=<span class="string">3000</span></span><br></pre></td></tr></table></figure><p><strong>代码引入配置文件</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 配置文件方式 创建druid连接池对象</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo2</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">// 通过ClassLoader 加载src目录下的 druid.properties  （固定语法）</span></span><br><span class="line">        InputStream in = Demo2.class.getClassLoader().getResourceAsStream("druid.properties");</span><br><span class="line">        Properties properties = <span class="keyword">new</span> Properties();</span><br><span class="line">        properties.load(in);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取druid连接对象</span></span><br><span class="line">        DataSource dataSource = DruidDataSourceFactory.createDataSource(properties);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">11</span>; i++) &#123;</span><br><span class="line">            <span class="comment">// 获取连接</span></span><br><span class="line">            Connection connection = dataSource.getConnection();</span><br><span class="line"></span><br><span class="line">            System.out.println(<span class="string">"第"</span> + i + <span class="string">"次获取连接："</span> + connection);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(i == <span class="number">10</span>)&#123; <span class="comment">// 归还</span></span><br><span class="line">                connection.close();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-3-编写Druid连接池工具类"><a href="#4-3-编写Druid连接池工具类" class="headerlink" title="4.3 编写Druid连接池工具类"></a>4.3 编写Druid连接池工具类</h3><p>我们现在发现每一个执行conn之前，都需要实现创建dataSource对象，这个对象是非常笨重的，一个项目只需要配置一次连接池即可。</p><ul><li><strong>技术分析</strong></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JdbcUtils</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 1.初始化连接池对象</span></span><br><span class="line">    <span class="keyword">static</span>&#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 2.提供获取连接池的静态方法</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 3.提供获取连接对象的静态方法</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 4.提供释放资源的方法（close方法是归还数据库连接到连接池）</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>代码实现</strong></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  连接池工具类，保证一个项目中的连接池对象只创建一次....</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JdbcUtils</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> DataSource dataSource;</span><br><span class="line">    <span class="comment">// 1.初始化连接池对象</span></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 通过ClassLoader 加载src目录下的 druid.properties  （固定语法）</span></span><br><span class="line">            InputStream in = Demo2.class.getClassLoader().getResourceAsStream("druid.properties");</span><br><span class="line">            Properties properties = <span class="keyword">new</span> Properties();</span><br><span class="line">            properties.load(in);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 获取druid连接对象</span></span><br><span class="line">            dataSource = DruidDataSourceFactory.createDataSource(properties);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 2.提供获取连接池的静态方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> DataSource <span class="title">getDataSource</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> dataSource;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 3.提供获取连接对象的静态方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title">getConnection</span><span class="params">()</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> dataSource.getConnection();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 4.提供释放资源的方法（conn是归还）</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">release</span><span class="params">(ResultSet resultSet, Statement statement, Connection connection)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (resultSet != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                resultSet.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (statement != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                statement.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (connection != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                connection.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">release</span><span class="params">(Statement statement, Connection connection)</span> </span>&#123;</span><br><span class="line">        release(<span class="keyword">null</span>, statement, connection);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、JDBC基础&quot;&gt;&lt;a href=&quot;#一、JDBC基础&quot; class=&quot;headerlink&quot; title=&quot;一、JDBC基础&quot;&gt;&lt;/a&gt;一、JDBC基础&lt;/h2&gt;&lt;h3 id=&quot;1-1-概述&quot;&gt;&lt;a href=&quot;#1-1-概述&quot; class=&quot;headerlink&quot; title=&quot;1.1 概述&quot;&gt;&lt;/a&gt;1.1 概述&lt;/h3&gt;&lt;p&gt;Java 数据库连接（Java DataBase Connectivity）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;作用：通过Java语言操作数据库&lt;/li&gt;
&lt;li&gt;本质：是官方（sun公司）定义的一套操作所有关系型数据库的规则&amp;amp;，即接口。各个数据库厂商去实现这套接口，提供数据库驱动jar包。我们可以使用这套接口（JDBC）编程，真正执行的代码是驱动jar包中的实现类。&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="JavaWeb" scheme="http://sunmoon.com/categories/JavaWeb/"/>
    
    
      <category term="JDBC" scheme="http://sunmoon.com/tags/JDBC/"/>
    
      <category term="PreparedStatement" scheme="http://sunmoon.com/tags/PreparedStatement/"/>
    
      <category term="Druid连接池" scheme="http://sunmoon.com/tags/Druid%E8%BF%9E%E6%8E%A5%E6%B1%A0/"/>
    
  </entry>
  
  <entry>
    <title>MySQL函数&amp;权限操作&amp;索引&amp;性能</title>
    <link href="http://sunmoon.com/2020/09/03/MySQL%E5%87%BD%E6%95%B0-%E6%9D%83%E9%99%90%E6%93%8D%E4%BD%9C-%E7%B4%A2%E5%BC%95-%E6%80%A7%E8%83%BD/"/>
    <id>http://sunmoon.com/2020/09/03/MySQL%E5%87%BD%E6%95%B0-%E6%9D%83%E9%99%90%E6%93%8D%E4%BD%9C-%E7%B4%A2%E5%BC%95-%E6%80%A7%E8%83%BD/</id>
    <published>2020-09-03T10:07:51.000Z</published>
    <updated>2020-09-04T10:27:51.488Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、MySQL函数"><a href="#一、MySQL函数" class="headerlink" title="一、MySQL函数"></a>一、MySQL函数</h2><p>为了简化操作，<strong>mysql提供</strong>了大量的函数给程序员使用（比如你想输入当前时间，可以调用now()函数）</p><p>函数可以出现的位置：插入语句的values()中，更新语句中，删除语句中，查询语句及其子句中。</p><blockquote><p>菜鸟教程：<a href="https://www.runoob.com/mysql/mysql-functions.html" target="_blank" rel="noopener">https://www.runoob.com/mysql/mysql-functions.html</a></p></blockquote><a id="more"></a><ul><li>准备数据</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">CREATE DATABASE mysql_fun;</span><br><span class="line">USE mysql_fun;</span><br><span class="line"></span><br><span class="line">CREATE TABLE &#96;dept&#96; (</span><br><span class="line">    &#96;id&#96; INT(11) NOT NULL,</span><br><span class="line">    &#96;dname&#96; VARCHAR(50) DEFAULT NULL,</span><br><span class="line">    &#96;loc&#96; VARCHAR(50) DEFAULT NULL,</span><br><span class="line">    PRIMARY KEY (&#96;id&#96;)</span><br><span class="line">);</span><br><span class="line">INSERT  INTO &#96;dept&#96;(&#96;id&#96;,&#96;dname&#96;,&#96;loc&#96;) VALUES (10,&#39;教研部&#39;,&#39;北京&#39;),(20,&#39;学工部&#39;,&#39;上海&#39;),(30,&#39;销售部&#39;,&#39;广州&#39;),(40,&#39;财务部&#39;,&#39;深圳&#39;);</span><br><span class="line"></span><br><span class="line">CREATE TABLE &#96;emp&#96; (</span><br><span class="line">    &#96;id&#96; INT(11) NOT NULL,</span><br><span class="line">    &#96;ename&#96; VARCHAR(50) DEFAULT NULL,</span><br><span class="line">    &#96;job_id&#96; INT(11) DEFAULT NULL,</span><br><span class="line">    &#96;mgr&#96; INT(11) DEFAULT NULL,</span><br><span class="line">    &#96;joindate&#96; DATE DEFAULT NULL,</span><br><span class="line">    &#96;salary&#96; DECIMAL(7,2) DEFAULT NULL,</span><br><span class="line">    &#96;bonus&#96; DECIMAL(7,2) DEFAULT NULL,</span><br><span class="line">    &#96;dept_id&#96; INT(11) DEFAULT NULL,</span><br><span class="line">    &#96;nickname&#96; VARCHAR(32) DEFAULT NULL,</span><br><span class="line">    PRIMARY KEY (&#96;id&#96;)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">INSERT  INTO </span><br><span class="line">&#96;emp&#96;(&#96;id&#96;,&#96;ename&#96;,&#96;job_id&#96;,&#96;mgr&#96;,&#96;joindate&#96;,&#96;salary&#96;,&#96;bonus&#96;,&#96;dept_id&#96;,&#96;nickname&#96;)</span><br><span class="line">VALUES </span><br><span class="line">(1001,&#39;孙悟空&#39;,4,1004,&#39;2010-12-17&#39;,&#39;8000.00&#39;,NULL,20,&#39;sunwukong&#39;),</span><br><span class="line">(1002,&#39;卢俊义&#39;,3,1006,&#39;2011-02-20&#39;,&#39;16000.00&#39;,&#39;3000.00&#39;,30,&#39;lujunyi&#39;),</span><br><span class="line">(1003,&#39;林冲&#39;,3,1006,&#39;2011-02-22&#39;,&#39;12500.00&#39;,&#39;5000.00&#39;,30,&#39;linchong&#39;),</span><br><span class="line">(1004,&#39;唐僧&#39;,2,1009,&#39;2011-04-02&#39;,&#39;29750.00&#39;,NULL,20,&#39;tangseng&#39;),</span><br><span class="line">(1005,&#39;李逵&#39;,4,1006,&#39;2011-09-28&#39;,&#39;12500.00&#39;,&#39;14000.00&#39;,30,&#39;likui&#39;),</span><br><span class="line">(1006,&#39;宋江&#39;,2,1009,&#39;2011-05-01&#39;,&#39;28500.00&#39;,NULL,30,&#39;songjiang&#39;),</span><br><span class="line">(1007,&#39;刘备&#39;,2,1009,&#39;2011-09-01&#39;,&#39;24500.00&#39;,NULL,10,&#39;liubei&#39;),</span><br><span class="line">(1008,&#39;猪八戒&#39;,4,1004,&#39;2007-04-19&#39;,&#39;30000.00&#39;,NULL,20,&#39;zhubajie&#39;),</span><br><span class="line">(1009,&#39;罗贯中&#39;,1,NULL,&#39;2001-02-17&#39;,&#39;50000.00&#39;,NULL,10,&#39;luoguanzhong&#39;),</span><br><span class="line">(1010,&#39;吴用&#39;,3,1006,&#39;2008-09-08&#39;,&#39;15000.00&#39;,&#39;5000.00&#39;,30,&#39;wuyong&#39;),</span><br><span class="line">(1011,&#39;沙僧&#39;,4,1004,&#39;2009-05-23&#39;,&#39;11000.00&#39;,&#39;3000.00&#39;,20,&#39;shaseng&#39;),</span><br><span class="line">(1012,&#39;李逵&#39;,4,1006,&#39;2015-12-03&#39;,&#39;9500.00&#39;,&#39;5000.00&#39;,30,&#39;likui&#39;),</span><br><span class="line">(1013,&#39;小白龙&#39;,4,1004,&#39;2013-12-03&#39;,&#39;30000.00&#39;,&#39;3000.00&#39;,20,&#39;xiaobailong&#39;),</span><br><span class="line">(1014,&#39;关羽&#39;,4,1007,&#39;2002-02-23&#39;,&#39;13000.00&#39;,NULL,10,&#39;guanyu&#39;);</span><br><span class="line"></span><br><span class="line">CREATE TABLE &#96;job&#96; (</span><br><span class="line">    &#96;id&#96; INT(11) NOT NULL,</span><br><span class="line">    &#96;jname&#96; VARCHAR(20) DEFAULT NULL,</span><br><span class="line">    &#96;description&#96; VARCHAR(50) DEFAULT NULL,</span><br><span class="line">    PRIMARY KEY (&#96;id&#96;)</span><br><span class="line">) ;</span><br><span class="line">INSERT  INTO &#96;job&#96;(&#96;id&#96;,&#96;jname&#96;,&#96;description&#96;) VALUES (1,&#39;董事长&#39;,&#39;管理整个公司，接单&#39;),(2,&#39;经理&#39;,&#39;管理部门员工&#39;),(3,&#39;销售员&#39;,&#39;向客人推销产品&#39;),(4,&#39;文员&#39;,&#39;使用办公软件&#39;);</span><br><span class="line"></span><br><span class="line">CREATE TABLE &#96;salarygrade&#96; (</span><br><span class="line">    &#96;grade&#96; INT(11) NOT NULL,</span><br><span class="line">    &#96;losalary&#96; INT(11) DEFAULT NULL,</span><br><span class="line">    &#96;hisalary&#96; INT(11) DEFAULT NULL,</span><br><span class="line">    PRIMARY KEY (&#96;grade&#96;)</span><br><span class="line">) ;</span><br><span class="line"></span><br><span class="line">INSERT  INTO &#96;salarygrade&#96;(&#96;grade&#96;,&#96;losalary&#96;,&#96;hisalary&#96;) VALUES (1,7000,12000),(2,12010,14000),(3,14010,20000),(4,20010,30000),(5,30010,99990);</span><br></pre></td></tr></table></figure><h3 id="1-1-字符串函数"><a href="#1-1-字符串函数" class="headerlink" title="1.1 字符串函数"></a>1.1 字符串函数</h3><ul><li>常用</li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1.  </span>函数：CONCAT(s1,s2...sn)</span><br><span class="line"><span class="code">描述：字符串 s1,s2 等多个字符串合并为一个字符串</span></span><br><span class="line"><span class="code">实例：select concat("hello",'world');</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">2.  </span>函数：CHAR_LENGTH(str)</span><br><span class="line"><span class="code">描述：返回字符串 str 的字符数</span></span><br><span class="line"><span class="code">实例：select char_length('helloworld');</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">3.  </span>函数：LENGTH(str)</span><br><span class="line"><span class="code">描述：返回字符串 s 的字节数</span></span><br><span class="line"><span class="code">字符集：UTF8（一个中文字符占3个字节）</span></span><br><span class="line"><span class="code">实例：select length('hello,world');</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">4.  </span>函数：LCASE(s) | UCASE(s)</span><br><span class="line"><span class="code">描述：将字符串转换为大小写</span></span><br><span class="line"><span class="code">实例：select ucase('hello');</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">5.  </span>函数：LOCATE(s1,str)</span><br><span class="line"><span class="code">描述：从字符串 str 中获取 s1 的开始位置</span></span><br><span class="line"><span class="code">注意：从1开始</span></span><br><span class="line"><span class="code">实例：select locate('e','hello');</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">6.  </span>函数：TRIM(str) | LTRIM(str) | RTRIM(str)</span><br><span class="line"><span class="code">描述：字符串去空格</span></span><br><span class="line"><span class="code">实例：select trim('   java    ');</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">7.  </span>函数：REPLACE(s,s1,s2)</span><br><span class="line"><span class="code">描述：将字符串 s2 替代字符串 s 中的字符串 s1</span></span><br><span class="line"><span class="code">实例：select replace('你大爷的','大爷','**');</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">8.  </span>函数：SUBSTR(s, start, length)</span><br><span class="line"><span class="code">描述：从字符串 s 的 start 位置截取长度为 length 的子字符串</span></span><br><span class="line"><span class="code">注意：从1开始截取</span></span><br><span class="line"><span class="code">实例：select substr('itheima','3');</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">9. </span>函数：STRCMP(str1,str2)</span><br><span class="line"><span class="code">描述：比较字符串大小,左大于右时返回1，左等于右时返回0，，左小于于右时返回-1，</span></span><br><span class="line"><span class="code">实例：select strcmp('a','b');</span></span><br></pre></td></tr></table></figure><ul><li>练习</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">-- 1.将所有员工的昵称改为大写</span><br><span class="line">SELECT UCASE(nickname) FROM emp;</span><br><span class="line"></span><br><span class="line">-- 2.显示所有员工的姓氏，截取</span><br><span class="line">SELECT SUBSTR(ename,1,1) FROM emp;</span><br><span class="line"></span><br><span class="line">-- 3.显示所有员工姓名字符长度</span><br><span class="line">SELECT ename,CHAR_LENGTH(ename) FROM emp;</span><br><span class="line"></span><br><span class="line">-- 4.显示所有员工姓名字节长度</span><br><span class="line">SELECT ename,LENGTH(ename) FROM emp;</span><br><span class="line"></span><br><span class="line">-- 5.将所有姓李的员工，姓氏替换为li</span><br><span class="line">SELECT REPLACE(ename,&#39;李&#39;,&#39;li&#39;) FROM emp;</span><br><span class="line"></span><br><span class="line">-- 6.将所有员工的姓名和昵称拼接在一起 注意事项，mysql这个函数是一个可变参数，oracle只能传递二个参数</span><br><span class="line">SELECT CONCAT(CONCAT(ename,nickname),salary) FROM emp;</span><br></pre></td></tr></table></figure><h3 id="1-2-日期函数"><a href="#1-2-日期函数" class="headerlink" title="1.2 日期函数"></a>1.2 日期函数</h3><ul><li>常用</li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1.  </span>函数：NOW() | CURDATE() | CURTIME()</span><br><span class="line"><span class="code">描述：获取系统当前日期时间、日期、时间</span></span><br><span class="line"><span class="code">实例：select now();</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">2.  </span>函数：YEAR(DATE) | MONTH(DATE) | DAY(DATE)</span><br><span class="line"><span class="code">描述：从日期中选择出年、月、日</span></span><br><span class="line"><span class="code">实例：select MONTH(now());</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">3.  </span>函数：LAST_DAY(DATE)</span><br><span class="line"><span class="code">描述：返回月份的最后一天</span></span><br><span class="line"><span class="code">实例：select last_day(now());</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">4.  </span>函数：ADDDATE(DATE,n) | SUBDATE(DATE,n)</span><br><span class="line"><span class="code">描述：计算起始日期 DATE 加（减） n 天的日期</span></span><br><span class="line"><span class="code">实例：select adddate(now(),10);</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">5.  </span>函数：QUARTER(DATE)</span><br><span class="line"><span class="code">描述：返回日期 DATE 是第几季节，返回 1 到 4</span></span><br><span class="line"><span class="code">实例：select quarter(now());</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">6.  </span>函数：DATEDIFF(d1,d2)</span><br><span class="line"><span class="code">描述：计算日期 d1-&gt;d2 之间相隔的天数</span></span><br><span class="line"><span class="code">实例：select datediff(now(),'2020-08-11');</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">7.  </span>函数：DATE_FORMAT(d,f)</span><br><span class="line"><span class="code">描述：按表达式 f的要求显示日期 d</span></span><br><span class="line"><span class="code">实例：select date_format(now(),'%Y年%m月%d日');</span></span><br></pre></td></tr></table></figure><ul><li>练习</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">-- 1.统计每个员工入职的天数</span><br><span class="line">SELECT ename,DATEDIFF(NOW(),joindate) FROM emp;</span><br><span class="line"></span><br><span class="line">-- 2.统计每个员工的工龄</span><br><span class="line">SELECT ename,DATEDIFF(NOW(),joindate)&#x2F;365 FROM emp;</span><br><span class="line"></span><br><span class="line">-- 3.查询2011年入职的员工</span><br><span class="line">SELECT * FROM emp WHERE YEAR(joindate) &#x3D; 2011;</span><br><span class="line"></span><br><span class="line">-- 4.统计入职10年以上的员工信息</span><br><span class="line">SELECT * FROM emp WHERE DATEDIFF(NOW(),joindate)&#x2F;365  &gt; 10;</span><br></pre></td></tr></table></figure><h3 id="1-3-数字函数"><a href="#1-3-数字函数" class="headerlink" title="1.3 数字函数"></a>1.3 数字函数</h3><ul><li>常用</li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1.  </span>函数：ABS(x)</span><br><span class="line"><span class="code">描述：返回 x 的绝对值　　</span></span><br><span class="line"><span class="code">实例：select abs(-5);</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">2.  </span>函数：CEIL(x) | FLOOR(x)</span><br><span class="line"><span class="code">描述：向上（下）取整</span></span><br><span class="line"><span class="code">实例：select ceil(-13.3);</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">3.  </span>函数：MOD(x,y)</span><br><span class="line"><span class="code">描述：返回x mod y的结果，取余</span></span><br><span class="line"><span class="code">实例：select mod (5,4);</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">4.  </span>函数：RAND()</span><br><span class="line"><span class="code">描述：返回 0 到 1 的随机数</span></span><br><span class="line"><span class="code">实例：select rand();</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">5.  </span>函数：ROUND(x)</span><br><span class="line"><span class="code">描述：四舍五入</span></span><br><span class="line"><span class="code">实例：select round(3.14);</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">6.  </span>函数：TRUNCATE(x,y)</span><br><span class="line"><span class="code">描述：返回数值 x 保留到小数点后 y 位的值</span></span><br><span class="line"><span class="code">实例：select truncate(3.1415926,2);</span></span><br></pre></td></tr></table></figure><ul><li>练习</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">-- 1.统计每个员工的工龄，超过半年的算一年</span><br><span class="line">SELECT ename, ROUND(DATEDIFF(NOW(),joindate)&#x2F;365) FROM emp;</span><br><span class="line"></span><br><span class="line">-- 2.统计每个部门的平均薪资,保留2位小数</span><br><span class="line">SELECT dept_id, TRUNCATE(AVG(salary),2) FROM emp GROUP BY dept_id;</span><br><span class="line"></span><br><span class="line">-- 3.统计每个部门的平均薪资,小数向上取整</span><br><span class="line">SELECT dept_id, CEIL(AVG(salary)) FROM emp GROUP BY dept_id;</span><br><span class="line"></span><br><span class="line">-- 4.统计每个部门的平均薪资,小数向下取整</span><br><span class="line">SELECT dept_id, FLOOR(AVG(salary)) FROM emp GROUP BY dept_id</span><br></pre></td></tr></table></figure><h3 id="1-4-高级函数"><a href="#1-4-高级函数" class="headerlink" title="1.4 高级函数"></a>1.4 高级函数</h3><h4 id="1-4-1-CASE表达式"><a href="#1-4-1-CASE表达式" class="headerlink" title="1.4.1 CASE表达式"></a>1.4.1 CASE表达式</h4><blockquote><p>相当于Java中的switch语句</p></blockquote><ul><li>语法</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">SELECT </span><br><span class="line">CASE [字段,值] </span><br><span class="line">WHEN 判断条件1 </span><br><span class="line">THEN 希望的到的值1</span><br><span class="line">WHEN 判断条件2 </span><br><span class="line">THEN 希望的到的值2</span><br><span class="line">ELSE 前面条件都没有满足情况下得到的值 </span><br><span class="line">END</span><br><span class="line">FROM</span><br><span class="line">table_name;</span><br></pre></td></tr></table></figure><ul><li>练习</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">-- 查询每个员工的工资等级并排序</span><br><span class="line">-- 工资等级在1显示为 &#39;努力赚钱&#39;</span><br><span class="line">-- 工资等级在2显示为 &#39;小康生活&#39;</span><br><span class="line">-- 工资等级在3显示为 &#39;可以娶媳妇&#39;</span><br><span class="line">-- 工资等级在4显示为 &#39;可以买车&#39;</span><br><span class="line">-- 工资等级在5显示为 &#39;可以买房&#39;</span><br><span class="line">-- 工资等级不在以上列表中显示为  &#39;土豪&#39;</span><br><span class="line"></span><br><span class="line">-- 1.确定表连接关系</span><br><span class="line">SELECT * FROM emp e INNER JOIN salarygrade sg ON e.salary BETWEEN sg.losalary AND sg.hisalary;</span><br><span class="line">-- 2.确定显示字段</span><br><span class="line">SELECT e.ename,e.salary,sg.grade FROM emp e INNER JOIN salarygrade sg ON e.salary BETWEEN sg.losalary AND sg.hisalary;</span><br><span class="line">-- 3.确定业务条件</span><br><span class="line">SELECT </span><br><span class="line">  e.ename,</span><br><span class="line">  e.salary,</span><br><span class="line">  CASE sg.grade </span><br><span class="line">WHEN 1 THEN &#39;努力赚钱&#39;</span><br><span class="line">WHEN 2 THEN &#39;小康生活&#39;</span><br><span class="line">WHEN 3 THEN &#39;可以娶媳妇&#39;</span><br><span class="line">WHEN 4 THEN &#39;可以买车&#39;</span><br><span class="line">WHEN 5 THEN &#39;可以买房&#39;</span><br><span class="line">ELSE &#39;土豪&#39;</span><br><span class="line">  END AS &#39;生活状态&#39;</span><br><span class="line">FROM</span><br><span class="line">  emp e </span><br><span class="line">  INNER JOIN salarygrade sg </span><br><span class="line">    ON e.salary BETWEEN sg.losalary </span><br><span class="line">    AND sg.hisalary ;</span><br></pre></td></tr></table></figure><h4 id="1-4-2-IF表达式"><a href="#1-4-2-IF表达式" class="headerlink" title="1.4.2 IF表达式"></a>1.4.2 IF表达式</h4><blockquote><p>相当于Java中的三元运算符</p></blockquote><ul><li>语法</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT IF(1 &gt; 0,&#39;真&#39;,&#39;假&#39;) from 表名;</span><br></pre></td></tr></table></figure><ul><li>练习</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-- 工资+奖金大于20000的员工 显示家有娇妻，否则显示单身狗</span><br><span class="line">SELECT ename, IF((salary +IFNULL(bonus,0))&gt;20000,&#39;买车买房&#39;,&#39;吃糠咽菜&#39;) FROM emp;</span><br></pre></td></tr></table></figure><h2 id="二、MySQL综合练习"><a href="#二、MySQL综合练习" class="headerlink" title="二、MySQL综合练习"></a>二、MySQL综合练习</h2><p><img data-src="/img/mysql%E5%87%BD%E6%95%B0%E7%BB%BC%E5%90%88%E7%BB%83%E4%B9%A0.png" alt="mysql函数综合练习"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line">-- 1.计算员工的日薪(按22天)，保留二位小数</span><br><span class="line">SELECT ename, TRUNCATE((salary + IFNULL(bonus,0))&#x2F;22,2) AS 日薪 FROM emp;</span><br><span class="line"></span><br><span class="line">-- 2.计算出员工的年薪，并且以年薪排序 降序</span><br><span class="line">SELECT ename,((salary + IFNULL(bonus,0) )*12) AS 年薪 FROM emp ORDER BY 年薪 DESC;</span><br><span class="line"></span><br><span class="line">-- 3.找出奖金少于5000或者没有获得奖金的员工的信息</span><br><span class="line">SELECT * FROM emp WHERE IFNULL(bonus,0)&lt; 5000;</span><br><span class="line"></span><br><span class="line">-- 4.返回员工职务名称及其从事此职务的最低工资</span><br><span class="line">-- 4.1 确定表和连接条件</span><br><span class="line">SELECT * FROM emp e INNER JOIN job j ON e.job_id &#x3D; j.id;</span><br><span class="line">-- 4.2 分组</span><br><span class="line">SELECT j.jname,MIN(e.salary) FROM emp e INNER JOIN job j ON e.job_id &#x3D; j.id GROUP BY j.jname;</span><br><span class="line"></span><br><span class="line">-- 5.返回工龄超过10年，且2月份入职的员工信息</span><br><span class="line">SELECT * FROM emp WHERE DATEDIFF(NOW(),joindate)&#x2F;365 &gt; 10 AND MONTH(joindate) &#x3D; 2;</span><br><span class="line"></span><br><span class="line">-- 6.返回与 林冲 同一年入职的员工</span><br><span class="line">-- 6.1 求出林冲入职时间</span><br><span class="line">SELECT YEAR(joindate) FROM emp WHERE ename &#x3D; &#39;林冲&#39;;</span><br><span class="line">-- 6.2 在查询同年入职员工 </span><br><span class="line">SELECT * FROM emp WHERE YEAR(joindate) &#x3D; (SELECT YEAR(joindate) FROM emp WHERE ename &#x3D; &#39;林冲&#39;);</span><br><span class="line"></span><br><span class="line">-- 7.返回每个员工的名称及其上级领导的名称</span><br><span class="line">SELECT e.ename,m.ename FROM emp e LEFT OUTER JOIN emp m ON e.mgr &#x3D; m.id;</span><br><span class="line"></span><br><span class="line">-- 8.返回工资为二等级（工资等级表）的职员名字（员工表）、部门名称（部门表）</span><br><span class="line">-- 8.1 确定表和连接条件</span><br><span class="line">SELECT * FROM emp e </span><br><span class="line">INNER JOIN salarygrade sg ON e.salary BETWEEN sg.losalary AND sg.hisalary</span><br><span class="line">INNER JOIN dept d ON e.dept_id &#x3D; d.id;</span><br><span class="line">-- 8.2 确定显示字段</span><br><span class="line">SELECT </span><br><span class="line">e.ename,</span><br><span class="line">sg.grade,</span><br><span class="line">d.dname</span><br><span class="line">FROM emp e </span><br><span class="line">INNER JOIN salarygrade sg ON e.salary BETWEEN sg.losalary AND sg.hisalary</span><br><span class="line">INNER JOIN dept d ON e.dept_id &#x3D; d.id;</span><br><span class="line">-- 8.3 确定业务条件</span><br><span class="line">SELECT </span><br><span class="line">e.ename,</span><br><span class="line">sg.grade,</span><br><span class="line">d.dname</span><br><span class="line">FROM emp e </span><br><span class="line">INNER JOIN salarygrade sg ON e.salary BETWEEN sg.losalary AND sg.hisalary</span><br><span class="line">INNER JOIN dept d ON e.dept_id &#x3D; d.id</span><br><span class="line">WHERE sg.grade &#x3D; 2;</span><br><span class="line"></span><br><span class="line">-- 9.涨工资：董事长2000 经理1500 其他800</span><br><span class="line">-- 9.1 确定几张表和连接条件</span><br><span class="line">SELECT * FROM emp e INNER JOIN job j ON e.job_id &#x3D; j.id;</span><br><span class="line">-- 9.2 确定显示字段</span><br><span class="line">SELECT </span><br><span class="line">e.ename,</span><br><span class="line">j.jname,</span><br><span class="line">e.salary AS 涨前,</span><br><span class="line">CASE j.jname</span><br><span class="line">WHEN &#39;董事长&#39; THEN e.salary+2000</span><br><span class="line">WHEN &#39;经理&#39; THEN e.salary+1500</span><br><span class="line">ELSE e.salary+800</span><br><span class="line">END AS 涨后</span><br><span class="line"> FROM emp e INNER JOIN job j ON e.job_id &#x3D; j.id;</span><br></pre></td></tr></table></figure><h2 id="三、用户权限DCL"><a href="#三、用户权限DCL" class="headerlink" title="三、用户权限DCL"></a>三、用户权限DCL</h2><blockquote><p>操作用户权限的职责一般有DBA（DataBase  Adminisitrator）完成</p></blockquote><ul><li>权限操作相关操作</li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1. </span>创建用户</span><br><span class="line"><span class="code">语法：</span></span><br><span class="line"><span class="code">create user '用户名'@'主机名' identified by '密码';</span></span><br><span class="line"><span class="code">注意：</span></span><br><span class="line"><span class="code">主机名</span></span><br><span class="line"><span class="code">指定ip地址</span></span><br><span class="line"><span class="code">%：任意地址都可以访问</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">2. </span>授权用户</span><br><span class="line"><span class="code">语法：</span></span><br><span class="line"><span class="code">grant 权限1,权限2... on 数据库名.表名 to '用户名'@'主机名';</span></span><br><span class="line"><span class="code">注意：</span></span><br><span class="line"><span class="code">权限：</span></span><br><span class="line"><span class="code">select、insert、update、delete、alter、create....</span></span><br><span class="line"><span class="code">all</span></span><br><span class="line"><span class="code">数据库名.*</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">3. </span>查看权限</span><br><span class="line"><span class="code">语法：</span></span><br><span class="line"><span class="code">show grants for '用户名'@'主机名'; </span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">4. </span>撤销授权</span><br><span class="line"><span class="code">语法：</span></span><br><span class="line"><span class="code">revoke 权限1,权限2... on 数据库名.表名 from '用户名'@'主机名'; </span></span><br><span class="line"><span class="code">注意：</span></span><br><span class="line"><span class="code">权限：</span></span><br><span class="line"><span class="code">select、insert、update、delete、alter、create....</span></span><br><span class="line"><span class="code">all</span></span><br><span class="line"><span class="code">数据库名.*</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">5. </span>删除用户</span><br><span class="line"><span class="code">语法：</span></span><br><span class="line"><span class="code">drop user '用户名'@'主机名';</span></span><br><span class="line"><span class="bullet">6. </span>密码管理</span><br><span class="line"><span class="code">1.超级管理员</span></span><br><span class="line"><span class="code">set password for '用户名'@'主机名'=password('新密码');</span></span><br><span class="line"><span class="code">2.普通用户</span></span><br><span class="line"><span class="code">set password=password('新密码');</span></span><br></pre></td></tr></table></figure><ul><li>操作演示</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">-- 创建一个用户</span><br><span class="line">CREATE USER &#39;ss&#39;@&#39;%&#39;  IDENTIFIED BY &#39;123&#39;;</span><br><span class="line"></span><br><span class="line">-- 授权</span><br><span class="line">GRANT SELECT ON tcldb.emp TO &#39;ss&#39;@&#39;%&#39;;</span><br><span class="line"></span><br><span class="line">-- 查看权限</span><br><span class="line">SHOW GRANTS FOR &#39;ss&#39;@&#39;%&#39;;</span><br><span class="line"></span><br><span class="line">-- 撤销权限</span><br><span class="line">REVOKE ALL ON tcldb.emp FROM &#39;ss&#39;@&#39;%&#39;;</span><br><span class="line"></span><br><span class="line">-- 帮ss用户修改密码</span><br><span class="line">SET PASSWORD FOR &#39;ss&#39;@&#39;%&#39; &#x3D; PASSWORD(&#39;333&#39;);</span><br><span class="line"></span><br><span class="line">-- 删除用户</span><br><span class="line">DROP USER &#39;ss&#39;@&#39;%&#39;;</span><br></pre></td></tr></table></figure><h2 id="四、MySQL性能"><a href="#四、MySQL性能" class="headerlink" title="四、MySQL性能"></a>四、MySQL性能</h2><h3 id="4-1-分析-数据库查询效率低下"><a href="#4-1-分析-数据库查询效率低下" class="headerlink" title="4.1 分析-数据库查询效率低下"></a>4.1 分析-数据库查询效率低下</h3><p>进入企业后通常只关注业务和功能，反而忽略了性能，随着系统运行时间增加，数据库数据也在增长，那么执行数据库查询的时候性能会越来越慢。</p><blockquote><p>两个方面优化数据库的方式</p><ul><li>硬件优化</li><li>软件优化：单体应用架构（索引）、分库分片、读写分离</li></ul></blockquote><h3 id="4-2-分析-效率低下的sql"><a href="#4-2-分析-效率低下的sql" class="headerlink" title="4.2 分析-效率低下的sql"></a>4.2 分析-效率低下的sql</h3><p>MySQL有记录sql执行时长的能力，我们只需要设置一个阈值，一旦某条SQL执行时间大于了这个阈值，MySQL就会将其记录到日志文件中，称为慢日志。</p><blockquote><p>企业开发时通常使用第三方技术来监控sql的慢查询日志…</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">-- 1 查看慢查询日志开启情况（mysql默认是关闭）</span><br><span class="line">show variables like &#39;%slow_query_log%&#39;;</span><br><span class="line"></span><br><span class="line">-- 2 开启慢查询日志</span><br><span class="line">set global slow_query_log &#x3D; on;</span><br><span class="line"></span><br><span class="line">-- 3 查看慢查询时间配置(MySQL默认慢查询的记录时间为10秒)</span><br><span class="line">show variables like &#39;%long_query_time%&#39;;</span><br><span class="line"></span><br><span class="line">-- 4 修改慢查询的记录时间【临时修改】</span><br><span class="line">set long_query_time&#x3D;3;</span><br></pre></td></tr></table></figure><p><img data-src="/img/%E5%BC%80%E5%90%AFmysql%E7%9A%84%E6%85%A2%E6%9F%A5%E8%AF%A2%E6%97%A5%E5%BF%97.png" alt="开启mysql的慢查询日志"></p><h3 id="4-3-监控-效率低的sql"><a href="#4-3-监控-效率低的sql" class="headerlink" title="4.3 监控-效率低的sql"></a>4.3 监控-效率低的sql</h3><ul><li>数据准备：插入千万数据</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">create database mysql_performance;</span><br><span class="line">use mysql_performance;</span><br><span class="line">-- 1. 准备表</span><br><span class="line">CREATE TABLE &#96;user&#96;(</span><br><span class="line">id INT,</span><br><span class="line">username VARCHAR(32),</span><br><span class="line">&#96;password&#96; VARCHAR(32),</span><br><span class="line">sex VARCHAR(6),</span><br><span class="line">email VARCHAR(50)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">-- 2. 创建存储过程，实现批量插入记录</span><br><span class="line">DELIMITER $$ -- 声明存储过程的结束符号为$$</span><br><span class="line">CREATE PROCEDURE auto_insert()</span><br><span class="line">BEGIN</span><br><span class="line">    DECLARE i INT DEFAULT 1;</span><br><span class="line">START TRANSACTION; -- 开启事务</span><br><span class="line">    WHILE(i&lt;&#x3D;10000000)DO</span><br><span class="line">        INSERT INTO &#96;user&#96; VALUES(i,CONCAT(&#39;jack&#39;,i),MD5(i),&#39;male&#39;,CONCAT(&#39;jack&#39;,i,&#39;@itcast.cn&#39;));</span><br><span class="line">        SET i&#x3D;i+1;</span><br><span class="line">    END WHILE;</span><br><span class="line">COMMIT; -- 提交</span><br><span class="line">END$$ -- 声明结束</span><br><span class="line">DELIMITER ; -- 重新声明分号为结束符号</span><br><span class="line"></span><br><span class="line">-- 3. 查看存储过程</span><br><span class="line">SHOW CREATE PROCEDURE auto_insert;</span><br><span class="line"></span><br><span class="line">-- 4. 调用存储过程</span><br><span class="line">CALL auto_insert();</span><br></pre></td></tr></table></figure><blockquote><p>执行sql，耗时</p></blockquote><p><img data-src="/img/%E6%8F%92%E5%85%A5%E5%8D%83%E4%B8%87%E6%95%B0%E6%8D%AE%E8%80%97%E6%97%B6.png" alt="插入千万数据耗时"></p><blockquote><p>测试千万记录的查询耗时</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-- 根据id查询</span><br><span class="line">select * from user where id &#x3D; 9999;</span><br></pre></td></tr></table></figure><p><img data-src="/img/%E6%B5%8B%E8%AF%95%E5%8D%83%E4%B8%87%E8%AE%B0%E5%BD%95%E6%9F%A5%E8%AF%A2%E8%80%97%E6%97%B6.png" alt="测试千万记录查询耗时"></p><blockquote><p>慢查询日志文件分析</p></blockquote><p><img data-src="/img/%E6%85%A2%E6%9F%A5%E8%AF%A2%E6%97%A5%E5%BF%97%E5%88%86%E6%9E%90.png" alt="慢查询日志分析"></p><h2 id="五、MySQL索引"><a href="#五、MySQL索引" class="headerlink" title="五、MySQL索引"></a>五、MySQL索引</h2><h3 id="5-1-什么是索引"><a href="#5-1-什么是索引" class="headerlink" title="5.1 什么是索引"></a>5.1 什么是索引</h3><p>在现实生活中，我们都去过图书馆查阅图书。</p><p>现在我们将所有图书杂乱无章的摆放在一起，那么找一本书就像大海捞针一样效率非常低。</p><p>如果我们按分类整理排序后，根据类别去找对应的图书那么效率就很高了。其实这个整理排序的过程就是<span style="color:red">索引</span>。</p><p><img data-src="/img/mysql%E7%B4%A2%E5%BC%951.png" alt="mysql索引1"></p><p>MySQL索引的建立对于MySQL的高效运行是很重要的，索引可以大大提高MySQL的检索速度。</p><p>如果合理的设计且使用索引的MySQL是兰博基尼的话，那么没有设计和使用索引的MySQL就是人力三轮车。</p><p><img data-src="/img/mysql%E7%B4%A2%E5%BC%952.png" alt="mysql索引2"></p><h3 id="5-2-索引分类"><a href="#5-2-索引分类" class="headerlink" title="5.2 索引分类"></a>5.2 索引分类</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">* </span>主键（约束）索引</span><br><span class="line"><span class="code">主键字段 要求：唯一且非空，增加查询速度</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">* </span>唯一（约束）索引</span><br><span class="line"><span class="code">唯一字段 要求：唯一，增加查询速度</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">* </span>普通索引</span><br><span class="line"><span class="code">仅提高查询速度</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">* </span>组合索引</span><br><span class="line"><span class="code">相当于联合主键，将多个字段组成一个索引，提高查询速度</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">* </span>hash索引（了解）</span><br><span class="line"><span class="code">提高查询速度</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">* </span>倒排索引</span><br></pre></td></tr></table></figure><h3 id="5-3-MySQL索引语法"><a href="#5-3-MySQL索引语法" class="headerlink" title="5.3 MySQL索引语法"></a>5.3 MySQL索引语法</h3><h4 id="5-3-1-创建索引"><a href="#5-3-1-创建索引" class="headerlink" title="5.3.1 创建索引"></a>5.3.1 创建索引</h4><h5 id="①-直接创建"><a href="#①-直接创建" class="headerlink" title="① 直接创建"></a>① 直接创建</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">-- 创建普通索引</span><br><span class="line">create index 索引名 on 表名(字段);</span><br><span class="line"></span><br><span class="line">-- 创建唯一索引</span><br><span class="line">create unique index 索引名 on 表名(字段);</span><br><span class="line"></span><br><span class="line">-- 创建普通组合索引</span><br><span class="line">create index 索引名 on 表名(字段1,字段2);</span><br><span class="line"></span><br><span class="line">-- 创建唯一组合索引</span><br><span class="line">create unique index 索引名 on 表名(字段1,字段2);</span><br></pre></td></tr></table></figure><blockquote><p>演示</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE student1(</span><br><span class="line">  id INT,</span><br><span class="line">  username VARCHAR(30),</span><br><span class="line">  telephone VARCHAR(30),</span><br><span class="line">  sex VARCHAR(5)</span><br><span class="line">);</span><br><span class="line">-- 为username创建普通索引</span><br><span class="line">CREATE INDEX username_idx ON student1(username);</span><br><span class="line"></span><br><span class="line">-- 为telephone创建唯一索引</span><br><span class="line">CREATE UNIQUE INDEX tel_un_idx ON student1(telephone);</span><br><span class="line"></span><br><span class="line">-- 为username  telephone  sex 设置唯一联合索引</span><br><span class="line">CREATE UNIQUE INDEX uts_un_idx ON student1(username,telephone,sex);</span><br></pre></td></tr></table></figure><h5 id="②-修改表时指定"><a href="#②-修改表时指定" class="headerlink" title="② 修改表时指定"></a>② 修改表时指定</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">-- 添加主键索引</span><br><span class="line">alter table 表名 add primary key(字段);  -- 默认索引名：primary</span><br><span class="line"></span><br><span class="line">-- 添加唯一索引</span><br><span class="line">alter table 表名 add unique(字段);  -- 默认索引名：字段名</span><br><span class="line"></span><br><span class="line">-- 添加普通索引</span><br><span class="line">alter table 表名 add index(字段); -- 默认索引名：字段名</span><br></pre></td></tr></table></figure><blockquote><p>演示</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE student2(</span><br><span class="line">  id INT,</span><br><span class="line">  username VARCHAR(30),</span><br><span class="line">  telephone VARCHAR(30),</span><br><span class="line">  sex CHAR(2)</span><br><span class="line">);</span><br><span class="line">-- 为id设置主键索引</span><br><span class="line">ALTER TABLE student2 ADD PRIMARY KEY (id);</span><br><span class="line"></span><br><span class="line">-- 为telephone设置唯一索引</span><br><span class="line">ALTER TABLE student2 ADD UNIQUE (telephone);</span><br><span class="line"></span><br><span class="line">-- 为username 设置普通索引</span><br><span class="line">ALTER TABLE student2 ADD INDEX(username);</span><br></pre></td></tr></table></figure><h5 id="③-创建表时指定"><a href="#③-创建表时指定" class="headerlink" title="③ 创建表时指定"></a>③ 创建表时指定</h5><blockquote><p>演示</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">-- 创建表并指定合理的索引字段</span><br><span class="line">CREATE TABLE teacher(</span><br><span class="line"> id INT PRIMARY KEY AUTO_INCREMENT, -- 主键索引</span><br><span class="line"> username VARCHAR(32), </span><br><span class="line"> telephone VARCHAR(11) UNIQUE, -- 唯一索引</span><br><span class="line"> sex VARCHAR(5),</span><br><span class="line"> INDEX(username) -- 普通索引</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="5-4-索引效果演示"><a href="#5-4-索引效果演示" class="headerlink" title="5.4 索引效果演示"></a>5.4 索引效果演示</h3><p>查询千万记录有无索引对比</p><blockquote><p>无索引</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">-- 根据id </span><br><span class="line">select * from user where id &#x3D; 1234567;</span><br><span class="line">-- 根据用户名</span><br><span class="line">select * from user where username &#x3D; &#39;jack1234567&#39;;</span><br><span class="line">-- 根据邮箱模糊查询</span><br><span class="line">select * from user where email like &#39;jack123456%&#39;;</span><br></pre></td></tr></table></figure><p><img data-src="/img/%E6%97%A0%E7%B4%A2%E5%BC%95%E6%A3%80%E7%B4%A2%E5%8D%83%E4%B8%87%E8%AE%B0%E5%BD%95.png" alt="无索引检索千万记录"></p><blockquote><p>添加索引，再次测试</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">-- id 使用主键索引</span><br><span class="line">ALTER TABLE &#96;user&#96; ADD PRIMARY KEY(id);</span><br><span class="line">-- username 普通索引</span><br><span class="line">ALTER TABLE &#96;user&#96; ADD INDEX(username);</span><br><span class="line">-- email 使用唯一索引</span><br><span class="line">ALTER TABLE &#96;user&#96; ADD  UNIQUE(email);</span><br></pre></td></tr></table></figure><p><img data-src="/img/%E6%9C%89%E7%B4%A2%E5%BC%95%E6%A3%80%E7%B4%A2%E5%8D%83%E4%B8%87%E8%AE%B0%E5%BD%95.png" alt="有索引检索千万记录"></p><h3 id="5-5-索引的优缺点"><a href="#5-5-索引的优缺点" class="headerlink" title="5.5 索引的优缺点"></a>5.5 索引的优缺点</h3><p><strong>优点</strong></p><ul><li>类似大学图书馆建书目索引，提高数据检索的效率，降低数据库的IO成本。</li><li>通过索引列对数据进行排序，降低数据排序的成本，降低CPU的消耗。</li></ul><p><strong>缺点</strong></p><ul><li>实际上索引也是表中的一部分，所以索引列也是要占用空间</li><li>虽然索引大大提高了查询速度，同时却会降低更新表的速度，如对表进行INSERT、UPDATE和DELETE时，需要重写对索引进行排序整理</li></ul><h3 id="5-6-索引创建原则"><a href="#5-6-索引创建原则" class="headerlink" title="5.6 索引创建原则"></a>5.6 索引创建原则</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1. </span>经常搜索的字段，where</span><br><span class="line"></span><br><span class="line"><span class="bullet">2. </span>经常排序的字段，order by</span><br><span class="line"></span><br><span class="line"><span class="bullet">3. </span>经常分组的字段，group by （内容可识别率不能低于70%）</span><br><span class="line"></span><br><span class="line"><span class="bullet">4. </span>多表连接的字段，主键 和 外键</span><br></pre></td></tr></table></figure><h3 id="5-7-常见索引失效情况"><a href="#5-7-常见索引失效情况" class="headerlink" title="5.7 常见索引失效情况"></a>5.7 常见索引失效情况</h3><ul><li>使用like模糊匹配，%通配符在最左侧使用时</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-- 1.使用like模糊匹配，%通配符在最左侧使用时</span><br><span class="line">select * from user where username like &#39;jack123456%&#39;;</span><br><span class="line">select * from user where username like &#39;%jack123456&#39;; -- 全表扫描</span><br></pre></td></tr></table></figure><ul><li>尽量避免使用or，如果条件有一个没有索引，那么会进行全表扫描</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-- 2.尽量避免使用or，如果条件有一个没有索引，那么会进行全表扫描</span><br><span class="line">select * from user where username &#x3D; &#39;jack123&#39; or password &#x3D; &#39;d8e423a9d5eb97da9e2d58cd57b92808&#39;;</span><br></pre></td></tr></table></figure><ul><li>在索引列上进行计算</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-- 3.在索引列上进行计算</span><br><span class="line">select * from user where id + 1 &#x3D; 10;</span><br></pre></td></tr></table></figure><ul><li>使用 !=、 &lt;&gt;、 not in、is not null时</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-- 4.使用 !&#x3D;、 &lt;&gt;、 not in、is not null时</span><br><span class="line">select * from user where id is not null;</span><br></pre></td></tr></table></figure><ul><li>组合索引，最左优先原则</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">-- 5.组合索引，最左优先原则</span><br><span class="line">alter table user add unique(id,password);</span><br><span class="line"></span><br><span class="line">select * from user where id &#x3D; 1 and password &#x3D; &#39;c4ca4238a0b923820dcc509a6f75849b&#39;; -- 有效</span><br><span class="line">select * from user where id &#x3D; 1 ; -- 有效</span><br><span class="line">select * from user where  password &#x3D; &#39;c4ca4238a0b923820dcc509a6f75849b&#39;; -- 失效</span><br></pre></td></tr></table></figure><h3 id="5-8-索引的数据结构"><a href="#5-8-索引的数据结构" class="headerlink" title="5.8 索引的数据结构"></a>5.8 索引的数据结构</h3><h4 id="5-8-1-概述"><a href="#5-8-1-概述" class="headerlink" title="5.8.1 概述"></a>5.8.1 概述</h4><p>我们知道<strong>索引</strong>是帮助MySQL高效获取<strong>排好序</strong>的<strong>数据结构</strong>。</p><p>为什么使用索引后查询效率提高很多呢？接下来我们来了解下：</p><p><img data-src="/img/%E7%B4%A2%E5%BC%95%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E6%A6%82%E8%BF%B01.png" alt="索引数据结构概述1"></p><p>在没有索引的情况下我们执行一条sql语句，那么是表进行全局遍历，磁盘寻址（注意逻辑上相邻的记录在磁盘上也并不是一定物理相邻的）。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select  * from user where col1&#x3D;6;</span><br></pre></td></tr></table></figure><p><img data-src="/img/%E7%B4%A2%E5%BC%95%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E6%A6%82%E8%BF%B02.png" alt="索引数据结构概述2"></p><p>为了加快的查找效率，可以维护一个右边所示的二叉查找树，每个节点分别包含索引键值和一个指向对应数据记录物理地址的指针，这样就可以运用二叉查找快速获取到相应数据。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select  * from user where col2&#x3D;59;</span><br></pre></td></tr></table></figure><h4 id="5-8-2-索引的数据结构"><a href="#5-8-2-索引的数据结构" class="headerlink" title="5.8.2 索引的数据结构"></a>5.8.2 索引的数据结构</h4><ul><li>二叉树：对于当前父节点，左分支节点元素小，右分支节点元素大</li></ul><p><img data-src="/img/%E7%B4%A2%E5%BC%95%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E2%80%94%E2%80%94%E4%BA%8C%E5%8F%89%E6%A0%91.png" alt="索引数据结构——二叉树"></p><ul><li>红黑树：红黑树是一种平衡二叉树，目的是寻求左右分支长度的平衡（左旋、右旋）</li></ul><p><img data-src="/img/%E7%B4%A2%E5%BC%95%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E2%80%94%E2%80%94%E7%BA%A2%E9%BB%91%E6%A0%91.png" alt="索引数据结构——红黑树"></p><ul><li>BTree：多叉平衡查找树，每个节点都可以存放多个数据，可以有效减少层数</li></ul><p><img data-src="/img/%E7%B4%A2%E5%BC%95%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E2%80%94%E2%80%94BTree.png" alt="索引数据结构——BTree"></p><ul><li>B+Tree：针对于BTree的优化，数据只存储在叶子节点上，非叶子节点只存储索引和指针</li></ul><p><img data-src="/img/%E7%B4%A2%E5%BC%95%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E2%80%94%E2%80%94B+Tree.png" alt="索引数据结构——B+Tree"></p><ul><li>Hash（了解）：单值查询速度极快，不能实现排序和范围查找</li></ul><p><img data-src="/img/%E7%B4%A2%E5%BC%95%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E2%80%94%E2%80%94hash.png" alt="索引数据结构——hash"></p><blockquote><p>小贴士：</p><ul><li>数据结构学习网站：<a href="https://www.cs.usfca.edu/~galles/visualization/Algorithms.html" target="_blank" rel="noopener">https://www.cs.usfca.edu/~galles/visualization/Algorithms.html</a></li></ul></blockquote><h4 id="5-8-3-MySQL中的B-Tree"><a href="#5-8-3-MySQL中的B-Tree" class="headerlink" title="5.8.3 MySQL中的B+Tree"></a>5.8.3 MySQL中的B+Tree</h4><blockquote><p>MySQL数据库默认将所有表的顶级节点加载内存，所以进一步减少了磁盘IO</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查看mysql索引节点大小</span></span><br><span class="line"><span class="keyword">show</span> <span class="keyword">global</span> <span class="keyword">status</span> <span class="keyword">like</span> <span class="string">'innodb_page_size'</span>;</span><br></pre></td></tr></table></figure><p>MySQL中的 B+Tree 索引结构示意图：</p><p><img data-src="/img/mysql%E4%B8%AD%E7%9A%84B+Tree.png" alt="mysql中的B+Tree"></p><h3 id="5-9-数据库（表）的存储引擎"><a href="#5-9-数据库（表）的存储引擎" class="headerlink" title="5.9 数据库（表）的存储引擎"></a>5.9 数据库（表）的存储引擎</h3><p>MySQL存储引擎的不同，那么索引文件保存的方式也有所不同，常见的有二种存储引擎<strong>MyISAM</strong>和<strong>InnoDB</strong>。</p><ul><li>可以通过查看mysql的配置文件my.ini，查询默认的存储引擎：</li></ul><p><img data-src="/img/%E6%9F%A5%E7%9C%8Bmysql%E9%BB%98%E8%AE%A4%E5%AD%98%E5%82%A8%E5%BC%95%E6%93%8E.png" alt="查看mysql默认存储引擎"></p><h4 id="5-9-1-MyISAM"><a href="#5-9-1-MyISAM" class="headerlink" title="5.9.1 MyISAM"></a>5.9.1 MyISAM</h4><p>MySQL5.5之前默认使用的存储引擎，不支持事务和外键约束</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> haha(</span><br><span class="line"> <span class="keyword">id</span> <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span> AUTO_INCREMENT,</span><br><span class="line"> <span class="string">`name`</span> <span class="built_in">VARCHAR</span>(<span class="number">32</span>)</span><br><span class="line">)<span class="keyword">ENGINE</span>=MYISAM;</span><br></pre></td></tr></table></figure><blockquote><p>MyISAM存储引擎表的文件</p></blockquote><p><img data-src="/img/MyISAM%E5%AD%98%E5%82%A8%E5%BC%95%E6%93%8E%E8%A1%A8%E7%9A%84%E6%96%87%E4%BB%B6.png" alt="MyISAM存储引擎表的文件"></p><blockquote><p>MyISAM存储索引方式</p></blockquote><p><img data-src="/img/MyISAM%E5%AD%98%E5%82%A8%E7%B4%A2%E5%BC%95%E6%96%B9%E5%BC%8F.png" alt="MyISAM存储索引方式"></p><h4 id="5-9-2-InnoDB"><a href="#5-9-2-InnoDB" class="headerlink" title="5.9.2 InnoDB"></a>5.9.2 InnoDB</h4><p>MySQL5.5之后默认使用的存储引擎，支持事务和外键约束</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> hehe(</span><br><span class="line"> <span class="keyword">id</span> <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span> AUTO_INCREMENT,</span><br><span class="line"> <span class="string">`name`</span> <span class="built_in">VARCHAR</span>(<span class="number">32</span>)</span><br><span class="line">)<span class="keyword">ENGINE</span>=<span class="keyword">INNODB</span>;</span><br></pre></td></tr></table></figure><blockquote><p>InnoDB存储引擎表的文件</p></blockquote><p><img data-src="/img/InnoDB%E5%AD%98%E5%82%A8%E5%BC%95%E6%93%8E%E8%A1%A8%E7%9A%84%E6%96%87%E4%BB%B6.png" alt="InnoDB存储引擎表的文件"></p><blockquote><p>InnoFB存储索引方式——主键索引</p></blockquote><p><img data-src="/img/InnoDB%E5%AD%98%E5%82%A8%E7%B4%A2%E5%BC%95%E6%96%B9%E5%BC%8F%E2%80%94%E2%80%94%E4%B8%BB%E9%94%AE%E7%B4%A2%E5%BC%95.png" alt="InnoDB存储索引方式"></p><blockquote><p>普通索引依赖于主键索引</p></blockquote><p><img data-src="/img/InnoDB%E5%AD%98%E5%82%A8%E7%B4%A2%E5%BC%95%E6%96%B9%E5%BC%8F%E2%80%94%E2%80%94%E6%99%AE%E9%80%9A%E7%B4%A2%E5%BC%95.png" alt="InnoDB存储索引方式——普通索引"></p><h3 id="5-10-MySQL面试题"><a href="#5-10-MySQL面试题" class="headerlink" title="5.10 MySQL面试题"></a>5.10 MySQL面试题</h3><p><strong>为什么InnoDB表必须有主键，并且推荐使用整型的自增主键？</strong></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1. </span>innodb保存数据时必须依赖B+Tree 如果不指定主键索引，自动生成一个，浪费磁盘空间，也没有提高查询效率</span><br><span class="line"></span><br><span class="line"><span class="bullet">2. </span>主键使用整型且自增，整型比较速度快，插入数据时，减少树的裂变，提高插入效率....</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、MySQL函数&quot;&gt;&lt;a href=&quot;#一、MySQL函数&quot; class=&quot;headerlink&quot; title=&quot;一、MySQL函数&quot;&gt;&lt;/a&gt;一、MySQL函数&lt;/h2&gt;&lt;p&gt;为了简化操作，&lt;strong&gt;mysql提供&lt;/strong&gt;了大量的函数给程序员使用（比如你想输入当前时间，可以调用now()函数）&lt;/p&gt;
&lt;p&gt;函数可以出现的位置：插入语句的values()中，更新语句中，删除语句中，查询语句及其子句中。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;菜鸟教程：&lt;a href=&quot;https://www.runoob.com/mysql/mysql-functions.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.runoob.com/mysql/mysql-functions.html&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="数据库" scheme="http://sunmoon.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="MySQL" scheme="http://sunmoon.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL/"/>
    
    
      <category term="MySQL函数" scheme="http://sunmoon.com/tags/MySQL%E5%87%BD%E6%95%B0/"/>
    
      <category term="用户权限操作" scheme="http://sunmoon.com/tags/%E7%94%A8%E6%88%B7%E6%9D%83%E9%99%90%E6%93%8D%E4%BD%9C/"/>
    
      <category term="MySQL性能" scheme="http://sunmoon.com/tags/MySQL%E6%80%A7%E8%83%BD/"/>
    
      <category term="MySQL索引" scheme="http://sunmoon.com/tags/MySQL%E7%B4%A2%E5%BC%95/"/>
    
      <category term="MySQL索引的数据结构" scheme="http://sunmoon.com/tags/MySQL%E7%B4%A2%E5%BC%95%E7%9A%84%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="MySQL表的存储引擎" scheme="http://sunmoon.com/tags/MySQL%E8%A1%A8%E7%9A%84%E5%AD%98%E5%82%A8%E5%BC%95%E6%93%8E/"/>
    
  </entry>
  
  <entry>
    <title>MySQL多表查询&amp;子查询&amp;事务</title>
    <link href="http://sunmoon.com/2020/09/02/MySQL%E5%A4%9A%E8%A1%A8%E6%9F%A5%E8%AF%A2-%E5%AD%90%E6%9F%A5%E8%AF%A2-%E4%BA%8B%E5%8A%A1/"/>
    <id>http://sunmoon.com/2020/09/02/MySQL%E5%A4%9A%E8%A1%A8%E6%9F%A5%E8%AF%A2-%E5%AD%90%E6%9F%A5%E8%AF%A2-%E4%BA%8B%E5%8A%A1/</id>
    <published>2020-09-02T13:52:08.000Z</published>
    <updated>2020-09-03T10:17:47.610Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、表关系"><a href="#一、表关系" class="headerlink" title="一、表关系"></a>一、表关系</h2><h3 id="1-1-概述"><a href="#1-1-概述" class="headerlink" title="1.1 概述"></a>1.1 概述</h3><p>现实生活中，（班级）实体与（学生）实体之间肯定是有关系的，那么我们在设计表的时候，就应该体现出（班级）表与（学生）表之间的这种关系！</p><p>我们把这种数据库称为<span style="color:red">关系型数据库（RDBMS）</span>，在数据库设计上，表关系分为三种：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1. </span>一对多（多对一）</span><br><span class="line"><span class="code">应用场景：</span></span><br><span class="line"><span class="code">班级和学生、部门和员工</span></span><br><span class="line"><span class="code">解释：</span></span><br><span class="line"><span class="code">一个班级内有多名同学，多名同学都属于某一个班级</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">2. </span>多对多</span><br><span class="line"><span class="code">应用场景：</span></span><br><span class="line"><span class="code">学生和课程、学生和老师</span></span><br><span class="line"><span class="code">解释：</span></span><br><span class="line"><span class="code">一名同学可以选修多门课程，一门课程可以被多名同学选修</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"></span><br><span class="line"><span class="bullet">3. </span>一对一（一般情况下可以单表实现，有时候需要进行抽取）</span><br><span class="line"><span class="code">应用场景：</span></span><br><span class="line"><span class="code">公民和身份证号、商品和详情</span></span><br><span class="line"><span class="code">解释：</span></span><br><span class="line"><span class="code">一个公民只有一个对应的身份证号、一个身份证号只对应一个公民</span></span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="1-2-实现"><a href="#1-2-实现" class="headerlink" title="1.2 实现"></a>1.2 实现</h3><h4 id="1-2-1-一对多"><a href="#1-2-1-一对多" class="headerlink" title="1.2.1 一对多"></a>1.2.1 一对多</h4><blockquote><p>班级和学生</p></blockquote><p><strong>关系图</strong></p><p><img data-src="/img/%E4%B8%80%E5%AF%B9%E5%A4%9A%E5%85%B3%E7%B3%BB.png" alt="一对多关系"></p><p>表关系描述：</p><ul><li>通常把一的一方称为：<code>主表</code>或<code>一表</code></li><li>通常把多的一方称为：<code>从表</code>或<code>多表</code></li></ul><p><strong>一对多关系建表原则：</strong></p><ul><li>在从表中，田间一个字段(主表_id)类型与主表的主键一致，这个字段我们称之为外键，通过主外键关联，建立两张表的<code>一对多关系</code>。</li></ul><p>sql实现</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">#-- 一对多 （班级——学生）--#</span><br><span class="line">CREATE DATABASE mysql_1;</span><br><span class="line">USE mysql_1;</span><br><span class="line">-- 班级表：主表(一)</span><br><span class="line">CREATE TABLE class(</span><br><span class="line">  id INT PRIMARY KEY AUTO_INCREMENT,</span><br><span class="line">  &#96;name&#96; VARCHAR(32)</span><br><span class="line">);</span><br><span class="line">INSERT INTO class VALUES(1,&#39;一班&#39;);</span><br><span class="line">INSERT INTO class VALUES(2,&#39;二班&#39;);</span><br><span class="line">-- 学生表：从表(多)</span><br><span class="line">CREATE TABLE stu(</span><br><span class="line">  id INT PRIMARY KEY AUTO_INCREMENT,</span><br><span class="line">  &#96;name&#96; VARCHAR(32),</span><br><span class="line">  class_id INT -- 外键字段</span><br><span class="line">);</span><br><span class="line">-- 插入数据</span><br><span class="line">INSERT INTO stu VALUES(1,&#39;张三&#39;,1);</span><br><span class="line">INSERT INTO stu VALUES(2,&#39;李四&#39;,1);</span><br><span class="line">INSERT INTO stu VALUES(3,&#39;王五&#39;,2);</span><br><span class="line">INSERT INTO stu VALUES(4,&#39;赵六&#39;,1);</span><br><span class="line"></span><br><span class="line">-- 给学生表，添加外键约束</span><br><span class="line">ALTER TABLE student ADD CONSTRAINT class_id_fk FOREIGN KEY(class_id) REFERENCES class(id);</span><br><span class="line"></span><br><span class="line">-- 删除学生表的外键约束</span><br><span class="line">ALTER TABLE student DROP FOREIGN KEY class_id_fk;</span><br><span class="line"></span><br><span class="line">#-- 一对多 （班级——学生）--#</span><br></pre></td></tr></table></figure><h4 id="1-2-2-多对多"><a href="#1-2-2-多对多" class="headerlink" title="1.2.2 多对多"></a>1.2.2 多对多</h4><blockquote><p>举例：学生和课程</p></blockquote><p><strong>关系图</strong></p><p><img data-src="/img/%E5%A4%9A%E5%AF%B9%E5%A4%9A%E5%85%B3%E7%B3%BB.png" alt="多对多关系"></p><p><strong>多对多关系建表原则：</strong></p><ul><li>建立多对多的关系时，需要创建第三张表，又称为中间表，至少要有两个外键字段，分别指向各自主表的主键，通常还会把两个字段设置成联合主键，建立两张表的<code>多对多关系</code>。</li></ul><p>sql实现</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">#-- 多对多（学生——课程） --#</span><br><span class="line">-- 学生表（主表，已存在）</span><br><span class="line">-- 课程表：主表</span><br><span class="line">CREATE TABLE course(</span><br><span class="line">  id INT PRIMARY KEY AUTO_INCREMENT,</span><br><span class="line">  NAME VARCHAR(32)</span><br><span class="line">);</span><br><span class="line">INSERT INTO course VALUES(NULL,&#39;java&#39;);</span><br><span class="line">INSERT INTO course VALUES(NULL,&#39;php&#39;);</span><br><span class="line">INSERT INTO course VALUES(NULL,&#39;python&#39;);</span><br><span class="line">INSERT INTO course VALUES(NULL,&#39;javascript&#39;);</span><br><span class="line"></span><br><span class="line">-- 中间表：从表</span><br><span class="line">CREATE TABLE sc(</span><br><span class="line"> s_id INT,</span><br><span class="line"> c_id INT,</span><br><span class="line"> PRIMARY KEY(s_id,c_id),-- 联合主键</span><br><span class="line"> CONSTRAINT s_id_fk FOREIGN KEY(s_id) REFERENCES stu(id),-- 学生表外键约束</span><br><span class="line"> CONSTRAINT c_id_fk FOREIGN KEY(c_id) REFERENCES course(id)-- 课程表外键约束</span><br><span class="line">);</span><br><span class="line">-- 插入数据</span><br><span class="line">INSERT INTO sc VALUES(1,1);</span><br><span class="line">INSERT INTO sc VALUES(1,3);</span><br><span class="line">INSERT INTO sc VALUES(2,2);</span><br><span class="line">INSERT INTO sc VALUES(2,5);</span><br><span class="line">INSERT INTO sc VALUES(3,4);</span><br><span class="line">INSERT INTO sc VALUES(4,1);</span><br><span class="line">INSERT INTO sc VALUES(4,5);</span><br><span class="line">INSERT INTO sc VALUES(5,2);</span><br><span class="line">#-- 多对多（学生——课程） --#</span><br></pre></td></tr></table></figure><h4 id="1-2-3-一对一"><a href="#1-2-3-一对一" class="headerlink" title="1.2.3 一对一"></a>1.2.3 一对一</h4><blockquote><p>一般情况下，一对一其实可以设计为一张表来实现，个别字段过大，影响查询性能，我们才会拆分二张表，建立一一对应关系</p></blockquote><blockquote><p>举例：商品和详情</p></blockquote><p><strong>关系图</strong></p><p>两种建立一对一方式：</p><p><img data-src="/img/%E4%B8%80%E5%AF%B9%E4%B8%80%E5%85%B3%E7%B3%BB1.png" alt="一对一关系1"></p><p><img data-src="/img/%E4%B8%80%E5%AF%B9%E4%B8%80%E5%85%B3%E7%B3%BB2.png" alt="一对一关系2"></p><blockquote><p>推荐第二种，主键字段当作外键来使用</p></blockquote><p>sql实现</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">#-- 一对一（商品——商品描述） --#</span><br><span class="line">-- 商品表（主表）</span><br><span class="line">CREATE TABLE product(</span><br><span class="line">  id INT PRIMARY KEY AUTO_INCREMENT,</span><br><span class="line">  NAME VARCHAR(32)</span><br><span class="line">);</span><br><span class="line">INSERT INTO product VALUES(NULL,&#39;MI10&#39;);</span><br><span class="line">INSERT INTO product VALUES(NULL,&#39;MInote3&#39;);</span><br><span class="line">INSERT INTO product VALUES(NULL,&#39;HuaweiP40&#39;);</span><br><span class="line">INSERT INTO product VALUES(NULL,&#39;VivoX20&#39;);</span><br><span class="line">-- 详情表（从表）</span><br><span class="line">CREATE TABLE p_desc(</span><br><span class="line">  id INT PRIMARY KEY AUTO_INCREMENT,-- 主键作为外键</span><br><span class="line">  description VARCHAR(255),</span><br><span class="line">  CONSTRAINT id_fk FOREIGN KEY(id) REFERENCES product(id)-- 外键约束</span><br><span class="line">);</span><br><span class="line">INSERT INTO p_desc VALUES(1,&#39;为发烧而生&#39;);</span><br><span class="line">INSERT INTO p_desc VALUES(2,&#39;永远相信美好的事情即将发生&#39;);</span><br><span class="line">INSERT INTO p_desc VALUES(3,&#39;华为...&#39;);</span><br><span class="line">INSERT INTO p_desc VALUES(4,&#39;Vivo...&#39;);</span><br><span class="line">#-- 一对一（商品——商品描述） --#</span><br></pre></td></tr></table></figure><h3 id="1-3-外键约束"><a href="#1-3-外键约束" class="headerlink" title="1.3 外键约束"></a>1.3 外键约束</h3><p><strong>功能</strong>：限定二张表有关系的数据，保证数据的正确性、有效性和完整性</p><p><strong>外键约束相关语法：</strong>（在从表中设置）</p><ul><li>创建表指定外键字段</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">create table 表名(</span><br><span class="line">    字段名 数据类型,</span><br><span class="line">    ....</span><br><span class="line">    [constraint] [约束名] foreign key(外键字段) references 主表(主键字段)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><ul><li>修改表指定外键</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table 表名 add [constraint] [约束名] foreign key(外键) references 主表(主键)</span><br></pre></td></tr></table></figure><ul><li>删除外键约束</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table 表名 drop foreign key 约束名;</span><br></pre></td></tr></table></figure><p><strong>外键约束的特点：</strong></p><ul><li>主表不能删除从表已引用的数据</li><li>从表不能添加主表未拥有的数据</li><li>先删除从表数据再删除主表数据</li><li>先添加主表数据在添加从表数据</li><li>外键字段可以为空但不能非法关联</li></ul><blockquote><p>小贴士：</p><ul><li>外键约束虽然功能强大，但是在互联网项目中不会使用，我们可以通过后台代码实现数据的校验…</li></ul></blockquote><h2 id="二、多表查询"><a href="#二、多表查询" class="headerlink" title="二、多表查询"></a>二、多表查询</h2><p>在企业开发中, 我们一个业务需要的数据往往是来自多张表的, 所以这时候就需要多表联合查询。</p><p>所谓的多表联合查询就是使用一条SQL语句将多张表的数据一起查询展示出来。</p><p><strong>准备数据</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">#--多表查询--#</span><br><span class="line">-- 准备数据</span><br><span class="line">CREATE DATABASE mysql_2;</span><br><span class="line">USE mysql_2;</span><br><span class="line"></span><br><span class="line">-- 创建部门表(主表)</span><br><span class="line">CREATE TABLE dept(</span><br><span class="line">  id INT PRIMARY KEY AUTO_INCREMENT,</span><br><span class="line">  NAME VARCHAR(32)</span><br><span class="line">);</span><br><span class="line">INSERT INTO dept VALUES(NULL,&#39;开发部&#39;);</span><br><span class="line">INSERT INTO dept VALUES(NULL,&#39;市场部&#39;);</span><br><span class="line">INSERT INTO dept VALUES(NULL,&#39;财务部&#39;);</span><br><span class="line">INSERT INTO dept VALUES(NULL,&#39;销售部&#39;);</span><br><span class="line"></span><br><span class="line">-- 创建员工表（从表）</span><br><span class="line">CREATE TABLE emp(</span><br><span class="line">  id INT PRIMARY KEY AUTO_INCREMENT,</span><br><span class="line">  NAME VARCHAR(32),</span><br><span class="line">  gender CHAR(1),</span><br><span class="line">  salary DOUBLE,</span><br><span class="line">  join_date DATE,</span><br><span class="line">  dept_id INT,</span><br><span class="line">  CONSTRAINT dept_id_fk FOREIGN KEY(dept_id) REFERENCES dept(id)</span><br><span class="line">);</span><br><span class="line">INSERT INTO emp(NAME,gender,salary,join_date,dept_id) VALUES(&#39;孙悟空&#39;,&#39;男&#39;,7200,&#39;2013-02-24&#39;,1);</span><br><span class="line">INSERT INTO emp(NAME,gender,salary,join_date,dept_id) VALUES(&#39;猪八戒&#39;,&#39;男&#39;,3600,&#39;2010-12-02&#39;,2);</span><br><span class="line">INSERT INTO emp(NAME,gender,salary,join_date,dept_id) VALUES(&#39;唐僧&#39;,&#39;男&#39;,9000,&#39;2008-08-08&#39;,2);</span><br><span class="line">INSERT INTO emp(NAME,gender,salary,join_date,dept_id) VALUES(&#39;白骨精&#39;,&#39;女&#39;,5000,&#39;2015-10-07&#39;,3);</span><br><span class="line">INSERT INTO emp(NAME,gender,salary,join_date,dept_id) VALUES(&#39;蜘蛛精&#39;,&#39;女&#39;,4500,&#39;2011-03-14&#39;,1);</span><br><span class="line">INSERT INTO emp(NAME,gender,salary,join_date,dept_id) VALUES(&#39;沙僧&#39;,&#39;男&#39;,6666,&#39;2017-03-04&#39;,NULL);</span><br></pre></td></tr></table></figure><p><img data-src="/img/%E5%A4%9A%E8%A1%A8%E6%9F%A5%E8%AF%A2%E2%80%94%E2%80%94%E6%95%B0%E6%8D%AE%E5%87%86%E5%A4%87.png" alt="多表查询——数据准备"></p><h3 id="2-1-笛卡尔积"><a href="#2-1-笛卡尔积" class="headerlink" title="2.1 笛卡尔积"></a>2.1 笛卡尔积</h3><p>功能：<strong>将二张表的记录进行拼接，产生了笛卡尔积</strong>（又称为：交叉连接）</p><p>语法：<code>SELECT * FROM dept , emp;</code></p><p><img data-src="/img/%E7%AC%9B%E5%8D%A1%E5%B0%94%E7%A7%AF.png" alt="笛卡尔积"></p><h3 id="2-2-内连接"><a href="#2-2-内连接" class="headerlink" title="2.2 内连接"></a>2.2 内连接</h3><p><img data-src="/img/%E5%86%85%E8%BF%9E%E6%8E%A5.png" alt="内连接"></p><ul><li><p>功能：拿A表的记录去匹配B表的记录，若匹配到就显示（查询二张表的交集）</p></li><li><p>语法：</p><ul><li><p>隐式内连接</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from A表,B表 where 连接条件;</span><br></pre></td></tr></table></figure></li><li><p>显示内连接</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from A表 [inner] join B表 on 连接条件;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>练习：</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">-- 隐式内连接</span><br><span class="line">SELECT * FROM dept d ,emp e WHERE d.id &#x3D; e.dept_id ;</span><br><span class="line"></span><br><span class="line">-- 显示内连接</span><br><span class="line">SELECT * FROM dept d INNER JOIN emp e ON e.dept_id &#x3D; d.id;</span><br><span class="line"></span><br><span class="line">-- 小练习:  查询猪八戒的性别，工资和所在部门名称</span><br><span class="line">-- 1.确定几张表</span><br><span class="line">SELECT * FROM emp e INNER JOIN dept d;</span><br><span class="line">-- 2.确定连接条件</span><br><span class="line">SELECT * FROM emp e INNER JOIN dept d ON e.dept_id &#x3D; d.id;</span><br><span class="line">-- 3.查询指定字段</span><br><span class="line">SELECT e.gender,e.salary,d.name FROM emp e INNER JOIN dept d ON e.dept_id &#x3D; d.id;</span><br><span class="line">-- 4.确定业务条件</span><br><span class="line">SELECT e.gender,e.salary,d.name FROM emp e INNER JOIN dept d ON e.dept_id &#x3D; d.id WHERE e.name &#x3D; &#39;猪八戒&#39;;</span><br></pre></td></tr></table></figure><h3 id="2-3-外连接"><a href="#2-3-外连接" class="headerlink" title="2.3 外连接"></a>2.3 外连接</h3><h4 id="2-3-1-左外连接"><a href="#2-3-1-左外连接" class="headerlink" title="2.3.1 左外连接"></a>2.3.1 左外连接</h4><p><img data-src="/img/%E5%A4%96%E8%BF%9E%E6%8E%A5_%E5%B7%A6%E5%A4%96%E8%BF%9E%E6%8E%A5.png" alt="外连接_左外连接"></p><ul><li><p>功能：展示A表的全部，再去匹配B表，有就展示，没有就显示NULL</p></li><li><p>语法：</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from A表 left [outer] join B表 on 连接条件;</span><br></pre></td></tr></table></figure></li></ul><ul><li>练习：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-- 左外连接</span><br><span class="line">-- 小练习: 查询所有员工信息及对应的部门名称</span><br><span class="line">SELECT * FROM emp e LEFT OUTER JOIN dept d ON e.dept_id &#x3D; d.id;</span><br><span class="line">-- 小练习: 查询所有部门及对应的员工信息</span><br><span class="line">SELECT * FROM dept d LEFT OUTER JOIN emp e ON e.dept_id &#x3D; d.id;</span><br></pre></td></tr></table></figure><h4 id="2-3-2-右外连接"><a href="#2-3-2-右外连接" class="headerlink" title="2.3.2 右外连接"></a>2.3.2 右外连接</h4><p><img data-src="/img/%E5%A4%96%E8%BF%9E%E6%8E%A5_%E5%8F%B3%E5%A4%96%E8%BF%9E%E6%8E%A5.png" alt="外连接_右外连接"></p><ul><li><p>功能：展示B表的全部，再去匹配A表，有就展示，没有就显示NULL</p></li><li><p>语法</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from A表 right [outer] join B表 on 连接条件;</span><br></pre></td></tr></table></figure></li></ul><ul><li>练习：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-- 右外连接</span><br><span class="line">-- 小练习: 查询所有部门及对应的员工信息</span><br><span class="line">SELECT * FROM emp e RIGHT OUTER JOIN dept d ON e.dept_id &#x3D; d.id;</span><br></pre></td></tr></table></figure><h3 id="2-4-子查询"><a href="#2-4-子查询" class="headerlink" title="2.4 子查询"></a>2.4 子查询</h3><ul><li>问题引入：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-- 引入:查询工资最高的员工是谁？</span><br><span class="line">-- 1.先查询最高工资</span><br><span class="line">SELECT MAX(salary) FROM emp;</span><br><span class="line">-- 2.在根据工资作为条件查询员工基本信息</span><br><span class="line">SELECT * FROM emp WHERE salary &#x3D; (SELECT MAX(salary) FROM emp);</span><br></pre></td></tr></table></figure><ul><li><p>功能：一条sql语句的执行结果，作为另一条sql语法的一部分</p></li><li><p>语法：</p><ul><li><p>查询结果为单列单值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT MAX(salary) FROM emp;</span><br></pre></td></tr></table></figure></li><li><p>查询结果为单列多行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT salary FROM emp;</span><br></pre></td></tr></table></figure></li><li><p>查询结果为多列多行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM emp;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>总结：</p><ul><li><p>子查询结果为单列（单值或多值），通常作为条件，在where后面使用</p></li><li><p>子查询结果多列多行，通常作为虚拟（临时）表使用</p><blockquote><p>注意：如果一个需求能通过表连接解决，就尽量不要使用子查询</p></blockquote></li></ul></li><li><p>练习：</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">-- 小练习1: 查询工资小于平均工资的员工有哪些？(子查询结果为单列单值)</span><br><span class="line">-- 1.先查询出平均工资</span><br><span class="line">SELECT AVG(salary) FROM emp;</span><br><span class="line">-- 2.再查询出小于平均工资的员工信息</span><br><span class="line">SELECT * FROM emp WHERE salary &lt; (SELECT AVG(salary) FROM emp);</span><br><span class="line"></span><br><span class="line">-- 小练习2: 查询工资大于5000的员工，来自于哪些部门的名字 (子查询结果为单列多行)</span><br><span class="line">-- 1.查询工资大于5000的员工</span><br><span class="line">SELECT dept_id FROM emp WHERE salary &gt; 5000;</span><br><span class="line">-- 2.再根据员工表部门外键查询对应部门名称</span><br><span class="line">SELECT * FROM dept WHERE id IN(SELECT dept_id FROM emp WHERE salary &gt; 5000);</span><br><span class="line"></span><br><span class="line">-- 补充：查询出：开发部和财务部员工的信息</span><br><span class="line">-- 1. 查询开发部和财务的信息</span><br><span class="line">SELECT id FROM dept WHERE &#96;name&#96; IN(&#39;开发部&#39;,&#39;财务部&#39;);</span><br><span class="line">-- 2.再根据部门的id主键查询对应员工信息</span><br><span class="line">SELECT * FROM emp WHERE dept_id IN (SELECT id FROM dept WHERE &#96;name&#96; IN(&#39;开发部&#39;,&#39;财务部&#39;));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- 小练习3: 查询出2011年以后入职的员工信息，包括部门信息 (子查询结果为多列多行)</span><br><span class="line">-- 1.查询出2011年以后入职的员工信息</span><br><span class="line">SELECT * FROM emp WHERE join_date &gt;&#x3D; &#39;2011-1-1&#39;;</span><br><span class="line">-- 2.将查询结果作为临时表关联部门表</span><br><span class="line">SELECT e.name,d.name FROM (SELECT * FROM emp WHERE join_date &gt;&#x3D; &#39;2011-1-1&#39;) AS e INNER JOIN dept d ON e.dept_id &#x3D; d.id;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- 这个需求除了子查询，也可以使用内连接完成（推荐）</span><br><span class="line">-- 1.先关联二张表</span><br><span class="line">SELECT * FROM emp e INNER JOIN dept d ON e.dept_id &#x3D; d.id;</span><br><span class="line">-- 2.再筛选条件</span><br><span class="line">SELECT  e.name,d.name FROM emp e INNER JOIN dept d ON e.dept_id &#x3D; d.id WHERE e.join_date &gt;&#x3D; &#39;2011-1-1&#39;;</span><br></pre></td></tr></table></figure><p><img data-src="/img/%E5%AD%90%E6%9F%A5%E8%AF%A2.png" alt="子查询"></p><h2 id="三、多表查询案例"><a href="#三、多表查询案例" class="headerlink" title="三、多表查询案例"></a>三、多表查询案例</h2><p>我们在企业开发时，根据不同的业务需求往往需要通过2张及以上的表中去查询需要的数据。其实不管是几张表的查询，都是有规律可循的。 </p><p><img data-src="/img/%E5%A4%9A%E8%A1%A8%E6%A1%88%E4%BE%8B.png" alt="多表案例"></p><h4 id="准备数据"><a href="#准备数据" class="headerlink" title="准备数据"></a>准备数据</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line">-- 多表案例</span><br><span class="line">create database mysql_3;</span><br><span class="line">use mysql_3;</span><br><span class="line"></span><br><span class="line">-- 部门表</span><br><span class="line">CREATE TABLE dept (</span><br><span class="line">  id INT PRIMARY KEY auto_increment, -- 部门id</span><br><span class="line">  dname VARCHAR(50), -- 部门名称</span><br><span class="line">  loc VARCHAR(50) -- 部门位置</span><br><span class="line">);</span><br><span class="line">-- 添加4个部门</span><br><span class="line">INSERT INTO dept(id,dname,loc) VALUES </span><br><span class="line">(10,&#39;教研部&#39;,&#39;北京&#39;),</span><br><span class="line">(20,&#39;学工部&#39;,&#39;上海&#39;),</span><br><span class="line">(30,&#39;销售部&#39;,&#39;广州&#39;),</span><br><span class="line">(40,&#39;财务部&#39;,&#39;深圳&#39;);</span><br><span class="line"></span><br><span class="line">-- 职务表</span><br><span class="line">CREATE TABLE job (</span><br><span class="line">  id INT PRIMARY KEY,</span><br><span class="line">  jname VARCHAR(20), -- 职务名称</span><br><span class="line">  description VARCHAR(50) -- 职务描述</span><br><span class="line">);</span><br><span class="line">-- 添加4个职务</span><br><span class="line">INSERT INTO job (id, jname, description) VALUES</span><br><span class="line">(1, &#39;董事长&#39;, &#39;管理整个公司，接单&#39;),</span><br><span class="line">(2, &#39;经理&#39;, &#39;管理部门员工&#39;),</span><br><span class="line">(3, &#39;销售员&#39;, &#39;向客人推销产品&#39;),</span><br><span class="line">(4, &#39;文员&#39;, &#39;使用办公软件&#39;);</span><br><span class="line"></span><br><span class="line">-- 员工表</span><br><span class="line">CREATE TABLE emp (</span><br><span class="line">  id INT PRIMARY KEY, -- 员工id</span><br><span class="line">  ename VARCHAR(50), -- 员工姓名</span><br><span class="line">  job_id INT, -- 职务id  外键</span><br><span class="line">  mgr INT , -- 上级领导</span><br><span class="line">  joindate DATE, -- 入职日期</span><br><span class="line">  salary DECIMAL(7,2), -- 工资 99999.99</span><br><span class="line">  bonus DECIMAL(7,2), -- 奖金 99999.99</span><br><span class="line">  dept_id INT, -- 所在部门编号  外键</span><br><span class="line">  CONSTRAINT emp_jobid_ref_job_id_fk FOREIGN KEY (job_id) REFERENCES job (id),</span><br><span class="line">  CONSTRAINT emp_deptid_ref_dept_id_fk FOREIGN KEY (dept_id) REFERENCES dept (id)</span><br><span class="line">);</span><br><span class="line">-- 添加员工</span><br><span class="line">INSERT INTO emp(id,ename,job_id,mgr,joindate,salary,bonus,dept_id) VALUES </span><br><span class="line">(1001,&#39;孙悟空&#39;,4,1004,&#39;2000-12-17&#39;,&#39;8000.00&#39;,NULL,20),</span><br><span class="line">(1002,&#39;卢俊义&#39;,3,1006,&#39;2001-02-20&#39;,&#39;16000.00&#39;,&#39;3000.00&#39;,30),</span><br><span class="line">(1003,&#39;林冲&#39;,3,1006,&#39;2001-02-22&#39;,&#39;12500.00&#39;,&#39;5000.00&#39;,30),</span><br><span class="line">(1004,&#39;唐僧&#39;,2,1009,&#39;2001-04-02&#39;,&#39;29750.00&#39;,NULL,20),</span><br><span class="line">(1005,&#39;李逵&#39;,4,1006,&#39;2001-09-28&#39;,&#39;12500.00&#39;,&#39;14000.00&#39;,30),</span><br><span class="line">(1006,&#39;宋江&#39;,2,1009,&#39;2001-05-01&#39;,&#39;28500.00&#39;,NULL,30),</span><br><span class="line">(1007,&#39;刘备&#39;,2,1009,&#39;2001-09-01&#39;,&#39;24500.00&#39;,NULL,10),</span><br><span class="line">(1008,&#39;猪八戒&#39;,4,1004,&#39;2007-04-19&#39;,&#39;30000.00&#39;,NULL,20),</span><br><span class="line">(1009,&#39;罗贯中&#39;,1,NULL,&#39;2001-11-17&#39;,&#39;50000.00&#39;,NULL,10),</span><br><span class="line">(1010,&#39;吴用&#39;,3,1006,&#39;2001-09-08&#39;,&#39;15000.00&#39;,&#39;0.00&#39;,30),</span><br><span class="line">(1011,&#39;沙僧&#39;,4,1004,&#39;2007-05-23&#39;,&#39;11000.00&#39;,NULL,20),</span><br><span class="line">(1012,&#39;李逵&#39;,4,1006,&#39;2001-12-03&#39;,&#39;9500.00&#39;,NULL,30),</span><br><span class="line">(1013,&#39;小白龙&#39;,4,1004,&#39;2001-12-03&#39;,&#39;30000.00&#39;,NULL,20),</span><br><span class="line">(1014,&#39;关羽&#39;,4,1007,&#39;2002-01-23&#39;,&#39;13000.00&#39;,NULL,10);</span><br><span class="line"></span><br><span class="line">-- 工资等级表</span><br><span class="line">CREATE TABLE salarygrade (</span><br><span class="line">  grade INT PRIMARY KEY,  -- 等级</span><br><span class="line">  losalary INT, -- 最低工资</span><br><span class="line">  hisalary INT -- 最高工资</span><br><span class="line">);</span><br><span class="line">-- 添加5个工资等级</span><br><span class="line">INSERT INTO salarygrade(grade,losalary,hisalary) VALUES </span><br><span class="line">(1,7000,12000),</span><br><span class="line">(2,12010,14000),</span><br><span class="line">(3,14010,20000),</span><br><span class="line">(4,20010,30000),</span><br><span class="line">(5,30010,99990);</span><br></pre></td></tr></table></figure><h4 id="问题一"><a href="#问题一" class="headerlink" title="问题一"></a>问题一</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">-- 1 查询所有员工信息。显示员工编号，员工姓名，工资，职务名称，职务描述</span><br><span class="line">-- 1. 确定几张表</span><br><span class="line">SELECT * FROM emp e INNER JOIN job j;</span><br><span class="line">-- 2. 确定连接条件</span><br><span class="line">SELECT * FROM emp e INNER JOIN job j ON e.job_id &#x3D; j.id;</span><br><span class="line">-- 3. 确定显示字段</span><br><span class="line">SELECT e.id,e.ename,e.salary,j.jname,j.description FROM emp e INNER JOIN job j ON e.job_id &#x3D; j.id;</span><br></pre></td></tr></table></figure><h4 id="问题二"><a href="#问题二" class="headerlink" title="问题二"></a>问题二</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">-- 2 查询所有员工信息。显示员工编号，员工姓名，工资，职务名称，职务描述，部门名称，部门位置</span><br><span class="line">-- 1.确定几张表</span><br><span class="line">SELECT * FROM emp e</span><br><span class="line">INNER JOIN job j</span><br><span class="line">INNER JOIN dept d;</span><br><span class="line">-- 2.确定连接条件</span><br><span class="line">SELECT * FROM emp e</span><br><span class="line">INNER JOIN job j ON e.job_id &#x3D; j.id</span><br><span class="line">INNER JOIN dept d ON e.dept_id &#x3D; d.id;</span><br><span class="line">-- 3.确定显示字段</span><br><span class="line">SELECT </span><br><span class="line">  e.id,</span><br><span class="line">  e.ename,</span><br><span class="line">  e.salary,</span><br><span class="line">  j.jname,</span><br><span class="line">  j.description,</span><br><span class="line">  d.dname,</span><br><span class="line">  d.loc </span><br><span class="line">FROM</span><br><span class="line">  emp e </span><br><span class="line">  INNER JOIN job j </span><br><span class="line">    ON e.job_id &#x3D; j.id </span><br><span class="line">  INNER JOIN dept d </span><br><span class="line">    ON e.dept_id &#x3D; d.id ;</span><br></pre></td></tr></table></figure><h4 id="问题三"><a href="#问题三" class="headerlink" title="问题三"></a>问题三</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">-- 3 查询所有员工信息。显示员工姓名，工资，职务名称，职务描述，部门名称，部门位置，工资等级</span><br><span class="line">-- 1.确定几张表</span><br><span class="line">SELECT * FROM emp e</span><br><span class="line">INNER JOIN job j</span><br><span class="line">INNER JOIN dept d</span><br><span class="line">INNER JOIN salarygrade sg;</span><br><span class="line">-- 2.确定连接条件</span><br><span class="line">SELECT * FROM emp e</span><br><span class="line">INNER JOIN job j ON e.job_id &#x3D; j.id</span><br><span class="line">INNER JOIN dept d ON e.dept_id &#x3D; d.id</span><br><span class="line">INNER JOIN salarygrade sg ON e.salary BETWEEN sg.losalary AND sg.hisalary;</span><br><span class="line">-- 3.确定显示字段</span><br><span class="line">SELECT  </span><br><span class="line">  e.id,</span><br><span class="line">  e.ename,</span><br><span class="line">  e.salary,</span><br><span class="line">  j.jname,</span><br><span class="line">  j.description,</span><br><span class="line">  d.dname,</span><br><span class="line">  d.loc,</span><br><span class="line">  sg.grade</span><br><span class="line">FROM emp e</span><br><span class="line">INNER JOIN job j ON e.job_id &#x3D; j.id</span><br><span class="line">INNER JOIN dept d ON e.dept_id &#x3D; d.id</span><br><span class="line">INNER JOIN salarygrade sg ON e.salary BETWEEN sg.losalary AND sg.hisalary;</span><br></pre></td></tr></table></figure><h4 id="问题四"><a href="#问题四" class="headerlink" title="问题四"></a>问题四</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">-- 4 查询经理的信息。显示员工姓名，工资，职务名称，职务描述，部门名称，部门位置，工资等级</span><br><span class="line">SELECT  </span><br><span class="line">  e.id,</span><br><span class="line">  e.ename,</span><br><span class="line">  e.salary,</span><br><span class="line">  j.jname,</span><br><span class="line">  j.description,</span><br><span class="line">  d.dname,</span><br><span class="line">  d.loc,</span><br><span class="line">  sg.grade</span><br><span class="line">FROM emp e</span><br><span class="line">INNER JOIN job j ON e.job_id &#x3D; j.id</span><br><span class="line">INNER JOIN dept d ON e.dept_id &#x3D; d.id</span><br><span class="line">INNER JOIN salarygrade sg ON e.salary BETWEEN sg.losalary AND sg.hisalary</span><br><span class="line">WHERE j.jname &#x3D; &#39;经理&#39;;</span><br></pre></td></tr></table></figure><h4 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h4><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1. </span>多表查询会出现笛卡尔积</span><br><span class="line"></span><br><span class="line"><span class="bullet">2. </span>消除笛卡尔的规律</span><br><span class="line"><span class="code">连接（过滤）条件 = 表个数 -1</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">3. </span>编写sql步骤</span><br><span class="line"><span class="code">a）确定几张表</span></span><br><span class="line"><span class="code">b）确定连接条件  on</span></span><br><span class="line"><span class="code">c）确定显示字段</span></span><br><span class="line"><span class="code">d）确定业务条件  where</span></span><br></pre></td></tr></table></figure><h4 id="问题五"><a href="#问题五" class="headerlink" title="问题五"></a>问题五</h4><p><img data-src="/img/%E5%A4%9A%E8%A1%A8%E6%A1%88%E4%BE%8B%E9%97%AE%E9%A2%98%E4%BA%94.png" alt="多表案例问题五"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">-- 5 查询出部门编号、部门名称、部门位置、部门人数（至少三遍）</span><br><span class="line">-- 1.求出每个部门人数</span><br><span class="line">SELECT dept_id,COUNT(*) AS total FROM emp GROUP BY dept_id;</span><br><span class="line">-- 2.把部门人数作为虚拟表关联部门表</span><br><span class="line">SELECT d.id,d.dname,d.loc,e.total FROM (SELECT dept_id,COUNT(*) AS total FROM emp GROUP BY dept_id) AS e</span><br><span class="line">INNER JOIN dept d ON e.dept_id &#x3D; d.id;</span><br></pre></td></tr></table></figure><h4 id="问题六"><a href="#问题六" class="headerlink" title="问题六"></a>问题六</h4><p>如果一张表的字段存在上下级关系，这张表就可以成为自关联表（一对多的思想）</p><p><img data-src="/img/%E5%A4%9A%E8%A1%A8%E6%A1%88%E4%BE%8B%E9%97%AE%E9%A2%98%E5%85%AD.png" alt="多表案例问题六"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-- 查询所有员工的姓名及上级领导的姓名</span><br><span class="line">SELECT e.id,e.ename,m.id,m.ename FROM emp e LEFT OUTER JOIN emp m ON e.mgr &#x3D; m.id;</span><br></pre></td></tr></table></figure><h2 id="四、事务安全"><a href="#四、事务安全" class="headerlink" title="四、事务安全"></a>四、事务安全</h2><h3 id="4-1-概述"><a href="#4-1-概述" class="headerlink" title="4.1 概述"></a>4.1 概述</h3><h4 id="4-1-1-转账案例"><a href="#4-1-1-转账案例" class="headerlink" title="4.1.1 转账案例"></a>4.1.1 转账案例</h4><p><strong>准备数据</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">create database mysql_4;</span><br><span class="line">use mysql_4;</span><br><span class="line">-- 创建账户表</span><br><span class="line">CREATE TABLE account (</span><br><span class="line">id INT PRIMARY KEY AUTO_INCREMENT,</span><br><span class="line">NAME VARCHAR(32),</span><br><span class="line">money DOUBLE </span><br><span class="line">);</span><br><span class="line">INSERT INTO account (NAME, money) VALUES (&#39;许幻山&#39;, 1000), (&#39;林有有&#39;, 1000);</span><br></pre></td></tr></table></figure><p>模拟转账</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">-- 许幻山扣钱（招商）</span><br><span class="line">UPDATE account SET money &#x3D; money - 100 WHERE id &#x3D; 1;</span><br><span class="line"></span><br><span class="line">-- 网络或机器故障...</span><br><span class="line"></span><br><span class="line">-- 林有有加钱（建设）</span><br><span class="line">UPDATE account SET money &#x3D; money + 100 WHERE id &#x3D; 2;</span><br></pre></td></tr></table></figure><h4 id="4-1-2-事务解释"><a href="#4-1-2-事务解释" class="headerlink" title="4.1.2 事务解释"></a>4.1.2 事务解释</h4><p>如果一个包含多个步骤的业务操作，被事务管理，那么这些操作要么同时成功，要么同时失败。</p><p><img data-src="/img/%E4%BA%8B%E5%8A%A1%E8%A7%A3%E9%87%8A.png" alt="事务解释"></p><h3 id="4-2-事务操作"><a href="#4-2-事务操作" class="headerlink" title="4.2 事务操作"></a>4.2 事务操作</h3><h3 id="4-2-1-手动提交事务【mysql】"><a href="#4-2-1-手动提交事务【mysql】" class="headerlink" title="4.2.1 手动提交事务【mysql】"></a>4.2.1 手动提交事务【mysql】</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1. </span>开启事务</span><br><span class="line"><span class="code">begin | start transaction</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">2. </span>提交事务</span><br><span class="line"><span class="code">commit</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">3. </span>回滚事务</span><br><span class="line"><span class="code">rollback</span></span><br></pre></td></tr></table></figure><p><strong>模拟转账</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">-- 1.开启事务</span><br><span class="line">begin;</span><br><span class="line"></span><br><span class="line">-- 2.许幻山扣钱</span><br><span class="line">UPDATE account SET money &#x3D; money - 100 WHERE id &#x3D; 1;</span><br><span class="line"></span><br><span class="line">-- 机器故障</span><br><span class="line"></span><br><span class="line">-- 3.林有有加钱</span><br><span class="line">UPDATE account SET money &#x3D; money + 100 WHERE id &#x3D; 2;</span><br><span class="line"></span><br><span class="line">-- 4.提交事务</span><br><span class="line">commit;</span><br></pre></td></tr></table></figure><h3 id="4-2-2-自动提交事务【JDBC】"><a href="#4-2-2-自动提交事务【JDBC】" class="headerlink" title="4.2.2 自动提交事务【JDBC】"></a>4.2.2 自动提交事务【JDBC】</h3><blockquote><p>MySQL默认情况下一条DML语句，就是一个独立的事务</p></blockquote><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1. </span>查看MySQL是否开启自动提交事务</span><br><span class="line"><span class="code">show variables like 'autocommit';</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">2. </span>临时关闭自动提交</span><br><span class="line"><span class="code">set autocommit = off;</span></span><br></pre></td></tr></table></figure><p><img data-src="/img/mysql%E8%87%AA%E5%8A%A8%E6%8F%90%E4%BA%A4%E4%BA%8B%E5%8A%A1%E4%BF%AE%E6%94%B9.png" alt="mysql自动提交事务修改"></p><p>模拟转账</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-- 1.许幻山扣钱</span><br><span class="line">UPDATE account SET money &#x3D; money - 100 WHERE id &#x3D; 1;</span><br><span class="line"></span><br><span class="line">-- 只有commit时，才会同步到数据库磁盘文件</span><br></pre></td></tr></table></figure><h3 id="4-3-事务工作原理"><a href="#4-3-事务工作原理" class="headerlink" title="4.3 事务工作原理"></a>4.3 事务工作原理</h3><p><img data-src="/img/%E4%BA%8B%E5%8A%A1%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86.png" alt="事务工作原理"></p><h3 id="4-4-保存-回滚-点"><a href="#4-4-保存-回滚-点" class="headerlink" title="4.4 保存(回滚)点"></a>4.4 保存(回滚)点</h3><p>当事务开启后，一部分sql执行成功，添加一个保存点，后续操作报错了，回滚到保存点，保证之前的操作可以成功提交。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1. 设置保存点</span><br><span class="line"><span class="keyword">savepoint</span> 保存点名称;</span><br><span class="line"></span><br><span class="line">2. 回滚到指定保存点</span><br><span class="line"><span class="keyword">rollback</span> <span class="keyword">to</span> 保存点名称;</span><br></pre></td></tr></table></figure><blockquote><p>演示保存点功能</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">-- 1.开启事务</span><br><span class="line">begin;</span><br><span class="line">-- 2.许幻山扣钱 如花</span><br><span class="line">UPDATE account SET money &#x3D; money - 100 WHERE id &#x3D; 1;</span><br><span class="line">-- 3.许幻山扣钱 凤姐</span><br><span class="line">UPDATE account SET money &#x3D; money - 100 WHERE id &#x3D; 1;</span><br><span class="line"></span><br><span class="line">-- 保存点</span><br><span class="line">savepoint ol;</span><br><span class="line"></span><br><span class="line">-- 4.许幻山扣钱 芙蓉姐姐</span><br><span class="line">UPDATE account SET money &#x3D; money - 100 WHERE id &#x3D; 1;</span><br><span class="line"></span><br><span class="line">-- 机器故障..</span><br><span class="line"></span><br><span class="line">-- 回滚到保存点</span><br><span class="line">rollback to ol;</span><br><span class="line"></span><br><span class="line">-- 提交事务</span><br><span class="line">commit;</span><br><span class="line"></span><br><span class="line">-- 5. 许幻山扣钱 乔碧萝</span><br><span class="line"></span><br><span class="line">-- 6. 许幻山扣钱 石榴姐</span><br></pre></td></tr></table></figure><h3 id="4-5-事务特性-ACID"><a href="#4-5-事务特性-ACID" class="headerlink" title="4.5 事务特性[ACID]"></a>4.5 事务特性[ACID]</h3><p>原子性：atomicity</p><ul><li>如果一个包含多个步骤的业务操作，被事务管理，那么这些操作要么同时成功，要么同时失败。</li></ul><p>一致性：consistency</p><ul><li>事务执行前后，保证数据完整性(数据总量)一致</li></ul><p>隔离性：isolation【并发】</p><ul><li>多个事务之间要求隔离，互不干扰</li></ul><p>持久性：durability</p><ul><li>事务一旦成功提交，持久化到磁盘，即使数据库出现问题也不会对数据不会产生影响</li></ul><h3 id="4-6-事务隔离性-并发"><a href="#4-6-事务隔离性-并发" class="headerlink" title="4.6 事务隔离性[并发]"></a>4.6 事务隔离性[并发]</h3><p>多个事务之间隔离的，相互独立的。但是如果多个事务操作同一批数据，则会引发一些问题，设置不同的隔离级别就可以解决这些问题。</p><blockquote><p>事务A、事务B  同时操作（并发）</p></blockquote><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1. </span>脏读</span><br><span class="line"><span class="code">事务A读取到事务B中操作的数据了，如果事务B进行了回滚，这部分内容就称为脏读</span></span><br><span class="line"><span class="code">一个事务读取到另一个事务，未提交的数据就称为脏读...</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">2. </span>不可重复读</span><br><span class="line"><span class="code">事务A读取了部分数据，此时事务B也操作了这部分数据进行了修改，然后事务A再次查询这部分数据，发生不一致，这就称为不可重复读</span></span><br><span class="line"><span class="code">一个事务二次读取的内容不一致，被事务B的update影响，就称为不可重复读</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">3. </span>幻读（虚读）</span><br><span class="line"><span class="code">事务A和事务B同时查询数据（id：10）不存在，此时事务A添加使用id10，事务B添加使用id10，事务A成功了，事务B失败了，这种现象就称为幻读</span></span><br></pre></td></tr></table></figure><h4 id="4-6-1-MySQL数据库隔离级别"><a href="#4-6-1-MySQL数据库隔离级别" class="headerlink" title="4.6.1 MySQL数据库隔离级别"></a>4.6.1 MySQL数据库隔离级别</h4><table><thead><tr><th>级别</th><th>名字</th><th>隔离级别</th><th>脏读</th><th>不可重复读</th><th>幻读</th><th>数据库默认隔离级别</th></tr></thead><tbody><tr><td>1</td><td>读未提交</td><td>read uncommitted</td><td>是</td><td>是</td><td>是</td><td></td></tr><tr><td>2</td><td>读已提交</td><td>read committed</td><td>否</td><td>是</td><td>是</td><td>Oracle和SQL Server</td></tr><tr><td>3</td><td>可重复读</td><td>repeatable read</td><td>否</td><td>否</td><td>是</td><td>MySQL</td></tr><tr><td>4</td><td>串行化</td><td>serializable</td><td>否</td><td>否</td><td>否</td><td></td></tr></tbody></table><blockquote><p>设置数据库的隔离级别的不同考虑，选择不同的隔离级别：</p><ul><li><p>考虑性能： 1 &gt; 2 &gt; 3 &gt; 4</p></li><li><p>考虑安全：4 &gt; 3 &gt; 2 &gt; 1</p></li><li><p>综合考虑：2 、3</p></li></ul></blockquote><h4 id="4-6-2-演示隔离级别产生的问题"><a href="#4-6-2-演示隔离级别产生的问题" class="headerlink" title="4.6.2 演示隔离级别产生的问题"></a>4.6.2 演示隔离级别产生的问题</h4><p>相关语法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1. 查看当前数据库隔离级别</span><br><span class="line">show variables like &#39;%isolation%&#39;;</span><br><span class="line">2. 临时修改隔离级别</span><br><span class="line">set session transaction isolation level 级别字符串;</span><br></pre></td></tr></table></figure><blockquote><p>模拟创建两个事务：事务A、事务B</p></blockquote><h5 id="演示脏读"><a href="#演示脏读" class="headerlink" title="演示脏读"></a>演示脏读</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1. 设置事务的隔离级别为 read uncommitted</span><br><span class="line">set session transaction isolation level read uncommitted;</span><br></pre></td></tr></table></figure><p><img data-src="/img/%E6%BC%94%E7%A4%BA%E8%84%8F%E8%AF%BB.png" alt="演示脏读"></p><h5 id="解决脏读（产生了不可重复读的问题）"><a href="#解决脏读（产生了不可重复读的问题）" class="headerlink" title="解决脏读（产生了不可重复读的问题）"></a>解决脏读（产生了不可重复读的问题）</h5><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1. </span>设置事务的隔离级别为 read committed</span><br><span class="line"><span class="code">set session transaction isolation level read committed;</span></span><br></pre></td></tr></table></figure><p><img data-src="/img/%E8%A7%A3%E5%86%B3%E8%84%8F%E8%AF%BB.png" alt="解决脏读"></p><h5 id="解决不可重复读"><a href="#解决不可重复读" class="headerlink" title="解决不可重复读"></a>解决不可重复读</h5><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1. </span>设置事务的隔离级别为 repeatable read</span><br><span class="line"><span class="code">set session transaction isolation level repeatable read;</span></span><br></pre></td></tr></table></figure><p><img data-src="/img/%E8%A7%A3%E5%86%B3%E4%B8%8D%E5%8F%AF%E9%87%8D%E5%A4%8D%E8%AF%BB.png" alt="解决不可重复读"></p><h5 id="演示幻读"><a href="#演示幻读" class="headerlink" title="演示幻读"></a>演示幻读</h5><p><img data-src="/img/%E6%BC%94%E7%A4%BA%E5%B9%BB%E8%AF%BB.png" alt="演示幻读"></p><h5 id="解决幻读"><a href="#解决幻读" class="headerlink" title="解决幻读"></a>解决幻读</h5><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1. </span>设置事务的隔离级别为 serializable</span><br><span class="line"><span class="code">set session transaction isolation level serializable;</span></span><br></pre></td></tr></table></figure><p><img data-src="/img/%E8%A7%A3%E5%86%B3%E5%B9%BB%E8%AF%BB.png" alt="解决幻读"></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、表关系&quot;&gt;&lt;a href=&quot;#一、表关系&quot; class=&quot;headerlink&quot; title=&quot;一、表关系&quot;&gt;&lt;/a&gt;一、表关系&lt;/h2&gt;&lt;h3 id=&quot;1-1-概述&quot;&gt;&lt;a href=&quot;#1-1-概述&quot; class=&quot;headerlink&quot; title=&quot;1.1 概述&quot;&gt;&lt;/a&gt;1.1 概述&lt;/h3&gt;&lt;p&gt;现实生活中，（班级）实体与（学生）实体之间肯定是有关系的，那么我们在设计表的时候，就应该体现出（班级）表与（学生）表之间的这种关系！&lt;/p&gt;
&lt;p&gt;我们把这种数据库称为&lt;span style=&quot;color:red&quot;&gt;关系型数据库（RDBMS）&lt;/span&gt;，在数据库设计上，表关系分为三种：&lt;/p&gt;
&lt;figure class=&quot;highlight markdown&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;bullet&quot;&gt;1. &lt;/span&gt;一对多（多对一）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;code&quot;&gt;	应用场景：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;code&quot;&gt;		班级和学生、部门和员工&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;code&quot;&gt;	解释：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;code&quot;&gt;		一个班级内有多名同学，多名同学都属于某一个班级&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;bullet&quot;&gt;2. &lt;/span&gt;多对多&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;code&quot;&gt;	应用场景：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;code&quot;&gt;		学生和课程、学生和老师&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;code&quot;&gt;	解释：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;code&quot;&gt;		一名同学可以选修多门课程，一门课程可以被多名同学选修&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;code&quot;&gt;		&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;bullet&quot;&gt;3. &lt;/span&gt;一对一（一般情况下可以单表实现，有时候需要进行抽取）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;code&quot;&gt;	应用场景：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;code&quot;&gt;		公民和身份证号、商品和详情&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;code&quot;&gt;	解释：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;code&quot;&gt;		一个公民只有一个对应的身份证号、一个身份证号只对应一个公民&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="数据库" scheme="http://sunmoon.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="MySQL" scheme="http://sunmoon.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL/"/>
    
    
      <category term="表关系" scheme="http://sunmoon.com/tags/%E8%A1%A8%E5%85%B3%E7%B3%BB/"/>
    
      <category term="外键约束" scheme="http://sunmoon.com/tags/%E5%A4%96%E9%94%AE%E7%BA%A6%E6%9D%9F/"/>
    
      <category term="多表查询" scheme="http://sunmoon.com/tags/%E5%A4%9A%E8%A1%A8%E6%9F%A5%E8%AF%A2/"/>
    
      <category term="表连接" scheme="http://sunmoon.com/tags/%E8%A1%A8%E8%BF%9E%E6%8E%A5/"/>
    
      <category term="子查询" scheme="http://sunmoon.com/tags/%E5%AD%90%E6%9F%A5%E8%AF%A2/"/>
    
      <category term="事务安全" scheme="http://sunmoon.com/tags/%E4%BA%8B%E5%8A%A1%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>MySQL基础</title>
    <link href="http://sunmoon.com/2020/09/01/MySQL%E5%9F%BA%E7%A1%80/"/>
    <id>http://sunmoon.com/2020/09/01/MySQL%E5%9F%BA%E7%A1%80/</id>
    <published>2020-09-01T10:47:58.000Z</published>
    <updated>2020-09-03T10:14:22.526Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、数据库介绍"><a href="#一、数据库介绍" class="headerlink" title="一、数据库介绍"></a>一、数据库介绍</h2><h3 id="1-1-什么是数据库"><a href="#1-1-什么是数据库" class="headerlink" title="1.1 什么是数据库"></a>1.1 什么是数据库</h3><p><strong>数据库：</strong>存储数据的仓库,本质上就是存储数据的文件系统，方便我们管理数据。</p><h3 id="1-2-数据库管理系统层次"><a href="#1-2-数据库管理系统层次" class="headerlink" title="1.2 数据库管理系统层次"></a>1.2 数据库管理系统层次</h3><p>数据库管理系统（Database Management System[DBMS]）：指一种操作和管理数据库的大型软件。</p><a id="more"></a><blockquote><p>MySQL软件–&gt;仓库—&gt;表–&gt;记录（数据）</p></blockquote><p><img data-src="/img/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E5%B1%82%E6%AC%A1.png" alt="数据库管理系统层次"></p><h3 id="1-3-实体和表的关系"><a href="#1-3-实体和表的关系" class="headerlink" title="1.3 实体和表的关系"></a>1.3 实体和表的关系</h3><p><img data-src="/img/%E5%AE%9E%E4%BD%93%E5%92%8C%E8%A1%A8%E7%9A%84%E5%85%B3%E7%B3%BB.png" alt="实体和表的关系"></p><h3 id="1-4-常见的关系型数据库"><a href="#1-4-常见的关系型数据库" class="headerlink" title="1.4 常见的关系型数据库"></a>1.4 常见的关系型数据库</h3><ul><li><p>MYSQL：开源免费的数据库，小型的数据库.已经被Oracle收购了.MySQL6.x（商业、社区）版本也开始收费。</p></li><li><p>Oracle：收费的大型数据库，Oracle公司的产品。Oracle收购SUN公司，收购MYSQL。</p></li><li><p>DB2：IBM公司的数据库产品,收费的。常应用在银行系统中。</p></li><li><p>SQLServer：MicroSoft 公司收费的中型的数据库。C#、.net等语言常使用。</p></li><li><p>SyBase：已经淡出历史舞台。提供了一个非常专业数据建模的工具PowerDesigner。</p></li><li><p>SQLite: 嵌入式的小型数据库，应用在手机端。</p></li><li><p>OceanBase：阿里巴巴提供的数据库产品，国货之光…</p></li></ul><h2 id="二、MySQL使用"><a href="#二、MySQL使用" class="headerlink" title="二、MySQL使用"></a>二、MySQL使用</h2><h3 id="2-1-安装"><a href="#2-1-安装" class="headerlink" title="2.1 安装"></a>2.1 安装</h3><p>略…</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">+ </span>安装成功后，通过DOS命令行验证</span><br><span class="line"><span class="code">mysql --version</span></span><br></pre></td></tr></table></figure><h3 id="2-2-使用"><a href="#2-2-使用" class="headerlink" title="2.2 使用"></a>2.2 使用</h3><p><strong>启动和关闭</strong></p><blockquote><p>MySQL软件默认开启自启动</p></blockquote><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1. </span>windows服务窗口</span><br><span class="line"><span class="code">计算机右键管理，选择服务，搜索MySQL</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">2. </span>DOS命令行（超级管理员）</span><br><span class="line"><span class="code">net start mysql</span></span><br><span class="line"><span class="code">net stop  mysql</span></span><br></pre></td></tr></table></figure><p><strong>登录</strong></p><blockquote><p>dos命令行方式</p></blockquote><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1. </span>本机登录</span><br><span class="line"><span class="code">mysql -u用户名 -p密码</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">2. </span>远程登录</span><br><span class="line"><span class="code">mysql -h主机地址 -u用户名 -p密码</span></span><br></pre></td></tr></table></figure><p><strong>退出</strong></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">exit</span><br><span class="line">quit</span><br></pre></td></tr></table></figure><h2 id="三、SQL"><a href="#三、SQL" class="headerlink" title="三、SQL"></a>三、SQL</h2><h3 id="3-1-概述"><a href="#3-1-概述" class="headerlink" title="3.1 概述"></a>3.1 概述</h3><p>SQL：结构化查询语言（Structured Query Language）</p><ul><li>通过sql语句，可以实现对数据库的增删改查</li><li>CRUD：create 创建、 retrieve(read) 检索、update 更新、delete 删除</li></ul><h3 id="3-2-SQL方言"><a href="#3-2-SQL方言" class="headerlink" title="3.2 SQL方言"></a>3.2 SQL方言</h3><p>SQL是一套标准，所有的数据库厂商都实现了此标准；但是各自厂商在此标准上增加了特有的语句，这部分内容我们称为方言。</p><blockquote><p>方言举例：</p><ul><li>MySQL注释 #  </li><li>MySQL分页 limit</li></ul></blockquote><h3 id="3-3-SQL书写规范"><a href="#3-3-SQL书写规范" class="headerlink" title="3.3 SQL书写规范"></a>3.3 SQL书写规范</h3><ul><li>SQL语句可以单行或多行书写，最后以分号结束</li><li>SQL语句在windows平台下不区分大小写，关键字大写</li><li>SQL的注释：<ul><li>单行注释：<code>-- 注释内容</code></li><li>多行注释：<code>/* 注释内容 */</code></li></ul></li></ul><h3 id="3-4-SQL分类"><a href="#3-4-SQL分类" class="headerlink" title="3.4 SQL分类"></a>3.4 SQL分类</h3><ul><li>DDL：(Data Definition Language)数据定义语言 <ul><li>用来定义数据库对象：数据库，表，列等。关键字：create,drop,alter等</li></ul></li><li>DML：(Data Manipulation Language)数据操作语言 <ul><li>用来对数据库中表的数据进行增删改。关键字：insert,delete, update等</li></ul></li><li>DQL：(Data Query Language) 数据查询语言<ul><li>用来查询数据库中表的记录(数据)。关键字：select, where等</li></ul></li><li>DCL：(Data Control Language)数据控制语言<ul><li>用来定义数据库的访问权限和安全级别，及创建用户。关键字：grant,revoke等</li></ul></li><li>TCL：(Transaction Control Language) 事务控制语言<ul><li>用于控制数据库的事务操作，关键字; commit,savepoint,rollback等</li></ul></li></ul><h2 id="四、SQL的基础操作"><a href="#四、SQL的基础操作" class="headerlink" title="四、SQL的基础操作"></a>四、SQL的基础操作</h2><h3 id="4-1-DDL"><a href="#4-1-DDL" class="headerlink" title="4.1 DDL"></a>4.1 DDL</h3><h4 id="4-1-1-操作数据库"><a href="#4-1-1-操作数据库" class="headerlink" title="4.1.1 操作数据库"></a>4.1.1 操作数据库</h4><h5 id="C：创建"><a href="#C：创建" class="headerlink" title="C：创建"></a>C：创建</h5><ul><li><strong>直接创建数据库</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 语法</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> 数据库名;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 示例</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> mydb;</span><br></pre></td></tr></table></figure><ul><li><strong>创建数据库并指定字符集</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 语法</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> 数据库名 <span class="keyword">charset</span> 字符集;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 示例</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> mydb <span class="keyword">charset</span> utf8;</span><br></pre></td></tr></table></figure><h5 id="R：查询"><a href="#R：查询" class="headerlink" title="R：查询"></a>R：查询</h5><ul><li><strong>查看所有数据库</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 语法</span></span><br><span class="line"><span class="keyword">show</span> <span class="keyword">databases</span>;</span><br></pre></td></tr></table></figure><ul><li><strong>查看建库语句</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 语法</span></span><br><span class="line"><span class="keyword">show</span> <span class="keyword">create</span> <span class="keyword">database</span> 数据库名;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 示例</span></span><br><span class="line"><span class="keyword">show</span> <span class="keyword">create</span> <span class="keyword">database</span> mydb;</span><br></pre></td></tr></table></figure><h5 id="U：修改"><a href="#U：修改" class="headerlink" title="U：修改"></a>U：修改</h5><ul><li><strong>修改数据库的字符集</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 语法</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">database</span> 数据库名 <span class="keyword">charset</span> 字符集；</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 示例</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">database</span> mydb <span class="keyword">charset</span> gbk;</span><br></pre></td></tr></table></figure><h5 id="D：删除"><a href="#D：删除" class="headerlink" title="D：删除"></a>D：删除</h5><ul><li><strong>删除指定的数据库</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 语法</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">database</span> 数据库名;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 示例</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">database</span> mydb;</span><br></pre></td></tr></table></figure><h5 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h5><ul><li><strong>查看当前正在使用的数据库</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">database</span>();</span><br></pre></td></tr></table></figure><ul><li><strong>使用数据库</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 语法</span></span><br><span class="line"><span class="keyword">use</span> 数据库名；</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 示例</span></span><br><span class="line"><span class="keyword">use</span> mydb;</span><br></pre></td></tr></table></figure><h4 id="4-1-2-操作表"><a href="#4-1-2-操作表" class="headerlink" title="4.1.2 操作表"></a>4.1.2 操作表</h4><h5 id="C：创建-1"><a href="#C：创建-1" class="headerlink" title="C：创建"></a>C：创建</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 语法</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> 表名(</span><br><span class="line">字段名 数据类型,</span><br><span class="line">    字段名 数据类型,</span><br><span class="line">    ...</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 示例</span></span><br><span class="line"><span class="comment">-- 需求：创建一张student表，表中字段有id、name、birthday</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> student(</span><br><span class="line"><span class="keyword">id</span> <span class="built_in">int</span>,</span><br><span class="line">    <span class="keyword">name</span> <span class="built_in">varchar</span>(<span class="number">32</span>),</span><br><span class="line">    birthday <span class="built_in">date</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><p><strong>MySQL中常见的数据类型</strong></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">* </span>int      整型</span><br><span class="line"></span><br><span class="line"><span class="bullet">* </span>double   浮点型</span><br><span class="line"></span><br><span class="line"><span class="bullet">* </span>decimal  高精度浮点型</span><br><span class="line"><span class="code">decimal(m,n)</span></span><br><span class="line"><span class="code">m：总长度</span></span><br><span class="line"><span class="code">n：小数位长度</span></span><br><span class="line"><span class="code">举例</span></span><br><span class="line"><span class="code">decimal(5,2)</span></span><br><span class="line"><span class="code">最大值：999.99</span></span><br><span class="line"><span class="code">最小值：0.01</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">* </span>varchar  可变长度字符串</span><br><span class="line"><span class="code">varchar(m) </span></span><br><span class="line"><span class="code">m取值范围：1~21841 字符</span></span><br><span class="line"><span class="code">举例：</span></span><br><span class="line"><span class="code">varchar(10)</span></span><br><span class="line"><span class="code">最大值：10个字符（中英文及标点符号）</span></span><br><span class="line"><span class="code">最小值：1个字符</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">* </span>char     固定长度字符串</span><br><span class="line"><span class="code">char(m)</span></span><br><span class="line"><span class="code">m取值范围：1~257</span></span><br><span class="line"><span class="code">举例：</span></span><br><span class="line"><span class="code">char(10)</span></span><br><span class="line"><span class="code">最大值：10个字符</span></span><br><span class="line"><span class="code">最小值：10个字符</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">* </span>text   文本</span><br><span class="line"></span><br><span class="line"><span class="bullet">* </span>date     日期，格式：yyyy-MM-dd</span><br><span class="line"></span><br><span class="line"><span class="bullet">* </span>datetime 日期时间，格式：yyyy-MM-dd HH:mm:ss</span><br></pre></td></tr></table></figure><p><strong>克隆表</strong></p><blockquote><p>为了简化表的创建，在创建的表的时候，可以使用已有表的结构</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 语法</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> 新表 <span class="keyword">like</span> 旧表;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 实例</span></span><br><span class="line"><span class="comment">-- 需求：利用student表的结构快速复制出一张teacher表</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> teacher <span class="keyword">like</span> student;</span><br></pre></td></tr></table></figure><h5 id="R：查询-1"><a href="#R：查询-1" class="headerlink" title="R：查询"></a>R：查询</h5><ul><li><strong>查询当前库中所有的数据表</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 语法</span></span><br><span class="line"><span class="keyword">show</span> <span class="keyword">tables</span>;</span><br></pre></td></tr></table></figure><ul><li><strong>查看建表语句</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 语法 </span></span><br><span class="line"><span class="keyword">show</span> <span class="keyword">create</span> <span class="keyword">table</span> 表名;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 实例 </span></span><br><span class="line"><span class="keyword">show</span> <span class="keyword">create</span> <span class="keyword">table</span> teacher;</span><br></pre></td></tr></table></figure><ul><li><strong>查看表结构</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 语法</span></span><br><span class="line">desc 表名;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 实例</span></span><br><span class="line">desc student;</span><br><span class="line">desc teacher;</span><br></pre></td></tr></table></figure><h5 id="U：修改-1"><a href="#U：修改-1" class="headerlink" title="U：修改"></a>U：修改</h5><ul><li><strong>添加一列</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 语法</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">add</span> 列名 数据类型;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 实例</span></span><br><span class="line"><span class="comment">-- 需求：修改teacher表中添加一列jieshao</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> teacher <span class="keyword">add</span> jieshao <span class="built_in">varchar</span>(<span class="number">30</span>);</span><br></pre></td></tr></table></figure><ul><li><strong>修改列类型</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 语法</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">modify</span> 列名 新数据类型;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 实例</span></span><br><span class="line"><span class="comment">-- 需求：修改teacher表jieshao列的字符长度为99</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> teacher <span class="keyword">modify</span> jieshao <span class="built_in">varchar</span>(<span class="number">99</span>);</span><br></pre></td></tr></table></figure><ul><li><strong>修改列名</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 语法</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">change</span> 旧列名 新列名 新数据类型;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 实例</span></span><br><span class="line"><span class="comment">-- 需求：修改teacher表jieshao列名为intro</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> teacher <span class="keyword">change</span> jieshao intro <span class="built_in">varchar</span>(<span class="number">256</span>);</span><br></pre></td></tr></table></figure><ul><li><strong>删除指定列</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 语法</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">drop</span> 列名;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 实例</span></span><br><span class="line"><span class="comment">-- 需求：删除teacher表的intro列</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> teacher <span class="keyword">drop</span> intro;</span><br></pre></td></tr></table></figure><ul><li><strong>修改表名</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 语法</span></span><br><span class="line"><span class="keyword">rename</span> <span class="keyword">table</span> 旧表名 <span class="keyword">to</span>  新表名;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 实例</span></span><br><span class="line"><span class="comment">-- 需求：修改teacher表的名称为tch</span></span><br><span class="line"><span class="keyword">rename</span> <span class="keyword">table</span> teacher <span class="keyword">to</span>  tch;</span><br></pre></td></tr></table></figure><h5 id="D：删除-1"><a href="#D：删除-1" class="headerlink" title="D：删除"></a>D：删除</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 语法</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> 表名;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 实例</span></span><br><span class="line"><span class="comment">-- 需求：删除tch表</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> tch;</span><br></pre></td></tr></table></figure><h3 id="4-2-图形化工具"><a href="#4-2-图形化工具" class="headerlink" title="4..2 图形化工具"></a>4..2 图形化工具</h3><blockquote><p>这里介绍SQLyog软件</p></blockquote><p><strong>安装：略…</strong></p><blockquote><p>登录（远程连接）</p></blockquote><p><img data-src="/img/sqlyog%E7%99%BB%E5%BD%95.png" alt="sqlyog登录"></p><blockquote><p>代替DDL操作库</p></blockquote><p><img data-src="/img/sqlyog%E6%93%8D%E4%BD%9C%E5%BA%93.png" alt="sqlyog操作库"></p><blockquote><p>代替DDL操作表</p></blockquote><p><img data-src="/img/sqlyog%E6%93%8D%E4%BD%9C%E8%A1%A8.png" alt="sqlyog操作表"></p><h3 id="4-3-DML"><a href="#4-3-DML" class="headerlink" title="4.3 DML"></a>4.3 DML</h3><h4 id="4-3-1-添加记录"><a href="#4-3-1-添加记录" class="headerlink" title="4.3.1 添加记录"></a>4.3.1 添加记录</h4><p>需求：在student表中添加如下数据：</p><table><thead><tr><th>id</th><th>name</th><th>birthday</th></tr></thead><tbody><tr><td>1</td><td>工藤</td><td>1990-01-01</td></tr><tr><td>5</td><td>小兰</td><td>1990-01-01</td></tr><tr><td>6</td><td>小五郎</td><td></td></tr></tbody></table><p><strong>方式一：完整语法</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 语法</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> 表名(列名<span class="number">1</span>,列名<span class="number">2.</span>...) <span class="keyword">values</span>(值<span class="number">1</span>,值<span class="number">2.</span>..);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 实例</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student(<span class="keyword">id</span>,<span class="keyword">name</span>,birthday)<span class="keyword">values</span>(<span class="string">'1'</span>,<span class="string">'工藤'</span>,<span class="string">'1990-01-01'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> student(<span class="keyword">id</span>,<span class="string">`name`</span>)<span class="keyword">VALUES</span>(<span class="number">6</span>,<span class="string">'小五郎'</span>);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">注意:</span></span><br><span class="line"><span class="comment">1.字符串类型可以使用 单引号或者双引号，推荐使用单引号</span></span><br><span class="line"><span class="comment">2.字符串可以插入一切类型，数据库底层进行了因式转换</span></span><br><span class="line"><span class="comment">3.类的类型必须跟值类型，还有个数，需要一一对应</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p><strong>方式二：简化语法</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 语法</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> 表名 <span class="keyword">values</span>(值<span class="number">1</span>,值<span class="number">2.</span>..);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 实例</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student <span class="keyword">values</span>(<span class="number">5</span>,<span class="string">'小兰'</span>,<span class="string">'1993-2-2'</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student <span class="keyword">values</span>(<span class="number">7</span>,<span class="string">'灰原哀'</span>,<span class="literal">null</span>);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">注意：</span></span><br><span class="line"><span class="comment">1.插入值的顺序必须跟字段顺一致，补充查看字段顺序：desc 表名</span></span><br><span class="line"><span class="comment">2.对于不需要插入真实数据的列（字段），使用null填补位置</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">-- 扩展：一条命令插入多条记录</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student <span class="keyword">values</span>(<span class="number">8</span>,<span class="string">'阿里博士'</span>,<span class="literal">null</span>),(<span class="number">9</span>,<span class="string">'木木景观'</span>,<span class="literal">null</span>);</span><br></pre></td></tr></table></figure><h4 id="4-3-2-修改记录"><a href="#4-3-2-修改记录" class="headerlink" title="4.3.2 修改记录"></a>4.3.2 修改记录</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 语法</span></span><br><span class="line"><span class="keyword">update</span> 表名 <span class="keyword">set</span> 列<span class="number">1</span>=新值<span class="number">1</span>,列<span class="number">2</span>=新值<span class="number">2</span> <span class="keyword">where</span> 条件;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 实例</span></span><br><span class="line"><span class="comment">-- 需求：修改工藤的name为柯南,birthday为2000-01-01</span></span><br><span class="line"><span class="keyword">update</span> student <span class="keyword">set</span> <span class="keyword">name</span>=<span class="string">'柯南'</span>,birthday=<span class="string">'2000-01-01'</span> <span class="keyword">where</span> <span class="keyword">id</span> = <span class="number">1</span>;</span><br></pre></td></tr></table></figure><h4 id="4-3-3-删除记录"><a href="#4-3-3-删除记录" class="headerlink" title="4.3.3 删除记录"></a>4.3.3 删除记录</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 语法</span></span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> 表名 <span class="keyword">where</span> 条件;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 实例</span></span><br><span class="line"><span class="comment">-- 需求：删除student中name=木木景观的记录</span></span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> student <span class="keyword">where</span> <span class="keyword">id</span> = <span class="number">9</span>;</span><br></pre></td></tr></table></figure><h4 id="4-3-4-蠕虫复制"><a href="#4-3-4-蠕虫复制" class="headerlink" title="4.3.4 蠕虫复制"></a>4.3.4 蠕虫复制</h4><p>作用：将一张表的记录，快速复制到另外一张表</p><ul><li>前提：二张表结构一致</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 准备条件 克隆学生表</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> stu <span class="keyword">like</span> student;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 蠕虫复制</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> stu <span class="keyword">select</span> * <span class="keyword">from</span> student;</span><br></pre></td></tr></table></figure><h3 id="4-4-DQL"><a href="#4-4-DQL" class="headerlink" title="4.4 DQL"></a>4.4 DQL</h3><p><strong>准备数据</strong></p><ul><li>创建表</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> student1(</span><br><span class="line"><span class="keyword">id</span> <span class="built_in">int</span>,<span class="comment">-- 学号</span></span><br><span class="line">    <span class="keyword">name</span> <span class="built_in">varchar</span>(<span class="number">20</span>),<span class="comment">-- 姓名</span></span><br><span class="line">    chinese <span class="keyword">double</span>,<span class="comment">-- 语文成绩</span></span><br><span class="line">    english <span class="keyword">double</span>,<span class="comment">-- 英语成绩</span></span><br><span class="line">    math <span class="keyword">double</span><span class="comment">-- 数学成绩</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><ul><li>向表中插入数据</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 插入记录</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student1(<span class="keyword">id</span>,<span class="keyword">name</span>,chinese,english,math) <span class="keyword">values</span>(<span class="number">1</span>,<span class="string">'tom'</span>,<span class="number">89</span>,<span class="number">78</span>,<span class="number">90</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student1(<span class="keyword">id</span>,<span class="keyword">name</span>,chinese,english,math) <span class="keyword">values</span>(<span class="number">2</span>,<span class="string">'jack'</span>,<span class="number">67</span>,<span class="number">98</span>,<span class="number">56</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student1(<span class="keyword">id</span>,<span class="keyword">name</span>,chinese,english,math) <span class="keyword">values</span>(<span class="number">3</span>,<span class="string">'jerry'</span>,<span class="number">87</span>,<span class="number">78</span>,<span class="number">77</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student1(<span class="keyword">id</span>,<span class="keyword">name</span>,chinese,english,math) <span class="keyword">values</span>(<span class="number">4</span>,<span class="string">'lucy'</span>,<span class="number">88</span>,<span class="literal">NULL</span>,<span class="number">90</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student1(<span class="keyword">id</span>,<span class="keyword">name</span>,chinese,english,math) <span class="keyword">values</span>(<span class="number">5</span>,<span class="string">'james'</span>,<span class="number">82</span>,<span class="number">84</span>,<span class="number">77</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student1(<span class="keyword">id</span>,<span class="keyword">name</span>,chinese,english,math) <span class="keyword">values</span>(<span class="number">6</span>,<span class="string">'jack'</span>,<span class="number">55</span>,<span class="number">85</span>,<span class="number">45</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student1(<span class="keyword">id</span>,<span class="keyword">name</span>,chinese,english,math) <span class="keyword">values</span>(<span class="number">7</span>,<span class="string">'tom'</span>,<span class="number">89</span>,<span class="number">65</span>,<span class="number">30</span>);</span><br></pre></td></tr></table></figure><p><strong>基本查询语法</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询全部的字段</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> 表名;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询指定的字段</span></span><br><span class="line"><span class="keyword">select</span> 列名<span class="number">1</span>,列名<span class="number">2.</span>.. <span class="keyword">from</span> 表名;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 去重</span></span><br><span class="line"><span class="keyword">select</span> distnct 列名 <span class="keyword">from</span> 表名;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- null值处理</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">ifnull</span>(列名,默认值) <span class="keyword">from</span> 表名;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 别名</span></span><br><span class="line"><span class="keyword">select</span> 列名 [<span class="keyword">as</span>] 列别名,列名 [<span class="keyword">as</span>] 列别名 <span class="keyword">from</span> 表名 [<span class="keyword">as</span>] 表别名;</span><br></pre></td></tr></table></figure><p><strong>示例：</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询表中所有学生的信息</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student1;</span><br><span class="line"><span class="comment">-- 查询表中所有学生的姓名和对应的语文成绩</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="string">`name`</span>,chinese <span class="keyword">FROM</span> student1;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询表中学生姓名（去重）</span></span><br><span class="line"><span class="comment">-- distinct 去重关键字，多字段去重，要求内容完全一致</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> <span class="string">`name`</span> <span class="keyword">FROM</span> student1;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> <span class="string">`name`</span>,chinese <span class="keyword">FROM</span> student1;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 在查询的所有学生数学分数上加10分特长分</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="string">`name`</span>,math <span class="keyword">FROM</span> student1;</span><br><span class="line"><span class="comment">-- 注意只是查询时，增加了10分，表中原有记录不会受到影响</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="string">`name`</span>,math +<span class="number">10</span> <span class="keyword">FROM</span> student1;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 统计每个学生的总分</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="string">`name`</span>,chinese + english + math <span class="keyword">FROM</span> student1;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> null与其他数据进行数学运算都为null</span></span><br><span class="line"><span class="comment"> 解决：ifnull(列名,默认值)，作用：如果该列的值为null，就使用你指定的默认值</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">IFNULL</span>(english,<span class="number">0</span>) <span class="keyword">FROM</span> student1;</span><br><span class="line"><span class="comment">-- 修复</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="string">`name`</span>,chinese + <span class="keyword">IFNULL</span>(english,<span class="number">0</span>) + math <span class="keyword">FROM</span> student1;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 使用别名表示学生总分</span></span><br><span class="line"><span class="comment">-- 语法：select 列名 [as] 列别名 from 表名 [as] 表别名</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="string">`name`</span> <span class="keyword">AS</span> 姓名,(chinese + <span class="keyword">IFNULL</span>(english,<span class="number">0</span>) + math) <span class="keyword">AS</span> 总分 <span class="keyword">FROM</span> student1;</span><br></pre></td></tr></table></figure><h2 id="五、DQL单表高级查询"><a href="#五、DQL单表高级查询" class="headerlink" title="五、DQL单表高级查询"></a>五、DQL单表高级查询</h2><p><strong>准备数据</strong></p><ul><li>创建表</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> student2(</span><br><span class="line"><span class="keyword">id</span> <span class="built_in">int</span>, <span class="comment">-- 学号</span></span><br><span class="line">    <span class="keyword">name</span> <span class="built_in">varchar</span>(<span class="number">20</span>), <span class="comment">-- 姓名</span></span><br><span class="line">    age <span class="built_in">int</span>, <span class="comment">-- 年龄</span></span><br><span class="line">    sex <span class="built_in">varchar</span>(<span class="number">5</span>), <span class="comment">-- 性别</span></span><br><span class="line">    address <span class="built_in">varchar</span>(<span class="number">100</span>),<span class="comment">-- 地址</span></span><br><span class="line">    math <span class="built_in">int</span>, <span class="comment">-- 数学成绩</span></span><br><span class="line">    english <span class="built_in">int</span> <span class="comment">-- 英语成绩</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><ul><li>插入记录</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 插入记录</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> student2(<span class="keyword">id</span>,<span class="keyword">NAME</span>,age,sex,address,math,english) <span class="keyword">VALUES</span> </span><br><span class="line">(<span class="number">1</span>,<span class="string">'马云'</span>,<span class="number">55</span>,<span class="string">'男'</span>,<span class="string">'杭州'</span>,<span class="number">66</span>,<span class="number">78</span>),</span><br><span class="line">(<span class="number">2</span>,<span class="string">'马化腾'</span>,<span class="number">45</span>,<span class="string">'女'</span>,<span class="string">'深圳'</span>,<span class="number">98</span>,<span class="number">87</span>),</span><br><span class="line">(<span class="number">3</span>,<span class="string">'马景涛'</span>,<span class="number">55</span>,<span class="string">'男'</span>,<span class="string">'香港'</span>,<span class="number">56</span>,<span class="number">77</span>),</span><br><span class="line">(<span class="number">4</span>,<span class="string">'柳岩'</span>,<span class="number">20</span>,<span class="string">'女'</span>,<span class="string">'湖南'</span>,<span class="number">76</span>,<span class="number">65</span>),</span><br><span class="line">(<span class="number">5</span>,<span class="string">'柳青'</span>,<span class="number">20</span>,<span class="string">'男'</span>,<span class="string">'湖南'</span>,<span class="number">86</span>,<span class="literal">NULL</span>),</span><br><span class="line">(<span class="number">6</span>,<span class="string">'刘德华'</span>,<span class="number">57</span>,<span class="string">'男'</span>,<span class="string">'香港'</span>,<span class="number">99</span>,<span class="number">99</span>),</span><br><span class="line">(<span class="number">7</span>,<span class="string">'马德'</span>,<span class="number">22</span>,<span class="string">'女'</span>,<span class="string">'香港'</span>,<span class="number">99</span>,<span class="number">99</span>),</span><br><span class="line">(<span class="number">8</span>,<span class="string">'德玛西亚'</span>,<span class="number">18</span>,<span class="string">'男'</span>,<span class="string">'南京'</span>,<span class="number">56</span>,<span class="number">65</span>);</span><br></pre></td></tr></table></figure><h3 id="5-1-条件查询"><a href="#5-1-条件查询" class="headerlink" title="5.1 条件查询"></a>5.1 条件查询</h3><p><strong>条件查询语法</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> 表名 <span class="keyword">where</span> 条件;</span><br></pre></td></tr></table></figure><h4 id="5-1-1-关系运算符"><a href="#5-1-1-关系运算符" class="headerlink" title="5.1.1 关系运算符"></a>5.1.1 关系运算符</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">&gt; &lt; &gt;= &lt;= = !=(&lt;&gt;) </span><br><span class="line">实例：</span><br><span class="line"><span class="comment">-- 查询age等于20岁的学生</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student2 <span class="keyword">WHERE</span> age = <span class="number">20</span>;</span><br><span class="line"><span class="comment">-- 查询age不等于20岁的学生</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student2 <span class="keyword">WHERE</span> age != <span class="number">20</span>;</span><br><span class="line"><span class="comment">-- 查询math分数大于80分的学生</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student2 <span class="keyword">WHERE</span> math &gt; <span class="number">80</span>;</span><br><span class="line"><span class="comment">-- 查询english分数小于或等于80分的学生</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student2 <span class="keyword">WHERE</span> english &lt;= <span class="number">80</span>;</span><br></pre></td></tr></table></figure><h4 id="5-1-2-逻辑运算符"><a href="#5-1-2-逻辑运算符" class="headerlink" title="5.1.2 逻辑运算符"></a>5.1.2 逻辑运算符</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">&amp;&amp;(and) ||(or) !(not)</span><br><span class="line">in关键字</span><br><span class="line">指定字段，多个条件查询</span><br><span class="line">between关键字</span><br><span class="line">指定字段，范围查询</span><br><span class="line">实例：</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询age大于35且性别为男的学生(两个条件同时满足)</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student2 <span class="keyword">WHERE</span> age &gt;<span class="number">35</span> <span class="keyword">AND</span> sex = <span class="string">'男'</span>;</span><br><span class="line"><span class="comment">-- 查询age大于35或性别为男的学生(两个条件其中一个满足)</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student2 <span class="keyword">WHERE</span> age &gt;<span class="number">35</span> <span class="keyword">OR</span> sex = <span class="string">'男'</span>;</span><br><span class="line"><span class="comment">-- 查询id是1或3或5的学生</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student2 <span class="keyword">WHERE</span> <span class="keyword">id</span> =<span class="number">1</span> <span class="keyword">OR</span> <span class="keyword">id</span> =<span class="number">3</span> <span class="keyword">OR</span> <span class="keyword">id</span> =<span class="number">5</span>;</span><br><span class="line"><span class="comment">-- in关键字</span></span><br><span class="line"><span class="comment">-- 字段 in(条件1，条件2，条件3);</span></span><br><span class="line"><span class="comment">-- 再次查询id是1或3或5的学生</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student2 <span class="keyword">WHERE</span> <span class="keyword">id</span> <span class="keyword">IN</span>(<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>);</span><br><span class="line"><span class="comment">-- 查询id不是1或3或5的学生</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student2 <span class="keyword">WHERE</span> <span class="keyword">id</span> <span class="keyword">NOT</span> <span class="keyword">IN</span>(<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询english成绩大于等于77，且小于等于87的学生</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student2 <span class="keyword">WHERE</span> english&gt;=<span class="number">77</span> <span class="keyword">AND</span> english&lt;=<span class="number">87</span>;</span><br><span class="line"><span class="comment">-- between关键字</span></span><br><span class="line"><span class="comment">-- 字段 between较小的值 and 较大的值;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 再次查询english成绩大于等于77，且小于等于87的学生</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student2 <span class="keyword">WHERE</span> english <span class="keyword">BETWEEN</span> <span class="number">77</span> <span class="keyword">AND</span> <span class="number">87</span>;</span><br></pre></td></tr></table></figure><h4 id="5-1-3-NULL值判断"><a href="#5-1-3-NULL值判断" class="headerlink" title="5.1.3 NULL值判断"></a>5.1.3 NULL值判断</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">为空：is null</span><br><span class="line">非空：is not null</span><br><span class="line">实例：</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询英语成绩为null的学生</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student2 <span class="keyword">WHERE</span> english <span class="keyword">IS</span> <span class="literal">NULL</span>;</span><br><span class="line"><span class="comment">-- 查询英语成绩不为null的学生</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student2 <span class="keyword">WHERE</span> english <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>;</span><br></pre></td></tr></table></figure><h4 id="5-1-4-模糊查询"><a href="#5-1-4-模糊查询" class="headerlink" title="5.1.4 模糊查询"></a>5.1.4 模糊查询</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">字段 like '字符串通配符'</span><br><span class="line">_ 表示单个任意字符</span><br><span class="line">% 表示多个任意字符</span><br><span class="line">实例：</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询姓马的学生</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student2 <span class="keyword">WHERE</span> <span class="string">`name`</span> <span class="keyword">LIKE</span> <span class="string">'马%'</span>;</span><br><span class="line"><span class="comment">-- 查询姓名中包含'德'字的学生</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student2 <span class="keyword">WHERE</span> <span class="string">`name`</span> <span class="keyword">LIKE</span> <span class="string">'%德%'</span>;</span><br><span class="line"><span class="comment">-- 查询姓马，且姓名有三个字的学生</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student2 <span class="keyword">WHERE</span> <span class="string">`name`</span> <span class="keyword">LIKE</span>  <span class="string">'马__'</span>;</span><br></pre></td></tr></table></figure><h3 id="5-2-排序"><a href="#5-2-排序" class="headerlink" title="5.2 排序"></a>5.2 排序</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">语法： </span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> 表名 <span class="keyword">order</span> <span class="keyword">by</span> 字段 [<span class="keyword">asc</span> | <span class="keyword">desc</span>] ,字段 [<span class="keyword">asc</span> | <span class="keyword">desc</span>]</span><br><span class="line"><span class="keyword">asc</span> 升序（默认值）</span><br><span class="line"><span class="keyword">desc</span> 降序</span><br><span class="line">注意：多字段排序后的排序结果，是在前面排序基础之上实现</span><br><span class="line"><span class="comment">-- 实例：</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询所有数据,使用年龄降序排序</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student2 <span class="keyword">ORDER</span> <span class="keyword">BY</span> age <span class="keyword">DESC</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询所有数据,在年龄降序排序的基础上，如果年龄相同再以数学成绩降序排序</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student2 <span class="keyword">ORDER</span> <span class="keyword">BY</span> age <span class="keyword">DESC</span>,math <span class="keyword">DESC</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 排序有null值的列</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student2 <span class="keyword">ORDER</span> <span class="keyword">BY</span> english <span class="keyword">DESC</span>;</span><br></pre></td></tr></table></figure><h3 id="5-3-聚合-分组-函数"><a href="#5-3-聚合-分组-函数" class="headerlink" title="5.3 聚合(分组)函数"></a>5.3 聚合(分组)函数</h3><p>作用：对一列数据进行计算，返回一个结果，忽略null值</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">语法： </span><br><span class="line">count(列) 统计，建议使用 count(*)</span><br><span class="line">sum(列)   求和</span><br><span class="line">max(列)   最大值</span><br><span class="line">min(列)   最小值</span><br><span class="line">avg(列)   平均值</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 实例：</span></span><br><span class="line"><span class="comment">-- 查询学生总数</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">COUNT</span>(*) <span class="keyword">FROM</span> student2;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询数学成绩总分</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">SUM</span>(math) <span class="keyword">FROM</span> student2;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询数学成绩平均分</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">AVG</span>(math) <span class="keyword">FROM</span> student2;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询数学成绩最高分</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">MAX</span>(math) <span class="keyword">FROM</span> student2;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询数学成绩最低分</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">MIN</span>(math) <span class="keyword">FROM</span> student2;</span><br></pre></td></tr></table></figure><h3 id="5-4-分组"><a href="#5-4-分组" class="headerlink" title="5.4 分组"></a>5.4 分组</h3><p>作用：对一列数据进行分组，相同的数据分为一组，通常与聚合函数一起使用，完成统计工作。</p><p><img data-src="/img/%E5%8D%95%E8%A1%A8%E9%AB%98%E7%BA%A7%E6%9F%A5%E8%AF%A2%E2%80%94%E2%80%94%E5%88%86%E7%BB%84.png" alt="单表高级查询——分组"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 语法：</span></span><br><span class="line"><span class="keyword">select</span> 分组字段 <span class="keyword">from</span> 表名 <span class="keyword">group</span> <span class="keyword">by</span> 分组字段 <span class="keyword">having</span> 分组后的条件过滤;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 实例：</span></span><br><span class="line"><span class="comment">-- 查询所有学生, 按性别分组, 统计每组的人数</span></span><br><span class="line"><span class="keyword">SELECT</span> sex,<span class="keyword">COUNT</span>(*) <span class="keyword">FROM</span> student2 <span class="keyword">GROUP</span> <span class="keyword">BY</span> sex;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询年龄大于25岁的人,按性别分组,统计每组的人数</span></span><br><span class="line"><span class="comment">-- 1.查询年龄大于25岁的人</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student2 <span class="keyword">WHERE</span> age &gt;<span class="number">25</span>;</span><br><span class="line"><span class="comment">-- 2.按性别分组</span></span><br><span class="line"><span class="keyword">SELECT</span> sex <span class="keyword">FROM</span> student2 <span class="keyword">WHERE</span> age &gt;<span class="number">25</span> <span class="keyword">GROUP</span> <span class="keyword">BY</span> sex;</span><br><span class="line"><span class="comment">-- 3.统计每组的人数</span></span><br><span class="line"><span class="keyword">SELECT</span> sex,<span class="keyword">COUNT</span>(*) <span class="keyword">FROM</span> student2 <span class="keyword">WHERE</span> age &gt;<span class="number">25</span> <span class="keyword">GROUP</span> <span class="keyword">BY</span> sex;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询年龄大于25岁的人,按性别分组,统计每组的人数，显示人数大于2的信息</span></span><br><span class="line"><span class="keyword">SELECT</span> sex,<span class="keyword">COUNT</span>(*) <span class="keyword">FROM</span> student2 <span class="keyword">WHERE</span> age &gt;<span class="number">25</span> <span class="keyword">AND</span>  <span class="keyword">COUNT</span>(*) &gt;<span class="number">2</span> <span class="keyword">GROUP</span> <span class="keyword">BY</span> sex; <span class="comment">-- Invalid use of group function 错误语法</span></span><br><span class="line"><span class="keyword">SELECT</span> sex,<span class="keyword">COUNT</span>(*) <span class="keyword">FROM</span> student2 <span class="keyword">WHERE</span> age &gt;<span class="number">25</span> <span class="keyword">GROUP</span> <span class="keyword">BY</span> sex <span class="keyword">HAVING</span> <span class="keyword">COUNT</span>(*) &gt;<span class="number">2</span>;</span><br></pre></td></tr></table></figure><blockquote><p>where 和 having 区别:</p><ul><li><p>where是分组前进行条件过滤，不支持聚合函数</p></li><li><p>having是分组后进行条件过滤，支持聚合函数</p></li></ul></blockquote><h3 id="5-5-分页-MySQL方言"><a href="#5-5-分页-MySQL方言" class="headerlink" title="5.5 分页(MySQL方言)"></a>5.5 分页(MySQL方言)</h3><p><strong>向表中添加数据，方便展示分页效果</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> student2(<span class="keyword">id</span>,<span class="keyword">NAME</span>,age,sex,address,math,english) <span class="keyword">VALUES</span> </span><br><span class="line">(<span class="number">9</span>,<span class="string">'唐僧'</span>,<span class="number">25</span>,<span class="string">'男'</span>,<span class="string">'长安'</span>,<span class="number">87</span>,<span class="number">78</span>),</span><br><span class="line">(<span class="number">10</span>,<span class="string">'孙悟空'</span>,<span class="number">18</span>,<span class="string">'男'</span>,<span class="string">'花果山'</span>,<span class="number">100</span>,<span class="number">66</span>),</span><br><span class="line">(<span class="number">11</span>,<span class="string">'猪八戒'</span>,<span class="number">22</span>,<span class="string">'男'</span>,<span class="string">'高老庄'</span>,<span class="number">58</span>,<span class="number">78</span>),</span><br><span class="line">(<span class="number">12</span>,<span class="string">'沙僧'</span>,<span class="number">50</span>,<span class="string">'男'</span>,<span class="string">'流沙河'</span>,<span class="number">77</span>,<span class="number">88</span>),</span><br><span class="line">(<span class="number">13</span>,<span class="string">'白骨精'</span>,<span class="number">22</span>,<span class="string">'女'</span>,<span class="string">'白虎岭'</span>,<span class="number">66</span>,<span class="number">66</span>),</span><br><span class="line">(<span class="number">14</span>,<span class="string">'蜘蛛精'</span>,<span class="number">23</span>,<span class="string">'女'</span>,<span class="string">'盘丝洞'</span>,<span class="number">88</span>,<span class="number">88</span>);</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> 表名 <span class="keyword">limit</span> 起始索引,显示个数</span><br><span class="line">起始索引：从<span class="number">0</span>开始</span><br><span class="line">显示个数：一页展示多少条</span><br><span class="line">索引公式：</span><br><span class="line">开始索引=（当前页<span class="number">-1</span>）× 每页个数</span><br><span class="line"></span><br><span class="line">实例：</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询学生表中数据，显示前4条</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student2 <span class="keyword">LIMIT</span> <span class="number">0</span>,<span class="number">4</span>;</span><br><span class="line"><span class="comment">-- 补充：查询前XX条，起始索引可以省略</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student2 <span class="keyword">LIMIT</span> <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询学生表中数据，从第三条开始显示，显示4条</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student2 <span class="keyword">LIMIT</span> <span class="number">2</span>,<span class="number">4</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 模拟百度分页，共有14条记录，一页展示5条</span></span><br><span class="line"><span class="comment">-- 第一页</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student2 <span class="keyword">LIMIT</span> <span class="number">0</span>,<span class="number">5</span>;</span><br><span class="line"><span class="comment">-- 第二页</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student2 <span class="keyword">LIMIT</span> <span class="number">5</span>,<span class="number">5</span>;</span><br><span class="line"><span class="comment">-- 第三页</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student2 <span class="keyword">LIMIT</span> <span class="number">10</span>,<span class="number">5</span>;</span><br></pre></td></tr></table></figure><h3 id="5-6-高级查询的顺序"><a href="#5-6-高级查询的顺序" class="headerlink" title="5.6 高级查询的顺序"></a>5.6 高级查询的顺序</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> 表名 <span class="keyword">where</span> 条件 <span class="keyword">group</span> <span class="keyword">by</span> 分组 <span class="keyword">having</span> 条件 <span class="keyword">order</span> <span class="keyword">by</span> 排序 <span class="keyword">limit</span> 分页;</span><br></pre></td></tr></table></figure><h2 id="六、数据库约束"><a href="#六、数据库约束" class="headerlink" title="六、数据库约束"></a>六、数据库约束</h2><h3 id="6-1-概述"><a href="#6-1-概述" class="headerlink" title="6.1 概述"></a>6.1 概述</h3><p><strong>作用</strong></p><p>对表中的数据进行限定，保证数据的正确性、有效性和完整性。    </p><p><strong>分类</strong></p><ol><li>主键约束：表示当前记录的（唯一+非空）标识。类似于人类的身份证号</li><li>唯一约束：表示当前记录的唯一性</li><li>非空约束：表示当前记录不能为空</li><li>默认值：我们可以为当前字段指定默认值，如果未指定，默认值就为null</li><li>外键约束：限定二张表数据的正确性、有效性和完整性</li></ol><h3 id="6-2-实现"><a href="#6-2-实现" class="headerlink" title="6.2 实现"></a>6.2 实现</h3><h4 id="6-2-1-主键约束"><a href="#6-2-1-主键约束" class="headerlink" title="6.2.1 主键约束"></a>6.2.1 主键约束</h4><p>作用：限定某一列的值非空且唯一， 主键就是表中记录的唯一标识。<span style="color:red">通常使用id作为主键</span></p><p><strong>一张表只能有一个主键，但是一个主键可以包含多个字段</strong></p><blockquote><p>方式一：在建表的时候,在字段名后面通过primary key 声明</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 语法：</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> 表名(</span><br><span class="line"><span class="keyword">id</span> <span class="built_in">int</span> primary <span class="keyword">key</span>,</span><br><span class="line">    ....</span><br><span class="line">    ....</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 实例：</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> pk1(</span><br><span class="line">    <span class="keyword">id</span> <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span>,</span><br><span class="line">    <span class="string">`name`</span> <span class="built_in">VARCHAR</span>(<span class="number">32</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><blockquote><p>方式二：在建表的时候,在约束区域通过primary key 声明</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 语法：</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> 表名(</span><br><span class="line"><span class="keyword">id</span> <span class="built_in">int</span>,</span><br><span class="line">    字段名 数据类型,</span><br><span class="line">    primay <span class="keyword">key</span>(<span class="keyword">id</span>)</span><br><span class="line">      </span><br><span class="line">);</span><br><span class="line"><span class="comment">-- 实例：</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> pk2(</span><br><span class="line">    <span class="keyword">id</span> <span class="built_in">INT</span>,</span><br><span class="line">    <span class="string">`name`</span> <span class="built_in">VARCHAR</span>(<span class="number">32</span>),</span><br><span class="line">    PRIMARY <span class="keyword">KEY</span>(<span class="keyword">id</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 联合主键</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> pk3(</span><br><span class="line"> <span class="keyword">id</span> <span class="built_in">INT</span> ,</span><br><span class="line"> <span class="string">`name`</span> <span class="built_in">VARCHAR</span>(<span class="number">32</span>),</span><br><span class="line"> PRIMARY <span class="keyword">KEY</span>(<span class="keyword">id</span>,<span class="string">`name`</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><blockquote><p>方式三：通过修改表结构,添加主键约束 </p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 语法：</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> 表名(</span><br><span class="line"><span class="keyword">id</span> <span class="built_in">int</span> primary <span class="keyword">key</span> auto_increment,</span><br><span class="line">    ....</span><br><span class="line">    ....</span><br><span class="line">);</span><br><span class="line"><span class="comment">-- 实例：</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> pk4(</span><br><span class="line"> <span class="keyword">id</span> <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span> AUTO_INCREMENT,</span><br><span class="line"> <span class="string">`name`</span> <span class="built_in">VARCHAR</span>(<span class="number">32</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><blockquote><p>小贴士：</p><ul><li>如果要设置主键的字段存在重复数据，将设置失败…</li></ul></blockquote><h5 id="扩展"><a href="#扩展" class="headerlink" title="扩展"></a>扩展</h5><blockquote><p>主键自增：要求主键类型支持自增，一张表只能指定一个自增器</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 语法：</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> 表名(</span><br><span class="line"><span class="keyword">id</span> <span class="built_in">int</span> primary <span class="keyword">key</span> auto_increment,</span><br><span class="line">    ....</span><br><span class="line">    ....</span><br><span class="line">);</span><br><span class="line"><span class="comment">-- 实例：</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> pk4(</span><br><span class="line"> <span class="keyword">id</span> <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span> AUTO_INCREMENT,</span><br><span class="line"> <span class="string">`name`</span> <span class="built_in">VARCHAR</span>(<span class="number">32</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><blockquote><p>truncate：摧毁表，重构表</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 语法：</span></span><br><span class="line"><span class="keyword">truncate</span> <span class="keyword">table</span> 表名;</span><br><span class="line"><span class="comment">-- 实例：</span></span><br><span class="line"><span class="keyword">truncate</span> <span class="keyword">table</span> pk4;</span><br></pre></td></tr></table></figure><blockquote><p><code>truncate table 表名</code> 和 <code>delete from 表名</code> 区别是什么?</p><ul><li><p>DML分类:delete from，相当于橡皮擦，一条条记录抹除，保留痕迹</p></li><li><p>DDL分类：truncate table，相当于摧毁表，重构表，不保留痕迹，数据量大，性能更好</p></li></ul></blockquote><h4 id="6-2-2-唯一约束"><a href="#6-2-2-唯一约束" class="headerlink" title="6.2.2 唯一约束"></a>6.2.2 唯一约束</h4><p>作用：限定某一列的值不能重复</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 语法：</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> 表名(</span><br><span class="line"><span class="keyword">id</span> <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span> AUTO_INCREMENT,</span><br><span class="line">    字段名 数据类型 <span class="keyword">unique</span><span class="comment">--unique:限定当前字段不能重复</span></span><br><span class="line">);</span><br><span class="line"><span class="comment">-- 实例：</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> un1(</span><br><span class="line"> <span class="keyword">id</span> <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span> AUTO_INCREMENT,</span><br><span class="line"> <span class="string">`name`</span> <span class="built_in">VARCHAR</span>(<span class="number">32</span>) <span class="keyword">UNIQUE</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><blockquote><p>小贴士</p><ul><li>唯一约束，可以出现多个null…</li></ul></blockquote><h4 id="6-2-3-非空约束"><a href="#6-2-3-非空约束" class="headerlink" title="6.2.3 非空约束"></a>6.2.3 非空约束</h4><p>作用：限定某一列的值不能为null</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 语法：</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> 表名(</span><br><span class="line"><span class="keyword">id</span> <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span> AUTO_INCREMENT,</span><br><span class="line">    字段名 数据类型 <span class="keyword">not</span> <span class="literal">null</span></span><br><span class="line">);</span><br><span class="line"><span class="comment">-- 实例：</span></span><br><span class="line"><span class="comment">-- 一般情况下 唯一和非空是一起使用...</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> nn1(</span><br><span class="line">  <span class="keyword">id</span> <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span> AUTO_INCREMENT,</span><br><span class="line">  <span class="string">`name`</span> <span class="built_in">VARCHAR</span>(<span class="number">32</span>) <span class="keyword">UNIQUE</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="comment">-- 唯一 + 非空</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><blockquote><p>小贴士：</p><ul><li>虽然给 name字段设置了 二个约束（unique + not null），功能类似，但它并不是主键约束</li></ul></blockquote><h4 id="6-2-4-默认值"><a href="#6-2-4-默认值" class="headerlink" title="6.2.4 默认值"></a>6.2.4 默认值</h4><p>作用：限定某一列的默认值，在没有指定的情况下所有列的默认值为null</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 语法：</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> 表名(</span><br><span class="line">  <span class="keyword">id</span> <span class="built_in">int</span> primary <span class="keyword">key</span> auto_increment,</span><br><span class="line">  字段名 数据类型 <span class="keyword">default</span> 默认值</span><br><span class="line">);</span><br><span class="line"><span class="comment">-- 实例：</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> df1(</span><br><span class="line"> <span class="string">`id`</span> <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span> AUTO_INCREMENT,</span><br><span class="line"> <span class="string">`name`</span> <span class="built_in">VARCHAR</span>(<span class="number">32</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line"> <span class="string">`sex`</span> <span class="built_in">VARCHAR</span>(<span class="number">5</span>) <span class="keyword">DEFAULT</span> <span class="string">'男'</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h2 id="七、数据库的备份和还原"><a href="#七、数据库的备份和还原" class="headerlink" title="七、数据库的备份和还原"></a>七、数据库的备份和还原</h2><h3 id="7-1-命令行方式"><a href="#7-1-命令行方式" class="headerlink" title="7.1 命令行方式"></a>7.1 命令行方式</h3><ul><li>导出(备份)</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">mysqldump -u用户名 -p密码 导出的数据库名 &gt; 导出文件路径(*.sql)</span><br><span class="line">实例：</span><br><span class="line">mysqldump -uroot -proot web12 &gt; d:\bak.sql</span><br><span class="line">mysqldump -uroot -p web12 &gt; d:\bak.sql</span><br></pre></td></tr></table></figure><ul><li>导入</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">mysql -u用户名 -p密码 &lt; 导入文件路径(*.sql)</span><br><span class="line">实例：</span><br><span class="line">mysql -uroot -p &lt; d:\bak.sql</span><br></pre></td></tr></table></figure><h3 id="7-2-图形化工具"><a href="#7-2-图形化工具" class="headerlink" title="7.2 图形化工具"></a>7.2 图形化工具</h3><ul><li>导出</li></ul><p><img data-src="/img/%E5%9B%BE%E5%BD%A2%E5%8C%96%E5%B7%A5%E5%85%B7%E5%A4%87%E4%BB%BD%E6%95%B0%E6%8D%AE%E5%BA%93.png" alt="图形化工具备份数据库"></p><ul><li>导入</li></ul><p><img data-src="/img/%E5%9B%BE%E5%BD%A2%E5%8C%96%E5%B7%A5%E5%85%B7%E8%BF%98%E5%8E%9F%E6%95%B0%E6%8D%AE%E5%BA%93.png" alt="图形化工具还原数据库"></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、数据库介绍&quot;&gt;&lt;a href=&quot;#一、数据库介绍&quot; class=&quot;headerlink&quot; title=&quot;一、数据库介绍&quot;&gt;&lt;/a&gt;一、数据库介绍&lt;/h2&gt;&lt;h3 id=&quot;1-1-什么是数据库&quot;&gt;&lt;a href=&quot;#1-1-什么是数据库&quot; class=&quot;headerlink&quot; title=&quot;1.1 什么是数据库&quot;&gt;&lt;/a&gt;1.1 什么是数据库&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;数据库：&lt;/strong&gt;存储数据的仓库,本质上就是存储数据的文件系统，方便我们管理数据。&lt;/p&gt;
&lt;h3 id=&quot;1-2-数据库管理系统层次&quot;&gt;&lt;a href=&quot;#1-2-数据库管理系统层次&quot; class=&quot;headerlink&quot; title=&quot;1.2 数据库管理系统层次&quot;&gt;&lt;/a&gt;1.2 数据库管理系统层次&lt;/h3&gt;&lt;p&gt;数据库管理系统（Database Management System[DBMS]）：指一种操作和管理数据库的大型软件。&lt;/p&gt;
    
    </summary>
    
    
      <category term="数据库" scheme="http://sunmoon.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="MySQL" scheme="http://sunmoon.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL/"/>
    
    
      <category term="MySQL数据库" scheme="http://sunmoon.com/tags/MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="SQL语法" scheme="http://sunmoon.com/tags/SQL%E8%AF%AD%E6%B3%95/"/>
    
      <category term="MySQL单表查询" scheme="http://sunmoon.com/tags/MySQL%E5%8D%95%E8%A1%A8%E6%9F%A5%E8%AF%A2/"/>
    
      <category term="数据库约束" scheme="http://sunmoon.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%BA%A6%E6%9D%9F/"/>
    
      <category term="数据库备份和还原" scheme="http://sunmoon.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%A4%87%E4%BB%BD%E5%92%8C%E8%BF%98%E5%8E%9F/"/>
    
  </entry>
  
  <entry>
    <title>Filter&amp;Listener</title>
    <link href="http://sunmoon.com/2020/08/28/Filter-Listener/"/>
    <id>http://sunmoon.com/2020/08/28/Filter-Listener/</id>
    <published>2020-08-28T14:11:04.000Z</published>
    <updated>2020-08-28T14:22:20.396Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、Filter概述"><a href="#一、Filter概述" class="headerlink" title="一、Filter概述"></a>一、Filter概述</h2><p><strong>生活中的过滤器</strong></p><ul><li>净水器、空气净化器、地铁安检、山大王</li></ul><p><strong>web中的过滤器</strong></p><ul><li>当用户访问服务器资源时，过滤器将请求拦截下来，完成一些通用的操作</li></ul><p><strong>应用场景</strong></p><ul><li>如：登录验证、统一编码处理、敏感字符过滤</li></ul><a id="more"></a><p><img data-src="/img/Filter%E6%A6%82%E8%BF%B0.png" alt="Filter概述"></p><h2 id="二、Filter快速入门"><a href="#二、Filter快速入门" class="headerlink" title="二、Filter快速入门"></a>二、Filter快速入门</h2><p>目标资源：quick.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;quick&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h3&gt;quick.jsp 目标资源&lt;/h3&gt;</span><br><span class="line">    &lt;%</span><br><span class="line">        System.out.println(<span class="string">"quick.jsp 目标资源"</span>);</span><br><span class="line">    %&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h3 id="①-xml版本"><a href="#①-xml版本" class="headerlink" title="① xml版本"></a>① xml版本</h3><p>定义普通类，实现Fileter接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">QuickFilter</span> <span class="keyword">implements</span> <span class="title">Filter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(FilterConfig filterConfig)</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 实现拦截的方法...</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> servletRequest：请求</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> servletResponse：响应</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> filterChain：过滤器链（放行）</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"QuickFilter拦截了请求..."</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 放行</span></span><br><span class="line">        filterChain.doFilter(servletRequest, servletResponse);</span><br><span class="line">        </span><br><span class="line">        System.out.println(<span class="string">"QuickFilter对响应增强..."</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>配置XML</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns</span>=<span class="string">"http://xmlns.jcp.org/xml/ns/javaee"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">version</span>=<span class="string">"3.1"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--filter快速入门--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>QuickFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>com.itheima.a_quick.QuickFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>QuickFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/quick.jsp<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="②-注解版本"><a href="#②-注解版本" class="headerlink" title="② 注解版本"></a>② 注解版本</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// @WebFilter(filterName = "QuickFilter",urlPatterns ="/quick.jsp" )</span></span><br><span class="line"><span class="comment">// @WebFilter(urlPatterns ="/quick.jsp" )</span></span><br><span class="line"><span class="comment">// @WebFilter(value ="/quick.jsp" )</span></span><br><span class="line"><span class="meta">@WebFilter</span>(<span class="string">"/quick.jsp"</span> )</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">QuickFilter</span> <span class="keyword">implements</span> <span class="title">Filter</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 内容参考xml版本代码</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="三、Filter工作原理"><a href="#三、Filter工作原理" class="headerlink" title="三、Filter工作原理"></a>三、Filter工作原理</h2><p>图解：</p><p><img data-src="/img/Filter%E5%B7%A5%E4%BD%9C%E6%B5%81%E7%A8%8B.png" alt="Filter工作流程"></p><h2 id="四、Filter使用细节"><a href="#四、Filter使用细节" class="headerlink" title="四、Filter使用细节"></a>四、Filter使用细节</h2><h3 id="4-1-生命周期"><a href="#4-1-生命周期" class="headerlink" title="4.1 生命周期"></a>4.1 生命周期</h3><p>生命周期：指的是一个对象从生（创建）到死（销毁）的一个过程</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 创建时，执行init方法</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(FilterConfig config)</span></span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 用户访问被拦截资源时，执行doFilter方法</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(ServletRequest request, ServletResponse response,FilterChain chain)</span></span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 销毁时，执行destroy方法</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure><blockquote><p>小结：</p><ul><li>创建：服务器启动时创建filter对象，并优于servlet资源的创建</li><li>运行(过滤拦截)：用户每次访问被拦截资源时</li><li>销毁：服务器关闭后，销毁filter对象</li></ul></blockquote><p><strong>在执行init()方法执行时，会携带一个FilterConfig过滤器配置对象，可以使用它加载一些配置信息</strong></p><p>代码演示：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    生命周期</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LifeFilter</span> <span class="keyword">implements</span> <span class="title">Filter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> FilterConfig filterConfig;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建时，执行</span></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">        FilterConfig：过滤器配置对象</span></span><br><span class="line"><span class="comment">            加载一些配置信息...</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(FilterConfig filterConfig)</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"LifeFilter创建了..."</span>);</span><br><span class="line">        <span class="keyword">this</span>.filterConfig=filterConfig;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 拦截时，执行</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"LifeFilter拦截了..."</span>);</span><br><span class="line"></span><br><span class="line">        String encoding = filterConfig.getInitParameter(<span class="string">"encoding"</span>);</span><br><span class="line">        <span class="comment">// servletRequest.setCharacterEncoding(encoding);</span></span><br><span class="line">        System.out.println(encoding);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 放行</span></span><br><span class="line">        filterChain.doFilter(servletRequest, servletResponse);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 销毁时，执行</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"LifeFilter销毁了..."</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>xml配置：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--filter生命周期--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>LifeFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>com.itheima.b_detail.LifeFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>GBK<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>LifeFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/show.jsp<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><p>使用注解实现：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebFilter</span>(value = <span class="string">"/show.jsp"</span>,</span><br><span class="line">           initParams = &#123;<span class="meta">@WebInitParam</span>(name = <span class="string">"encoding"</span>,value = <span class="string">"GBK"</span>)&#125;)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LifeFilter</span> <span class="keyword">implements</span> <span class="title">Filter</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-2-拦截路径"><a href="#4-2-拦截路径" class="headerlink" title="4.2 拦截路径"></a>4.2 拦截路径</h3><p>在开发时，可以指定过滤器的拦截路径来定义拦截目标资源的范围</p><p><strong>路径匹配规则：</strong></p><ul><li><p>精准匹配：配置一个指定（/show.jsp）的拦截资源</p></li><li><p>目录匹配：配置一个指定目录（/user/*）下的资源</p></li><li><p>后缀名匹配：配置一个指定后缀名（<em>.html、</em>.jsp、*.jpg….）的资源</p></li><li><p>匹配所有：配置拦截所有（/*）的资源</p></li></ul><p>代码演示：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 目录匹配</span></span><br><span class="line"><span class="comment">// @WebFilter("/user/*")</span></span><br><span class="line"><span class="comment">// 后缀名匹配</span></span><br><span class="line"><span class="comment">// @WebFilter("*.html")</span></span><br><span class="line"><span class="comment">// 拦截所有</span></span><br><span class="line"><span class="meta">@WebFilter</span>(<span class="string">"/*"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UrlPatternFilter</span> <span class="keyword">implements</span> <span class="title">Filter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(FilterConfig config)</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain chain)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"UrlPatternFilter拦截了请求..."</span>);</span><br><span class="line">        <span class="comment">// 向下转型</span></span><br><span class="line">        HttpServletRequest request = (HttpServletRequest) servletRequest;</span><br><span class="line">        HttpServletResponse response = (HttpServletResponse) servletResponse;</span><br><span class="line">        <span class="comment">// 放行</span></span><br><span class="line">        chain.doFilter(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-3-拦截方式"><a href="#4-3-拦截方式" class="headerlink" title="4.3 拦截方式"></a>4.3 拦截方式</h3><p>在开发时，可以指定过滤器的拦截方式来处理不同的应用场景。</p><ul><li>比如：只拦截从浏览器直接发送过来的请求，或者拦截内部转发的请求</li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1. </span>拦截外部请求（默认拦截方式）</span><br><span class="line"><span class="code">用户通过浏览器发送请求时，进行拦截</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">2. </span>拦截内部转发(forword)</span><br><span class="line"><span class="code">资源a转发到资源b时，拦截</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">3. </span>过滤器可以同时配置多种拦截方式</span><br><span class="line"><span class="code">forward、request</span></span><br></pre></td></tr></table></figure><p><strong>代码演示：</strong></p><p>注解配置：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    指定过滤器的拦截方式</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">// @WebFilter(value = "/BServlet", dispatcherTypes = &#123;DispatcherType.FORWARD&#125;) // 内部转发时，进行拦截</span></span><br><span class="line"><span class="meta">@WebFilter</span>(value = <span class="string">"/BServlet"</span>, dispatcherTypes = &#123;DispatcherType.REQUEST,DispatcherType.FORWARD&#125;) <span class="comment">// 外部请求和内部转发时，都会拦截</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ModelFilter</span> <span class="keyword">implements</span> <span class="title">Filter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(FilterConfig config)</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain chain)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"ModelFilter拦截了..."</span>);</span><br><span class="line">        <span class="comment">// 向下转型</span></span><br><span class="line">        HttpServletRequest request = (HttpServletRequest) servletRequest;</span><br><span class="line">        HttpServletResponse response = (HttpServletResponse) servletResponse;</span><br><span class="line">        <span class="comment">// 放行</span></span><br><span class="line">        chain.doFilter(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>xml配置演示：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--过滤器的拦截方式--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>ModelFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>com.itheima.b_detail.ModelFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>ModelFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/BServlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dispatcher</span>&gt;</span>REQUEST<span class="tag">&lt;/<span class="name">dispatcher</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dispatcher</span>&gt;</span>FORWARD<span class="tag">&lt;/<span class="name">dispatcher</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="4-4-过滤器链"><a href="#4-4-过滤器链" class="headerlink" title="4.4 过滤器链"></a>4.4 过滤器链</h3><p>在一次请求中,若我们请求匹配到了多个filter,通过请求就相当于把这些filter串起来了，形成了过滤器链。</p><p><img data-src="/img/%E8%BF%87%E6%BB%A4%E5%99%A8%E9%93%BE.png" alt="过滤器链"></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">* </span>执行顺序（先进后出）</span><br><span class="line"><span class="code">        1.用户发送请求</span></span><br><span class="line"><span class="code">        2.FilterA拦截请求</span></span><br><span class="line"><span class="code">        3.FilterB拦截请求</span></span><br><span class="line"><span class="code">        4.show.jsp 执行了</span></span><br><span class="line"><span class="code">        5.FilterB响应增强</span></span><br><span class="line"><span class="code">        6.FilterA响应增强</span></span><br><span class="line"><span class="code">        7.服务器响应结果</span></span><br><span class="line"><span class="code">        </span></span><br><span class="line"><span class="bullet">* </span>拦截先后问题</span><br><span class="line"><span class="code">xml</span></span><br><span class="line"><span class="code">&lt;filter-mapping&gt; 谁先声明，谁先拦截</span></span><br><span class="line"><span class="code">注解</span></span><br><span class="line"><span class="code">根据类名的大小进行先后的排序，值小的先执行...</span></span><br><span class="line"><span class="code">FilterA和FilterB进行对比，所以A先执行</span></span><br></pre></td></tr></table></figure><h2 id="五、Filter案例练习"><a href="#五、Filter案例练习" class="headerlink" title="五、Filter案例练习"></a>五、Filter案例练习</h2><p>需求：用户访问某论坛网站，可以对文章比赛等内容进行留言，在用户点击提交留言，发送请求时，使用过滤器对请求进行拦截，统一编码，防止出现乱码，并且对一些敏感词进行拦截或者过滤。</p><p>代码实现：</p><p><strong>word.jsp</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;留言板&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h2&gt;留言板&lt;/h2&gt;</span><br><span class="line">&lt;div style=<span class="string">"border: 1px solid red; width: 200px; height: 200px"</span>&gt;</span><br><span class="line">    $&#123;requestScope.message&#125;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;h2&gt;留言&lt;/h2&gt;</span><br><span class="line">&lt;h3&gt;</span><br><span class="line">    &lt;span style=<span class="string">"color:red "</span>&gt;</span><br><span class="line">        $&#123;requestScope.info&#125;</span><br><span class="line">    &lt;/span&gt;</span><br><span class="line">&lt;/h3&gt;</span><br><span class="line">&lt;form action=<span class="string">"$&#123;pageContext.request.contextPath&#125;/MessageServlet"</span> method=<span class="string">"post"</span>&gt;</span><br><span class="line">    &lt;textarea name="message"  cols="30" rows="5"&gt;&lt;/textarea&gt;</span><br><span class="line">    &lt;br&gt;</span><br><span class="line">    &lt;input type=<span class="string">"submit"</span> value=<span class="string">"发布"</span>&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p><strong>MessageServlet</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/MessageServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MessageServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        String message = request.getParameter(<span class="string">"message"</span>);</span><br><span class="line">        request.setAttribute(<span class="string">"message"</span>,message);</span><br><span class="line">        request.getRequestDispatcher(<span class="string">"word.jsp"</span>).forward(request,response);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>统一编码过滤器EncodingFilter</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EncodingFilter</span> <span class="keyword">implements</span> <span class="title">Filter</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> FilterConfig config;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(ServletRequest req, ServletResponse resp, FilterChain chain)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">        HttpServletRequest request = (HttpServletRequest) req;</span><br><span class="line">        HttpServletResponse response = (HttpServletResponse) resp;</span><br><span class="line">        <span class="keyword">if</span> (<span class="string">"post"</span>.equalsIgnoreCase(request.getMethod())) &#123;</span><br><span class="line">            <span class="comment">//System.out.println(config.getInitParameter("encoding"));</span></span><br><span class="line">            request.setCharacterEncoding(config.getInitParameter(<span class="string">"encoding"</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//放行</span></span><br><span class="line">        chain.doFilter(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(FilterConfig config)</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.config = config;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>敏感词拦截KeyWordsFilter</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">KeyWordsFilter</span> <span class="keyword">implements</span> <span class="title">Filter</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String[] words;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(ServletRequest req, ServletResponse resp, FilterChain chain)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">        HttpServletRequest request = (HttpServletRequest) req;</span><br><span class="line">        HttpServletResponse response = (HttpServletResponse) resp;</span><br><span class="line">        String message = request.getParameter(<span class="string">"message"</span>);</span><br><span class="line">        <span class="keyword">for</span> (String word : words) &#123;</span><br><span class="line">            <span class="keyword">if</span> (message.contains(word))&#123;</span><br><span class="line">                request.setAttribute(<span class="string">"info"</span>,<span class="string">"您的言论涉嫌违规..."</span>);</span><br><span class="line">                request.getRequestDispatcher(<span class="string">"/word.jsp"</span>).forward(request,response);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//放行</span></span><br><span class="line">        chain.doFilter(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(FilterConfig config)</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line">        <span class="comment">// 1.专门加载src目录下的properties配置文件，sun公司提供了一个工具类（ResourceBundle）</span></span><br><span class="line">        ResourceBundle bundle = ResourceBundle.getBundle(<span class="string">"keywords"</span>);</span><br><span class="line">        <span class="comment">// 2.获取关键字的词库信息</span></span><br><span class="line">        String keywords = bundle.getString(<span class="string">"keyword"</span>);</span><br><span class="line">        <span class="comment">// 3.转为数组</span></span><br><span class="line">        <span class="keyword">this</span>.words = keywords.split(<span class="string">","</span>);;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>xml配置</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns</span>=<span class="string">"http://xmlns.jcp.org/xml/ns/javaee"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">version</span>=<span class="string">"3.1"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>EncodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>com.sun.web.filter.EncodingFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--全局参数配置，统一字符集--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>utf-8<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>EncodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>KeyWordsFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>com.sun.web.filter.KeyWordsFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>KeyWordsFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/MessageServlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure><p>敏感词库：</p><p>keywords.properties</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">keyword</span>=<span class="string">傻子,笨蛋,憨批</span></span><br></pre></td></tr></table></figure><h3 id="5-1-敏感词替换"><a href="#5-1-敏感词替换" class="headerlink" title="5.1 敏感词替换"></a>5.1 敏感词替换</h3><p>当用户发出非法言论的时候，在servlet中输出的时候:用”*” 替代</p><ul><li>你是个笨蛋 –&gt; 你是个**</li></ul><h4 id="5-1-1-技术分析"><a href="#5-1-1-技术分析" class="headerlink" title="5.1.1 技术分析"></a>5.1.1 技术分析</h4><p>通过对<code>request.getParameter(String name);</code>方法进行增强的方式，在获取参数时就对敏感词进行替换</p><blockquote><p>对方法增强的方式</p><p>1）子类继承：如果被增强的类是一个接口，无法实现</p><p>2）代理模式：一般使用动态代理，这是使用最普遍的方案</p><p>3）装饰器模式： 一般在io流中大量使用，案例使用这种方案</p></blockquote><p>使用装饰器模式要求：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1. </span>装饰类和被装饰类，需要实现同一个接口（或者继承同一个类）</span><br><span class="line"></span><br><span class="line"><span class="bullet">2. </span>装饰类需要有被装饰类的，对象引用</span><br><span class="line"></span><br><span class="line"><span class="bullet">3. </span>装饰类需要重写增强的方法，完成具体的功能</span><br><span class="line"></span><br><span class="line"><span class="bullet">4. </span>装饰类对不需要增强的方法，调用原有的功能</span><br></pre></td></tr></table></figure><h4 id="5-1-2-需求分析"><a href="#5-1-2-需求分析" class="headerlink" title="5.1.2 需求分析"></a>5.1.2 需求分析</h4><p><img data-src="/img/%E6%A1%88%E4%BE%8B_%E6%95%8F%E6%84%9F%E8%AF%8D%E6%9B%BF%E6%8D%A2_%E8%A3%85%E9%A5%B0%E5%99%A8%E6%A8%A1%E5%BC%8F.png" alt="案例_敏感词替换_装饰器模式"></p><h4 id="5-1-3-代码实现"><a href="#5-1-3-代码实现" class="headerlink" title="5.1.3 代码实现"></a>5.1.3 代码实现</h4><p><strong>① MyRequest</strong></p><blockquote><p>装饰类，增强getParameter方法</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyRequest</span> <span class="keyword">extends</span> <span class="title">HttpServletRequestWrapper</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String[] words;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyRequest</span><span class="params">(HttpServletRequest request , String[] words)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(request);</span><br><span class="line">        <span class="keyword">this</span>.words = words;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 重写方法，进行敏感词过滤</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> name</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getParameter</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        String parameter = <span class="keyword">super</span>.getParameter(name);</span><br><span class="line">        <span class="keyword">for</span> (String word : words) &#123;</span><br><span class="line">            parameter = parameter.replaceAll(word, <span class="string">"***"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> parameter;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>② KeyWordsProFilter</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">KeyWordsProFilter</span> <span class="keyword">implements</span> <span class="title">Filter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String[] words;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(ServletRequest req, ServletResponse resp, FilterChain chain)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">        HttpServletRequest request = (HttpServletRequest) req;</span><br><span class="line">        HttpServletResponse response = (HttpServletResponse) resp;</span><br><span class="line">        <span class="comment">//对request的getParameter方法进行增强，过滤敏感词</span></span><br><span class="line">        HttpServletRequest myRequest = <span class="keyword">new</span> MyRequest(request, words);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//放行</span></span><br><span class="line">        chain.doFilter(myRequest, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(FilterConfig config)</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line">        ResourceBundle bundle = ResourceBundle.getBundle(<span class="string">"keywords"</span>);</span><br><span class="line">        String keywords = bundle.getString(<span class="string">"keyword"</span>);</span><br><span class="line">        <span class="keyword">this</span>.words = keywords.split(<span class="string">","</span>);;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>③ xml配置</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>KeyWordsProFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>com.sun.web.filter.KeyWordsProFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>KeyWordsProFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/MessageServlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="六、Listener"><a href="#六、Listener" class="headerlink" title="六、Listener"></a>六、Listener</h2><h3 id="6-1-概述"><a href="#6-1-概述" class="headerlink" title="6.1 概述"></a>6.1 概述</h3><p><strong>生活中的监听器</strong></p><p>我们很多商场有摄像头，监视着客户的一举一动。如果客户有违法行为，商场可以采取相应的措施。</p><p><strong>javaweb中的监听器</strong></p><p>在我们的java程序中，有时也需要监视某些事情，一旦被监视的对象发生相应的变化，我们应该采取相应的操作。</p><p>监听web三大域对象：HttpServletRequest、HttpSession、ServletContext  </p><p><strong>场景</strong></p><p>历史访问次数、统计在线人数、系统启动时初始化配置信息</p><h3 id="6-2-快速入门"><a href="#6-2-快速入门" class="headerlink" title="6.2 快速入门"></a>6.2 快速入门</h3><p>监听器在web开发中使用的比较少,见的机会就更少了,今天我们使用<strong>ServletContextListenner</strong>来带领大家学习下监听器,因为这个监听器是监听器中使用率最高的一个,且监听器的使用方式都差不多。</p><blockquote><p>我们使用这个监听器可以在项目启动和销毁的时候做一些事情,例如,在项目启动的时候加载配置文件。</p></blockquote><h4 id="①-xml版本-1"><a href="#①-xml版本-1" class="headerlink" title="① xml版本"></a>① xml版本</h4><blockquote><p>普通Java类，实现ServletContextListenner接口</p><p>重写：监听ServletContext创建、监听ServletContext销毁</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyListener</span> <span class="keyword">implements</span> <span class="title">ServletContextListener</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">        监听：ServletContext创建</span></span><br><span class="line"><span class="comment">            servletContextEvent：监听器事件对象..可以获取servletContext域对象</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">contextInitialized</span><span class="params">(ServletContextEvent servletContextEvent)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"ServletContext创建啦...."</span>);</span><br><span class="line">        ServletContext servletContext = servletContextEvent.getServletContext();</span><br><span class="line">    &#125;yi</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">        监听：ServletContext销毁</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">contextDestroyed</span><span class="params">(ServletContextEvent servletContextEvent)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"ServletContext销毁啦..."</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--配置listener监听器--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">listener</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">listener-class</span>&gt;</span>com.itheima.a_listener.MyListener<span class="tag">&lt;/<span class="name">listener-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">listener</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="②-注解版本-1"><a href="#②-注解版本-1" class="headerlink" title="② 注解版本"></a>② 注解版本</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebListener</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyListener</span> <span class="keyword">implements</span> <span class="title">ServletContextListener</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 代码，省略</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-3-案例：统计在线人数"><a href="#6-3-案例：统计在线人数" class="headerlink" title="6.3 案例：统计在线人数"></a>6.3 案例：统计在线人数</h3><p><strong>需求</strong></p><ul><li>有用户使用网站,在线人数就+1;用户退出网站,在线人数就-1</li></ul><h4 id="6-3-1需求分析"><a href="#6-3-1需求分析" class="headerlink" title="6.3.1需求分析"></a>6.3.1需求分析</h4><p><img data-src="/img/%E7%BB%9F%E8%AE%A1%E5%9C%A8%E7%BA%BF%E4%BA%BA%E6%95%B0%E6%A1%88%E4%BE%8B.png" alt="统计在线人数案例"></p><h4 id="6-3-2-代码实现"><a href="#6-3-2-代码实现" class="headerlink" title="6.3.2 代码实现"></a>6.3.2 代码实现</h4><p><strong>① InintCountPersonListener</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 初始化在线人数</span></span><br><span class="line"><span class="meta">@WebListener</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">InintCountPersonListener</span> <span class="keyword">implements</span> <span class="title">ServletContextListener</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">contextInitialized</span><span class="params">(ServletContextEvent servletContextEvent)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 获取servletContext对象</span></span><br><span class="line">        ServletContext servletContext = servletContextEvent.getServletContext();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 初始化人数0</span></span><br><span class="line">        servletContext.setAttribute(<span class="string">"countPerson"</span>, <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">contextDestroyed</span><span class="params">(ServletContextEvent servletContextEvent)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="②-ChangeCountPersonListener"><a href="#②-ChangeCountPersonListener" class="headerlink" title="② ChangeCountPersonListener"></a>② ChangeCountPersonListener</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebListener</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ChangeCountPersonListener</span> <span class="keyword">implements</span> <span class="title">HttpSessionListener</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 会话建立，人数+1</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sessionCreated</span><span class="params">(HttpSessionEvent httpSessionEvent)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 获取最大的域对象</span></span><br><span class="line">        ServletContext servletContext = httpSessionEvent.getSession().getServletContext();</span><br><span class="line">        <span class="comment">// 取出原来人数</span></span><br><span class="line">        Integer oldCountPerson = (Integer) servletContext.getAttribute(<span class="string">"countPerson"</span>);</span><br><span class="line">        <span class="comment">// 加一并覆盖</span></span><br><span class="line">        servletContext.setAttribute(<span class="string">"countPerson"</span>, oldCountPerson + <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 会话关闭，人数-1</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sessionDestroyed</span><span class="params">(HttpSessionEvent httpSessionEvent)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 获取最大的域对象</span></span><br><span class="line">        ServletContext servletContext = httpSessionEvent.getSession().getServletContext();</span><br><span class="line">        <span class="comment">// 取出原来人数</span></span><br><span class="line">        Integer oldCountPerson = (Integer) servletContext.getAttribute(<span class="string">"countPerson"</span>);</span><br><span class="line">        <span class="comment">// 减一并覆盖</span></span><br><span class="line">        servletContext.setAttribute(<span class="string">"countPerson"</span>, oldCountPerson - <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>③ index.jsp</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;$&#123;NAME&#125;&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h3&gt;当前在线人数：$&#123;applicationScope.countPerson&#125;&lt;/h3&gt;</span><br><span class="line"></span><br><span class="line">&lt;a href="$&#123;pageContext.request.contextPath&#125;/LogoutServlet"&gt;退出&lt;/a&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p> <strong>④ LogoutServlet</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/LogoutServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LogoutServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">// 获取当前session，自杀</span></span><br><span class="line">        request.getSession().invalidate();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="七、装饰器模式"><a href="#七、装饰器模式" class="headerlink" title="七、装饰器模式"></a>七、装饰器模式</h2><p><strong>使用装饰器模式的要求：</strong></p><ol><li>装饰类和被装饰类，需要实现同一个接口（或者继承同一个类）</li><li>装饰类需要有被装饰类的，对象引用</li><li>装饰类需要重写增强的方法，完成具体的功能</li><li>装饰类对不需要增强的方法，调用原有的功能</li></ol><p>装饰器图解：</p><p><img data-src="/img/%E8%A3%85%E9%A5%B0%E5%99%A8%E6%A8%A1%E5%BC%8F.png" alt="装饰器模式"></p><p>代码实现：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestDecorator</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 多态（面向接口）</span></span><br><span class="line">        Phone phone = <span class="keyword">new</span> Lvjing(<span class="keyword">new</span> Meiyan(<span class="keyword">new</span> Huawei()));</span><br><span class="line">        phone.take();</span><br><span class="line">        System.out.println(<span class="string">"-------------"</span>);</span><br><span class="line">        phone.call();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Phone接口</span></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Phone</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 拍照</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">take</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 打电话</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">call</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 华为厂商实现类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Huawei</span> <span class="keyword">implements</span> <span class="title">Phone</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">take</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"3200W高清摄像"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">call</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"5G视频通话"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 抽取PhoneWrapper包装类</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PhoneWrapper</span> <span class="keyword">implements</span> <span class="title">Phone</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Phone phone;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">PhoneWrapper</span><span class="params">(Phone phone)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.phone = phone;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">take</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.phone.take();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">call</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.phone.take();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 美颜增强</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Meiyan</span> <span class="keyword">extends</span> <span class="title">PhoneWrapper</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Meiyan</span><span class="params">(Phone phone)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(phone);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 对拍照增强</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">take</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.take();</span><br><span class="line">        System.out.println(<span class="string">"磨皮、瘦脸、大眼、美白"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 滤镜增强</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Lvjing</span> <span class="keyword">implements</span> <span class="title">Phone</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Phone phone;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Lvjing</span><span class="params">(Phone phone)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.phone = phone;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">take</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.phone.take();</span><br><span class="line">        System.out.println(<span class="string">"对背景虚化..."</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">call</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.phone.call();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、Filter概述&quot;&gt;&lt;a href=&quot;#一、Filter概述&quot; class=&quot;headerlink&quot; title=&quot;一、Filter概述&quot;&gt;&lt;/a&gt;一、Filter概述&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;生活中的过滤器&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;净水器、空气净化器、地铁安检、山大王&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;web中的过滤器&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;当用户访问服务器资源时，过滤器将请求拦截下来，完成一些通用的操作&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;应用场景&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如：登录验证、统一编码处理、敏感字符过滤&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="JavaWeb" scheme="http://sunmoon.com/categories/JavaWeb/"/>
    
    
      <category term="学习" scheme="http://sunmoon.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="设计模式" scheme="http://sunmoon.com/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
      <category term="Listener" scheme="http://sunmoon.com/tags/Listener/"/>
    
      <category term="Filter" scheme="http://sunmoon.com/tags/Filter/"/>
    
      <category term="装饰器模式" scheme="http://sunmoon.com/tags/%E8%A3%85%E9%A5%B0%E5%99%A8%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>JSP&amp;EL&amp;JSTL&amp;MVC思想</title>
    <link href="http://sunmoon.com/2020/08/27/JSP-EL-JSTL-MVC%E6%80%9D%E6%83%B3/"/>
    <id>http://sunmoon.com/2020/08/27/JSP-EL-JSTL-MVC%E6%80%9D%E6%83%B3/</id>
    <published>2020-08-27T13:23:40.000Z</published>
    <updated>2020-08-27T13:29:19.113Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、JSP"><a href="#一、JSP" class="headerlink" title="一、JSP"></a>一、JSP</h2><h3 id="1-1-概述"><a href="#1-1-概述" class="headerlink" title="1.1 概述"></a>1.1 概述</h3><p>在很多动态网页中，绝大部分内容都是固定不变的，只有局部内容需要动态产生和改变。 为了弥补 Servlet的缺陷，SUN公司在Servlet的基础上推出了JSP（Java Server Pages）。</p><p>JSP是简化Servlet编写的一种技术，它将Java代码和HTML语句混合在同一个文件中编写，页面动态资源 使用java代码，页面静态资源使用html标签。 </p><p><strong>简单来说：可以在html标签中嵌套java代码</strong> </p><p><strong>作用：简化书写，展示动态页面</strong></p><a id="more"></a><h3 id="1-2-快速入门"><a href="#1-2-快速入门" class="headerlink" title="1.2 快速入门"></a>1.2 快速入门</h3><p><strong>需求</strong></p><ul><li>在JSP页面，动态展示当前时间。</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">"java.time.LocalDateTime"</span> %&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h3&gt;</span><br><span class="line">&lt;%</span><br><span class="line">LocalDateTime now = LocalDateTime.now();</span><br><span class="line">out.write(<span class="string">"当前时间："</span> + now);</span><br><span class="line">%&gt;</span><br><span class="line">&lt;/h3&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h3 id="1-3-工作原理"><a href="#1-3-工作原理" class="headerlink" title="1.3 工作原理"></a>1.3 工作原理</h3><blockquote><p>JSP的本质就是一个Servlet…</p></blockquote><p><img data-src="/img/JSP%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86.png" alt="JSP工作原理"></p><h3 id="1-4-脚本和注释"><a href="#1-4-脚本和注释" class="headerlink" title="1.4 脚本和注释"></a>1.4 脚本和注释</h3><h4 id="1-4-1-脚本"><a href="#1-4-1-脚本" class="headerlink" title="1.4.1  脚本"></a>1.4.1  脚本</h4><p><strong>JSP通过脚本方式来定义Java代码</strong></p><p>三种脚本：</p><ul><li><code>&lt;% 代码 %&gt;</code>：脚本片段，生成在java文件中service方法中,每次请求的时候都会执行</li><li><code>&lt;%! 代码 %&gt;</code>：声明片段，生成在java文件中的成员位置</li><li><code>&lt;%= 代码%&gt;</code>：输出脚本片段,相当于 out.print(“代码”)方法，输出到JSP页面</li></ul><h4 id="1-4-2-注释"><a href="#1-4-2-注释" class="headerlink" title="1.4.2 注释"></a>1.4.2 注释</h4><ul><li><p>html注释</p><ul><li><code>&lt;!-- 注释静态资源 --&gt;</code></li></ul></li><li><p>JSP注释（JSP页面中都可以使用）</p><ul><li><code>&lt;%-- 注释所有 --%&gt;</code></li></ul></li><li><p>java注释（JSP脚本内使用）</p><ul><li><code>// 单行注释</code></li><li><code>/* 多行注释 */</code></li><li><code>/**文档注释 */</code></li></ul></li></ul><h5 id="注释的作用范围"><a href="#注释的作用范围" class="headerlink" title="注释的作用范围"></a>注释的作用范围</h5><table><thead><tr><th>注释</th><th>JSP源码</th><th>Java源码</th><th>Html源码</th></tr></thead><tbody><tr><td>HTML</td><td>可见</td><td>可见</td><td>可见</td></tr><tr><td>Java</td><td>可见</td><td>可见</td><td>不可见</td></tr><tr><td>JSP</td><td>可见</td><td>不可见</td><td>不可见</td></tr></tbody></table><blockquote><p>小贴士</p><ul><li>注释是给开发者看的，可见的范围越小，安全级别就越高…</li></ul></blockquote><h3 id="1-5-指令"><a href="#1-5-指令" class="headerlink" title="1.5 指令"></a>1.5 指令</h3><p><strong>指令的作用：</strong></p><ul><li>用于配置JSP页面，导入资源文件</li></ul><p><strong>格式：</strong></p><ul><li><code>&lt;%@ 指令名称 属性名1=&quot;属性值1&quot; 属性名2=&quot;属性值2&quot; ...%&gt;</code></li></ul><p><strong>JSP中的三大指令：</strong></p><ul><li><code>page</code>：配置JSP页面</li><li><code>include</code>：页面包含(静态包含)</li><li><code>taglib</code>：导入资源文件</li></ul><h4 id="1-5-1-page指令"><a href="#1-5-1-page指令" class="headerlink" title="1.5.1 page指令"></a>1.5.1 page指令</h4><p>例如：<code>&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;</code></p><p>page中的常用属性：</p><ul><li><code>contentType</code>：就相当于response.setContentType();<ul><li>用于设置响应体的类型和MIME类型</li></ul></li><li><code>language</code>：指定jsp模板的编程语言<ul><li>属性值非常鸡肋，就是java</li></ul></li><li><code>import</code>：导包，可以单独使用此属性<ul><li>例如：&lt;%@ page import=”java.util.*” %&gt;</li></ul></li><li><code>errorPage</code>：当前页面报错后，可以跳转到指定页面<ul><li>例如：errorPage=”500.jsp”</li></ul></li><li><code>isErrorPage</code>：当前页面升级为错误处理页面，可以获取exception异常捕获信息<ul><li>例如：isErrorPage=”true” (默认是关闭的…值=false)</li></ul></li></ul><p>代码演示：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">"java.util.*"</span> %&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> errorPage=<span class="string">"500.jsp"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">    &lt;head&gt;</span><br><span class="line">    &lt;title&gt;demo2&lt;/title&gt;</span><br><span class="line">    &lt;/head&gt;</span><br><span class="line">    &lt;body&gt;</span><br><span class="line">        &lt;h3&gt;page指令&lt;/h3&gt;</span><br><span class="line">        &lt;%</span><br><span class="line">            Date date = <span class="keyword">new</span> Date();</span><br><span class="line">            ArrayList&lt;Object&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">            <span class="keyword">int</span> a = <span class="number">1</span> / <span class="number">0</span>;</span><br><span class="line">        %&gt;</span><br><span class="line">    &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p><strong>发生错误跳转到500.jsp</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> isErrorPage=<span class="string">"true"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;500&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h3&gt;服务器繁忙，请稍后重试&lt;/h3&gt;</span><br><span class="line">    &lt;%</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">            try&#123;</span></span><br><span class="line"><span class="comment">            &#125;catch(Execption e)&#123;</span></span><br><span class="line"><span class="comment">            &#125;</span></span><br><span class="line"><span class="comment">        * */</span></span><br><span class="line">        System.out.println(exception.getMessage());</span><br><span class="line">    %&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><blockquote><p>小贴士：</p><ul><li>当指定当前jsp页面为错误页面时，就会产生一个jsp的内置对象，exception异常对象…</li></ul></blockquote><h4 id="1-5-2-include指令"><a href="#1-5-2-include指令" class="headerlink" title="1.5.2 include指令"></a>1.5.2 include指令</h4><p>include指令表示包含(静态包含)。</p><p>语法：<code>&lt;%@include file=&quot;被包含的页面&quot; %&gt;</code></p><p><img data-src="/img/imclude%E6%8C%87%E4%BB%A4.png" alt="imclude指令"></p><p>代码示例：</p><ul><li><strong>herder.jsp</strong></li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;header&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;h3&gt;头部&lt;/h3&gt;</span><br><span class="line">    &lt;div&gt;logo&lt;/div&gt;</span><br><span class="line">    &lt;div&gt;banner&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><ul><li>主页面</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;demo3&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;%<span class="meta">@include</span> file=<span class="string">"header.jsp"</span>%&gt;</span><br><span class="line">    &lt;h3&gt;include指令，页面（静态）包含&lt;/h3&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h4 id="1-5-3-taglib指令"><a href="#1-5-3-taglib指令" class="headerlink" title="1.5.3 taglib指令"></a>1.5.3 taglib指令</h4><p>用于导入apache提供l标签库</p><p>语法：导入jstl标签库</p><ul><li><code>&lt;%@ taglib prefix=&quot;c&quot; uri=&quot;http://java.sun.com/jsp/jstl/core&quot; %&gt;</code></li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">![动态包含和静态包含的区别](C:\Users\Sunmoon\Desktop\就业班\笔记\JavaWeb\img\动态包含和静态包含的区别.png)&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;%@ taglib prefix=<span class="string">"c"</span> uri=<span class="string">"http://java.sun.com/jsp/jstl/core"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;demo4&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;c:if test="false"&gt;内容&lt;/c:if&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h4 id="1-5-4-指令小结"><a href="#1-5-4-指令小结" class="headerlink" title="1.5.4 指令小结"></a>1.5.4 指令小结</h4><ul><li><p>page指令</p><ul><li>contentType：指定响应体类型和MIME类型 </li><li>language：仅支持java语言</li><li>import：导入jar包</li></ul></li><li><p>include指令</p><ul><li>用于指定静态包含页面资源</li></ul></li><li><p>taglib指令</p><ul><li>用于导入标签库</li></ul></li></ul><h3 id="1-6-内置对象"><a href="#1-6-内置对象" class="headerlink" title="1.6 内置对象"></a>1.6 内置对象</h3><p>作用：在JSP页面中不需要获取和创建， 可以直接使用的对象。</p><p>JSP中一共有9个内置对象。</p><table><thead><tr><th>变量名</th><th>真实类型</th><th>作用</th></tr></thead><tbody><tr><td>pageContext</td><td>PageContext</td><td>当前页面中共享数据</td></tr><tr><td>request</td><td>HttpServletRequest</td><td>一次请求中共享数据</td></tr><tr><td>session</td><td>HttpSession</td><td>一次会话中共享数据</td></tr><tr><td>application</td><td>ServletContext</td><td>整个web应用共享数据</td></tr><tr><td>response</td><td>HttpServletResponse</td><td>响应对象</td></tr><tr><td>page</td><td>Object</td><td>当前页面(servlet)对象</td></tr><tr><td>out</td><td>JSPWriter</td><td>输出对象</td></tr><tr><td>config</td><td>ServletConfig</td><td>servlet配置对象</td></tr><tr><td>exception</td><td>Throwable</td><td>异常对象【默认关闭】</td></tr></tbody></table><p>常用：</p><ul><li>pageContext<ul><li>当前页面共享数据，域对象</li><li>可以获取其他八个内置对象</li></ul></li><li>request<ul><li>接收请求</li><li>一次请求中，共享数据</li></ul></li><li>response<ul><li>响应结果</li></ul></li><li>out<ul><li>jsp页面特有的字符输出对象</li></ul></li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;demo5&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h3&gt;jsp内置对象&lt;/h3&gt;</span><br><span class="line">    &lt;%</span><br><span class="line">        <span class="comment">// pageContext域对象</span></span><br><span class="line">        pageContext.setAttribute(<span class="string">"username"</span>, <span class="string">"lucy"</span>);</span><br><span class="line">        <span class="comment">// pageContext获取其他八个内置对象</span></span><br><span class="line">    %&gt;</span><br><span class="line">    &lt;%=pageContext.getAttribute(<span class="string">"username"</span>)%&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h3 id="1-7-动作标签"><a href="#1-7-动作标签" class="headerlink" title="1.7 动作标签"></a>1.7 动作标签</h3><p>作用：简化JSP页面java代码</p><p>常用：</p><ul><li><code>&lt;jsp:include&gt;</code>：页面包含（动态）<ul><li>request.getRequestDispatcher(“footer”).include(request, response);</li></ul></li><li><code>&lt;jsp:forward&gt;</code>：请求转发（页面跳转）<ul><li>request.getRequestDispatcher(“b.jsp”).forward(request, response);</li></ul></li><li><code>&lt;jsp:param&gt;</code>：参数传递</li></ul><h4 id="1-7-1-动态包含"><a href="#1-7-1-动态包含" class="headerlink" title="1.7.1 动态包含"></a>1.7.1 动态包含</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;demo6&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;h3&gt;jsp的include标签，页面（动态）包含&lt;/h3&gt;</span><br><span class="line">    &lt;jsp:include page="footer.jsp"&gt;&lt;/jsp:include&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;footer&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;h3&gt;尾部&lt;/h3&gt;</span><br><span class="line">    &lt;div&gt;友情链接&lt;/div&gt;</span><br><span class="line">    &lt;div&gt;公司版权&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h5 id="动态包含和静态包含的区别"><a href="#动态包含和静态包含的区别" class="headerlink" title="动态包含和静态包含的区别"></a>动态包含和静态包含的区别</h5><p><img data-src="/img/%E5%8A%A8%E6%80%81%E5%8C%85%E5%90%AB%E5%92%8C%E9%9D%99%E6%80%81%E5%8C%85%E5%90%AB%E7%9A%84%E5%8C%BA%E5%88%AB.png" alt="动态包含和静态包含的区别"></p><blockquote><p>特点：在开发中jsp页面使用静态包含，性能好</p><p>注意：使用静态包含，多个jsp页面变量不能重名…</p></blockquote><h4 id="1-7-2-请求转发"><a href="#1-7-2-请求转发" class="headerlink" title="1.7.2 请求转发"></a>1.7.2 请求转发</h4><p><strong>a.jsp</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;a&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;%</span><br><span class="line">    request.setCharacterEncoding(<span class="string">"utf-8"</span>);</span><br><span class="line">        System.out.println(<span class="string">"a.jsp执行了..."</span>);</span><br><span class="line">    <span class="comment">// 请求转发</span></span><br><span class="line">    <span class="comment">// request.getRequestDispatcher("b.jsp").forward(request, response);</span></span><br><span class="line">    %&gt;</span><br><span class="line">    &lt;jsp:forward page=<span class="string">"b.jsp"</span>&gt;</span><br><span class="line">        &lt;jsp:param name="name" value="呵呵"&gt;&lt;/jsp:param&gt;</span><br><span class="line">        &lt;jsp:param name="age" value="18"&gt;&lt;/jsp:param&gt;</span><br><span class="line">    &lt;/jsp:forward&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p><strong>b.jsp</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;b&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;%</span><br><span class="line">    System.out.println(<span class="string">"b.jsp执行了..."</span>);</span><br><span class="line">    System.out.println(request.getParameter(<span class="string">"name"</span>));</span><br><span class="line">    System.out.println(request.getParameter(<span class="string">"age"</span>));</span><br><span class="line">    %&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><blockquote><p>注意：<code>jsp:forward</code>内 不允许出现注释，而且传递的<code>jsp:param</code>编码应该在，a.jsp 处理</p></blockquote><h2 id="二、MVC模式"><a href="#二、MVC模式" class="headerlink" title="二、MVC模式"></a>二、MVC模式</h2><h3 id="2-1-JSP发展史"><a href="#2-1-JSP发展史" class="headerlink" title="2.1 JSP发展史"></a>2.1 JSP发展史</h3><ul><li>早期只有servlet，只能使用response输出html标签，非常麻烦。</li></ul><p><img data-src="/img/jsp%E5%8F%91%E5%B1%95%E5%8F%B21.png" alt="jsp发展史1"></p><ul><li>后来有了JSP，简化了servlet开发；如果过度使用JSP，在JSP页面中写了大量的java代码和html标签，造成难于维护，难于分工协作的场景。</li></ul><p><img data-src="/img/jsp%E5%8F%91%E5%B1%95%E5%8F%B22.png" alt="jsp发展史2"></p><ul><li>再后来为了弥补过度使用jsp的问题，我们使用servlet+jsp这套组合拳，利于分工协作。</li></ul><p><img data-src="/img/jsp%E5%8F%91%E5%B1%95%E5%8F%B23.png" alt="jsp发展史3"></p><h3 id="2-2-MVC介绍"><a href="#2-2-MVC介绍" class="headerlink" title="2.2 MVC介绍"></a>2.2 MVC介绍</h3><p><strong>MVC设计模式： Model-View-Controller简写。</strong></p><ul><li><p>MVC是软件工程中的一种软件架构模式，它是一种分离业务逻辑与显示界面的设计方法。</p><ul><li>M：model（模型）<ul><li>JavaBean（普通java类）<ul><li>处理业务逻辑</li><li>封装实体</li></ul></li></ul></li><li>V：view（视图）<ul><li>Jsp：展示数据（动态资源）</li></ul></li><li>C：controller（控制器）<ul><li>Servlet<ul><li>接收请求</li><li>调用模型</li><li>转发视图</li></ul></li></ul></li></ul></li></ul><p><strong>优缺点：</strong></p><ul><li>优点：降低耦合性，方便维护和拓展，利于分工协作</li><li>缺点：使得项目架构变得复杂，对开发人员要求高</li></ul><p><img data-src="/img/MVC.png" alt="MVC"></p><h2 id="三、EL表达式"><a href="#三、EL表达式" class="headerlink" title="三、EL表达式"></a>三、EL表达式</h2><h3 id="3-1-概述"><a href="#3-1-概述" class="headerlink" title="3.1 概述"></a>3.1 概述</h3><p>表达式语言（Expression Language）</p><p><strong>作用</strong>：主要用来代替jsp中脚本的功能，简化对java代码的操作。 </p><p><strong>语法</strong>：${表达式}</p><h3 id="3-2-使用"><a href="#3-2-使用" class="headerlink" title="3.2 使用"></a>3.2 使用</h3><h4 id="3-2-1-获取值"><a href="#3-2-1-获取值" class="headerlink" title="3.2.1 获取值"></a>3.2.1 获取值</h4><blockquote><p>EL表达式：只能从域对象（4个域）中获取数据</p></blockquote><p><strong>EL表达式语法：</strong></p><ul><li><p>标准语法</p><ul><li><code>${pageScope.键名}</code> ：从page域中获取指定键名对应的值</li><li><code>${requestScope.键名}</code>：从request域中获取指定键名对应的值</li><li><code>${sessionScope.键名}</code>：从session域中获取指定键名对应的值</li><li><code>${applicationScope.键名}</code>：从ServletContext域中获取指定键名对应的值</li></ul></li><li><p>简化语法</p><ul><li><code>${键名}</code></li></ul></li></ul><blockquote><p>小贴士：</p><ul><li><p>使用EL表达式的简化语法，将从最小的域中开始匹配键名，匹配成功后直接返回数据</p></li><li><p>注意：使用这种方式，尽量避免四大域的键名重复，否则匹配到的将是最小域中的值…</p></li></ul></blockquote><p>代码演示：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;demo1&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1&gt;EL表达式只能从域对象中获取数据...&lt;/h1&gt;</span><br><span class="line">&lt;%</span><br><span class="line">    <span class="comment">// 模拟servlet，向四个域存值</span></span><br><span class="line">    pageContext.setAttribute(<span class="string">"username"</span>, <span class="string">"苍老师"</span>); <span class="comment">// 仅jsp中存在...</span></span><br><span class="line">    pageContext.setAttribute(<span class="string">"age"</span>, <span class="number">22</span>);</span><br><span class="line">    request.setAttribute(<span class="string">"age"</span>, <span class="number">18</span>);</span><br><span class="line">    session.setAttribute(<span class="string">"sex"</span>, <span class="string">"女"</span>);</span><br><span class="line">    application.setAttribute(<span class="string">"address"</span>, <span class="string">"日本"</span>);</span><br><span class="line">%&gt;</span><br><span class="line">    &lt;h3&gt;el标准语法&lt;/h3&gt;</span><br><span class="line">    $&#123;pageScope.username&#125; &lt;br&gt; &lt;%--EL底层进行<span class="keyword">null</span>值处理..--%&gt;</span><br><span class="line">    $&#123;requestScope.age&#125; &lt;br&gt;</span><br><span class="line">    $&#123;sessionScope.sex&#125; &lt;br&gt;</span><br><span class="line">    $&#123;applicationScope.address&#125; &lt;br&gt;</span><br><span class="line"></span><br><span class="line">    &lt;h3&gt;el简单语法&lt;/h3&gt;</span><br><span class="line">    $&#123;username&#125; &lt;br&gt;</span><br><span class="line">    $&#123;age&#125;&lt;br&gt;</span><br><span class="line">    $&#123;sex&#125;&lt;br&gt;</span><br><span class="line">    $&#123;address&#125; &lt;br&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h4 id="3-2-2-执行运算"><a href="#3-2-2-执行运算" class="headerlink" title="3.2.2 执行运算"></a>3.2.2 执行运算</h4><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">* </span>算数运算符</span><br><span class="line"><span class="code">语法： + - * /(div) %(mod)</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">* </span>比较运算符</span><br><span class="line"><span class="code">语法：&gt; &lt; &gt;= &lt;= ==(eq) !=(ne)</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">* </span>逻辑运算符</span><br><span class="line"><span class="code">语法：&amp;&amp;(and) ||(or) !(not)</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">* </span>三元运算符</span><br><span class="line"><span class="code">语法：$&#123;条件表达式？为真:为假&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">* </span>空运算符</span><br><span class="line"> 语法：$&#123;not empty 对象&#125;</span><br><span class="line"> 功能：</span><br><span class="line"> 可以判断字符串和对象是否为空</span><br><span class="line"> 可以判断一个集合的长度是否为0</span><br></pre></td></tr></table></figure><p>空运算符演示：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">"com.itheima.domain.User"</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">"java.util.List"</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">"java.util.ArrayList"</span> %&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;demo3&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h3&gt;空运算符&lt;/h3&gt;</span><br><span class="line"></span><br><span class="line">&lt;%</span><br><span class="line">    Integer a = <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">    Integer b = <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line">    request.setAttribute(<span class="string">"a"</span>, a);</span><br><span class="line">    request.setAttribute(<span class="string">"b"</span>, b);</span><br><span class="line"></span><br><span class="line">    User user = <span class="keyword">new</span> User();</span><br><span class="line">    request.setAttribute(<span class="string">"user"</span>, user);</span><br><span class="line"></span><br><span class="line">    List list = <span class="keyword">new</span> ArrayList();</span><br><span class="line">    list.add(<span class="string">"哈哈"</span>);</span><br><span class="line">    request.setAttribute(<span class="string">"list"</span>, list);</span><br><span class="line"></span><br><span class="line">%&gt;</span><br><span class="line"></span><br><span class="line">    $&#123;a&gt;b?<span class="string">'哈哈a大'</span>:<span class="string">'呵呵b大'</span>&#125;</span><br><span class="line"></span><br><span class="line">    &lt;h3&gt;非空判断&lt;/h3&gt;</span><br><span class="line">    $&#123;not empty user&#125; &lt;br&gt; &lt;%-- <span class="keyword">if</span>(user != <span class="keyword">null</span>)&#123;xxx&#125; --%&gt;</span><br><span class="line">    $&#123;not empty list&#125; &lt;br&gt; &lt;%-- <span class="keyword">if</span>(list !=<span class="keyword">null</span> &amp;&amp; list.size() &gt; <span class="number">0</span> )&#123;xxx&#125; --%&gt;</span><br><span class="line"></span><br><span class="line">    &lt;h3&gt;空值判断&lt;/h3&gt;</span><br><span class="line">    $&#123;empty user&#125; &lt;br&gt;&lt;%-- <span class="keyword">if</span>(user == <span class="keyword">null</span>)&#123;xxx&#125; --%&gt;</span><br><span class="line">    $&#123;empty list&#125; &lt;br&gt;&lt;%-- <span class="keyword">if</span>(list ==<span class="keyword">null</span> || list.size() &lt; <span class="number">1</span> )&#123;xxx&#125; --%&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h4 id="3-2-3-隐式对象"><a href="#3-2-3-隐式对象" class="headerlink" title="3.2.3 隐式对象"></a>3.2.3 隐式对象</h4><p>el表达式中有11个隐式对象</p><p>常用</p><ul><li>pageContext</li><li>他也是jsp的九大内置对象之一，可以获得其他八个内置对象</li></ul><blockquote><p>使用pageContext动态的获取项目的网络地址</p><ul><li>${pageContext.request.contextPath}</li></ul></blockquote><h4 id="3-2-4-EL扩展"><a href="#3-2-4-EL扩展" class="headerlink" title="3.2.4 EL扩展"></a>3.2.4 EL扩展</h4><p>JSP在2.5之后，默认支持el表达式</p><ul><li>如果想要在2.5版本之后忽略EL表达式<ul><li>忽略当前jsp页面中所有的el表达式<ul><li>设置jsp的page指令中：<code>isELIgnored=&quot;true&quot;</code> (属性)</li></ul></li><li>忽略单个el表达式<ul><li><code>\${表达式}</code></li></ul></li></ul></li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> isELIgnored=<span class="string">"false"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;demo4&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">\$&#123;pageContext.request.contextPath&#125; &lt;br&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">// 我们在es6中讲过模板字符串</span></span><br><span class="line">    let a = <span class="number">10</span>;</span><br><span class="line">    let str = `哈哈，您购买了\$&#123;a&#125;件商品.....`</span><br><span class="line">    document.write(str)</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h2 id="四、JSTL"><a href="#四、JSTL" class="headerlink" title="四、JSTL"></a>四、JSTL</h2><h3 id="4-1-概述"><a href="#4-1-概述" class="headerlink" title="4.1 概述"></a>4.1 概述</h3><p>JSP 标准标签库（Jsp Standard Tag Library），是由Apache组织提供的开源的jsp标签库</p><p>作用：替换和简化jsp页面中java代码的编写</p><p>JSTL标准标签库有5个子库，但随着发展，目前常使用的是它的核心库</p><table><thead><tr><th><strong>标签库</strong></th><th><strong>标签库的URI</strong></th><th><strong>前缀</strong></th></tr></thead><tbody><tr><td><strong>Core</strong></td><td><a href="http://java.sun.com/jsp/jstl/core" target="_blank" rel="noopener">http://java.sun.com/jsp/jstl/core</a></td><td>c</td></tr><tr><td>国际化(过时)</td><td><a href="http://java.sun.com/jsp/jstl/fmt" target="_blank" rel="noopener">http://java.sun.com/jsp/jstl/fmt</a></td><td>fmt</td></tr><tr><td>SQL(过时)</td><td><a href="http://java.sun.com/jsp/jstl/sql" target="_blank" rel="noopener">http://java.sun.com/jsp/jstl/sql</a></td><td>sql</td></tr><tr><td>XML(过时)</td><td><a href="http://java.sun.com/jsp/jstl/xml" target="_blank" rel="noopener">http://java.sun.com/jsp/jstl/xml</a></td><td>x</td></tr><tr><td>Functions(几乎不用)</td><td><a href="http://java.sun.com/jsp/jstl/functions" target="_blank" rel="noopener">http://java.sun.com/jsp/jstl/functions</a></td><td>fn</td></tr></tbody></table><h3 id="4-2-Core标签的使用"><a href="#4-2-Core标签的使用" class="headerlink" title="4.2 Core标签的使用"></a>4.2 Core标签的使用</h3><blockquote><p>JSTL属于第三方jsr包,在使用之前需要先导入jsr包</p></blockquote><p><strong>① 导入jar包</strong></p><p><strong>② 在jsp页面引入JSTL标签库</strong></p><ul><li><code>&lt;%@ taglib prefix=&quot;c&quot; uri=&quot;http://java.sun.com/jsp/jstl/core&quot; %&gt;</code></li></ul><blockquote><p>在page指令下引入</p></blockquote><p><strong>③ 使用</strong></p><h4 id="4-2-1-常用标签"><a href="#4-2-1-常用标签" class="headerlink" title="4.2.1 常用标签"></a>4.2.1 常用标签</h4><h5 id="①-c-if-标签"><a href="#①-c-if-标签" class="headerlink" title="① c:if 标签"></a>① c:if 标签</h5><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">* </span>相当于java中: if(表达式内容)&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="bullet">* </span>语法：</span><br><span class="line"><span class="code">&lt;c:if test="表达式内容"&gt;&lt;/c:if&gt;</span></span><br><span class="line"><span class="code">jstl标签库通常结合el一起使用，完成动态判断功能</span></span><br><span class="line"><span class="code">注意：c:if标签没有else功能，想要实现取反的效果，需要重写c:if标签，条件进行取反...</span></span><br></pre></td></tr></table></figure><p>使用演示：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">"com.itheima.domain.User"</span> %&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;%@ taglib prefix=<span class="string">"c"</span> uri=<span class="string">"http://java.sun.com/jsp/jstl/core"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;demo1&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h3&gt;jstl的if标签&lt;/h3&gt;</span><br><span class="line"></span><br><span class="line">&lt;%</span><br><span class="line">    User user = <span class="keyword">new</span> User();</span><br><span class="line">    user.setUsername(<span class="string">"lucy"</span>);</span><br><span class="line">    session.setAttribute(<span class="string">"user"</span>, <span class="keyword">null</span>);</span><br><span class="line">%&gt;</span><br><span class="line"></span><br><span class="line">&lt;c:if test="$&#123;not empty user&#125;"&gt;欢迎您：$&#123;user.username&#125;&lt;/c:if&gt;</span><br><span class="line">&lt;c:if test="$&#123;empty user&#125;"&gt;登录 |注册...&lt;/c:if&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h5 id="②-c-forEach-标签"><a href="#②-c-forEach-标签" class="headerlink" title="② c:forEach 标签"></a>② c:forEach 标签</h5><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">* </span>普通for</span><br><span class="line"><span class="code">java语法：</span></span><br><span class="line"><span class="code">for(int i=1;i&lt;=5;i++)&#123;</span></span><br><span class="line"><span class="code">i</span></span><br><span class="line"><span class="code">&#125;</span></span><br><span class="line"><span class="code">jstl语法：</span></span><br><span class="line"><span class="code">&lt;c:forEach begin="1" end="5" step="1" var="i"&gt;</span></span><br><span class="line"><span class="code">$&#123;i&#125;</span></span><br><span class="line"><span class="code">&lt;/c:forEach&gt;</span></span><br><span class="line"><span class="code">begin：起始值</span></span><br><span class="line"><span class="code">end：结束值</span></span><br><span class="line"><span class="code">step：步长</span></span><br><span class="line"><span class="code">var：当前遍历的临时变量名</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="bullet">* </span>增强for</span><br><span class="line"><span class="code">java语法：</span></span><br><span class="line"><span class="code">for(User user : list)&#123;</span></span><br><span class="line"><span class="code">user</span></span><br><span class="line"><span class="code">&#125;</span></span><br><span class="line"><span class="code">jstl语法：</span></span><br><span class="line"><span class="code">&lt;c:forEach items="$&#123;list&#125;" var="user" varStatus="vs"&gt;</span></span><br><span class="line"><span class="code">$&#123;user&#125;</span></span><br><span class="line"><span class="code">&lt;/c:forEach&gt;</span></span><br><span class="line"><span class="code">items：需要遍历的集合</span></span><br><span class="line"><span class="code">var：当前遍历的临时变量名</span></span><br><span class="line"><span class="code">varStatus：当前遍历元素的状态</span></span><br><span class="line"><span class="code">index：索引</span></span><br><span class="line"><span class="code">count：计数器</span></span><br></pre></td></tr></table></figure><p>使用演示</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">"java.util.List"</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">"com.itheima.domain.User"</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">"java.util.ArrayList"</span> %&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;%<span class="meta">@taglib</span> prefix=<span class="string">"c"</span> uri=<span class="string">"http://java.sun.com/jsp/jstl/core"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;demo2&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h3&gt;普通for循环&lt;/h3&gt;</span><br><span class="line">&lt;%--</span><br><span class="line">    jstl就使用pageContext这个域对象了...</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;c:forEach begin=<span class="string">"1"</span> end=<span class="string">"5"</span> step=<span class="string">"1"</span> <span class="keyword">var</span>=<span class="string">"i"</span>&gt;</span><br><span class="line">    &lt;div&gt;$&#123;i&#125;&lt;/div&gt;</span><br><span class="line">&lt;/c:forEach&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;h3&gt;增强for循环&lt;/h3&gt;</span><br><span class="line">&lt;%</span><br><span class="line">    List&lt;User&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    list.add(<span class="keyword">new</span> User(<span class="string">"王昭君"</span>, <span class="number">18</span>, <span class="string">"峡谷"</span>));</span><br><span class="line">    list.add(<span class="keyword">new</span> User(<span class="string">"电耗子"</span>, <span class="number">22</span>, <span class="string">"祖安"</span>));</span><br><span class="line">    list.add(<span class="keyword">new</span> User(<span class="string">"李白"</span>, <span class="number">39</span>, <span class="string">"大唐"</span>));</span><br><span class="line"></span><br><span class="line">    request.setAttribute(<span class="string">"list"</span>, list);</span><br><span class="line">%&gt;</span><br><span class="line"></span><br><span class="line">&lt;c:forEach items=<span class="string">"$&#123;list&#125;"</span> <span class="keyword">var</span>=<span class="string">"user"</span> varStatus=<span class="string">"vs"</span>&gt;</span><br><span class="line">    &lt;div&gt;$&#123;user.username&#125; | 索引：$&#123;vs.index&#125; | 计数器： $&#123;vs.count&#125;&lt;/div&gt;</span><br><span class="line">&lt;/c:forEach&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><blockquote><p>切记，在jsp当中使用jstl标签，务必先引入 core核心标签库</p></blockquote><h2 id="五、三层架构"><a href="#五、三层架构" class="headerlink" title="五、三层架构"></a>五、三层架构</h2><h3 id="5-1-概述"><a href="#5-1-概述" class="headerlink" title="5.1 概述"></a>5.1 概述</h3><p>通常意义上的三层架构就是将整个业务应用划分为：表示层、业务逻辑层、数据访问层。</p><p>区分层次的目的：为了<strong>高内聚低耦合</strong>的思想</p><blockquote><p>表示层：又称为 web层，与浏览器（用户）进行数据交互的。</p><p>业务逻辑层：又称为service层，用于处理业务功能的。 </p><p>数据访问层：又称为dao层，与数据库进行数据交互的</p></blockquote><p><img data-src="/img/%E4%B8%89%E5%B1%82%E6%9E%B6%E6%9E%84.png" alt="三层架构"></p><p><strong>包命名规则：</strong></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">* </span>com.sun 公司域名倒写</span><br><span class="line"></span><br><span class="line"><span class="bullet">* </span>com.sun.dao 持久层</span><br><span class="line"></span><br><span class="line"><span class="bullet">* </span>com.sun.service 业务层</span><br><span class="line"></span><br><span class="line"><span class="bullet">* </span>ccom.sun.web 表示层</span><br><span class="line"></span><br><span class="line"><span class="bullet">* </span>com.sun.domain 实体（JavaBean）</span><br><span class="line"></span><br><span class="line"><span class="bullet">* </span>com.sun.util 工具包</span><br></pre></td></tr></table></figure><h2 id="六、用户信息列表展示"><a href="#六、用户信息列表展示" class="headerlink" title="六、用户信息列表展示"></a>六、用户信息列表展示</h2><p>使用三层架构开发代码，完成用户显示列表功能</p><h3 id="6-1-分析"><a href="#6-1-分析" class="headerlink" title="6.1 分析"></a>6.1 分析</h3><p><img data-src="/img/%E7%94%A8%E6%88%B7%E4%BF%A1%E6%81%AF%E5%88%97%E8%A1%A8%E6%A1%88%E4%BE%8B%E5%88%86%E6%9E%90.png" alt="用户信息列表案例分析"></p><h3 id="6-2-工程结构"><a href="#6-2-工程结构" class="headerlink" title="6.2 工程结构"></a>6.2 工程结构</h3><p><img data-src="/img/%E7%94%A8%E6%88%B7%E4%BF%A1%E6%81%AF%E5%88%97%E8%A1%A8%E6%A1%88%E4%BE%8B%E7%BB%93%E6%9E%84.png" alt="用户信息列表案例结构"></p><h3 id="6-3-代码实现"><a href="#6-3-代码实现" class="headerlink" title="6.3 代码实现"></a>6.3 代码实现</h3><h4 id="User实体类"><a href="#User实体类" class="headerlink" title="User实体类"></a>User实体类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> String id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String sex;</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    <span class="keyword">private</span> String address;</span><br><span class="line">    <span class="keyword">private</span> String qq;</span><br><span class="line">    <span class="keyword">private</span> String email;</span><br><span class="line">    <span class="comment">//构造方法、set、get方法略...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="index-js"><a href="#index-js" class="headerlink" title="index.js"></a>index.js</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">    &lt;head&gt;</span><br><span class="line">        &lt;title&gt;查询用户信息&lt;/title&gt;</span><br><span class="line">    &lt;/head&gt;</span><br><span class="line">    &lt;body&gt;</span><br><span class="line">        &lt;h1 style=<span class="string">"text-align: center;margin-top: 100px"</span> &gt;</span><br><span class="line">            &lt;a href="$&#123;pageContext.request.contextPath&#125;/FindAllServlet"&gt;查询用户列表&lt;/a&gt;</span><br><span class="line">        &lt;/h1&gt;</span><br><span class="line">    &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h4 id="FindAllServlet"><a href="#FindAllServlet" class="headerlink" title="FindAllServlet"></a>FindAllServlet</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/FindAllServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FindAllServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//接收参数</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//调用service查询</span></span><br><span class="line">        UserService userService = <span class="keyword">new</span> UserServiceImpl();</span><br><span class="line">        <span class="comment">//调用方法查询</span></span><br><span class="line">        List&lt;User&gt; userList = userService.findAll();</span><br><span class="line">        <span class="comment">// 存入request域中</span></span><br><span class="line">        request.setAttribute(<span class="string">"userList"</span>, userList);</span><br><span class="line">        <span class="comment">//转发到list.jsp</span></span><br><span class="line">        request.getRequestDispatcher(<span class="string">"/list.jsp"</span>).forward(request, response);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="UserService"><a href="#UserService" class="headerlink" title="UserService"></a>UserService</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询所有</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 用户list集合</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">List&lt;User&gt; <span class="title">findAll</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>UserServiceImpl</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> UserDao userDao = <span class="keyword">new</span> UserDaoImpl();</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findAll</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> userDao.findAll();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="UserDao"><a href="#UserDao" class="headerlink" title="UserDao"></a>UserDao</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询所有</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 用户列表</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">List&lt;User&gt; <span class="title">findAll</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>UserDaoImpl</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserDaoImpl</span> <span class="keyword">implements</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> List&lt;User&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        list.add(<span class="keyword">new</span> User(<span class="string">"1"</span>, <span class="string">"西施"</span>, <span class="string">"女"</span>, <span class="number">28</span>, <span class="string">"香港"</span>, <span class="string">"7766521"</span>, <span class="string">"7766521@qq.com"</span>));</span><br><span class="line">        list.add(<span class="keyword">new</span> User(<span class="string">"2"</span>, <span class="string">"甄姬"</span>, <span class="string">"女"</span>, <span class="number">12</span>, <span class="string">"天津"</span>, <span class="string">"7766541"</span>, <span class="string">"7766541@qq.com"</span>));</span><br><span class="line">        list.add(<span class="keyword">new</span> User(<span class="string">"3"</span>, <span class="string">"宋轶"</span>, <span class="string">"女"</span>, <span class="number">33</span>, <span class="string">"大连"</span>, <span class="string">"7726521"</span>, <span class="string">"7726521@qq.com"</span>));</span><br><span class="line">        list.add(<span class="keyword">new</span> User(<span class="string">"4"</span>, <span class="string">"蔡文姬"</span>, <span class="string">"女"</span>, <span class="number">19</span>, <span class="string">"釜山"</span>, <span class="string">"7736521"</span>, <span class="string">"7736521@qq.com"</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findAll</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="list-jsp"><a href="#list-jsp" class="headerlink" title="list.jsp"></a>list.jsp</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;%@ taglib prefix=<span class="string">"c"</span> uri=<span class="string">"http://java.sun.com/jsp/jstl/core"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;list&lt;/title&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        *&#123;</span><br><span class="line">            margin: <span class="number">0</span>;</span><br><span class="line">            padding: <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        table&#123;</span><br><span class="line">            margin: <span class="number">100</span>px auto;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        tr&#123;</span><br><span class="line">            height: <span class="number">50</span>px;</span><br><span class="line">            text-align: center;</span><br><span class="line">        &#125;</span><br><span class="line">        td&#123;</span><br><span class="line">            padding: <span class="number">20</span>px;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;%--$&#123;userList&#125;--%&gt;</span><br><span class="line">    &lt;table border=<span class="string">"1"</span> align=<span class="string">"center"</span> width=<span class="string">"600px"</span> cellspacing=<span class="string">"0"</span> cellpadding=<span class="string">"0"</span>&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;th colspan="7"&gt;&lt;h1&gt;用户信息列表&lt;/h1&gt;&lt;/th&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;th&gt;ID&lt;/th&gt;</span><br><span class="line">            &lt;th&gt;姓名&lt;/th&gt;</span><br><span class="line">            &lt;th&gt;性别&lt;/th&gt;</span><br><span class="line">            &lt;th&gt;年龄&lt;/th&gt;</span><br><span class="line">            &lt;th&gt;地址&lt;/th&gt;</span><br><span class="line">            &lt;th&gt;QQ&lt;/th&gt;</span><br><span class="line">            &lt;th&gt;Email&lt;/th&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">        &lt;c:forEach items=<span class="string">"$&#123;requestScope.userList&#125;"</span> <span class="keyword">var</span>=<span class="string">"user"</span>&gt;</span><br><span class="line">            &lt;tr&gt;</span><br><span class="line">                &lt;td&gt;$&#123;user.id&#125;&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;$&#123;user.name&#125;&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;$&#123;user.sex&#125;&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;$&#123;user.age&#125;&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;$&#123;user.address&#125;&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;$&#123;user.qq&#125;&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;$&#123;user.email&#125;&lt;/td&gt;</span><br><span class="line">            &lt;/tr&gt;</span><br><span class="line">        &lt;/c:forEach&gt;</span><br><span class="line">    &lt;/table&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、JSP&quot;&gt;&lt;a href=&quot;#一、JSP&quot; class=&quot;headerlink&quot; title=&quot;一、JSP&quot;&gt;&lt;/a&gt;一、JSP&lt;/h2&gt;&lt;h3 id=&quot;1-1-概述&quot;&gt;&lt;a href=&quot;#1-1-概述&quot; class=&quot;headerlink&quot; title=&quot;1.1 概述&quot;&gt;&lt;/a&gt;1.1 概述&lt;/h3&gt;&lt;p&gt;在很多动态网页中，绝大部分内容都是固定不变的，只有局部内容需要动态产生和改变。 为了弥补 Servlet的缺陷，SUN公司在Servlet的基础上推出了JSP（Java Server Pages）。&lt;/p&gt;
&lt;p&gt;JSP是简化Servlet编写的一种技术，它将Java代码和HTML语句混合在同一个文件中编写，页面动态资源 使用java代码，页面静态资源使用html标签。 &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;简单来说：可以在html标签中嵌套java代码&lt;/strong&gt; &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;作用：简化书写，展示动态页面&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="JavaWeb" scheme="http://sunmoon.com/categories/JavaWeb/"/>
    
    
      <category term="JSP" scheme="http://sunmoon.com/tags/JSP/"/>
    
      <category term="EL表达式" scheme="http://sunmoon.com/tags/EL%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    
      <category term="JSTL标签库" scheme="http://sunmoon.com/tags/JSTL%E6%A0%87%E7%AD%BE%E5%BA%93/"/>
    
      <category term="MVC设计思想" scheme="http://sunmoon.com/tags/MVC%E8%AE%BE%E8%AE%A1%E6%80%9D%E6%83%B3/"/>
    
      <category term="三层架构" scheme="http://sunmoon.com/tags/%E4%B8%89%E5%B1%82%E6%9E%B6%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>Cookie&amp;Session</title>
    <link href="http://sunmoon.com/2020/08/26/Cookie-Session/"/>
    <id>http://sunmoon.com/2020/08/26/Cookie-Session/</id>
    <published>2020-08-26T13:29:39.000Z</published>
    <updated>2020-08-29T12:26:20.609Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、会话概述"><a href="#一、会话概述" class="headerlink" title="一、会话概述"></a>一、会话概述</h2><h3 id="1-1-什么是会话"><a href="#1-1-什么是会话" class="headerlink" title="1.1 什么是会话"></a>1.1 什么是会话</h3><p><img data-src="/img/%E4%BB%80%E4%B9%88%E6%98%AF%E4%BC%9A%E8%AF%9D.png" alt="什么是会话"></p><a id="more"></a><h3 id="1-2-会话技术"><a href="#1-2-会话技术" class="headerlink" title="1.2 会话技术"></a>1.2 会话技术</h3><p><strong>问题：</strong>Http是一个无状态协议，同一个会话的连续两个请求相互独立，彼此并不了解</p><p><strong>作用</strong>：用于<span style="color:red">存储</span>浏览器与服务器在请求和响应过程中产生的<span style="color:red">数据</span></p><p>客户端会话技术：cookie</p><p>服务器端会话技术：session</p><p><img data-src="/img/%E4%BC%9A%E8%AF%9D%E6%8A%80%E6%9C%AF.png" alt="会话技术"></p><h2 id="二、Cookie"><a href="#二、Cookie" class="headerlink" title="二、Cookie"></a>二、Cookie</h2><h3 id="2-1-概述"><a href="#2-1-概述" class="headerlink" title="2.1 概述"></a>2.1 概述</h3><p>Cookie作用：在一次会话的多次请求之间共享数据，将数据<strong>保存到客户端（浏览器）</strong></p><blockquote><p>应用场景：</p><ul><li>JD的购物车</li></ul></blockquote><p><img data-src="/img/cookie.png" alt="cookie"></p><h3 id="2-2-快速入门"><a href="#2-2-快速入门" class="headerlink" title="2.2 快速入门"></a>2.2 快速入门</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1. </span>SetCookie</span><br><span class="line"><span class="code">// 1.创建cookie</span></span><br><span class="line"><span class="code">Cookie cookie = new Cookie(String name,String value);</span></span><br><span class="line"><span class="code">// 2.写入到浏览器</span></span><br><span class="line"><span class="code">response.addCookie(cookie);</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">2. </span>GetCookie</span><br><span class="line"><span class="code">// 1.从浏览器中获取cookie</span></span><br><span class="line"><span class="code">Cookie[] cookies = request.getCookies();</span></span><br><span class="line"><span class="code">// 2.遍历输出（非空判断....）</span></span><br></pre></td></tr></table></figure><p>代码演示：</p><blockquote><p>SetCookie</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/SetCookie"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SetCookie</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">// 1.创建cookie</span></span><br><span class="line">        Cookie cookie = <span class="keyword">new</span> Cookie(<span class="string">"product"</span>,<span class="string">"HuaWeiP40"</span>);</span><br><span class="line">        <span class="comment">// 2.写入到浏览器</span></span><br><span class="line">        response.addCookie(cookie);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>GetCookie</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/GetCookie"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GetCookie</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">// 1.从浏览器中获取cookie</span></span><br><span class="line">        Cookie[] cookies = request.getCookies();</span><br><span class="line">        <span class="comment">// 2.遍历输出</span></span><br><span class="line">        <span class="keyword">if</span> (cookies != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (Cookie cookie : cookies) &#123;</span><br><span class="line">                String name = cookie.getName();</span><br><span class="line">                String value = cookie.getValue();</span><br><span class="line">                System.out.println(name + <span class="string">":"</span> + value);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-3-工作原理"><a href="#2-3-工作原理" class="headerlink" title="2.3 工作原理"></a>2.3 工作原理</h3><blockquote><p>图解</p></blockquote><p><img data-src="/img/cookie%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86.png" alt="cookie工作原理"></p><h3 id="2-4-Cookie细节"><a href="#2-4-Cookie细节" class="headerlink" title="2.4 Cookie细节"></a>2.4 Cookie细节</h3><h4 id="2-4-1-服务器发送多个Cookie"><a href="#2-4-1-服务器发送多个Cookie" class="headerlink" title="2.4.1 服务器发送多个Cookie?"></a>2.4.1 服务器发送多个Cookie?</h4><blockquote><p>同一个会话域名，最多保存50个Cookie</p></blockquote><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">* </span>答案是可以的</span><br><span class="line"><span class="code">// 1.创建二个cookie对象</span></span><br><span class="line"><span class="code">Cookie cookie1 = new Cookie("name","jack");</span></span><br><span class="line"><span class="code">Cookie cookie2 = new Cookie("age","18");</span></span><br><span class="line"><span class="code">// 2.response添加二个，响应</span></span><br><span class="line"><span class="code">response.addCookie(cookie1);</span></span><br><span class="line"><span class="code">response.addCookie(cookie2);</span></span><br></pre></td></tr></table></figure><p><strong>代码演示：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/ResponseMultipart"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ResponseMultipart</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">// 1.创建二个cookie对象</span></span><br><span class="line">        Cookie cookie1 = <span class="keyword">new</span> Cookie(<span class="string">"name"</span>,<span class="string">"jack"</span>);</span><br><span class="line">        Cookie cookie2 = <span class="keyword">new</span> Cookie(<span class="string">"age"</span>,<span class="string">"18"</span>);</span><br><span class="line">        <span class="comment">// 2.response添加二个，响应</span></span><br><span class="line">        response.addCookie(cookie1);</span><br><span class="line">        response.addCookie(cookie2);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-4-2-Cookie在浏览器的保存时间"><a href="#2-4-2-Cookie在浏览器的保存时间" class="headerlink" title="2.4.2 Cookie在浏览器的保存时间"></a>2.4.2 Cookie在浏览器的保存时间</h4><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">* </span>默认的情况下，会话（浏览器）关闭，cookie自动销毁</span><br><span class="line"></span><br><span class="line"><span class="bullet">* </span>我们可以设置它的存活时间</span><br><span class="line"><span class="code">cookie.setMaxAge(int seconds);</span></span><br><span class="line"><span class="code">正数：可以设置浏览器的cookie持久化时间，保存到硬盘，到期后自动销毁</span></span><br><span class="line"><span class="code">负数：默认值（-1），会话（浏览器）关闭，cookie自动销毁</span></span><br><span class="line"><span class="code">零：立即删除当前cookie</span></span><br></pre></td></tr></table></figure><p><strong>代码演示：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/CookieMaxAge"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CookieMaxAge</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">// 1.创建cookie</span></span><br><span class="line">        Cookie cookie = <span class="keyword">new</span> Cookie(<span class="string">"product"</span>, <span class="string">"xiaomi10"</span>);</span><br><span class="line">        <span class="comment">// 2.设置cookie存活时间</span></span><br><span class="line">        <span class="comment">// cookie.setMaxAge(10);  持久化</span></span><br><span class="line">        cookie.setMaxAge(<span class="number">0</span>);  <span class="comment">// 立即删除</span></span><br><span class="line">        <span class="comment">// 3.响应到浏览器</span></span><br><span class="line">        response.addCookie(cookie);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-4-3-Cookie是否可以存储中文？"><a href="#2-4-3-Cookie是否可以存储中文？" class="headerlink" title="2.4.3 Cookie是否可以存储中文？"></a>2.4.3 Cookie是否可以存储中文？</h4><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">* </span>在tomcat8版本之前，不支持中文</span><br><span class="line"><span class="code">URLEncode 编码</span></span><br><span class="line"><span class="code">URLDecode 解码</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="bullet">* </span>在tomcat8版本之后，支持中文</span><br><span class="line"><span class="code">Rfc6265规范中，不支持特殊符号（空格、分号、逗号....）</span></span><br></pre></td></tr></table></figure><p>代码演示：</p><blockquote><p>CookieCN</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/CookieCN"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CookieCN</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 编码</span></span><br><span class="line">        String value = <span class="string">"小米 1,0"</span>;</span><br><span class="line">        value= URLEncoder.encode(value, <span class="string">"utf-8"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1.创建cookie</span></span><br><span class="line">        Cookie cookie = <span class="keyword">new</span> Cookie(<span class="string">"product"</span>, value);</span><br><span class="line">        <span class="comment">// 2.发送到浏览器</span></span><br><span class="line">        response.addCookie(cookie);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>GetCookie</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/GetCookie"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GetCookie</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">// 1.从浏览器中获取cookie</span></span><br><span class="line">        Cookie[] cookies = request.getCookies();</span><br><span class="line">        <span class="comment">// 2.遍历输出</span></span><br><span class="line">        <span class="keyword">if</span> (cookies != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (Cookie cookie : cookies) &#123;</span><br><span class="line">                String name = cookie.getName();</span><br><span class="line">                String value = cookie.getValue();</span><br><span class="line">                <span class="comment">// 解码</span></span><br><span class="line">                value = URLDecoder.decode(value, <span class="string">"utf-8"</span>);</span><br><span class="line">                System.out.println(name + <span class="string">":"</span> + value);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-4-4-Cookie共享数据的范围？"><a href="#2-4-4-Cookie共享数据的范围？" class="headerlink" title="2.4.4 Cookie共享数据的范围？"></a>2.4.4 Cookie共享数据的范围？</h4><p><strong>① 在一个tomca服务器中，部署了多个web项目，那么这些web项目的Cookie能否共享？</strong></p><p><img data-src="/img/cookie%E5%85%B1%E4%BA%AB%E6%95%B0%E6%8D%AE%E8%8C%83%E5%9B%B4.png" alt="cookie共享数据范围"></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">* </span>默认情况下不行，因为我们在设置cookie时有一个默认携带路径（当前servlet的父路径）</span><br><span class="line"><span class="code">设置：http://localhost:8080/cookie/SetCookie</span></span><br><span class="line"><span class="code">获取：http://localhost:8080/cookie/xxxxxx</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">* </span>可以手动指定cookie的携带路径</span><br><span class="line"><span class="code">刚才案例的默认值：</span></span><br><span class="line"><span class="code">cookie.setPath("/cookie"); 相当于：http://localhost:8080/cookie</span></span><br><span class="line"><span class="code">如果你想让二个项目共享cookie：</span></span><br><span class="line"><span class="code">cookie.setPath("/"); 相当于：http://localhost:8080/</span></span><br><span class="line"><span class="code">http://localhost:8080/cookie</span></span><br><span class="line"><span class="code">http://localhost:8080/response</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">* </span>cookie覆盖要求：路径+名称完全一致，就进行覆盖...</span><br><span class="line"></span><br><span class="line"><span class="bullet">* </span>在默认的情况下，是否能获取/aa/SetCookie</span><br><span class="line"><span class="code">设置cookie：http://localhost:8080/cookie/aa/SetCookie</span></span><br><span class="line"><span class="code">获取cookie：http://localhost:8080/cookie/bb/GetCookie</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="code">解决方案：</span></span><br><span class="line"><span class="code">cookie.setPath("/cookie");</span></span><br></pre></td></tr></table></figure><blockquote><p>servlet设置多级路径</p></blockquote><p><img data-src="/img/Servlet%E8%AE%BE%E7%BD%AE%E5%A4%9A%E7%BA%A7%E8%B7%AF%E5%BE%84.png" alt="Servlet设置多级路径"></p><p><strong>② 不同tomcat服务器之间Cookie能否共享？</strong></p><ul><li>默认情况下不能…..</li></ul><ul><li><p>可以指定同一个一级域名下，多台服务器共享 （项目）</p><ul><li><code>cookie.setDomain(&quot;.jd.com&quot;);</code></li></ul></li></ul><p><img data-src="/img/%E4%B8%8D%E5%90%8Ctomcat%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B9%8B%E9%97%B4%E5%85%B1%E4%BA%ABCookie.png" alt="不同tomcat服务器之间共享Cookie"></p><h3 id="2-5-Cookie特点"><a href="#2-5-Cookie特点" class="headerlink" title="2.5 Cookie特点"></a>2.5 Cookie特点</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1. </span>cookie存储数据在客户端（浏览器）</span><br><span class="line"></span><br><span class="line"><span class="bullet">2. </span>cookie只能存储字符串</span><br><span class="line"></span><br><span class="line"><span class="bullet">3. </span>cookie单个大小不能超过4KB</span><br><span class="line"></span><br><span class="line"><span class="bullet">4. </span>cookie在同一域名下数量不超过50个</span><br><span class="line"></span><br><span class="line"><span class="bullet">5. </span>cookie存储数据不太安全</span><br></pre></td></tr></table></figure><h3 id="2-6-Cookie案例——用户上次访问记录"><a href="#2-6-Cookie案例——用户上次访问记录" class="headerlink" title="2.6 Cookie案例——用户上次访问记录"></a>2.6 Cookie案例——用户上次访问记录</h3><p><strong>需求</strong></p><ul><li><p>访问一个Servlet，如果是第一次访问，则提示：您好，欢迎您的到来。</p></li><li><p>如果不是第一次访问，则提示：欢迎回来，您上次访问时间为: xxxx。</p></li></ul><p><strong>需求分析：</strong></p><p><img data-src="/img/cookie%E6%A1%88%E4%BE%8B%E2%80%94%E2%80%94%E7%94%A8%E6%88%B7%E4%B8%8A%E6%AC%A1%E8%AE%BF%E9%97%AE%E8%AE%B0%E5%BD%95.png" alt="cookie案例——用户上次访问记录"></p><p><strong>代码实现</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CookieUtils</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 根据指定名称，获取对应的cookie对象</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Cookie <span class="title">queryByName</span><span class="params">(Cookie[] cookies,String name)</span></span>&#123;</span><br><span class="line">        <span class="comment">// 非空判断</span></span><br><span class="line">        <span class="keyword">if</span> (cookies!=<span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="comment">// 遍历</span></span><br><span class="line">            <span class="keyword">for</span> (Cookie cookie : cookies) &#123;</span><br><span class="line">                <span class="comment">// 对比名称</span></span><br><span class="line">                <span class="keyword">if</span> (name.equals(cookie.getName())) &#123;</span><br><span class="line">                    <span class="keyword">return</span> cookie;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 没有匹配上，返回null</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/LastTimeServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LastTimeServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">// 设置响应编码</span></span><br><span class="line">        response.setContentType(<span class="string">"text/html;charset=utf-8"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// i.获取上次访问时间</span></span><br><span class="line">        <span class="comment">// 1.获取指定名称的cookie</span></span><br><span class="line">        Cookie[] cookies = request.getCookies();</span><br><span class="line">        Cookie cookie = CookieUtils.queryByName(cookies, <span class="string">"last_time"</span>);</span><br><span class="line">        <span class="comment">// 2.判断是否为第一次访问</span></span><br><span class="line">        <span class="keyword">if</span> (cookie == <span class="keyword">null</span>) &#123;</span><br><span class="line">            response.getWriter().write(<span class="string">"您好，欢迎您的到来.."</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            String last_time = cookie.getValue();  <span class="comment">// 2020-08-25 12:05:11</span></span><br><span class="line">            <span class="comment">// 解码</span></span><br><span class="line">            last_time = URLDecoder.decode(last_time, <span class="string">"UTF-8"</span>);</span><br><span class="line">            response.getWriter().write(<span class="string">"欢迎回来，"</span> + last_time);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// ii.记录本次访问时间</span></span><br><span class="line">        <span class="comment">// 1.获取当前时间</span></span><br><span class="line">        LocalDateTime now = LocalDateTime.now();</span><br><span class="line">        String current_time = now.toString();<span class="comment">// 默认获取 2020-08-25 12:05:11 格式</span></span><br><span class="line">        <span class="comment">// 编码</span></span><br><span class="line">        current_time = URLEncoder.encode(current_time, <span class="string">"UTF-8"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.设置cookie并指定持久化</span></span><br><span class="line">        cookie = <span class="keyword">new</span> Cookie(<span class="string">"last_time"</span>, current_time);</span><br><span class="line">        cookie.setMaxAge(<span class="number">60</span> * <span class="number">60</span> * <span class="number">24</span> * <span class="number">30</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3.写入到浏览器</span></span><br><span class="line">        response.addCookie(cookie);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="三、Session"><a href="#三、Session" class="headerlink" title="三、Session"></a>三、Session</h2><h3 id="3-1-概述"><a href="#3-1-概述" class="headerlink" title="3.1 概述"></a>3.1 概述</h3><p><strong>使用Cookie问题</strong></p><ol><li>最多存储4K字符串</li><li>存储数据不太安全</li></ol><p>session作用：在一次会话的多次请求之间共享数据，将数据<strong>保存到服务器端</strong></p><blockquote><p>Session是基于Cookie实现的</p></blockquote><p><img data-src="/img/session.png" alt="session"></p><h3 id="3-2-快速入门"><a href="#3-2-快速入门" class="headerlink" title="3.2 快速入门"></a>3.2 快速入门</h3><p>HttpSession也是一个域对象</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">* </span>API</span><br><span class="line"><span class="bullet">1. </span>存储数据</span><br><span class="line"><span class="code">void setAttribute(String name,Object value)</span></span><br><span class="line"><span class="bullet">2. </span>获取数据</span><br><span class="line"><span class="code">Object getAttribute(String name)</span></span><br><span class="line"><span class="bullet">3. </span>删除数据</span><br><span class="line"><span class="code">void removeAttribute(String name)</span></span><br></pre></td></tr></table></figure><p><strong>技术分析</strong></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1. </span>SetSession</span><br><span class="line"><span class="code">// 1.获取session空间（域对象）</span></span><br><span class="line"><span class="code">HttpSession session = request.getSession();</span></span><br><span class="line"><span class="code">// 2.存值</span></span><br><span class="line"><span class="code">session.setAttribute("product","oppoX20");</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">2. </span>GetSession</span><br><span class="line"><span class="code">// 1.获取session空间（域对象）</span></span><br><span class="line"><span class="code">HttpSession session = request.getSession();</span></span><br><span class="line"><span class="code">// 2.取值</span></span><br><span class="line"><span class="code">session.getAttribute("product");</span></span><br></pre></td></tr></table></figure><blockquote><p>SetSession</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/SetSession"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SetSession</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">// 1.获取session空间（域对象）</span></span><br><span class="line">        HttpSession session = request.getSession();</span><br><span class="line">        <span class="comment">// 2.存值</span></span><br><span class="line">        session.setAttribute(<span class="string">"product"</span>,<span class="string">"oppoX20"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>GetSession</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/GetSession"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GetSession</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">// 1.获取session空间（域对象）</span></span><br><span class="line">        HttpSession session = request.getSession();</span><br><span class="line">        <span class="comment">// 2.取值</span></span><br><span class="line">        String value = (String) session.getAttribute(<span class="string">"product"</span>);</span><br><span class="line">        System.out.println(value);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-3-工作原理"><a href="#3-3-工作原理" class="headerlink" title="3.3 工作原理"></a>3.3 工作原理</h3><p>Session基于Cookie技术实现</p><p><img data-src="/img/session%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86.png" alt="session工作原理"></p><h3 id="3-4-Session细节"><a href="#3-4-Session细节" class="headerlink" title="3.4 Session细节"></a>3.4 Session细节</h3><h4 id="3-4-1-客户端关闭，服务器不关闭"><a href="#3-4-1-客户端关闭，服务器不关闭" class="headerlink" title="3.4.1 客户端关闭，服务器不关闭"></a>3.4.1 客户端关闭，服务器不关闭</h4><p>两次获取的Session数据是否为相同？</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">* </span>默认的情况下不相同</span><br><span class="line"><span class="code">因为session是基于cookie实现的，浏览器关闭，cookie销毁，jsessionId也就没了</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">* </span>我们可以手动设置jsessionid的这个cookie，存活时间</span><br><span class="line"><span class="code">我们可以覆盖它默认的操作，这样就可以持久化到浏览器磁盘中...</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    浏览器关闭，jsessionid不会销毁...</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/ClientClose"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ClientClose</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">// 1.获取session对象</span></span><br><span class="line">        HttpSession session = request.getSession();</span><br><span class="line">        <span class="comment">// 2.存数据</span></span><br><span class="line">        session.setAttribute(<span class="string">"product"</span>, <span class="string">"苹果12"</span>);</span><br><span class="line">        <span class="comment">// 通过session对象，获取jsessionid的值</span></span><br><span class="line">        String sessionId = session.getId();</span><br><span class="line">        <span class="comment">// 3.我们吧服务器默认创建的cookie进行覆盖，指定存活时间</span></span><br><span class="line">        Cookie cookie = <span class="keyword">new</span> Cookie(<span class="string">"JSESSIONID"</span>, sessionId);</span><br><span class="line">        <span class="comment">// 指定路径</span></span><br><span class="line">        cookie.setPath(<span class="string">"/session"</span>);</span><br><span class="line">        <span class="comment">// 指定存活时间</span></span><br><span class="line">        cookie.setMaxAge(<span class="number">100</span>);</span><br><span class="line">        <span class="comment">// 响应到浏览器</span></span><br><span class="line">        response.addCookie(cookie);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-4-2-客户端不关闭，服务器关闭"><a href="#3-4-2-客户端不关闭，服务器关闭" class="headerlink" title="3.4.2 客户端不关闭，服务器关闭"></a>3.4.2 客户端不关闭，服务器关闭</h4><p>两次获取的Session数据是否为相同？</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">* 默认情况下是一样的....</span><br><span class="line">钝化：我们tomcat服务器在关闭时，将内存的session数据，序列化到磁盘文件</span><br><span class="line">活化：我们tomcat服务器在重新启动时，将磁盘文件，反序列化到，服务器内存中...</span><br><span class="line">前提条件，我们存放的对象，必须实现序列化接口...</span><br></pre></td></tr></table></figure><h4 id="3-4-3-生命周期"><a href="#3-4-3-生命周期" class="headerlink" title="3.4.3 生命周期"></a>3.4.3 生命周期</h4><blockquote><p>session是一个域对象，对于它的使用，需要掌握session的生命周期</p></blockquote><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">* </span>何时创建</span><br><span class="line"><span class="code">用户请求携带的jsessionid与服务器不匹配时，创建</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">* </span>何时销毁</span><br><span class="line"><span class="code">1.用户非活跃状态30分钟，销毁</span></span><br><span class="line"><span class="code">2.服务器非正常关闭，销毁</span></span><br><span class="line"><span class="code">3.自杀,session.invalidate(); session.removeAttribute("jsessionid");</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">* </span>作用范围</span><br><span class="line"><span class="code">一次会话，多次请求之间，共享数据</span></span><br></pre></td></tr></table></figure><h4 id="3-4-4-URL重写-了解"><a href="#3-4-4-URL重写-了解" class="headerlink" title="3.4.4 URL重写(了解)"></a>3.4.4 URL重写(了解)</h4><p><strong>问题：</strong></p><ul><li>学习了Session的工作原理后，我们知道Session基于Cookie技术实现；浏览器的Cookie是可以禁用的，一旦禁用了之后，Session就会出现问题了。开发中,一般是不关注用户的Cookie是否禁用的，若用户禁用了Cookie，只能别用网站了。</li></ul><p><strong>解决方案：</strong></p><ul><li>若真想处理用户端的Cookie禁用，我们可以使用url重写技术：</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/OverrideURL"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OverrideURL</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">        response.setContentType(<span class="string">"text/html;charset=utf-8"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1.获取session</span></span><br><span class="line">        HttpSession session = request.getSession();</span><br><span class="line">        <span class="comment">// 2.存数据</span></span><br><span class="line">        session.setAttribute(<span class="string">"product"</span>, <span class="string">"我使用了url重写技术，浏览器禁用了cookie，我也不怕哈哈哈"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3.重写url（将jsessionid，写入到地址栏）</span></span><br><span class="line">        String url = <span class="string">"/session/GetSession"</span>;</span><br><span class="line"></span><br><span class="line">        url = response.encodeURL(url);</span><br><span class="line"></span><br><span class="line">        response.getWriter().write(<span class="string">"&lt;a href='"</span>+ url +<span class="string">"'&gt;使用了url重写技术&lt;/a&gt;"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-5-Session特点"><a href="#3-5-Session特点" class="headerlink" title="3.5 Session特点"></a>3.5 Session特点</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>. session存储数据在服务器</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>. session存储类型任意（Object）</span><br><span class="line"></span><br><span class="line"><span class="number">3</span>. session存储大小和数量没有限制（相对于内存）</span><br><span class="line"></span><br><span class="line"><span class="number">4</span>. session存储相对安全</span><br></pre></td></tr></table></figure><blockquote><p>小贴士：(对于cookie和session的选择)</p><ul><li><p>cookie：将数据保存在浏览器端，数据相对不安全，而且数据大小是有限制的，建议不太敏感的数据使用它</p></li><li><p>session：将数据保存在服务器端，数据相对安全，数据的大小要比cookie中数据灵活很多，但是会占用服务器内存，建议敏感且小量数据使用它</p></li></ul></blockquote><h2 id="五、域对象总结"><a href="#五、域对象总结" class="headerlink" title="五、域对象总结"></a>五、域对象总结</h2><p><code>request</code>、<code>session</code>、<code>ServletContext</code></p><p><img data-src="/img/%E5%9F%9F%E5%AF%B9%E8%B1%A1%E6%80%BB%E7%BB%93.png" alt="域对象总结"></p><h3 id="5-1-域对象公共API"><a href="#5-1-域对象公共API" class="headerlink" title="5.1 域对象公共API"></a>5.1 域对象公共API</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1. </span>设置数据</span><br><span class="line"><span class="code">void setAttribute(String name, Object o)</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">2. </span>获取数据</span><br><span class="line"><span class="code">Object getAttribute(String name)</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">3. </span>删除数据</span><br><span class="line"><span class="code">void removeAttribute(String name)</span></span><br></pre></td></tr></table></figure><h3 id="5-2-生命周期"><a href="#5-2-生命周期" class="headerlink" title="5.2 生命周期"></a>5.2 生命周期</h3><h4 id="5-2-1-ServletContext域对象"><a href="#5-2-1-ServletContext域对象" class="headerlink" title="5.2.1 ServletContext域对象"></a>5.2.1 ServletContext域对象</h4><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">* </span>何时创建</span><br><span class="line"><span class="code">服务器启动，项目加载成功后，创建</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">* </span>何时销毁</span><br><span class="line"><span class="code">服务器关闭，项目卸载后，销毁</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">* </span>作用范围</span><br><span class="line"><span class="code">整个web项目</span></span><br></pre></td></tr></table></figure><h4 id="5-2-2-HttpSession域对象"><a href="#5-2-2-HttpSession域对象" class="headerlink" title="5.2.2 HttpSession域对象"></a>5.2.2 HttpSession域对象</h4><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">* </span>何时创建</span><br><span class="line"><span class="code">用户携带jsessionid与服务器不匹配时</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">* </span>何时销毁</span><br><span class="line"><span class="code">1.非活跃状态30分钟</span></span><br><span class="line"><span class="code">2.服务器非正常关闭</span></span><br><span class="line"><span class="code">3.自杀</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">* </span>作用范围</span><br><span class="line"><span class="code">一次会话，多次请求之间</span></span><br></pre></td></tr></table></figure><h4 id="5-2-3-HttpServletRequest"><a href="#5-2-3-HttpServletRequest" class="headerlink" title="5.2.3 HttpServletRequest"></a>5.2.3 HttpServletRequest</h4><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">* </span>何时创建</span><br><span class="line"><span class="code">用户发送请求时</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">* </span>何时销毁</span><br><span class="line"><span class="code">服务器做出响应后</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">* </span>作用范围</span><br><span class="line"><span class="code">一次请求中，多次转发之间</span></span><br></pre></td></tr></table></figure><h3 id="5-3-小结"><a href="#5-3-小结" class="headerlink" title="5.3 小结"></a>5.3 小结</h3><blockquote><p>使用方法</p></blockquote><ul><li><p>能用小的不用大的：request&lt;session&lt;servletContext</p></li><li><p>常用的场景:</p><ul><li>request：一次查询的结果（servlet转发jsp）</li><li>session：存放当前会话的私有数据<ul><li>用户登录状态</li><li>验证码</li><li>购物车（后面会用redis…）</li></ul></li></ul></li><li><p>servletContext:若需要所有的servlet都能访问到,才使用这个域对象.</p></li></ul><h2 id="六、Session案例"><a href="#六、Session案例" class="headerlink" title="六、Session案例"></a>六、Session案例</h2><h3 id="6-1-用户登录-验证码"><a href="#6-1-用户登录-验证码" class="headerlink" title="6.1 用户登录(验证码)"></a>6.1 用户登录(验证码)</h3><p><strong>需求：</strong></p><ul><li>用户访问带有验证码的登录页面，输入用户名，密码以及验证码实现登录功能。</li></ul><h4 id="需求分析"><a href="#需求分析" class="headerlink" title="需求分析"></a>需求分析</h4><p><img data-src="/img/session%E6%A1%88%E4%BE%8B%E2%80%94%E2%80%94%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95(%E9%AA%8C%E8%AF%81%E7%A0%81).png" alt="session案例——用户登录"></p><h4 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h4><p><strong>① CheckCodeServlet(绘制验证码，存入Session)</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/CheckCodeServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CheckCodeServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"><span class="comment">//  创建画布</span></span><br><span class="line"><span class="keyword">int</span> width = <span class="number">120</span>;</span><br><span class="line"><span class="keyword">int</span> height = <span class="number">40</span>;</span><br><span class="line">BufferedImage bufferedImage = <span class="keyword">new</span> BufferedImage(width, height, BufferedImage.TYPE_INT_RGB);</span><br><span class="line"><span class="comment">//  获得画笔</span></span><br><span class="line">Graphics g = bufferedImage.getGraphics();</span><br><span class="line"><span class="comment">//  填充背景颜色</span></span><br><span class="line">g.setColor(Color.white);</span><br><span class="line">g.fillRect(<span class="number">0</span>, <span class="number">0</span>, width, height);</span><br><span class="line"><span class="comment">//  绘制边框</span></span><br><span class="line">g.setColor(Color.red);</span><br><span class="line">g.drawRect(<span class="number">0</span>, <span class="number">0</span>, width - <span class="number">1</span>, height - <span class="number">1</span>);</span><br><span class="line"><span class="comment">//  生成随机字符</span></span><br><span class="line"><span class="comment">//  准备数据</span></span><br><span class="line">String data = <span class="string">"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890"</span>;</span><br><span class="line"><span class="comment">//  准备随机对象</span></span><br><span class="line">Random r = <span class="keyword">new</span> Random();</span><br><span class="line"><span class="comment">//  声明一个变量 保存验证码</span></span><br><span class="line">String code = <span class="string">""</span>;</span><br><span class="line"><span class="comment">//  书写4个随机字符</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++) &#123;</span><br><span class="line"><span class="comment">//  设置字体</span></span><br><span class="line">g.setFont(<span class="keyword">new</span> Font(<span class="string">"宋体"</span>, Font.BOLD, <span class="number">28</span>));</span><br><span class="line"><span class="comment">//  设置随机颜色</span></span><br><span class="line">g.setColor(<span class="keyword">new</span> Color(r.nextInt(<span class="number">255</span>), r.nextInt(<span class="number">255</span>), r.nextInt(<span class="number">255</span>)));</span><br><span class="line"></span><br><span class="line">String str = data.charAt(r.nextInt(data.length())) + <span class="string">""</span>;</span><br><span class="line">g.drawString(str, <span class="number">10</span> + i * <span class="number">28</span>, <span class="number">30</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//  将新的字符 保存到验证码中</span></span><br><span class="line">code = code + str;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//  绘制干扰线</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">6</span>; i++) &#123;</span><br><span class="line"><span class="comment">//  设置随机颜色</span></span><br><span class="line">g.setColor(<span class="keyword">new</span> Color(r.nextInt(<span class="number">255</span>), r.nextInt(<span class="number">255</span>), r.nextInt(<span class="number">255</span>)));</span><br><span class="line"></span><br><span class="line">g.drawLine(r.nextInt(width), r.nextInt(height), r.nextInt(width), r.nextInt(height));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//  将验证码 打印到控制台</span></span><br><span class="line">System.out.println(code);</span><br><span class="line"></span><br><span class="line"><span class="comment">//  将验证码放到session中</span></span><br><span class="line">request.getSession().setAttribute(<span class="string">"code_session"</span>, code);</span><br><span class="line"></span><br><span class="line"><span class="comment">//  将画布显示在浏览器中</span></span><br><span class="line">ImageIO.write(bufferedImage, <span class="string">"jpg"</span>, response.getOutputStream());</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">doGet(request, response);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>② index.jsp(登录页)</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">    &lt;head&gt;</span><br><span class="line">        &lt;title&gt;用户登录&lt;/title&gt;</span><br><span class="line">    &lt;/head&gt;</span><br><span class="line">    &lt;body&gt;</span><br><span class="line">        &lt;h1&gt;用户登录&lt;/h1&gt;</span><br><span class="line">        &lt;form action=<span class="string">"/case/LoginServlet"</span> method=<span class="string">"post"</span>&gt;</span><br><span class="line">            &lt;label for="username"&gt;用户名&lt;/label&gt;&lt;input type="text" id="username" name="username"&gt;&lt;br&gt;</span><br><span class="line">            &lt;label for="password"&gt;密&amp;emsp;码&lt;/label&gt;&lt;input type="password" id="password" name="password"&gt;&lt;br&gt;</span><br><span class="line">            &lt;label for="checkCode"&gt;验证码&lt;/label&gt;&lt;input type="text" id="checkCode" name="checkCode"&gt;</span><br><span class="line">            &lt;img src=<span class="string">"/case/CheckCodeServlet"</span> id=<span class="string">"toggleCheckCode"</span> alt=<span class="string">""</span>&gt;&lt;br&gt;</span><br><span class="line">            &lt;span style=<span class="string">"color: red"</span>&gt;</span><br><span class="line">                &lt;%</span><br><span class="line">                    <span class="comment">//获取错误信息</span></span><br><span class="line">                    String error = (String) request.getAttribute(<span class="string">"error"</span>);</span><br><span class="line">                    <span class="comment">//判断非空</span></span><br><span class="line">                    <span class="keyword">if</span> (error!=<span class="keyword">null</span>) &#123;</span><br><span class="line">                        <span class="comment">//输出到页面</span></span><br><span class="line">                        out.write(error);</span><br><span class="line">                    &#125;</span><br><span class="line">                %&gt;</span><br><span class="line">            &lt;/span&gt;</span><br><span class="line">            &lt;br&gt;</span><br><span class="line">            &lt;input type=<span class="string">"submit"</span> value=<span class="string">"登录"</span>&gt;</span><br><span class="line">        &lt;/form&gt;</span><br><span class="line">    &lt;/body&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        document.getElementById(<span class="string">"toggleCheckCode"</span>).onclick = function () &#123;</span><br><span class="line">            <span class="keyword">this</span>.src = <span class="string">"/case/CheckCodeServlet?"</span> + <span class="keyword">new</span> Date().getTime();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p><strong>③ LoginServlet</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 登录逻辑处理</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/LoginServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//设置编码</span></span><br><span class="line">        request.setCharacterEncoding(<span class="string">"utf-8"</span>);</span><br><span class="line">        <span class="comment">// 获取验证码参数</span></span><br><span class="line">        String checkCode = request.getParameter(<span class="string">"checkCode"</span>);</span><br><span class="line">        <span class="comment">//获取Session中存储的验证码</span></span><br><span class="line">        String code_session = (String) request.getSession().getAttribute(<span class="string">"code_session"</span>);</span><br><span class="line">        <span class="comment">//验证验证码是否正确</span></span><br><span class="line">        <span class="keyword">if</span> (!checkCode.equalsIgnoreCase(code_session))&#123;</span><br><span class="line">            <span class="comment">//友情提示信息，验证码错误,存储到request域对象中</span></span><br><span class="line">            request.setAttribute(<span class="string">"error"</span>,<span class="string">"验证码错误"</span>);</span><br><span class="line">            <span class="comment">//转发到index页面</span></span><br><span class="line">            request.getRequestDispatcher(<span class="string">"/index.jsp"</span>).forward(request, response);</span><br><span class="line">            <span class="comment">//结束程序</span></span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//验证码正确，获取用户名，密码</span></span><br><span class="line">        String username = request.getParameter(<span class="string">"username"</span>);</span><br><span class="line">        String password = request.getParameter(<span class="string">"password"</span>);</span><br><span class="line">        <span class="comment">//判断验证码密码不正确</span></span><br><span class="line">        <span class="keyword">if</span> (! (<span class="string">"jack"</span>.equals(username) &amp;&amp; <span class="string">"123"</span>.equals(password)))&#123;</span><br><span class="line">            <span class="comment">//友情提示信息，验证码错误,存储到request域对象中</span></span><br><span class="line">            request.setAttribute(<span class="string">"error"</span>,<span class="string">"用户名或密码错误！"</span>);</span><br><span class="line">            <span class="comment">//转发到index页面</span></span><br><span class="line">            request.getRequestDispatcher(<span class="string">"/index.jsp"</span>).forward(request, response);</span><br><span class="line">            <span class="comment">//结束程序</span></span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//全部正确</span></span><br><span class="line">        <span class="comment">//用户名存入Session</span></span><br><span class="line">        request.getSession().setAttribute(<span class="string">"username"</span>,username);</span><br><span class="line">        <span class="comment">//跳转页面</span></span><br><span class="line">        response.sendRedirect(request.getContextPath() + <span class="string">"/goods.jsp"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>④ goods.jsp（商品页）</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;goods&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h3&gt;商品列表，</span><br><span class="line">    &lt;%</span><br><span class="line">        String user = (String) session.getAttribute(<span class="string">"user"</span>);</span><br><span class="line">        <span class="keyword">if</span> (user != <span class="keyword">null</span>) &#123;</span><br><span class="line">            out.write(<span class="string">"登录人:"</span> + user);</span><br><span class="line">        &#125;</span><br><span class="line">    %&gt;</span><br><span class="line">&lt;/h3&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h3 id="6-2-商品购物车"><a href="#6-2-商品购物车" class="headerlink" title="6.2 商品购物车"></a>6.2 商品购物车</h3><p><strong>需求：</strong></p><ul><li>有一个商品页面，可以点击超链接将商品添加到购物车,还有一个超链接,点击它的时候可以查看购物车中商品信息</li></ul><h4 id="需求分析-1"><a href="#需求分析-1" class="headerlink" title="需求分析"></a>需求分析</h4><p><img data-src="/img/session%E6%A1%88%E4%BE%8B%E2%80%94%E2%80%94%E5%95%86%E5%93%81%E8%B4%AD%E7%89%A9%E8%BD%A6.png" alt="session案例——商品购物车"></p><h4 id="代码实现-1"><a href="#代码实现-1" class="headerlink" title="代码实现"></a>代码实现</h4><p><strong>① goods.jsp</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line"></span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;商品页&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;h1&gt;商品列表&lt;/h1&gt;</span><br><span class="line">    &lt;%</span><br><span class="line">        String user = (String) session.getAttribute(<span class="string">"user"</span>);</span><br><span class="line">        <span class="keyword">if</span> (user != <span class="keyword">null</span>) &#123;</span><br><span class="line">            out.write(<span class="string">"登录人:"</span> + user);</span><br><span class="line">        &#125;</span><br><span class="line">    %&gt;</span><br><span class="line">    &lt;h3&gt;&lt;a href="/day08_case/cart.jsp"&gt;查看购物车&lt;/a&gt;&lt;/h3&gt;</span><br><span class="line">    &lt;ul&gt;</span><br><span class="line">        &lt;li&gt;小米10 &lt;a href="/case/AddCartList?goods=Mi10"&gt;添加购物车&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;华为P40 &lt;a href="/case/AddCartList?goods=Hw1P40"&gt;添加购物车&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;一加9 &lt;a href="/case/AddCartList?goods=OnePlus9"&gt;添加购物车&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">        &lt;li&gt; vivoX20 &lt;a href="/case/AddCartList?goods=vivoX20"&gt;添加购物车&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p><strong>② AddCartServlet</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 购物车逻辑</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/AddCartList"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AddCartList</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">// 处理中文乱码</span></span><br><span class="line">        request.setCharacterEncoding(<span class="string">"utf-8"</span>);</span><br><span class="line">        response.setContentType(<span class="string">"text/html;charset=utf-8"</span>);</span><br><span class="line">        <span class="comment">//参数</span></span><br><span class="line">        String goods = request.getParameter(<span class="string">"goods"</span>);</span><br><span class="line">        <span class="comment">//响应添加成功</span></span><br><span class="line">        response.getWriter().write(goods + <span class="string">"商品，成功加入购物车..."</span>);</span><br><span class="line">        <span class="comment">//从session中获取购物车</span></span><br><span class="line">        Map&lt;String, Integer&gt; cartMap = (Map&lt;String, Integer&gt;) request.getSession().getAttribute(<span class="string">"cart"</span>);</span><br><span class="line">        <span class="comment">//判断购物车是否存在</span></span><br><span class="line">        <span class="keyword">if</span> (cartMap == <span class="keyword">null</span>)&#123;</span><br><span class="line">            cartMap = <span class="keyword">new</span> LinkedHashMap&lt;&gt;();</span><br><span class="line">            <span class="comment">//为空设置到session</span></span><br><span class="line">            request.getSession().setAttribute(<span class="string">"cart"</span>,cartMap);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//不为空，判断商品是否存在</span></span><br><span class="line">        <span class="keyword">if</span> (cartMap.containsKey(goods))&#123;</span><br><span class="line">            <span class="comment">//商品数量+1</span></span><br><span class="line">            cartMap.put(goods,cartMap.get(goods) + <span class="number">1</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">//商品不存在</span></span><br><span class="line">            cartMap.put(goods,<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 6.提供查看购物车a标签</span></span><br><span class="line">        response.getWriter().write(<span class="string">"&lt;a href='/day08_case/cart.jsp'&gt;查看购物车&lt;/a&gt;"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>③ cart.jsp</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">"java.util.Map"</span> %&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line"></span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;%</span><br><span class="line">        Map&lt;String,Integer&gt; cart = (Map&lt;String, Integer&gt;) request.getSession().getAttribute(<span class="string">"cart"</span>);</span><br><span class="line">        <span class="comment">//判断购物车是否为空</span></span><br><span class="line">        <span class="keyword">if</span> (cart == <span class="keyword">null</span>)&#123;</span><br><span class="line">            out.write(<span class="string">"您还未选购商品，请去商品页选购吧&lt;a href='goods.jsp'&gt;打开商品页&lt;/a&gt;"</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 不为空,遍历map集合，输出商品</span></span><br><span class="line">            <span class="keyword">for</span> (String key : cart.keySet()) &#123;</span><br><span class="line">                out.write(<span class="string">"&lt;div&gt;商品："</span> + key + <span class="string">",数量："</span> + cart.get(key) + <span class="string">"&lt;/div&gt;"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    %&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、会话概述&quot;&gt;&lt;a href=&quot;#一、会话概述&quot; class=&quot;headerlink&quot; title=&quot;一、会话概述&quot;&gt;&lt;/a&gt;一、会话概述&lt;/h2&gt;&lt;h3 id=&quot;1-1-什么是会话&quot;&gt;&lt;a href=&quot;#1-1-什么是会话&quot; class=&quot;headerlink&quot; title=&quot;1.1 什么是会话&quot;&gt;&lt;/a&gt;1.1 什么是会话&lt;/h3&gt;&lt;p&gt;&lt;img data-src=&quot;/img/%E4%BB%80%E4%B9%88%E6%98%AF%E4%BC%9A%E8%AF%9D.png&quot; alt=&quot;什么是会话&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="JavaWeb" scheme="http://sunmoon.com/categories/JavaWeb/"/>
    
    
      <category term="cookie" scheme="http://sunmoon.com/tags/cookie/"/>
    
      <category term="session" scheme="http://sunmoon.com/tags/session/"/>
    
      <category term="web域对象" scheme="http://sunmoon.com/tags/web%E5%9F%9F%E5%AF%B9%E8%B1%A1/"/>
    
      <category term="会话技术" scheme="http://sunmoon.com/tags/%E4%BC%9A%E8%AF%9D%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>Request&amp;Response</title>
    <link href="http://sunmoon.com/2020/08/23/request-response/"/>
    <id>http://sunmoon.com/2020/08/23/request-response/</id>
    <published>2020-08-23T14:00:33.000Z</published>
    <updated>2020-08-23T14:04:28.426Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Request-amp-Response"><a href="#Request-amp-Response" class="headerlink" title="Request&amp;Response"></a>Request&amp;Response</h1><p>Request请求对象：获取</p><ul><li>HTTP请求消息格式(行、头、体)</li></ul><p>Response响应对象：设置</p><ul><li>HTTP响应消息格式(行、头、体)</li></ul><a id="more"></a><h2 id="一、Request概述"><a href="#一、Request概述" class="headerlink" title="一、Request概述"></a>一、Request概述</h2><ul><li>用户通过浏览器访问服务器时，Tomcat将HTTP请求中所有的信息都封装在Request对象中</li><li>作用：开发人员可以通过request对象方法，来获取浏览器发送的所有信息。</li></ul><p><img data-src="/img/request.png" alt="request"></p><p><strong>Request体系结构</strong></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ServletRequest</span><br><span class="line"><span class="code">|</span></span><br><span class="line">HttpServletRequest</span><br><span class="line"><span class="code">|</span></span><br><span class="line">org.apache.catalina.connector.RequestFacade（由tomcat厂商提供）</span><br></pre></td></tr></table></figure><h2 id="二、Request获取HTTP请求信息"><a href="#二、Request获取HTTP请求信息" class="headerlink" title="二、Request获取HTTP请求信息"></a>二、Request获取HTTP请求信息</h2><h3 id="2-1-获取请求行"><a href="#2-1-获取请求行" class="headerlink" title="2.1 获取请求行"></a>2.1 获取请求行</h3><p>例如(请求行数据)：<code>GET /request/RequestLine HTTP/1.1</code></p><p><strong>相关API：</strong></p><ul><li>获取请求方法：GET<ul><li><code>String getMethod()</code></li></ul></li><li>获取请求项目的网络地址(虚拟路径)：/request<ul><li><code>String getContextPath()</code></li></ul></li><li>获取请求的URI（统一资源标识符）：/request/RequestLine<ul><li><code>String getRequestURI()</code></li></ul></li><li>获取请求的URL（统一资源定位符）：<a href="http://localhost:8080/request/RequestLine" target="_blank" rel="noopener">http://localhost:8080/request/RequestLine</a><ul><li><code>StringBuffer getRequestURL()</code></li></ul></li><li>获取请求协议和版本：HTTP/1.1<ul><li><code>String getProtocol()</code></li></ul></li></ul><p><strong>扩展(不属于请求行)：</strong></p><ul><li>获取客户端访问ip：<code>String getRemoteAddr()</code><ul><li>注意：<ul><li>如果localhost访问，显示IPV6</li><li>如果127.0.0.1访问，显示IPV4</li></ul></li></ul></li></ul><p>代码演示：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/RequestLine"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RequestLine</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"获取请求方式："</span> + request.getMethod());</span><br><span class="line">        System.out.println(<span class="string">"获取虚拟路径："</span> + request.getContextPath());</span><br><span class="line">        System.out.println(<span class="string">"获取请求的URI："</span> + request.getRequestURI());</span><br><span class="line">        System.out.println(<span class="string">"获取请求的URL："</span> + request.getRequestURL());</span><br><span class="line">        System.out.println(<span class="string">"获取请求的协议和版本："</span> + request.getProtocol());</span><br><span class="line">        System.out.println(<span class="string">"获取客户端IP："</span> + request.getRemoteAddr());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-2-获取请求头信息"><a href="#2-2-获取请求头信息" class="headerlink" title="2.2 获取请求头信息"></a>2.2 获取请求头信息</h3><p>例如：<code>host: localhost:8080</code></p><p><strong>相关API：</strong></p><ul><li>根据请求头的名称获取对应的值【不区分大小写】：<ul><li><code>String getHeader(String name)</code></li></ul></li><li>获取所有请求头的名称：<ul><li><code>Enumeration&lt;String&gt; getHeaderNames()</code><ul><li>Enumeration是Iterator的前身，用于属于的遍历</li></ul></li></ul></li></ul><p>代码演示：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/RequestHeader"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RequestHeader</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">// getHeader(String name):获取请求头名称对应的值</span></span><br><span class="line">        System.out.println(<span class="string">"host:"</span> + request.getHeader(<span class="string">"host"</span>));</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"===================================="</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//Enumeration&lt;String&gt; getHeaderNames():获取所有请求头名称</span></span><br><span class="line">        Enumeration&lt;String&gt; requestHeaderNames = request.getHeaderNames();</span><br><span class="line">        <span class="comment">// 迭代遍历数据</span></span><br><span class="line">        <span class="keyword">while</span> (requestHeaderNames.hasMoreElements())&#123; <span class="comment">// 判断还有没有数据</span></span><br><span class="line">            <span class="comment">// 获取数据</span></span><br><span class="line">            String headerName = requestHeaderNames.nextElement();</span><br><span class="line">            <span class="comment">// 打印输出</span></span><br><span class="line">            System.out.println(headerName + <span class="string">":"</span> + request.getHeader(headerName));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-3-Request案例"><a href="#2-3-Request案例" class="headerlink" title="2.3 Request案例"></a>2.3 Request案例</h3><h4 id="2-3-1-视频防盗链"><a href="#2-3-1-视频防盗链" class="headerlink" title="2.3.1 视频防盗链"></a>2.3.1 视频防盗链</h4><p><strong>原理：</strong></p><ul><li><strong>获取请求头信息中的referer头，判断是否是官方域名跳转过来的，不是则不许播放视频，是则可以播放。</strong></li></ul><blockquote><p>注意：如果是浏览器地址栏直接访问，没有referer这个头</p></blockquote><p><strong>代码实现：</strong></p><p><strong>QQLiveServlet</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 防盗链案例</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/QQLiveServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">QQLiveServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//设置文本格式及字符集</span></span><br><span class="line">        response.setContentType(<span class="string">"text/html;charset=utf-8"</span>);</span><br><span class="line">        <span class="comment">//获取referer头信息</span></span><br><span class="line">        String referer = request.getHeader(<span class="string">"referer"</span>);</span><br><span class="line">        <span class="comment">//判断是否以指定域名开头</span></span><br><span class="line">        <span class="keyword">if</span> (referer.startsWith(<span class="string">"http://localhost:8080/request_response/"</span>))&#123;</span><br><span class="line">            <span class="comment">// 是，正常播放</span></span><br><span class="line">            response.getWriter().write(<span class="string">"&lt;h1&gt;播放中....&lt;/h1&gt;"</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">//否 友情提示</span></span><br><span class="line">            String url = request.getRequestURL().toString();</span><br><span class="line">            response.getWriter().write(<span class="string">"&lt;h1&gt;请来官网观看视频，点击跳转:&lt;a href=\""</span>+url+<span class="string">"\"&gt;打开链接&lt;/a&gt;&lt;/h1&gt;"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>内部页面</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/request_response/QQLiveServlet"</span>&gt;</span>打开视频<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>外部网站页面</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://localhost:8080/request_response/QQLiveServlet"</span>&gt;</span>打开视频<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-3-2-浏览器兼容性案例"><a href="#2-3-2-浏览器兼容性案例" class="headerlink" title="2.3.2 浏览器兼容性案例"></a>2.3.2 浏览器兼容性案例</h3><p>原理：通过获取请求头中的<strong>user-agent</strong>，里面包含了浏览器的版本信息，判断是什么浏览器，进行不同的处理方式。</p><p><img data-src="/img/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%85%BC%E5%AE%B9%E6%80%A7%E6%A1%88%E4%BE%8B.png" alt="浏览器兼容性案例"></p><blockquote><p>user-agent：保存了浏览器版本信息</p></blockquote><p><strong>代码实现</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 浏览器兼容案例</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/BrowserServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BrowserServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//设置编码</span></span><br><span class="line">        response.setContentType(<span class="string">"text/html;charset=utf-8"</span>);</span><br><span class="line">        <span class="comment">//获取浏览器请求头信息user-agent，客户端版本信息</span></span><br><span class="line">        String agent = request.getHeader(<span class="string">"user-agent"</span>);</span><br><span class="line">        <span class="keyword">if</span> (agent.contains(<span class="string">"Chrome"</span>))&#123;</span><br><span class="line">            <span class="comment">//谷歌浏览器</span></span><br><span class="line">            response.getWriter().write(<span class="string">"&lt;h1&gt;这是谷歌浏览器...&lt;/h1&gt;"</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (agent.contains(<span class="string">"Firefox"</span>))&#123;</span><br><span class="line">            response.getWriter().write(<span class="string">"&lt;h1&gt;这是火狐浏览器...&lt;/h1&gt;"</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            response.getWriter().write(<span class="string">"&lt;h1&gt;其他浏览器...&lt;/h1&gt;"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-4-Request获取请求参数"><a href="#2-4-Request获取请求参数" class="headerlink" title="2.4 Request获取请求参数"></a>2.4 Request获取请求参数</h3><ul><li><p><strong>不论get还是post请求方式，都可以使用下列方法来获取请求参数</strong></p></li><li><p><strong>浏览器中参数格式</strong>：username=jack&amp;age=18&amp;hobby=drink&amp;hobby=perm</p></li></ul><p><strong>获取参数相关API：</strong></p><ul><li>根据参数名获取单个值：<code>String getParameter(String name)</code></li><li>根据参数名获取多个值【用在复选框】：<code>String[] getParameterValues(String name)</code></li><li>获取所有参数名和参数值数组：<code>Map&lt;String,String[]&gt; getParameterMap()</code></li></ul><blockquote><p>中文乱码问题：</p><ul><li>get方式：在tomcat8版本之后，已经处理了乱码问题<ul><li>浏览器提交UTF-8编码，服务器接收UTF-8解码</li></ul></li><li>post方式：出现了中文乱码(可以通过设置指定post提交的解码方式)<ul><li>浏览器提交UTF-8编码，服务器接收ISO-8859-1解码</li><li><code>request.setCharacterEncoding(&quot;编码表名称&quot;);</code></li></ul></li></ul></blockquote><p><strong>代码演示：</strong></p><p>表单提交页面</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>form<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>get请求<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"/request_response/RequestParam"</span> <span class="attr">method</span>=<span class="string">"get"</span>&gt;</span></span><br><span class="line">    用户：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"username"</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    年龄：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"age"</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    爱好：</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"hobby"</span> <span class="attr">value</span>=<span class="string">"smoking"</span>&gt;</span> 抽烟</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"hobby"</span> <span class="attr">value</span>=<span class="string">"drink"</span>&gt;</span> 喝酒</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"hobby"</span> <span class="attr">value</span>=<span class="string">"perm"</span>&gt;</span> 烫头 <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"get提交"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>post请求<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"/request_response/RequestParam"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">    用户：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"username"</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    年龄：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"age"</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    爱好：</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"hobby"</span> <span class="attr">value</span>=<span class="string">"smoking"</span>&gt;</span> 抽烟</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"hobby"</span> <span class="attr">value</span>=<span class="string">"drink"</span>&gt;</span> 喝酒</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"hobby"</span> <span class="attr">value</span>=<span class="string">"perm"</span>&gt;</span> 烫头 <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"post提交"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>java接收参数</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/RequestParam"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RequestParam</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"get请求"</span>);</span><br><span class="line">        <span class="comment">//根据参数名获取单个值    String getParameter(String name)</span></span><br><span class="line">        System.out.println(<span class="string">"username="</span> + request.getParameter(<span class="string">"username"</span>));</span><br><span class="line">        System.out.println(<span class="string">"=========================================================="</span>);</span><br><span class="line">        <span class="comment">//根据参数名获取多个值【用在复选框】 String[] getParameterValues(String name)</span></span><br><span class="line">        String[] hobbies = request.getParameterValues(<span class="string">"hobby"</span>);</span><br><span class="line">        System.out.println(<span class="string">"hobby="</span> + Arrays.toString(hobbies));</span><br><span class="line">        System.out.println(<span class="string">"=========================================================="</span>);</span><br><span class="line">        <span class="comment">//获取所有参数名和参数值数组 Map&lt;String,String[]&gt; getParameterMap()</span></span><br><span class="line">        Map&lt;String, String[]&gt; parameterMap = request.getParameterMap();</span><br><span class="line">        parameterMap.forEach((k,v) -&gt; System.out.println(k + <span class="string">"="</span> + Arrays.toString(v)));</span><br><span class="line">        System.out.println(<span class="string">"=========================================================="</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//解决post中文乱码</span></span><br><span class="line">        request.setCharacterEncoding(<span class="string">"utf-8"</span>);</span><br><span class="line">        System.out.println(<span class="string">"post请求"</span>);</span><br><span class="line">        <span class="keyword">this</span>.doGet(request,response);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-5-扩展：BeanUtils"><a href="#2-5-扩展：BeanUtils" class="headerlink" title="2.5 扩展：BeanUtils"></a>2.5 扩展：BeanUtils</h3><p>BeanUtils 是 Apache 提供的一套工具包，可以将一个表单提交的所有数据封装到JavaBean（User对象）中；主要用于简化封装数据的操作。</p><blockquote><p>可以获取表单数据，直接封装到一个Java实体类中，方便操作以及保存。</p></blockquote><p>使用演示：</p><p><strong>① 导包</strong></p><p><strong>② 准备实体类</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String[] hobby;</span><br><span class="line"></span><br><span class="line"><span class="comment">// get、set方法略...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>③ 前端页面</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>BeanUtils请求<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"/day07-request/BeanUtilsTest"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">    用户：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"username"</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    年龄：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"age"</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    爱好：</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"hobby"</span> <span class="attr">value</span>=<span class="string">"smoking"</span>&gt;</span> 抽烟</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"hobby"</span> <span class="attr">value</span>=<span class="string">"drink"</span>&gt;</span> 喝酒</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"hobby"</span> <span class="attr">value</span>=<span class="string">"perm"</span>&gt;</span> 烫头 <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"post提交"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>④ 前置条件</strong></p><ul><li><strong>实体类的变量名必须与表单的name属性的值一样，才能使用BeanUtils调用populate方法进行封装</strong></li></ul><p><strong>⑤ 代码实现</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    将前端表单提交的参数，封装到 User实体中</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/BeanUtilsTest"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BeanUtilsTest</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        request.setCharacterEncoding(<span class="string">"utf-8"</span>);</span><br><span class="line">        <span class="comment">// 1.获取所有表单的参数和值</span></span><br><span class="line">        Map&lt;String, String[]&gt; parameterMap = request.getParameterMap();</span><br><span class="line">        <span class="comment">// 2.准备user实体</span></span><br><span class="line">        User user = <span class="keyword">new</span> User();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 3.调用apache工具类，实现快速封装</span></span><br><span class="line">            BeanUtils.populate(user, parameterMap);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(user);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="三、Request的其他功能"><a href="#三、Request的其他功能" class="headerlink" title="三、Request的其他功能"></a>三、Request的其他功能</h2><h3 id="3-1-请求转发"><a href="#3-1-请求转发" class="headerlink" title="3.1 请求转发"></a>3.1 请求转发</h3><p><strong>请求转发</strong>：是服务器内部的一种资源跳转方式，浏览器中的URL没有发生改变，并且这个过程浏览器是不可见的。在转发的过程中，浏览器值发送了一次请求，产生一对request和response对象，在转发的过程中req和resp对象将伴随着转发到目标servlet中。完成浏览器的请求。在完成本次请求时，req和resp对象销毁。</p><p><strong>完成请求转发的相关API：</strong></p><ul><li>方式一：<ul><li>通过request对象，获取转发器对象：RequestDispatcher getRequestDispatcher(String path)</li><li>通过RequestDispatcher对象，实现请求转发功能：void forward(ServletRequest request, ServletResponse response) </li></ul></li><li>方式二：链式编程<ul><li><code>request.getRequestDispatcher(&quot;/BServlet&quot;).forward(request, response);</code></li></ul></li></ul><h3 id="3-2-Request域对象-共享数据"><a href="#3-2-Request域对象-共享数据" class="headerlink" title="3.2 Request域对象(共享数据)"></a>3.2 Request域对象(共享数据)</h3><ul><li>域对象：一个有作用范围的对象，可以在范围内共享数据</li><li>reqest域：代表一次请求的范围，一般用于一次请求中转发的多个资源中共享数据</li></ul><p><strong>相关API：</strong></p><ul><li>存数据：<code>void setAttribute(String name,Object o);</code></li><li>取数据：<code>Object getAttribute(String name);</code></li><li>删数据：<code>void removeAttribute(String name);</code></li></ul><p><strong>request域的生命周期：</strong></p><ul><li>创建：用户发送请求时</li><li>销毁：服务器做出响应后</li><li>作用范围：一次请求，多次转发之间</li></ul><h3 id="3-3-Request案例——用户登录"><a href="#3-3-Request案例——用户登录" class="headerlink" title="3.3 Request案例——用户登录"></a>3.3 Request案例——用户登录</h3><p>需求：</p><ul><li><p>实现用户的登录功能</p></li><li><p>登录成功跳转到SuccessServlet展示：登录成功！xxx,欢迎您</p></li><li><p>登录失败跳转到FailServlet展示：登录失败，用户名或密码错误</p></li></ul><p>前端页面：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>login<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"margin: 0 auto;width: 300px;height: 150px;border: 1px solid red;padding: 50px"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>用户登录<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"/request_response/LoginServlet"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">            用户名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"username"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">            密<span class="symbol">&amp;emsp;</span>码：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"password"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"登录"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>LoginServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sun.request.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.sun.request.test.domain.User;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.beanutils.BeanUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.InvocationTargetException;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/LoginServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//定义User对象</span></span><br><span class="line">        User user = <span class="keyword">new</span> User();</span><br><span class="line">        <span class="comment">//获取请求参数的Map集合</span></span><br><span class="line">        Map&lt;String, String[]&gt; userMap = request.getParameterMap();</span><br><span class="line">        <span class="comment">//封装数据</span></span><br><span class="line">        <span class="comment">/*userMap.forEach((k,v)-&gt;&#123;</span></span><br><span class="line"><span class="comment">            if ("username".equals(k))&#123;</span></span><br><span class="line"><span class="comment">                user.setUsername(v[0]);</span></span><br><span class="line"><span class="comment">            &#125; else if ("password".equals(k)) &#123;</span></span><br><span class="line"><span class="comment">                user.setPassword(v[0]);</span></span><br><span class="line"><span class="comment">            &#125;</span></span><br><span class="line"><span class="comment">        &#125;);*/</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            BeanUtils.populate(user,userMap);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IllegalAccessException | InvocationTargetException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 测试是否是否获取到了数据</span></span><br><span class="line">        System.out.println(user.getUsername());</span><br><span class="line">        System.out.println(user.getPassword());</span><br><span class="line"></span><br><span class="line">        <span class="comment">//判断用户名密码是否正确，进行不同页面的转发</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="string">"jack"</span>.equals(user.getUsername()) &amp;&amp; <span class="string">"123"</span>.equals(user.getPassword()))&#123;</span><br><span class="line">            <span class="comment">//正确</span></span><br><span class="line">            <span class="comment">//向request域对象中存入用户名</span></span><br><span class="line">            request.setAttribute(<span class="string">"username"</span>,user.getUsername());</span><br><span class="line">            <span class="comment">//获取转发器，参数传递转发的Servlet，调用forward方法转发，参数传递req和resp对象</span></span><br><span class="line">            request.getRequestDispatcher(<span class="string">"/LoginSuccess"</span>).forward(request,response);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">//错误</span></span><br><span class="line">            <span class="comment">//获取转发器，参数传递转发的Servlet，调用forward方法转发，参数传递req和resp对象</span></span><br><span class="line">            request.getRequestDispatcher(<span class="string">"/LoginFail"</span>).forward(request,response);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>LoginSuccess</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sun.request.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 登录成功</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/LoginSuccess"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginSuccess</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//设置文本类型及字符集</span></span><br><span class="line">        response.setContentType(<span class="string">"text/html;charset=utf-8"</span>);</span><br><span class="line">        <span class="comment">//用户名和密码正确登录成功</span></span><br><span class="line">        <span class="comment">//获取到request域对象中存储的用户姓名，并向页面进行展示</span></span><br><span class="line">        String username = (String) request.getAttribute(<span class="string">"username"</span>);</span><br><span class="line">        response.getWriter().write(<span class="string">"&lt;h1&gt;登录成功，欢迎您："</span> + username + <span class="string">"&lt;/h1&gt;"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>LoginFail</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/LoginFail"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginFail</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        response.setContentType(<span class="string">"text/html;charset=utf-8"</span>);</span><br><span class="line">        <span class="comment">//登录失败，提示用户名或密码错误</span></span><br><span class="line">        response.getWriter().write(<span class="string">"&lt;h1&gt;登录失败，用户名或密码错误&lt;/h1&gt;"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="四、Response概述"><a href="#四、Response概述" class="headerlink" title="四、Response概述"></a>四、Response概述</h2><ul><li>response对象表示web服务器给浏览器返回的响应信息</li><li>作用：开发人员可以使用response对象的方法，设置要返回给浏览器的响应信息</li></ul><p><img data-src="/img/response.png" alt="response"></p><p><strong>Response体系结构</strong></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ServletResponse 接口</span><br><span class="line"><span class="code">|</span></span><br><span class="line">HttpServletResponse 接口</span><br><span class="line"><span class="code">|</span></span><br><span class="line">org.apache.catalina.connector.ResponseFacade 实现类（由tomcat提供的）</span><br></pre></td></tr></table></figure><h2 id="五、Response设置Http响应消息"><a href="#五、Response设置Http响应消息" class="headerlink" title="五、Response设置Http响应消息"></a>五、Response设置Http响应消息</h2><h3 id="5-1-Response相关API"><a href="#5-1-Response相关API" class="headerlink" title="5.1 Response相关API"></a>5.1 Response相关API</h3><p>① 响应行：</p><ul><li>设置响应状态码：<code>void setStatus(int sc)</code></li></ul><p>② 响应头：</p><ul><li>设置响应名称和对应的值：<code>void setHeader(String name, String value)</code></li></ul><p>③ 响应体：</p><ul><li>设置字符输出流<ul><li><code>PrintWriter getWriter()</code><ul><li>print()：将其他类型转为字符，再进行输出</li><li>write()：只能输出字符</li></ul></li></ul></li><li>设置字节输出流<ul><li><code>ServletOutputStream getOutputStream()</code></li></ul></li></ul><blockquote><p>注意：在同一个servlet内，只能同时使用一种流对象，这两个流是互斥的….</p></blockquote><h3 id="5-2-响应重定向"><a href="#5-2-响应重定向" class="headerlink" title="5.2 响应重定向"></a>5.2 响应重定向</h3><p><strong>需求：用户访问AServlet后，服务器告诉浏览器重定向到BServlet</strong></p><p>实现思路：</p><ul><li><p>方式一：</p><ul><li>设置响应状态码：<code>response.setStatus(302);</code></li><li>设置响应头Location跳转的地址：<code>response.setHeader(&quot;location&quot;,&quot;/项目网络地址/资源网络地址&quot;);</code></li></ul></li><li><p>方式二：专门提供了一个重定向的方法</p><ul><li><code>response.sendRedirect(&quot;/项目网络地址/资源网络地址&quot;);</code></li></ul></li></ul><p>代码实现：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/AServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">// 方式一：</span></span><br><span class="line">        <span class="comment">//设置状态码</span></span><br><span class="line">        <span class="comment">// response.setStatus(302);</span></span><br><span class="line">        <span class="comment">//设置转发路径</span></span><br><span class="line">        <span class="comment">// response.setHeader("location","/day07_request_response/BServlet");</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//方式二</span></span><br><span class="line">        response.sendRedirect(<span class="string">"/day07_request_response/BServlet"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/BServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        response.setContentType(<span class="string">"text/html;charset=utf-8"</span>);</span><br><span class="line">        response.getWriter().write(<span class="string">"处理了请求"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="重定向的特点"><a href="#重定向的特点" class="headerlink" title="重定向的特点"></a>重定向的特点</h5><ul><li>地址栏发生改变</li><li>浏览器发送二次请求</li><li>request和response创建二次（AServlet和BServlet不能共享这二个对象）</li><li>重定向是客户端行为，浏览器清楚发生的变化</li></ul><h3 id="5-3-转发与重定向的区别"><a href="#5-3-转发与重定向的区别" class="headerlink" title="5.3 转发与重定向的区别"></a>5.3 转发与重定向的区别</h3><p><strong>哪个对象?</strong></p><ul><li>转发（request对象的方法)<ul><li>request.getRequestDispatcher(“/BServlet”).forward(request,response);</li></ul></li><li>重定向（response对象的方法）        <ul><li>response.sendRedirect(“/day07-response/BServlet”);</li></ul></li></ul><p><strong>几次请求</strong></p><ul><li>转发<ul><li>地址栏： 没有改变</li><li>浏览器： 发了一次请求</li><li>服务器： 只有一对请求和响应对象</li><li>发生的位置： 服务器内部</li></ul></li><li>重定向<ul><li>地址栏： 发生了改变</li><li>浏览器： 发了两次请求</li><li>服务器： 有两对请求和响应对象</li><li>发生的位置： 浏览器外部</li></ul></li></ul><h3 id="5-4-Response响应中文"><a href="#5-4-Response响应中文" class="headerlink" title="5.4 Response响应中文"></a>5.4 Response响应中文</h3><p>向浏览器输出中文数据时不能乱码</p><p>解决：指定编码</p><ol><li>指定服务器响应编码<ul><li><code>void setCharacterEncoding(String charset)</code></li></ul></li><li>统一服务器和客户端编码和解码（掌握）<ul><li><code>void setHeader(&quot;Content-Type&quot;,&quot;text/html;charset=utf-8&quot;);</code></li><li><code>void setContentType(&quot;text/html;charset=utf-8&quot;);</code></li></ul></li></ol><p>代码实现：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/ResponseCode"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ResponseCode</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">       <span class="comment">/* // 指定服务器响应编码</span></span><br><span class="line"><span class="comment">        response.setCharacterEncoding("gbk");*/</span></span><br><span class="line"></span><br><span class="line">       <span class="comment">// 统一服务器和客户端编码和解码</span></span><br><span class="line">        response.setContentType(<span class="string">"text/html;charset=utf-8"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取response的字符输出流</span></span><br><span class="line">        PrintWriter writer = response.getWriter();</span><br><span class="line">        writer.write(<span class="string">"你好，你也蛮好的！"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-5-Response文件下载案例"><a href="#5-5-Response文件下载案例" class="headerlink" title="5.5 Response文件下载案例"></a>5.5 Response文件下载案例</h3><p>需求：用户点击链接，浏览器开始下载文件。</p><p>思路：</p><ul><li>需要使用两个响应头，两个字节流。</li></ul><p>大致步骤：</p><ul><li>被下载文件的字节输入流<ul><li>FileInputStream</li></ul></li><li>response字节输出流<ul><li>ServletOutputStream</li></ul></li><li>告知客户端下载文件的MIME类型<ul><li>Content-Type:MIME类型</li></ul></li><li>告知浏览器以附件的方式保存<ul><li>Content-Disposition:attachment;filename=文件名</li></ul></li></ul><blockquote><p>注意：在这个下载过程如果文件名时中午，可能出现乱码情况，所以需要对不同的浏览器做出不同的处理</p></blockquote><p>代码实现：</p><p>前端页面</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>文件下载<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h4</span>&gt;</span>下载<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/request_response/FileDownload?filename=test.zip"</span>&gt;</span>test.zip<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/request_response/FileDownload?filename=demo.docx"</span>&gt;</span>demo.docx<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/request_response/FileDownload?filename=car.jpg"</span>&gt;</span>car.jpg<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/request_response/FileDownload?filename=禽兽.jpg"</span>&gt;</span>禽兽.jpg<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Servlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sun.response.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.hutool.core.io.IoUtil;</span><br><span class="line"><span class="keyword">import</span> com.sun.utils.DownLoadUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletOutputStream;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 文件下载案例</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/FileDownload"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FileDownload</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">// 获取要下载的文件名</span></span><br><span class="line">        String filename = request.getParameter(<span class="string">"filename"</span>);</span><br><span class="line">        <span class="comment">// 获取要下载的文件真实路径</span></span><br><span class="line">        String filePath = getServletContext().getRealPath(<span class="string">"/download/"</span> + filename);</span><br><span class="line">        <span class="comment">// 获取文件字节输入流</span></span><br><span class="line">        FileInputStream in = <span class="keyword">new</span> FileInputStream(filePath);</span><br><span class="line">        <span class="comment">// 获取response字节输出流</span></span><br><span class="line">        ServletOutputStream out = response.getOutputStream();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 中文文件名会出现乱码问题，使用工具类对不同的浏览器对中文进行编码</span></span><br><span class="line">        <span class="comment">// 获取浏览器版本</span></span><br><span class="line">        filename = DownLoadUtils.getName(<span class="string">"user-agent"</span>, filename);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取文件的MIME类型告知浏览器</span></span><br><span class="line">        String mimeType = getServletContext().getMimeType(filename);</span><br><span class="line">        response.setContentType(mimeType);</span><br><span class="line">        <span class="comment">// 告知浏览器以附件形式下载文件</span></span><br><span class="line">        response.setHeader(<span class="string">"Content-Disposition"</span>,<span class="string">"attachment;filename="</span> + filename);</span><br><span class="line">        <span class="comment">// 一读一写复制文件</span></span><br><span class="line">        <span class="keyword">byte</span>[] bArr = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">8092</span>];</span><br><span class="line">        <span class="keyword">int</span> len;</span><br><span class="line">        <span class="keyword">while</span> ((len = in.read(bArr)) != -<span class="number">1</span>)&#123;</span><br><span class="line">            out.write(bArr,<span class="number">0</span>,len);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 关流，释放资源</span></span><br><span class="line">        out.close();</span><br><span class="line">        in.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>工具类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 编码解码</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DownLoadUtils</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getName</span><span class="params">(String agent, String filename)</span> <span class="keyword">throws</span> UnsupportedEncodingException </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (agent.contains(<span class="string">"Firefox"</span>)) &#123;</span><br><span class="line"><span class="comment">// 火狐浏览器</span></span><br><span class="line">BASE64Encoder base64Encoder = <span class="keyword">new</span> BASE64Encoder();</span><br><span class="line">filename = <span class="string">"=?utf-8?B?"</span> + base64Encoder.encode(filename.getBytes(<span class="string">"utf-8"</span>)) + <span class="string">"?="</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">// 其它浏览器</span></span><br><span class="line">filename = URLEncoder.encode(filename, <span class="string">"utf-8"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> filename;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Request-amp-Response&quot;&gt;&lt;a href=&quot;#Request-amp-Response&quot; class=&quot;headerlink&quot; title=&quot;Request&amp;amp;Response&quot;&gt;&lt;/a&gt;Request&amp;amp;Response&lt;/h1&gt;&lt;p&gt;Request请求对象：获取&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;HTTP请求消息格式(行、头、体)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Response响应对象：设置&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;HTTP响应消息格式(行、头、体)&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="JavaWeb" scheme="http://sunmoon.com/categories/JavaWeb/"/>
    
    
      <category term="学习" scheme="http://sunmoon.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="request" scheme="http://sunmoon.com/tags/request/"/>
    
      <category term="response" scheme="http://sunmoon.com/tags/response/"/>
    
  </entry>
  
  <entry>
    <title>Servlet</title>
    <link href="http://sunmoon.com/2020/08/22/Servlet/"/>
    <id>http://sunmoon.com/2020/08/22/Servlet/</id>
    <published>2020-08-22T12:38:49.000Z</published>
    <updated>2020-08-22T12:42:45.909Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、Servlet概述"><a href="#一、Servlet概述" class="headerlink" title="一、Servlet概述"></a>一、Servlet概述</h2><ul><li>servlet= server+applet 运行在服务器端的java程序。</li><li>Servlet是一个接口，一个类要想通过浏览器被访问到,那么这个类就必须直接或间接的实现Servlet接口</li></ul><p><strong>作用：接收请求，处理逻辑，响应结果</strong></p><blockquote><p>Servlet是一个接口，一个类想要通过浏览器被访问到，那么这个类就必须直接或者间接的实现Servlet接口</p></blockquote><a id="more"></a><h2 id="二、Servlet快速入门"><a href="#二、Servlet快速入门" class="headerlink" title="二、Servlet快速入门"></a>二、Servlet快速入门</h2><h3 id="2-1-代码编写"><a href="#2-1-代码编写" class="headerlink" title="2.1 代码编写"></a>2.1 代码编写</h3><ol><li>创建JavaEE项目</li><li>定义一个类，实现Servlet接口</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">QuickServlet</span> <span class="keyword">implements</span> <span class="title">Servlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(ServletConfig servletConfig)</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ServletConfig <span class="title">getServletConfig</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(ServletRequest servletRequest, ServletResponse servletResponse)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Servlet快速入门...."</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getServletInfo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li><p>实现接口中的抽象方法</p></li><li><p>配置Servlet</p><ul><li>在web.xml中配置如下：</li></ul></li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>QuickServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.sun.servlet.QuickServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>QuickServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/quickServlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="5"><li>部署到Tomcat启动服务器访问即可</li></ol><h3 id="2-2-访问流程"><a href="#2-2-访问流程" class="headerlink" title="2.2 访问流程"></a>2.2 访问流程</h3><ol><li>当服务器接收到客户端浏览器的请求后，会解析请求URL路径，获取访问的Servlet的资源路径</li><li>查找web.xml文件，是否有对应的<url-pattern>标签体内容</li><li>如果有，则在找到对应的<servlet-class>全类名</li><li>tomcat会将字节码文件加载进内存，创建其对象</li><li>调用其方法</li></ol><p><img data-src="/img/servlet%E8%AE%BF%E9%97%AE%E6%B5%81%E7%A8%8B%E5%88%86%E6%9E%90.png" alt="servlet访问流程分析"></p><h2 id="三、Servlet相关API"><a href="#三、Servlet相关API" class="headerlink" title="三、Servlet相关API"></a>三、Servlet相关API</h2><h3 id="3-1-生命周期相关"><a href="#3-1-生命周期相关" class="headerlink" title="3.1 生命周期相关"></a>3.1 生命周期相关</h3><h4 id="3-1-1-思想介绍"><a href="#3-1-1-思想介绍" class="headerlink" title="3.1.1 思想介绍"></a>3.1.1 思想介绍</h4><p>生命周期：指的是一个对象从生（创建）到死（销毁）的一个过程</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1.servlet创建时，执行init初始化方法,只执行一次</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(ServletConfig servletConfig)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2.用户访问时，执行service服务方法</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(ServletRequest servletRequest, ServletResponse servletResponse)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 3.servlet销毁时，执行destroy销毁方法</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure><p><img data-src="/img/Servlet%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F.png" alt="Servlet生命周期"></p><p><strong>① 创建：</strong></p><ul><li>默认情况下：用户第一次访问时，servlet创建，只创建一次</li><li>指定创建时机，在服务器启动时，创建<ul><li>配置web.xml文件servlet标签中<ul><li><code>&lt;load-on-startup&gt;&lt;/load-on-startup&gt;</code></li><li>正数：4~ ，因为tomcat内部也有一些servlet需要启动时创建</li><li>负数：-1（默认值），表示用户第一次访问时，创建</li></ul></li></ul></li></ul><p><strong>② 运行(提供服务)：</strong></p><ul><li>用户访问该servlet，都会执行service方法，执行多次</li></ul><p><strong>③ 销毁：</strong></p><ul><li>服务器关闭，servlet销毁</li></ul><blockquote><p>小贴士</p><ul><li>Servlet是一个单例的</li></ul><p>注意：在servlet中不要使用成员变量存值，会造成线程安全问题。</p></blockquote><h4 id="3-1-2-代码演示"><a href="#3-1-2-代码演示" class="headerlink" title="3.1.2 代码演示"></a>3.1.2 代码演示</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LifeServlet</span> <span class="keyword">implements</span> <span class="title">Servlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(ServletConfig servletConfig)</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"LifeServlet创建了.."</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ServletConfig <span class="title">getServletConfig</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(ServletRequest servletRequest, ServletResponse servletResponse)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"用户访问了LifeServlet，执行service方法"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getServletInfo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"LifeServlet销毁了..."</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>LifeServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.sun.LifeServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>4<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>LifeServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/LifeServlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-2-ServletConfig接口"><a href="#3-2-ServletConfig接口" class="headerlink" title="3.2 ServletConfig接口"></a>3.2 ServletConfig接口</h3><p>Tomcat在Servlet对象创建时，执行init()方法，并创建一个ServletConfig 配置对象。</p><ul><li>主要作用：读取web.xml配置文件Servlet中<init-param>信息，实现参数和代码的解耦</li></ul><p><strong>代码演示：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EncodeServlet</span> <span class="keyword">implements</span> <span class="title">Servlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 声明变量</span></span><br><span class="line">    <span class="keyword">private</span> ServletConfig servletConfig;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(ServletConfig servletConfig)</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.servletConfig= servletConfig;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 提供获取servletConfig公共方法</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ServletConfig <span class="title">getServletConfig</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> servletConfig;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 对外提供服务器</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(ServletRequest servletRequest, ServletResponse servletResponse)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">// 对中文进行编码</span></span><br><span class="line">        String encode = getServletConfig().getInitParameter(<span class="string">"encode"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 向浏览器输出结果</span></span><br><span class="line">        servletResponse.getWriter().write(encode);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getServletInfo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>EncodeServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.sun.EncodeServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>encode<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>gbk<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>EncodeServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/EncodeServlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="四、Servlet的继承体系"><a href="#四、Servlet的继承体系" class="headerlink" title="四、Servlet的继承体系"></a>四、Servlet的继承体系</h2><p><img data-src="/img/Servlet%E7%BB%A7%E6%89%BF%E4%BD%93%E7%B3%BB.png" alt="Servlet继承体系"></p><h3 id="4-1-GenericServlet"><a href="#4-1-GenericServlet" class="headerlink" title="4.1 GenericServlet"></a>4.1 GenericServlet</h3><ol><li>编写普通类，继承GenericServlet<ul><li>只需重写service()方法即可</li></ul></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ServletDemo1</span> <span class="keyword">extends</span> <span class="title">GenericServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"我重写init方法..."</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 对外提供服务的方法</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(ServletRequest servletRequest, ServletResponse servletResponse)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">        System.out.println(getServletConfig());</span><br><span class="line">        System.out.println(<span class="string">"ServletDemo1 extends GenericServlet"</span>);</span><br><span class="line">        servletResponse.getWriter().write(<span class="string">"ServletDemo1 extends GenericServlet"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"我重写destroy方法..."</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>配置web.xml</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>ServletDemo1<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.sun.ServletDemo1<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>ServletDemo1<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/ServletDemo1<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="4-2-HttpServlet"><a href="#4-2-HttpServlet" class="headerlink" title="4.2 HttpServlet"></a>4.2 HttpServlet</h3><p><img data-src="/img/%E7%BB%A7%E6%89%BFHttpServlet.png" alt="继承HttpServlet"></p><ol><li>编写普通类，继承HttpServlet<ul><li>重写 doGet()、doPost()</li></ul></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ServletDemo2</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"get方式请求....."</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"post方式请求....."</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>配置web.xml</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>ServletDemo2<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.sun.ServletDemo2<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>ServletDemo2<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/ServletDemo2<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="3"><li>编写表单</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>demo2<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"http://localhost:8080/servlet/ServletDemo2"</span> <span class="attr">method</span>=<span class="string">"get"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"get"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"http://localhost:8080/servlet/ServletDemo2"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="五、Servlet路径"><a href="#五、Servlet路径" class="headerlink" title="五、Servlet路径"></a>五、Servlet路径</h2><h3 id="5-1-url-pattern"><a href="#5-1-url-pattern" class="headerlink" title="5.1 url-pattern"></a>5.1 url-pattern</h3><p>作用：将一个请求网络地址和servlet类建立一个映射关系</p><blockquote><p>小贴士：一个Servlet可以映射多个网络地址</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- url-pattern 标签--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>ServletDemo3<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.sun.ServletDemo3<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--映射的第一个地址--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>ServletDemo3<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/haha<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--映射的第二个地址--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>ServletDemo3<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/hehe<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="5-2-绝对、相对路径"><a href="#5-2-绝对、相对路径" class="headerlink" title="5.2 绝对、相对路径"></a>5.2 绝对、相对路径</h3><p>举例：</p><ul><li>当前页面地址：<code>http://localhost:8080/servlet/static/path.html</code></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>path<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>当前页面的地址：http://localhost:8080/servlet/static/path.html<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        绝对路径</span></span><br><span class="line"><span class="comment">            完整格式：</span></span><br><span class="line"><span class="comment">                http://域名:端口/项目网络地址/资源网络地址</span></span><br><span class="line"><span class="comment">            （推荐）简化：</span></span><br><span class="line"><span class="comment">                /项目网络地址/资源网络地址</span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://localhost:8080/servlet/QuickServlet"</span>&gt;</span>绝对路径完整版<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/day06-servlet-xml/QuickServlet"</span>&gt;</span>绝对路径简化版<span class="tag">&lt;/<span class="name">a</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        相对路径（当前页面和目标页面的相对位置关系）</span></span><br><span class="line"><span class="comment">            ./ 当前目录下</span></span><br><span class="line"><span class="comment">            ../ 上级目录下</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"../QuickServlet"</span>&gt;</span>相对路径<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="六、Servlet3-0"><a href="#六、Servlet3-0" class="headerlink" title="六、Servlet3.0"></a>六、Servlet3.0</h2><ul><li>通过注解的方式配置Servlet，简化web.xml配置Servlet复杂性，提高开发效率。</li></ul><h3 id="6-1-快速入门"><a href="#6-1-快速入门" class="headerlink" title="6.1 快速入门"></a>6.1 快速入门</h3><p>步骤：</p><ul><li>创建JavaEE项目，选择Servlet的版本3.0以上，可以不创建web.xml</li><li>定义一个类，实现Servlet接口</li><li>复写方法</li><li>在类上使用@WebServlet注解，进行配置<ul><li>@WebServlet(“资源路径”)</li></ul></li></ul><p>注解类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Target</span>(&#123;ElementType.TYPE&#125;)</span><br><span class="line"><span class="meta">@Retention</span>(RetentionPolicy.RUNTIME)</span><br><span class="line"><span class="meta">@Documented</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> WebServlet &#123;</span><br><span class="line">    <span class="function">String <span class="title">name</span><span class="params">()</span> <span class="keyword">default</span> ""</span>;<span class="comment">//相当于&lt;Servlet-name&gt;</span></span><br><span class="line">    </span><br><span class="line">    String[] value() <span class="keyword">default</span> &#123;&#125;;<span class="comment">//代表urlPatterns()属性配置</span></span><br><span class="line">    </span><br><span class="line">    String[] urlPatterns() <span class="keyword">default</span> &#123;&#125;;<span class="comment">//相当于&lt;url-pattern&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">loadOnStartup</span><span class="params">()</span> <span class="keyword">default</span> -1</span>;<span class="comment">//相当于&lt;load-on-startup&gt;</span></span><br><span class="line">    </span><br><span class="line">    WebInitParam[] initParams() <span class="keyword">default</span> &#123;&#125;;</span><br><span class="line">    <span class="function"><span class="keyword">boolean</span> <span class="title">asyncSupported</span><span class="params">()</span> <span class="keyword">default</span> <span class="keyword">false</span></span>;</span><br><span class="line">    <span class="function">String <span class="title">smallIcon</span><span class="params">()</span> <span class="keyword">default</span> ""</span>;</span><br><span class="line">    <span class="function">String <span class="title">largeIcon</span><span class="params">()</span> <span class="keyword">default</span> ""</span>;</span><br><span class="line">    <span class="function">String <span class="title">description</span><span class="params">()</span> <span class="keyword">default</span> ""</span>;</span><br><span class="line">    <span class="function">String <span class="title">displayName</span><span class="params">()</span> <span class="keyword">default</span> ""</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>代码示例：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// @WebServlet(name = "QuickServlet", urlPatterns = "/QuickServlet")</span></span><br><span class="line"><span class="comment">// @WebServlet(urlPatterns = "/QuickServlet")</span></span><br><span class="line"><span class="comment">// @WebServlet(value = "/QuickServlet")</span></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/QuickServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">QuickServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(req,resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"servlet3.0注解开发..."</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="七、ServletContext"><a href="#七、ServletContext" class="headerlink" title="七、ServletContext"></a>七、ServletContext</h2><h3 id="7-1-概述"><a href="#7-1-概述" class="headerlink" title="7.1 概述"></a>7.1 概述</h3><p><strong>ServletContext</strong>：上下文对象</p><ul><li>web容器（tomcat）在启动时，它会为每个web项目承建一个对应的ServletContext对象</li><li>它代表：当前web项目</li></ul><p><strong>主要作用：</strong></p><ul><li>获取全局的配置参数</li><li>获取资源在服务器的真实（磁盘）地址</li><li>域对象（共享数据）</li><li>获取文件MIME类型</li></ul><p><strong>获取Serlvet对象的两种方式：</strong></p><ul><li><p>通过request对象获取：<code>ServletContext sc = request.getServletContext();</code></p></li><li><p>继承HttpServlet后，可以直接调用：<code>ServletContext sc = getServletContext();</code></p></li></ul><h3 id="7-2-域对象-共享数据"><a href="#7-2-域对象-共享数据" class="headerlink" title="7.2 域对象(共享数据)"></a>7.2 域对象(共享数据)</h3><p>在当前项目范围内，共享数据（多个servlet都可以获取）</p><p><img data-src="/img/ServletContext%E5%9F%9F%E5%AF%B9%E8%B1%A1%E5%9B%BE%E8%A7%A3.png" alt="ServletContext域对象图解"></p><p><strong>相关API：</strong></p><ul><li>存储数据：<code>void setAttribute(String name,Object value)</code></li><li>获取数据：<code>Object getAttribute(String name)</code></li><li>删除数据：<code>void removeAttribute(String name)</code></li></ul><h4 id="代码演示："><a href="#代码演示：" class="headerlink" title="代码演示："></a>代码演示：</h4><p>① OneServlet（存数据）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/OneServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OneServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//获取对象</span></span><br><span class="line">        ServletContext servletContext = getServletContext();</span><br><span class="line">        <span class="comment">//存储数据</span></span><br><span class="line">        servletContext.setAttribute(<span class="string">"user"</span>,<span class="string">"jack"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>② TwoServlet(取、删数据)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取数据</span></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/TwoServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TwoServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//获取对象</span></span><br><span class="line">        ServletContext servletContext = getServletContext();</span><br><span class="line">        <span class="comment">//获取数据</span></span><br><span class="line">        Object userName = servletContext.getAttribute(<span class="string">"user"</span>);</span><br><span class="line">        String name = (String) userName;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//删除数据</span></span><br><span class="line">        servletContext.removeAttribute(<span class="string">"user"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//向浏览器写数据</span></span><br><span class="line">        response.getWriter().write(name);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>域对象的生命周期</p><ul><li>创建：项目加载成功后，创建</li><li>销毁：项目关闭时，销毁</li><li>作用范围：整个web项目(与项目共存亡)</li></ul></blockquote><h3 id="7-3-获取资源在服务器的真实地址"><a href="#7-3-获取资源在服务器的真实地址" class="headerlink" title="7.3 获取资源在服务器的真实地址"></a>7.3 获取资源在服务器的真实地址</h3><p>相关API：</p><ul><li><code>String getRealPath(String path);</code></li></ul><p>代码演示：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/ServletDemo02"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ServletDemo02</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        ServletContext servletContext = getServletContext();</span><br><span class="line">        <span class="comment">//获取web.xml的真实路径</span></span><br><span class="line">        String webPath = servletContext.getRealPath(<span class="string">"WEB-INF/web.xml"</span>);</span><br><span class="line">        System.out.println(webPath);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="7-4-获取全局的配置参数"><a href="#7-4-获取全局的配置参数" class="headerlink" title="7.4 获取全局的配置参数"></a>7.4 获取全局的配置参数</h3><ul><li>读取web.xml配置文件中<context-param>标签信息，实现参数和代码的解耦（多个servlet都可以获取）</li></ul><p>相关API：</p><ul><li><code>String getInitParameter(String key);</code></li></ul><p>代码演示：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/ServletDemo03"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ServletDemo03</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        ServletContext servletContext = getServletContext();</span><br><span class="line">        String sex = servletContext.getInitParameter(<span class="string">"sex"</span>);</span><br><span class="line">        System.out.println(sex);<span class="comment">// boy</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">context-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>sex<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>boy<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="7-5-获取文件MIME类型"><a href="#7-5-获取文件MIME类型" class="headerlink" title="7.5 获取文件MIME类型"></a>7.5 获取文件MIME类型</h3><p>相关API：</p><ul><li>String getMimeType(String var1)</li></ul><p><strong>MIME类型：</strong></p><ul><li>在互联网通信过程中定义的一种文件数据类型</li><li>格式：<code>大类型/小类型</code> 例如：<code>text/html text/xml text/plan image/jpeg</code></li></ul><p><img data-src="/img/MIME%E7%B1%BB%E5%9E%8B.png" alt="MIME类型"></p><p>代码演示：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/ServletDemo04"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ServletDemo04</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        String fileName = <span class="string">"1.mp3"</span>;</span><br><span class="line">        <span class="comment">//设置字符集</span></span><br><span class="line">        response.setContentType(<span class="string">"text/html;charset:utf-8"</span>);</span><br><span class="line">        <span class="comment">//获取ServletContext对象</span></span><br><span class="line">        ServletContext servletContext = getServletContext();</span><br><span class="line">        String fileMime = servletContext.getMimeType(fileName);</span><br><span class="line">        response.getWriter().write(<span class="string">"&lt;h1&gt;"</span>+fileMime+<span class="string">"&lt;/h1&gt;"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="7-5-练习——统计网站访问次数"><a href="#7-5-练习——统计网站访问次数" class="headerlink" title="7.5 练习——统计网站访问次数"></a>7.5 练习——统计网站访问次数</h3><p><img data-src="/img/%E7%BB%9F%E8%AE%A1%E7%BD%91%E7%AB%99%E8%AE%BF%E9%97%AE%E6%AC%A1%E6%95%B0%E6%80%9D%E8%B7%AF.png" alt="统计网站访问次数思路"></p><p>代码实现：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/ServletCall"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ServletCall</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line">        ServletContext servletContext = getServletContext();</span><br><span class="line">        <span class="comment">// 定义初始访问次数为0,存储到域对象中</span></span><br><span class="line">        servletContext.setAttribute(<span class="string">"count"</span>,<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//设置文本类型，字符集</span></span><br><span class="line">        response.setContentType(<span class="string">"text/html;charset=utf-8"</span>);</span><br><span class="line">        ServletContext servletContext = getServletContext();</span><br><span class="line">        <span class="comment">//获取域对象中保存的变量</span></span><br><span class="line">        Integer count = (Integer) servletContext.getAttribute(<span class="string">"count"</span>);</span><br><span class="line">        <span class="comment">//+1</span></span><br><span class="line">        count++;</span><br><span class="line">        <span class="comment">//重新设置到域对象中保存</span></span><br><span class="line">        servletContext.setAttribute(<span class="string">"count"</span>,count);</span><br><span class="line">        <span class="comment">//向浏览器写数据，显示访问次数</span></span><br><span class="line">        response.getWriter().write(<span class="string">"&lt;h1&gt;访问次数为："</span>+count+<span class="string">"&lt;/h1&gt;"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、Servlet概述&quot;&gt;&lt;a href=&quot;#一、Servlet概述&quot; class=&quot;headerlink&quot; title=&quot;一、Servlet概述&quot;&gt;&lt;/a&gt;一、Servlet概述&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;servlet= server+applet 运行在服务器端的java程序。&lt;/li&gt;
&lt;li&gt;Servlet是一个接口，一个类要想通过浏览器被访问到,那么这个类就必须直接或间接的实现Servlet接口&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;作用：接收请求，处理逻辑，响应结果&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Servlet是一个接口，一个类想要通过浏览器被访问到，那么这个类就必须直接或者间接的实现Servlet接口&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="JavaWeb" scheme="http://sunmoon.com/categories/JavaWeb/"/>
    
    
      <category term="学习" scheme="http://sunmoon.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="Servlet" scheme="http://sunmoon.com/tags/Servlet/"/>
    
  </entry>
  
  <entry>
    <title>HTTP&amp;Tomcat</title>
    <link href="http://sunmoon.com/2020/08/20/HTTP-Tomcat/"/>
    <id>http://sunmoon.com/2020/08/20/HTTP-Tomcat/</id>
    <published>2020-08-20T14:36:33.000Z</published>
    <updated>2020-08-24T09:00:02.083Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、Web知识概述"><a href="#一、Web知识概述" class="headerlink" title="一、Web知识概述"></a>一、Web知识概述</h2><h3 id="1-1-软件架构"><a href="#1-1-软件架构" class="headerlink" title="1.1 软件架构"></a>1.1 软件架构</h3><ul><li>网络中有很多的计算机，它们直接的信息交流，我们称之为：交互</li><li>在互联网交互的过程的有两个非常典型的交互方式——B/S  交互模型（架构）和 C/S  交互模型（架构）</li></ul><a id="more"></a><p>C/S架构：客户端/服务器端</p><blockquote><p>Client/Server 客户端/服务器</p><p>访问服务器资源必须安装客户端软件</p><p>例如: QQ，绝地求生，LOL</p></blockquote><p>B/S：浏览器/服务器端</p><blockquote><p>Browser/Server 浏览器/服务器</p><p>访问服务器资源不需要专门安装客户端软件,而是直接通过浏览器访问服务器资源.</p><p>例如: 天猫、京东、知乎网站</p></blockquote><h3 id="1-2-资源分类"><a href="#1-2-资源分类" class="headerlink" title="1.2 资源分类"></a>1.2 资源分类</h3><ul><li><p>静态资源：所有用户访问后，得到的结果都是一样的，称为静态资源。静态资源可以直接被浏览器解析。</p><ul><li>如：html、css、JavaScript</li></ul></li><li><p>动态资源：每一个用户访问相同资源后，得到的结果可能不一样，称为动态资源。动态资源被访问后，需要先转换为静态资源，在返回给浏览器。</p><ul><li>如：servlet、jsp、asp、php</li></ul></li></ul><h3 id="1-3-网络通信的三要素"><a href="#1-3-网络通信的三要素" class="headerlink" title="1.3 网络通信的三要素"></a>1.3 网络通信的三要素</h3><ol><li>IP：电子设备在网络中的唯一标识。</li><li>端口：应用程序在计算机中的唯一标识。0~65535</li><li>传输协议：规定了数据传输的规则<ul><li>基础协议：<ol><li>TCP：安全协议，传输过程经过三次握手。速度稍慢</li><li>UDP：不安全协议。速度快</li></ol></li></ul></li></ol><h3 id="1-4-常见的Web服务器"><a href="#1-4-常见的Web服务器" class="headerlink" title="1.4 常见的Web服务器"></a>1.4 常见的Web服务器</h3><ul><li>Tomcat：Apache组织开源免费的web服务器</li></ul><ul><li>Jetty：Apache组织开源免费的小型web服务器</li></ul><ul><li><p>JBoss:：RedHat红帽公司的开源免费的web服务器</p></li><li><p>Glass Fish：Sun公司开源免费的web服务器</p></li><li><p>WebLogic：Oracle公司收费的web服务器</p></li><li><p>WebSphere：IBM公司收费的web服务器</p></li></ul><p><strong>JavaEE规范</strong></p><ul><li>在Java中所有的服务器厂商都要实现一组Oracle公司规定的接口，这些接口是称为JavaEE规范。不同厂商的JavaWeb服务器都实现了这些接口，在JavaEE中一共有13种规范。实现的规范越多，功能越强。</li></ul><h2 id="二、Tomcat服务器"><a href="#二、Tomcat服务器" class="headerlink" title="二、Tomcat服务器"></a>二、Tomcat服务器</h2><h3 id="2-1-Tomcat的使用"><a href="#2-1-Tomcat的使用" class="headerlink" title="2.1 Tomcat的使用"></a>2.1 Tomcat的使用</h3><ul><li><p>Tomcat 官网下载地址：<a href="https://tomcat.apache.org/download-80.cgi" target="_blank" rel="noopener">https://tomcat.apache.org/download-80.cgi</a></p></li><li><p>安装：解压压缩包即可。</p><ul><li>注意：安装目录不要有中文和空格</li></ul></li><li><p>卸载：删除Tomcat目录</p></li><li><p>目录结构：</p><p>  <img data-src="/img/tomcat%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84.png" alt="tomcat目录结构"></p></li><li><p>启动和关闭</p><p>  <img data-src="/img/tomcat%E5%90%AF%E5%8A%A8%E5%92%8C%E5%85%B3%E9%97%AD.png" alt="tomcat启动和关闭"></p></li></ul><blockquote><p>关闭补充：在tomcat的黑窗口内，按住 ctrl + c （也能正常关闭）</p></blockquote><ul><li>访问测试：浏览器输入<code>localhost:8080</code>，出现以下页面及成功。</li></ul><p><img data-src="/img/tomcat%E8%AE%BF%E9%97%AE.png" alt="tomcat访问"></p><h3 id="2-2-启动报错"><a href="#2-2-启动报错" class="headerlink" title="2.2 启动报错"></a>2.2 启动报错</h3><h4 id="①-Java环境变量问题"><a href="#①-Java环境变量问题" class="headerlink" title="① Java环境变量问题"></a>① Java环境变量问题</h4><p>tomcat是由Java编写的，如果没有配置环境变量，将出现黑窗口一闪而过。</p><ul><li>解决办法：正确配置Java环境变量。</li></ul><h4 id="②-8080端口被占用"><a href="#②-8080端口被占用" class="headerlink" title="② 8080端口被占用"></a>② 8080端口被占用</h4><p>现象：启动时报错</p><p>查看日志</p><p><img data-src="/img/tomcat%E7%AB%AF%E5%8F%A3%E5%8D%A0%E7%94%A8.png" alt="tomcat端口占用"></p><p>解决方式一：</p><ul><li><p>暴力：找到对应占用端口号的进程，杀死进程</p></li><li><p>查找占用端口号的进程——cmd命令：<code>netstat -ano | findstr &quot;8080&quot;</code></p></li><li><p>修改自身端口号</p><ul><li><p>打开conf/server.xml配置文件，把所有<code>port=&quot;8080&quot;</code>处都修改为其他端口号即可。</p><p><img data-src="/img/tomcat%E4%BF%AE%E6%94%B9%E7%AB%AF%E5%8F%A3%E5%8F%B7.png" alt="tomcat修改端口号"></p></li></ul></li></ul><h3 id="2-3-发布项目的三种方式"><a href="#2-3-发布项目的三种方式" class="headerlink" title="2.3 发布项目的三种方式"></a>2.3 发布项目的三种方式</h3><h4 id="①-webapps部署"><a href="#①-webapps部署" class="headerlink" title="① webapps部署"></a>① webapps部署</h4><p>直接将项目放到webapps目录下即可</p><p><img data-src="/img/tomcat%E9%83%A8%E7%BD%B2%E9%A1%B9%E7%9B%AE%E6%96%B9%E5%BC%8F%E4%B8%80.png" alt="tomcat部署项目方式一"></p><h4 id="②-servver-xml部署"><a href="#②-servver-xml部署" class="headerlink" title="② servver.xml部署"></a>② servver.xml部署</h4><p>在tomcat/conf/server.xml中找到<code>&lt;Host&gt;</code>标签，添加<code>&lt;Context/&gt;</code>标签</p><p><img data-src="/img/tomcat%E9%83%A8%E7%BD%B2%E9%A1%B9%E7%9B%AE%E6%96%B9%E5%BC%8F%E4%BA%8C.png" alt="tomcat部署项目方式二"></p><h4 id="③-独立xml部署"><a href="#③-独立xml部署" class="headerlink" title="③ 独立xml部署"></a>③ 独立xml部署</h4><p>在tomcat/conf/Catalina/localhost 目录下创建一个xml文件，添加<code>&lt;Context/&gt;</code>标签</p><p><img data-src="/img/tomcat%E9%83%A8%E7%BD%B2%E9%A1%B9%E7%9B%AE%E6%96%B9%E5%BC%8F%E4%B8%89.png" alt="tomcat部署项目方式三"></p><h2 id="三、HTTP协议"><a href="#三、HTTP协议" class="headerlink" title="三、HTTP协议"></a>三、HTTP协议</h2><h3 id="3-1-HTTP协议概述"><a href="#3-1-HTTP协议概述" class="headerlink" title="3.1 HTTP协议概述"></a>3.1 HTTP协议概述</h3><p>超文本传输协议（Hyper Text Transfer Protocol)是互联网上应用最为广泛的一种网络协议。</p><p>传输协议：在客户端和服务器端通信时，规范了<span style="color:red">传输数据的格式 </span></p><p><img data-src="/img/http%E5%8D%8F%E8%AE%AE.png" alt="http协议"></p><h3 id="3-2-HTTP请求"><a href="#3-2-HTTP请求" class="headerlink" title="3.2 HTTP请求"></a>3.2 HTTP请求</h3><h4 id="3-2-1-浏览器中查看HTTP请求协议"><a href="#3-2-1-浏览器中查看HTTP请求协议" class="headerlink" title="3.2.1 浏览器中查看HTTP请求协议"></a>3.2.1 浏览器中查看HTTP请求协议</h4><blockquote><p>F12打开控制台</p></blockquote><h5 id="①-GET方式"><a href="#①-GET方式" class="headerlink" title="① GET方式"></a>① GET方式</h5><p><img data-src="/img/GET%E8%AF%B7%E6%B1%82.png" alt="GET请求"></p><h5 id="②-POST方式"><a href="#②-POST方式" class="headerlink" title="② POST方式"></a>② POST方式</h5><p><img data-src="/img/POST%E8%AF%B7%E6%B1%82.png" alt="POST请求"></p><h4 id="3-2-2-HTTP请求消息格式"><a href="#3-2-2-HTTP请求消息格式" class="headerlink" title="3.2.2 HTTP请求消息格式"></a>3.2.2 HTTP请求消息格式</h4><h5 id="①-请求行"><a href="#①-请求行" class="headerlink" title="① 请求行"></a>① 请求行</h5><p>格式：<code>请求方式 请求路径 协议/版本号</code></p><ul><li>例如：<ul><li><code>POST /tomcat/static/login.html HTTP/1.1</code>（从请求体获得数据）</li><li><code>GET  /tomcat/static/login.html?username=jack&amp;password=123</code> HTTP/1.1（从请求行获得数据）</li></ul></li></ul><p>请求方式区别：</p><ul><li>GET方式：<ul><li>参数在请求路径上进行拼接</li><li>大小有限制</li><li>不太安全    </li></ul></li><li>POST方式：<ul><li>参数不在请求路径上拼接（在请求体中）</li><li>大小没有限制</li><li>相对安全</li></ul></li></ul><h5 id="②-请求头"><a href="#②-请求头" class="headerlink" title="② 请求头"></a>② 请求头</h5><p>格式：<code>请求头名称:请求头的值</code></p><ul><li>例如：<code>Host: localhost:8080</code></li></ul><p><strong>常见请求头</strong>：Accept开头的，都是浏览器告诉服务器的一些暗语</p><ol><li><code>Host: localhost:8080</code>访问服务器的地址（域名+端口）</li><li><code>Connection: keep-alive</code> 长连接（http1.1协议）</li><li><code>Cache-Control: max-age=0</code>设置缓存数据的存活时间，单位秒</li><li><code>Upgrade-Insecure-Requests:1</code>  客户端支持https加密协议  </li><li><code>Referer: http://baidu.com</code> 上一次请求的地址（请求来源）</li><li><code>User-Agent:</code> 客户端系统和浏览器版本</li></ol><h5 id="③-请求体-正文"><a href="#③-请求体-正文" class="headerlink" title="③ 请求体(正文)"></a>③ 请求体(正文)</h5><blockquote><p>POST方式提交才有请求体</p></blockquote><ul><li>格式：参数名=参数值&amp;参数名=参数值<ul><li>例如：username=jack&amp;password=123</li></ul></li></ul><h3 id="3-3-HTTP响应"><a href="#3-3-HTTP响应" class="headerlink" title="3.3 HTTP响应"></a>3.3 HTTP响应</h3><h4 id="3-3-1-浏览器查看HTTP响应协议"><a href="#3-3-1-浏览器查看HTTP响应协议" class="headerlink" title="3.3.1 浏览器查看HTTP响应协议"></a>3.3.1 浏览器查看HTTP响应协议</h4><p><img data-src="/img/http%E5%93%8D%E5%BA%94.png" alt="http响应"></p><h4 id="3-3-2-HTTP响应消息格式"><a href="#3-3-2-HTTP响应消息格式" class="headerlink" title="3.3.2 HTTP响应消息格式"></a>3.3.2 HTTP响应消息格式</h4><h5 id="①-响应行"><a href="#①-响应行" class="headerlink" title="① 响应行"></a>① 响应行</h5><ul><li>格式：协议/版本号 状态码 <ul><li>例如：HTTP/1.1   200</li></ul></li><li>常见状态码<ul><li>200 ：表示成功</li><li>302 ：表示重定向</li><li>304 ：表示缓存</li><li>404：请求未找到</li><li>405：请求方法未找到</li><li>500：服务器内部错误</li></ul></li></ul><h5 id="②-响应头"><a href="#②-响应头" class="headerlink" title="② 响应头"></a>② 响应头</h5><ul><li>格式<ul><li>响应头名称：响应头的值</li></ul></li><li>例如<ul><li>Last-Modified: Thu, 20 Aug 2020 07:45:20 GMT</li></ul></li></ul><p><strong>常见的响应头</strong>：Content开头都是服务器告诉客户端一些暗语</p><ol><li>Location：通常与状态码302一起使用，实现重定向操作<ul><li>Location:<a href="http://www.jd.com" target="_blank" rel="noopener">www.jd.com</a></li></ul></li><li>Content-Type：服务器告诉客户端，返回响应体的数据类型和编码方式【重点】<ul><li>http协议传输的内容都是字符串（文本）</li><li>content-type: application/javascript</li></ul></li><li>Content-Disposition：服务器告诉客户端，以什么样方式打开响应体<ul><li>in-line（默认）：浏览器直接打开相应内容，展示给用户</li><li>attachment;filename=文件名：浏览器以附件的方式保存文件 【文件下载】</li></ul></li><li>Refresh：：在指定间隔时间后，跳转到某个页面</li><li>Last-Modified：通常与状态码304一起使用，实现缓存机制</li></ol><p><img data-src="/img/%E5%93%8D%E5%BA%94%E7%8A%B6%E6%80%81%E7%A0%81200%E3%80%81304.png" alt="响应状态码200、304"></p><p><img data-src="/img/%E5%93%8D%E5%BA%94%E7%8A%B6%E6%80%81%E7%A0%81302.png" alt="响应状态码302"></p><h5 id="③-响应体"><a href="#③-响应体" class="headerlink" title="③ 响应体"></a>③ 响应体</h5><p>服务器返回的数据，由浏览器接解析后展示给用户…</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、Web知识概述&quot;&gt;&lt;a href=&quot;#一、Web知识概述&quot; class=&quot;headerlink&quot; title=&quot;一、Web知识概述&quot;&gt;&lt;/a&gt;一、Web知识概述&lt;/h2&gt;&lt;h3 id=&quot;1-1-软件架构&quot;&gt;&lt;a href=&quot;#1-1-软件架构&quot; class=&quot;headerlink&quot; title=&quot;1.1 软件架构&quot;&gt;&lt;/a&gt;1.1 软件架构&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;网络中有很多的计算机，它们直接的信息交流，我们称之为：交互&lt;/li&gt;
&lt;li&gt;在互联网交互的过程的有两个非常典型的交互方式——B/S  交互模型（架构）和 C/S  交互模型（架构）&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="JavaWeb" scheme="http://sunmoon.com/categories/JavaWeb/"/>
    
    
      <category term="学习" scheme="http://sunmoon.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="HTTP" scheme="http://sunmoon.com/tags/HTTP/"/>
    
      <category term="Tomcat" scheme="http://sunmoon.com/tags/Tomcat/"/>
    
  </entry>
  
  <entry>
    <title>Json&amp;AJAX入门</title>
    <link href="http://sunmoon.com/2020/08/19/Json-AJAX%E5%85%A5%E9%97%A8/"/>
    <id>http://sunmoon.com/2020/08/19/Json-AJAX%E5%85%A5%E9%97%A8/</id>
    <published>2020-08-19T14:30:50.000Z</published>
    <updated>2020-08-23T14:33:31.097Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、Json"><a href="#一、Json" class="headerlink" title="一、Json"></a>一、Json</h2><h3 id="1-1-Json概述"><a href="#1-1-Json概述" class="headerlink" title="1.1 Json概述"></a>1.1 Json概述</h3><p>JavaScript对象表示形式（JavaScript Object Notation）</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">java对象表示形式:</span><br><span class="line"><span class="code">    User user = new User();</span></span><br><span class="line"><span class="code">    user.setUsername("后羿");</span></span><br><span class="line"><span class="code">    user.setAge(23);</span></span><br><span class="line"><span class="code">    user.setSex("男");</span></span><br><span class="line"><span class="code"></span></span><br><span class="line">javaScript对象表示形式:</span><br><span class="line"><span class="code">    let user = &#123;"username":"后羿","age":18,"sex":"男"&#125;;</span></span><br><span class="line"><span class="code">        取值：user.username</span></span><br><span class="line"><span class="code">        赋值：user.username="安其拉";</span></span><br><span class="line"><span class="code">    let product = &#123;&#125;;</span></span><br><span class="line"><span class="code">    let car = &#123;&#125;;</span></span><br></pre></td></tr></table></figure><a id="more"></a><p><img data-src="/img/json.png" alt="json"></p><p>Json可以取代XML笨重的数据结构，和XML相比：更小、更快、更易解析。</p><h3 id="1-2-Json基础语法"><a href="#1-2-Json基础语法" class="headerlink" title="1.2 Json基础语法"></a>1.2 Json基础语法</h3><blockquote><p>前端语法比较松散，name 可以不使用双引号</p><p>但是在java中，name必须使用双引号</p></blockquote><p>例如：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">let user = &#123;username:"后羿",age:18,sex:"男"&#125;;</span><br><span class="line"></span><br><span class="line">String userJson = "&#123;\"username\":\"后羿\",\"age\":18,\"sex\":\"男\"&#125;";</span><br></pre></td></tr></table></figure><p>Json定义的三种类型：</p><ul><li><p>对象类型</p>  <figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="code">name:value,</span></span><br><span class="line"><span class="code">name:value</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>数组类型</p>  <figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line"><span class="code">    &#123;name:value,name:value&#125;,</span></span><br><span class="line"><span class="code">    &#123;name:value,name:value&#125;,</span></span><br><span class="line"><span class="code">    &#123;name:value,name:value&#125;</span></span><br><span class="line">]</span><br></pre></td></tr></table></figure></li><li><p>复杂对象</p>  <figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="code">    name:value,</span></span><br><span class="line"><span class="code">    array:[&#123;name:value&#125;,&#123;&#125;,&#123;&#125;]</span></span><br><span class="line"><span class="code">    user:&#123;name:value&#125;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p>代码示例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>JSON基础语法<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 1.描述用户对象（张三丰、男、32岁）</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// let user = &#123;username:"张三丰",sex:"男",age:32&#125;;</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> user = &#123;<span class="string">"username"</span>: <span class="string">"张三丰"</span>, <span class="string">"sex"</span>: <span class="string">"男"</span>, <span class="string">"age"</span>: <span class="number">32</span>&#125;;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(user.username);</span></span><br><span class="line">    user.age = 50;</span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(user);</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="string">"---------------------"</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 2.描述用户数组（张三丰、张翠山、张无忌）</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> array = [</span></span><br><span class="line"><span class="actionscript">        &#123;<span class="string">"username"</span>: <span class="string">"张三丰"</span>, <span class="string">"sex"</span>: <span class="string">"男"</span>, <span class="string">"age"</span>: <span class="number">32</span>&#125;,</span></span><br><span class="line"><span class="actionscript">        &#123;<span class="string">"username"</span>: <span class="string">"张翠山"</span>, <span class="string">"sex"</span>: <span class="string">"男"</span>, <span class="string">"age"</span>: <span class="number">22</span>&#125;,</span></span><br><span class="line"><span class="actionscript">        &#123;<span class="string">"username"</span>: <span class="string">"张无忌"</span>, <span class="string">"sex"</span>: <span class="string">"男"</span>, <span class="string">"age"</span>: <span class="number">12</span>&#125;</span></span><br><span class="line">    ];</span><br><span class="line"><span class="javascript">    <span class="keyword">for</span> (<span class="keyword">let</span> user <span class="keyword">of</span> array) &#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(user.username);</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="string">"---------------------"</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 3.描述韦小宝（27岁，老婆、师傅）</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> xiaobao = &#123;</span></span><br><span class="line"><span class="actionscript">        <span class="string">"username"</span>: <span class="string">"韦小宝"</span>,</span></span><br><span class="line"><span class="actionscript">        <span class="string">"age"</span>: <span class="number">27</span>,</span></span><br><span class="line"><span class="actionscript">        <span class="string">"laopo"</span>: [</span></span><br><span class="line"><span class="actionscript">            &#123;<span class="string">"username"</span>: <span class="string">"双儿"</span>, <span class="string">"address"</span>: <span class="string">"扬州"</span>&#125;,</span></span><br><span class="line"><span class="actionscript">            &#123;<span class="string">"username"</span>: <span class="string">"建宁"</span>, <span class="string">"address"</span>: <span class="string">"北京人"</span>&#125;,</span></span><br><span class="line"><span class="actionscript">            &#123;<span class="string">"username"</span>: <span class="string">"皇后"</span>, <span class="string">"address"</span>: <span class="string">"岛国"</span>&#125;</span></span><br><span class="line">        ],</span><br><span class="line"><span class="actionscript">        <span class="string">"shifu"</span>: &#123;<span class="string">"username"</span>: <span class="string">"陈浩南"</span>, <span class="string">"address"</span>: <span class="string">"铜锣湾"</span>&#125;</span></span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(xiaobao.username);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">for</span> (<span class="keyword">let</span> laopo <span class="keyword">of</span> xiaobao.laopo) &#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(laopo.username + <span class="string">" "</span> + laopo.address);</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(xiaobao.shifu.username);</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="1-3-Json格式转换"><a href="#1-3-Json格式转换" class="headerlink" title="1.3 Json格式转换"></a>1.3 Json格式转换</h3><ul><li>JSON对象与字符串转换的相关函数<ul><li>语法：<ul><li>Json对象.stringify(object) 把json对象转为字符串</li><li>Json对象.parse(string) 把字符串转为json对象</li></ul></li></ul></li></ul><p>代码示例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>02-JSON格式转换<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> userStr = <span class="string">"&#123;\"username\":\"后羿\",\"age\":18,\"sex\":\"男\"&#125;"</span>;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="keyword">typeof</span> userStr);</span></span><br><span class="line"><span class="actionscript">    <span class="comment">//2. JSON.parse(string) 把字符串转为json对象</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> user = <span class="built_in">JSON</span>.parse(userStr);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="keyword">typeof</span> user);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(user.username);</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">//1. JSON.stringify(object) 把json对象转为字符串</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="keyword">typeof</span> <span class="built_in">JSON</span>.stringify(user));</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="二、AJAX入门"><a href="#二、AJAX入门" class="headerlink" title="二、AJAX入门"></a>二、AJAX入门</h2><h3 id="2-1-AJAX概述"><a href="#2-1-AJAX概述" class="headerlink" title="2.1 AJAX概述"></a>2.1 AJAX概述</h3><p><strong>传统网站中存在的问题</strong></p><ul><li><p>网速慢的情况下，页面加载时间长，用户只能等待</p></li><li><p>表单提交后，如果一项内容不合格，需要重新填写所有表单内容</p></li><li><p>页面跳转，重新加载页面，造成资源浪费，增加用户等待时间</p></li></ul><p><strong>AJAX可以解决以上问题</strong></p><p>ajax是浏览器提供的一套方法，在无需重新加载整个网页情况下，能够更新部分网页的技术，从而提高用户浏览网站应用的体验。</p><blockquote><p>中文音译：阿贾克斯</p></blockquote><p>应用场景：</p><ul><li>搜索框提示</li><li>表单数据验证</li><li>无刷新分页</li></ul><blockquote><p>AJAX：无需加载整个网页，可以向服务器发送异步请求，实现页面的局部刷新…</p></blockquote><h3 id="2-2-快速入门"><a href="#2-2-快速入门" class="headerlink" title="2.2 快速入门"></a>2.2 快速入门</h3><p>需求：校验用户名是否存在</p><h4 id="2-2-1-需求分析"><a href="#2-2-1-需求分析" class="headerlink" title="2.2.1 需求分析"></a>2.2.1 需求分析</h4><p><img data-src="/img/AJAX%E7%99%BB%E5%BD%95%E6%A1%88%E4%BE%8B.png" alt="AJAX登录案例"></p><h4 id="2-2-2-代码编写"><a href="#2-2-2-代码编写" class="headerlink" title="2.2.2 代码编写"></a>2.2.2 代码编写</h4><p>前提：需要准备一台服务器处理ajax请求，这里不做代码演示，主要演示AJAX。</p><p>JS代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>register<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../js/jquery-3.2.1.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"#"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">    用户名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"username"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"username"</span>&gt;</span> <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"userInfo"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 1.给用户名文本框绑定失去焦点事件</span></span></span><br><span class="line"><span class="javascript">    $(<span class="string">'#username'</span>).blur(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">       <span class="keyword">let</span> value=  $(<span class="keyword">this</span>).val();</span></span><br><span class="line"><span class="actionscript">       <span class="comment">// alert(value)</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 2.调用ajax发送请求</span></span></span><br><span class="line"><span class="javascript">        $.ajax(&#123;</span></span><br><span class="line"><span class="actionscript">            type:<span class="string">'post'</span>,</span></span><br><span class="line"><span class="actionscript">            url:<span class="string">'http://localhost:8080/check'</span>,</span></span><br><span class="line"><span class="actionscript">            data:<span class="string">'username='</span>+value,</span></span><br><span class="line"><span class="actionscript">            success:<span class="function"><span class="keyword">function</span> <span class="params">(resp)</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">                $(<span class="string">'#userInfo'</span>).html(resp)</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="2-2-3-API介绍"><a href="#2-2-3-API介绍" class="headerlink" title="2.2.3 API介绍"></a>2.2.3 API介绍</h4><blockquote><p>jQuery为了简化ajax的操作，提供了 $.ajax() 函数</p></blockquote><p>语法：<code>$.ajax({name:value,name:value})</code></p><p>常用参数：</p><ul><li>type:请求类型（方式）<ul><li>get / post / …</li></ul></li><li>url：请求地址</li><li>data：发送请求时，携带参数<ul><li>如果是get方式，在地址中拼接</li><li>如果post方式，在请求体当中拼接</li><li>例如：username=jack&amp;password=123&amp;age=18</li></ul></li><li>success：请求成功，服务器返回结果，帮你调用此函数<ul><li>resp：返回的数据变量</li></ul></li></ul><h4 id="2-2-4-练习"><a href="#2-2-4-练习" class="headerlink" title="2.2.4 练习"></a>2.2.4 练习</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>lx<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../js/jquery-3.2.1.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"cityId"</span>&gt;</span><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 页面加载成功后，向服务器发送请求，返回对应省份的城市</span></span></span><br><span class="line"><span class="javascript">    $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> province = prompt(<span class="string">'请输入城市'</span>)</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">if</span>(province != <span class="literal">null</span>)&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 发送ajax请求</span></span></span><br><span class="line"><span class="javascript">            $.ajax(&#123;</span></span><br><span class="line"><span class="actionscript">                type:<span class="string">'post'</span>,</span></span><br><span class="line"><span class="actionscript">                url:<span class="string">'http://localhost:8080/cityList'</span>,</span></span><br><span class="line"><span class="actionscript">                data:<span class="string">'province='</span>+province,</span></span><br><span class="line"><span class="actionscript">                success:<span class="function"><span class="keyword">function</span> <span class="params">(resp)</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">for</span> (<span class="keyword">let</span> city <span class="keyword">of</span> resp) &#123;</span></span><br><span class="line"><span class="javascript">                        $(<span class="string">'#cityId'</span>).append(<span class="string">`&lt;option&gt;<span class="subst">$&#123;city&#125;</span>&lt;/option&gt;`</span>)</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line"><span class="actionscript">                error:<span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                    alert(<span class="string">'服务器忙...'</span>)</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、Json&quot;&gt;&lt;a href=&quot;#一、Json&quot; class=&quot;headerlink&quot; title=&quot;一、Json&quot;&gt;&lt;/a&gt;一、Json&lt;/h2&gt;&lt;h3 id=&quot;1-1-Json概述&quot;&gt;&lt;a href=&quot;#1-1-Json概述&quot; class=&quot;headerlink&quot; title=&quot;1.1 Json概述&quot;&gt;&lt;/a&gt;1.1 Json概述&lt;/h3&gt;&lt;p&gt;JavaScript对象表示形式（JavaScript Object Notation）&lt;/p&gt;
&lt;figure class=&quot;highlight markdown&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;java对象表示形式:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;code&quot;&gt;    User user = new User();&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;code&quot;&gt;    user.setUsername(&quot;后羿&quot;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;code&quot;&gt;    user.setAge(23);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;code&quot;&gt;    user.setSex(&quot;男&quot;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;code&quot;&gt;			&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;javaScript对象表示形式:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;code&quot;&gt;    let user = &amp;#123;&quot;username&quot;:&quot;后羿&quot;,&quot;age&quot;:18,&quot;sex&quot;:&quot;男&quot;&amp;#125;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;code&quot;&gt;        取值：user.username&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;code&quot;&gt;        赋值：user.username=&quot;安其拉&quot;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;code&quot;&gt;    let product = &amp;#123;&amp;#125;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;code&quot;&gt;    let car = &amp;#123;&amp;#125;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="JavaWeb" scheme="http://sunmoon.com/categories/JavaWeb/"/>
    
    
      <category term="学习" scheme="http://sunmoon.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="Json" scheme="http://sunmoon.com/tags/Json/"/>
    
      <category term="AJAX" scheme="http://sunmoon.com/tags/AJAX/"/>
    
  </entry>
  
  <entry>
    <title>jQuery</title>
    <link href="http://sunmoon.com/2020/08/19/jQuery/"/>
    <id>http://sunmoon.com/2020/08/19/jQuery/</id>
    <published>2020-08-19T13:35:00.000Z</published>
    <updated>2020-08-23T14:34:21.138Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、jQuery概述"><a href="#一、jQuery概述" class="headerlink" title="一、jQuery概述"></a>一、jQuery概述</h2><h3 id="1-1-简介"><a href="#1-1-简介" class="headerlink" title="1.1 简介"></a>1.1 简介</h3><p>jQuery是一款优秀的javascript的轻量级框架之一，封装了dom操作、事件绑定、Ajax等功能。</p><p>特别值得一提的是基于jQuery平台的插件非常丰富，大多数前端业务场景都有其封装好的工具可直接使用。</p><a id="more"></a><p><strong>jQuery下载</strong></p><ul><li>官网地址：<a href="http://jquery.com" target="_blank" rel="noopener">http://jquery.com</a> </li></ul><blockquote><p>小贴士：</p><ul><li>jquery-xxx.js<ul><li>开发版本：有良好的缩进和注释格式，方便开发者阅读源代码</li></ul></li><li>jquery-xxx.min.js<ul><li>生产版本：对代码压缩、注释删除，易于网络传输</li></ul></li></ul></blockquote><h3 id="1-2-自定义JS框架"><a href="#1-2-自定义JS框架" class="headerlink" title="1.2 自定义JS框架"></a>1.2 自定义JS框架</h3><p><strong>框架（Framework）</strong>是完成某种功能的半成品，抽取重复繁琐的代码，提供简洁强大的方法实现。</p><p>代码演示：</p><p><strong>my.js</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 对获取js对方的方法进行抽取</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">jQuery</span>(<span class="params">id</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">document</span>.querySelector(id);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">$</span>(<span class="params">id</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">document</span>.querySelector(id);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>html</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>自定义js框架<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../js/my.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"myDiv"</span>&gt;</span>世界上最遥远的距离不是生与死，而是你亲手制造的BUG就在你眼前，你却怎么都找不到她。<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line">   /* </span><br><span class="line"><span class="actionscript">    <span class="comment">// js对象</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> myDiv = <span class="built_in">document</span>.querySelector(<span class="string">"#myDiv"</span>);</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 操作属性</span></span></span><br><span class="line"><span class="actionscript">    myDiv.innerHTML = <span class="string">'js修改了内容。。。'</span>;</span></span><br><span class="line">    */</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="javascript">    $(<span class="string">"#myDiv"</span>).innerHTML=<span class="string">'js封装后修改了内容'</span>;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="二、jQuery基础语法"><a href="#二、jQuery基础语法" class="headerlink" title="二、jQuery基础语法"></a>二、jQuery基础语法</h2><h3 id="2-1-HTMl引入jQuery"><a href="#2-1-HTMl引入jQuery" class="headerlink" title="2.1 HTMl引入jQuery"></a>2.1 HTMl引入jQuery</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>HTML引入Jquery<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">//引入jQuery</span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../js/jquery-3.2.1.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"myDiv"</span>&gt;</span>世界上最远的距离，是我在if里你在else里，虽然经常一起出现，但却永不结伴执行。<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 操作jq</span></span></span><br><span class="line"><span class="javascript">    $(<span class="string">'#myDiv'</span>).html(<span class="string">'jq修改的内容...'</span>);</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-2-jQuery和JS区别"><a href="#2-2-jQuery和JS区别" class="headerlink" title="2.2 jQuery和JS区别"></a>2.2 jQuery和JS区别</h3><p>jQuery虽然本质上也是js，但如果使用jQuery的属性和方法那么必须保证对象是jQuery对象而不是js对象。</p><p>通过js方式获取的是js对象，通过jQuery方式获取的是jQuery对象。两者的关系与区别总结如下：</p><h4 id="2-2-1-JS对象和jQuery对象的相互转换"><a href="#2-2-1-JS对象和jQuery对象的相互转换" class="headerlink" title="2.2.1 JS对象和jQuery对象的相互转换"></a>2.2.1 JS对象和jQuery对象的相互转换</h4><p>js—&gt;jQuery ：<code>$(js对象)  or  jQuery(js对象)</code></p><p>jQuery—&gt;js：<code>jq对象[索引]   or  jq对象.get(索引)</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>jq与js对象相互转换<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../js/jquery-3.2.1.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"myDiv"</span>&gt;</span>通过不同方式获得文本内容<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 通过js方式修改文本内容</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> myDiv = <span class="built_in">document</span>.querySelector(<span class="string">"#myDiv"</span>);</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// myDiv.innerHTML='js修改文本..'</span></span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 通过jq方式修改文本内容</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> $myDiv = $(<span class="string">'#myDiv'</span>);</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// $myDiv.html('jq修改文本..')</span></span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// js对象和jq对象的：属性和方法不同通用</span></span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// js操作jq的方法</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// myDiv.html('js操作jq方法...')</span></span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// js --&gt; jq</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// $(myDiv).html('js操作jq方法...')</span></span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// jq操作js属性</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// $myDiv.innerHTML = 'jq操作js属性';</span></span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// jq --&gt;  js   jq本质上是一个js数组对象，数组的每一个元素就是原生的js对象</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log($myDiv);</span></span><br><span class="line"><span class="actionscript">     $myDiv[<span class="number">0</span>].innerHTML = <span class="string">'jq操作js属性'</span>;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="2-2-2-页面加载事件"><a href="#2-2-2-页面加载事件" class="headerlink" title="2.2.2 页面加载事件"></a>2.2.2 页面加载事件</h4><p>语法：</p><ul><li><p>js：<code>window.onload=function(){...}</code></p></li><li><p>jQuery：<code>$(function(){})</code></p></li></ul><p>特点：</p><ul><li><strong>js：只能定义一次，后面的会覆盖前面的</strong></li><li><strong>jQuery：可以定义多次…</strong>    </li></ul><h2 id="三、jQuery选择器"><a href="#三、jQuery选择器" class="headerlink" title="三、jQuery选择器"></a>三、jQuery选择器</h2><blockquote><p>css、js、jquery选择器语法一样…</p></blockquote><h3 id="3-1-基本选择器"><a href="#3-1-基本选择器" class="headerlink" title="3.1 基本选择器"></a>3.1 基本选择器</h3><ul><li>标签（元素）选择器<ul><li>语法：<code>$(&quot;html标签名&quot;)</code> 获得所有匹配标签名称的元素</li></ul></li><li>id选择器<ul><li>语法：<code>$(&quot;#id的属性值&quot;)</code> 获得与指定id属性值匹配的元素</li></ul></li><li>类选择器<ul><li>语法：<code>$(&quot;.class的属性值&quot;)</code>获得与指定的class属性值匹配的元素</li></ul></li><li>并集选择器<ul><li>语法：<code>$(&quot;选择器1,选择器2....&quot;)</code>获取多个选择器选中的所有元素</li></ul></li></ul><p>使用演示：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>基本选择器<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../js/jquery-3.2.1.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"female"</span>&gt;</span>古力娜扎<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"female"</span>&gt;</span>迪丽热巴<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"female hero"</span>&gt;</span>黑寡妇<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"male hero"</span>&gt;</span>钢铁侠<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"male hero"</span>&gt;</span>超人<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"boss"</span>&gt;</span>灭霸<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 1.获取span标签的jquery对象</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log($(<span class="string">'span'</span>).length);</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 2.获取class有hero的jquery对象</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log($(<span class="string">'.hero'</span>).length);</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 3.获得id="boss"的jquery对象</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log($(<span class="string">'#boss'</span>).length);</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 4.并集选择器</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log($(<span class="string">'span,div'</span>).length);</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-2-层级关系选择器"><a href="#3-2-层级关系选择器" class="headerlink" title="3.2 层级关系选择器"></a>3.2 层级关系选择器</h3><ul><li><p>后代选择器</p><ul><li>语法：<code>$(&quot;A B&quot;)</code> 选择A元素内部的所有B元素</li></ul></li><li><p>父子选择器</p><ul><li>语法：<code>$(&quot;A &gt; B&quot;)</code> 选择A元素内部的所有B子元素</li></ul></li></ul><p>使用演示：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>层级关系选择器<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../js/jquery-3.2.1.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"kangxi"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>儿子：雍正<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">b</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>孙子：乾隆<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>牛顿<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 1. 获取div的后代span的文本</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log($(<span class="string">'#kangxi span'</span>).text());</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 2. 获取div儿子辈span</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log($(<span class="string">'#kangxi &gt; span'</span>).text());</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-3-属性选择器"><a href="#3-3-属性选择器" class="headerlink" title="3.3 属性选择器"></a>3.3 属性选择器</h3><ul><li>属性选择器：<ul><li>语法：<code>$(&quot;A[属性名=&#39;值&#39;]&quot;)</code>包含指定属性等于指定值的选择器</li></ul></li><li>复合属性选择器：<ul><li>语法：<code>$(&quot;A[属性名=&#39;值&#39;][]...&quot;)</code> 包含多个属性条件的选择器</li></ul></li></ul><p>使用演示：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>属性选择器<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../js/jquery-3.2.1.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"用户名"</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"nickname"</span> <span class="attr">value</span>=<span class="string">"昵称"</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 1.获取type='text'的input标签</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log($(<span class="string">'input[type="text"]'</span>).length);</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 2.获取type='text' 且 name="nickname" 的input标签</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log($(<span class="string">'input[type="text"][name="nickname"]'</span>).length);</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-4-过滤选择器"><a href="#3-4-过滤选择器" class="headerlink" title="3.4 过滤选择器"></a>3.4 过滤选择器</h3><ul><li>首元素选择器<ul><li>语法： :first 获得选择的元素中的第一个元素        </li></ul></li><li>尾元素选择器<ul><li>语法： :last 获得选择的元素中的最后一个元素</li></ul></li><li>偶数选择器（奇数行）<ul><li>语法： :even 偶数，从 0 开始计数</li></ul></li><li>奇数选择器（偶数行）<ul><li>语法： :odd 奇数，从 0 开始计数</li></ul></li><li>指定索引选择器<ul><li>语法： :eq(index) 指定索引元素</li></ul></li></ul><p>使用演示：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>过滤选择器<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../js/jquery-3.2.1.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>大娃（红娃）<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>二娃（橙娃）<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>三娃（黄娃）<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>四娃（绿娃）<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>五娃（青娃）<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>六娃（蓝娃）<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>七娃（紫娃）<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 1.获取第一个元素</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log($(<span class="string">'li:first'</span>).text());</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 2.获取偶数索引元素</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log($(<span class="string">'li:even'</span>).text());</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 3.获取指定索引2的(三娃)元素</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log($(<span class="string">'li:eq(2)'</span>).text());</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-5-对象的遍历"><a href="#3-5-对象的遍历" class="headerlink" title="3.5 对象的遍历"></a>3.5 对象的遍历</h3><p>语法：<code>jQuery对象.each(function(index, element){...})</code></p><p>使用演示：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>对象遍历<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../js/jquery-3.2.1.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">id</span>=<span class="string">"city"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>北京<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>上海<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>天津<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 获取ul的jq对象</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// let $city = $('#city li');</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> city = <span class="built_in">document</span>.querySelectorAll(<span class="string">'#city li'</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// js普通for</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; city.length; i++) &#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(city[i].innerText);</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// js增强for</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">for</span> (<span class="keyword">let</span> ele <span class="keyword">of</span> city) &#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(ele.innerText);</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// jq遍历方法，集各家之所长...</span></span></span><br><span class="line"><span class="javascript">    $(city).each(<span class="function"><span class="keyword">function</span> (<span class="params">index,element</span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// console.log(index);</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// console.log($city[index].innerText);</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// console.log(element);</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//console.log(element.innerText);</span></span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">        <span class="comment">// console.log($(element).text()); // js转jq，调用jq方法..</span></span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log($(<span class="keyword">this</span>).text()); <span class="comment">// this表示当前 遍历的元素js对象</span></span></span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="四、jQuery的DOM操作"><a href="#四、jQuery的DOM操作" class="headerlink" title="四、jQuery的DOM操作"></a>四、jQuery的DOM操作</h2><h3 id="4-1-jQuery操作内容"><a href="#4-1-jQuery操作内容" class="headerlink" title="4.1 jQuery操作内容"></a>4.1 jQuery操作内容</h3><ul><li><p><code>text()</code>：获取/设置元素的标签体纯文本内容</p><ul><li>相当于js：innerText属性</li></ul></li><li><p><code>html()</code>: 获取/设置元素的标签体超文本内容</p><ul><li>相当于js：innerHTML属性</li></ul></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>dom操作内容<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../js/jquery-3.2.1.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"myDiv"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>天王盖地虎<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 1.text()操作内容</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 1.1 获取div纯文本</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// console.log($('#myDiv').text());</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 1.2 设置div纯文本</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">    // $('#myDiv').text('<span class="tag">&lt;<span class="name">h1</span>&gt;</span>小鸡炖蘑菇<span class="tag">&lt;/<span class="name">h1</span>&gt;</span>')</span></span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 2.html()操作内容</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 2.1 获取div超文本</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log($(<span class="string">'#myDiv'</span>).html());</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 2.2 设置div超文本</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">   // $('#myDiv').html('<span class="tag">&lt;<span class="name">h1</span>&gt;</span>小鸡炖蘑菇<span class="tag">&lt;/<span class="name">h1</span>&gt;</span>');</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 2.3 追加</span></span></span><br><span class="line"><span class="javascript">    $(<span class="string">'#myDiv'</span>).html($(<span class="string">"#myDiv"</span>).html() + <span class="string">'&lt;h1&gt;小鸡炖蘑菇&lt;/h1&gt;'</span>);</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="4-2-jQuery操作属性"><a href="#4-2-jQuery操作属性" class="headerlink" title="4.2 jQuery操作属性"></a>4.2 jQuery操作属性</h3><ul><li><p><code>val()</code>：获取/设置 （input标签）value属性值</p><ul><li>相当于：input的js对象.value属性</li></ul></li><li><p><code>attr()</code>: 获取/设置元素的属性</p></li><li><p><code>removeAttr()</code>：删除属性</p></li></ul><p>jQuery在1.6版本之后，提供另一组API prop 通常处理属性值为布尔类型操作</p><ul><li><p>例如：checked selected等</p></li><li><p><code>prop()</code>：获取/设置元素的属性</p></li><li><p><code>removeProp()</code>：删除属性</p></li></ul><p>使用示例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>dom操作属性<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../js/jquery-3.2.1.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"#"</span> <span class="attr">method</span>=<span class="string">"get"</span>&gt;</span></span><br><span class="line">    姓名 <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">id</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"德玛西亚"</span>/&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    爱好</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"hobby"</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"hobby"</span> <span class="attr">value</span>=<span class="string">"perm"</span>  &gt;</span>烫头<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"reset"</span> <span class="attr">value</span>=<span class="string">"清空按钮"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"提交按钮"</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 1.获取文本框value属性</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// console.log($("#username").val());</span></span></span><br><span class="line"><span class="javascript">    $(<span class="string">'#username'</span>).val(<span class="string">'草丛伦...'</span>)</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 获取指定属性的值</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log($(<span class="string">'#hobby'</span>).attr(<span class="string">'value'</span>));</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 设置/更新指定属性的值</span></span></span><br><span class="line"><span class="javascript">    $(<span class="string">'#hobby'</span>).attr(<span class="string">'value'</span>,<span class="string">'烫头'</span>);</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 删除属性</span></span></span><br><span class="line"><span class="javascript">    $(<span class="string">'#hobby'</span>).removeAttr(<span class="string">'value'</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 2.获取爱好的checked属性</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// attr() 方法操作 boolean类型的属性比较麻烦...</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// console.log($('#hobby').attr('checked'));</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log($(<span class="string">'#hobby'</span>).prop(<span class="string">'checked'</span>));</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="4-3-jQuery操作样式"><a href="#4-3-jQuery操作样式" class="headerlink" title="4.3 jQuery操作样式"></a>4.3 jQuery操作样式</h3><ol><li><p>直接修改jQuery对象的样式属性</p><ul><li><p>语法：<code>jQuery对象.css()</code></p><ul><li><p>css(样式名) 获取</p></li><li><p>css(样式名,样式值) 设置</p><blockquote><p>兼容性好：样式名支持：fontSize | font-size</p></blockquote></li></ul></li></ul></li><li><p>添加/删除jQuery对象样式</p><ul><li>语法：<ul><li>添加：<code>jQuery对象.addClass()</code></li><li>删除：<code>jQuery对象.removeClass()</code></li></ul></li></ul></li><li><p>切换jq对象样式</p><ul><li>语法：<code>jQuery对象.toggleClass()</code>  无添加，有删除</li></ul></li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>dom操作样式<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../js/jquery-3.2.1.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-id">#p1</span>&#123; <span class="attribute">background-color</span>: red;&#125;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.mp</span> &#123;</span></span><br><span class="line">            color: green</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.mpp</span> &#123;</span></span><br><span class="line">            background-color: lightgray;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"p1"</span>&gt;</span>1. 设置一个css样式<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"p2"</span>&gt;</span>2. 批量设置css样式<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"p3"</span>&gt;</span>3. 通过class设置样式<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"p4"</span>&gt;</span>4. <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"toggle"</span>&gt;</span>切换<span class="tag">&lt;/<span class="name">button</span>&gt;</span>class样式 <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> $p1 = $(<span class="string">'#p1'</span>);<span class="comment">//获取p1</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> $p2 = $(<span class="string">'#p2'</span>);<span class="comment">//获取p2</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> $p3 = $(<span class="string">'#p3'</span>);<span class="comment">//获取p3</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">let</span> $p4 = $(<span class="string">'#p4'</span>);<span class="comment">//获取p4</span></span></span><br><span class="line"></span><br><span class="line"><span class="handlebars"><span class="xml">    // 1. 设置一个css样式   <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"p1"</span> <span class="attr">style</span>=<span class="string">"xxxxxxx"</span>&gt;</span>1. 设置一个css样式<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">//$p1.css('backgroundColor','skyblue');</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// $p1.css('background-color','skyblue');</span></span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 2. 批量设置css样式</span></span></span><br><span class="line"><span class="actionscript">    $p2.css(&#123;<span class="string">"background-color"</span>:<span class="string">"gold"</span>,<span class="string">"border"</span>:<span class="string">"1px solid red"</span>&#125;)</span></span><br><span class="line"></span><br><span class="line"><span class="handlebars"><span class="xml">    // 3. 通过class设置样式  <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"p3"</span> <span class="attr">class</span>=<span class="string">"mp mpp"</span>&gt;</span>3. 通过class设置样式<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span></span><br><span class="line"><span class="actionscript">    $p3.addClass(<span class="string">'mp mpp'</span>);</span></span><br><span class="line"><span class="actionscript">    $p3.removeClass(<span class="string">'mpp'</span>)</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript"><span class="comment">// 4. toggleClass() 切换一个class</span></span></span><br><span class="line"><span class="javascript">    $(<span class="string">'#toggle'</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">        $p4.toggleClass(<span class="string">'mp mpp'</span>)</span></span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="4-4-jQuery操作元素"><a href="#4-4-jQuery操作元素" class="headerlink" title="4.4 jQuery操作元素"></a>4.4 jQuery操作元素</h3><ol><li>$(标签) 创建一个标签<ul><li><code>$(&quot;&lt;a&gt;xx&lt;/a&gt;&quot;)</code>  相当于 document.createElement(‘li’)</li></ul></li><li>prepend()  在当前元素内部，首部添加子元素<ul><li><code>父对象.prepend(子对象)</code></li></ul></li><li>append() 在当前元素内部，尾部添加子元素<ul><li><code>父对象.append(子对象)</code></li></ul></li></ol><ol start="4"><li><p>empty() 清空子元素 （断子绝孙）</p><ul><li><code>对象.empty()</code></li></ul></li><li><p>remove() 删除自己  （满门抄斩）</p><ul><li><code>对象.remove()</code></li></ul></li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>12-dom操作元素<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../js/jquery-3.2.1.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">id</span>=<span class="string">"star"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>古力娜扎<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>迪丽热巴<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> $star = $(<span class="string">'#star'</span>); <span class="comment">// 无序列表</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log($(<span class="string">'&lt;li&gt;萨瓦迪卡&lt;/li&gt;'</span>));</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 1.前面添加马尔扎哈</span></span></span><br><span class="line"><span class="javascript">    $star.prepend($(<span class="string">'&lt;li&gt;马尔扎哈&lt;/li&gt;'</span>))</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 2.后面添加萨瓦迪卡</span></span></span><br><span class="line"><span class="javascript">    $star.append($(<span class="string">'&lt;li&gt;萨瓦迪卡&lt;/li&gt;'</span>))</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 3.移出所有列表项</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// $star.empty();</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 4.删除无序列表</span></span></span><br><span class="line">    $star.remove()</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="五、jQuery事件绑定"><a href="#五、jQuery事件绑定" class="headerlink" title="五、jQuery事件绑定"></a>五、jQuery事件绑定</h2><p>jQuery的事件与js的事件的功能和作用一样，只是在使用语法上稍微有些差异。</p><ul><li><p><code>js对象.事件属性=function(){}</code></p></li><li><p><code>jq对象.事件函数(function(){})</code></p></li></ul><h3 id="常见的事件"><a href="#常见的事件" class="headerlink" title="常见的事件"></a>常见的事件</h3><ol><li>点击事件：<ul><li><code>click()</code>：单击事件</li><li><code>dblclick()</code>：双击事件</li></ul></li><li>焦点事件<ul><li><code>blur()</code>：失去焦点</li><li><code>focus()</code>:元素获得焦点。</li></ul></li><li>鼠标事件：<ul><li><code>mousedown()</code>：鼠标按钮被按下。</li><li><code>mouseup()</code>：鼠标按键被松开。</li><li><code>mousemove()</code>：鼠标被移动。</li><li><code>mouseover()</code>：鼠标移到某元素之上。</li><li><code>mouseout()</code>：鼠标从某元素移开。</li></ul></li><li>键盘事件：<ul><li><code>keydown()</code>：某个键盘按键被按下。    </li><li><code>keyup()</code>：某个键盘按键被松开。</li><li><code>keypress()</code>：某个键盘按键被按下并松开。</li></ul></li><li>改变事件<ul><li><code>change()</code>：域的内容被改变。</li></ul></li><li>表单事件：<ul><li><code>submit()</code>：提交按钮被点击。</li></ul></li><li>页面加载事件：<ul><li><code>$(function(){})</code></li></ul></li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>jq事件绑定<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../js/jquery-3.2.1.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"js方式"</span> <span class="attr">id</span>=<span class="string">"jsBtn"</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"jq方式"</span> <span class="attr">id</span>=<span class="string">"jqBtn"</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// js方式</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.getElementById(<span class="string">'jsBtn'</span>).onclick=<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">        alert(<span class="string">'js方式'</span>)</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// jq方式</span></span></span><br><span class="line"><span class="javascript">    $(<span class="string">'#jqBtn'</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">        alert(<span class="string">'jq方式'</span>)</span></span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、jQuery概述&quot;&gt;&lt;a href=&quot;#一、jQuery概述&quot; class=&quot;headerlink&quot; title=&quot;一、jQuery概述&quot;&gt;&lt;/a&gt;一、jQuery概述&lt;/h2&gt;&lt;h3 id=&quot;1-1-简介&quot;&gt;&lt;a href=&quot;#1-1-简介&quot; class=&quot;headerlink&quot; title=&quot;1.1 简介&quot;&gt;&lt;/a&gt;1.1 简介&lt;/h3&gt;&lt;p&gt;jQuery是一款优秀的javascript的轻量级框架之一，封装了dom操作、事件绑定、Ajax等功能。&lt;/p&gt;
&lt;p&gt;特别值得一提的是基于jQuery平台的插件非常丰富，大多数前端业务场景都有其封装好的工具可直接使用。&lt;/p&gt;
    
    </summary>
    
    
      <category term="JavaWeb" scheme="http://sunmoon.com/categories/JavaWeb/"/>
    
    
      <category term="学习" scheme="http://sunmoon.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="jQuery" scheme="http://sunmoon.com/tags/jQuery/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript</title>
    <link href="http://sunmoon.com/2020/08/16/JavaScript/"/>
    <id>http://sunmoon.com/2020/08/16/JavaScript/</id>
    <published>2020-08-16T11:51:58.000Z</published>
    <updated>2020-08-18T13:18:14.865Z</updated>
    
    <content type="html"><![CDATA[<h1 id="JavaScript"><a href="#JavaScript" class="headerlink" title="JavaScript"></a>JavaScript</h1><h2 id="一、概述"><a href="#一、概述" class="headerlink" title="一、概述"></a>一、概述</h2><h3 id="1-1-概念"><a href="#1-1-概念" class="headerlink" title="1.1 概念"></a>1.1 概念</h3><p>概念：一门客户端脚本语言。</p><ul><li>运行在客户端浏览器中的，每一个浏览器都有JavaScript的解析引擎</li><li>脚本语言：不需要编译，直接就可以被浏览器解析执行。</li></ul><a id="more"></a><h3 id="1-2-功能"><a href="#1-2-功能" class="headerlink" title="1.2 功能"></a>1.2 功能</h3><p>功能：可以来增强用户和HTML页面的交互过程，可以控制HTML元素，让页面有一些动态的效果，增强用户体验。</p><h3 id="1-3-特点"><a href="#1-3-特点" class="headerlink" title="1.3 特点"></a>1.3 特点</h3><ul><li><p>JS源码不需要编译，浏览器可以直接解释运行</p></li><li><p>JS是弱类型语言，js变量声明不需要指明类型</p></li></ul><blockquote><p>小结：js是弱类型的脚本语言，可以直接在浏览器解释运行</p></blockquote><h3 id="1-4-JavaScript的组成"><a href="#1-4-JavaScript的组成" class="headerlink" title="1.4 JavaScript的组成"></a>1.4 JavaScript的组成</h3><table><thead><tr><th>组成部分</th><th>作用</th></tr></thead><tbody><tr><td>ECMA Script</td><td>构成了JS核心的语法基础</td></tr><tr><td>BOM</td><td>Browser Object Model 浏览器对象模型，用来操作浏览器上的对象</td></tr><tr><td>DOM</td><td>Document Object Model 文档对象模型，用来操作网页中的元素（标签）</td></tr></tbody></table><h2 id="二、基础语法"><a href="#二、基础语法" class="headerlink" title="二、基础语法"></a>二、基础语法</h2><h3 id="2-1-HTML引入JS"><a href="#2-1-HTML引入JS" class="headerlink" title="2.1 HTML引入JS"></a>2.1 HTML引入JS</h3><p>在HTML中引入JS有两种方式：</p><ul><li>内部脚本<ul><li>语法：<code>&lt;script type=&quot;text/javascript&quot;&gt; js代码 &lt;/script&gt;</code></li><li>作用范围：当前页面</li></ul></li><li>外部脚本<ul><li>语法：<code>&lt;script type=&quot;text/javascript&quot; src=&quot;外部js文件路径&quot;&gt;&lt;/script&gt;</code></li><li>作用范围：所有引入当前JS文件的页面</li></ul></li></ul><blockquote><p>小贴士：</p><ul><li><p>扩展:在开发时 style和link标签通常在head头部，script标签在body尾部…</p></li><li><p>注意：如果script标签引入了外部脚本，那么标签体不能自闭合，而且不允许有js代码</p></li></ul></blockquote><h3 id="2-2-注释"><a href="#2-2-注释" class="headerlink" title="2.2 注释"></a>2.2 注释</h3><ul><li>单行注释：<code>//注释内容</code></li><li>多行注释：<code>/* 注释内容 */</code></li></ul><h3 id="2-3-JS的三种输出方式"><a href="#2-3-JS的三种输出方式" class="headerlink" title="2.3 JS的三种输出方式"></a>2.3 JS的三种输出方式</h3><p>在JavaScript中，有三种输出方式，分别是</p><ul><li><p>在浏览器弹框输出：<code>alert(&#39;内容&#39;);</code></p></li><li><p>输出到html页面：<code>document.write(&#39;内容&#39;);</code></p></li><li><p>输出到浏览器控制台：<code>cosole.log(&#39;内容&#39;);</code></p></li></ul><p>代码示例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>JS三种输出方式<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 1. 浏览器弹框输出字符</span></span></span><br><span class="line"><span class="actionscript">    alert(<span class="string">'哈哈'</span>)</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 2. 输出html内容到页面</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.write(<span class="string">'呵呵'</span>)</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 3. 输出到浏览器控制台</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="string">'嘻嘻'</span>)</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-4-JS的数据类型及其变量声明"><a href="#2-4-JS的数据类型及其变量声明" class="headerlink" title="2.4 JS的数据类型及其变量声明"></a>2.4 JS的数据类型及其变量声明</h3><h4 id="2-4-1-数据类型"><a href="#2-4-1-数据类型" class="headerlink" title="2.4.1 数据类型"></a>2.4.1 数据类型</h4><p>数据类型可分为原始数据类型和引用数据类型：</p><ul><li>原始数据类型<ul><li>number：数值。包括整数、浮点数、NaN(not a number 一个不是数字的数字类型)</li><li>string：字符串。</li><li>boolean：true、flase</li><li>undefine：未定义</li><li>null：一个对象为空的占位符</li></ul></li><li>引用数据类型：对象(Object)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">let</span> str = <span class="string">'哈哈'</span>;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">typeof</span> str);</span><br><span class="line">    <span class="keyword">let</span> i = <span class="number">521</span>;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">typeof</span> i);</span><br><span class="line">    <span class="keyword">let</span> u;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">typeof</span> u);</span><br><span class="line">    <span class="keyword">let</span> b = <span class="literal">true</span>;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">typeof</span> b);</span><br><span class="line">    <span class="keyword">let</span> n = <span class="literal">null</span>;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">typeof</span> n);</span><br><span class="line">    <span class="keyword">let</span> date = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">typeof</span> date);</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>小贴士：</p><ul><li><code>typeof 变量名</code>：可以查看变量的数据类型</li></ul></blockquote><h4 id="2-4-2-变量声明"><a href="#2-4-2-变量声明" class="headerlink" title="2.4.2 变量声明"></a>2.4.2 变量声明</h4><p>Java语言是强类型语言，而<strong>JavaScript是弱类型语言</strong>。</p><ul><li>强类型：在开辟变量存储空间时，定义了空间将来存储的数据的数据类型。只能存储固定类型的数据</li><li><strong>弱类型</strong>：在开辟变量存储空间时，不定义空间将来的存储数据类型，<strong>可以存放任意类型的数据</strong>。</li></ul><p>定义语法(这里讲解<code>ES6</code>的语法)：</p><ul><li><p>变量：<code>let 变量名 = 变量值;</code></p></li><li><p>常量：<code>const 常量名 = 常量值;</code></p></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">//Java: String str = "你好";</span></span><br><span class="line">    <span class="keyword">let</span> str = <span class="string">'你好'</span>;</span><br><span class="line">    <span class="built_in">console</span>.log(str);</span><br><span class="line">    <span class="comment">//Java: int i = 1314;</span></span><br><span class="line">    <span class="keyword">let</span> i = <span class="number">1314</span>;</span><br><span class="line">    <span class="built_in">console</span>.log(i);</span><br><span class="line">    <span class="comment">//Java: double d = 521.1314;</span></span><br><span class="line">    <span class="keyword">let</span> d = <span class="number">521.1314</span>;</span><br><span class="line">    <span class="built_in">console</span>.log(d);</span><br><span class="line">    <span class="comment">//Java: final Integer PI = 3.14;</span></span><br><span class="line">    <span class="keyword">const</span> PI = <span class="number">3.14</span>;</span><br><span class="line">    <span class="built_in">console</span>.log(PI);</span><br><span class="line">    <span class="comment">//Java: boolean b = true;</span></span><br><span class="line">    <span class="keyword">let</span> b = <span class="literal">true</span></span><br><span class="line">    <span class="built_in">console</span>.log(b);</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-5-JS的运算符"><a href="#2-5-JS的运算符" class="headerlink" title="2.5 JS的运算符"></a>2.5 JS的运算符</h3><ol><li>一元运算符：只有一个运算数的运算符<ul><li>++，–，+【正号】</li></ul></li><li>算数运算符<ul><li>+，-，*，/，%…</li></ul></li><li>赋值运算符<ul><li>=，+=，-=</li></ul></li><li>比较运算符<ul><li>&lt;，&gt;，&gt;=，&lt;=，==，===(全等于)</li></ul></li><li>逻辑运算符<ul><li>&amp;&amp;，||，!</li><li>其他类型转boolean：<ol><li>number：0或NaN为假，其他为真</li><li>string：除了空字符串(“”)，其他都是true【双引号内有空格不算空串】</li><li>null&amp;undefined:都是false</li><li>对象：所有对象都为true</li></ol></li></ul></li><li>三元运算符<ul><li>? :</li><li>语法：<ul><li>表达式? 值1:值2;</li><li>判断表达式的值，如果是true则取值1，如果是false则取值2；</li></ul></li></ul></li></ol><blockquote><p>js与java的运算符使用方法大致相同。</p><p>NaN：not a number（意思是不是一个数字）</p><p>需要注意的是:</p><ul><li><p>js的数值可以与字符串参与数学运算，底层进行了隐式转换</p></li><li><p><code>===</code>：全等于，数值和数据类型全部一样才为true，<code>==</code>只比较数值</p></li></ul></blockquote><h3 id="2-6-JS流程控制"><a href="#2-6-JS流程控制" class="headerlink" title="2.6 JS流程控制"></a>2.6 JS流程控制</h3><p>高级语言中的三种基本结构：顺序、分支、循环 。</p><h4 id="2-6-1-条件判断"><a href="#2-6-1-条件判断" class="headerlink" title="2.6.1 条件判断"></a>2.6.1 条件判断</h4><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1. </span>if判断</span><br><span class="line"><span class="code">if (条件表达式) &#123;</span></span><br><span class="line"><span class="code">            代码块;</span></span><br><span class="line"><span class="code">        &#125; else if(条件表达式) &#123;</span></span><br><span class="line"><span class="code">            代码块;</span></span><br><span class="line"><span class="code">        &#125; else &#123;</span></span><br><span class="line"><span class="code">            代码块;</span></span><br><span class="line"><span class="code">        &#125;</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">2. </span>switch判断</span><br><span class="line"><span class="code">switch(条件表达式)&#123;</span></span><br><span class="line"><span class="code">            case 满足条件1 :</span></span><br><span class="line"><span class="code">            代码块 break;</span></span><br><span class="line"><span class="code">            case 满足条件2 :</span></span><br><span class="line"><span class="code">            代码块 break;</span></span><br><span class="line"><span class="code">            default:</span></span><br><span class="line"><span class="code">            默认代码块;</span></span><br><span class="line"><span class="code">&#125;</span></span><br></pre></td></tr></table></figure><p>代码示例：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">// let flag = false;</span></span><br><span class="line">    <span class="comment">// let flag = ' '; // 非空串为真</span></span><br><span class="line">    <span class="comment">// let flag = 0; // 非零为真</span></span><br><span class="line">    <span class="comment">// let flag = new Date();  // 有对象为真</span></span><br><span class="line">    <span class="comment">// let flag ; // 未定义未假</span></span><br><span class="line">    <span class="keyword">let</span> flag = <span class="literal">null</span>; <span class="comment">// 空值为假</span></span><br><span class="line">    <span class="keyword">if</span> (flag) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"真的"</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"假的"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><h4 id="2-6-2-循环语句"><a href="#2-6-2-循环语句" class="headerlink" title="2.6.2 循环语句"></a>2.6.2 循环语句</h4><p>在js中，有五种循环分别是：</p><ul><li><p>普通for循环</p><ul><li><pre><code class="js"><span class="keyword">for</span>(<span class="keyword">let</span> i= <span class="number">0</span>; i&lt;<span class="number">10</span>; i++){    需要执行的代码;}&lt;!--￼<span class="number">5</span>--&gt;</code></pre></li></ul></li><li><p>索引for循环(for…in)</p><ul><li><pre><code class="js"><span class="keyword">for</span>(<span class="keyword">let</span> index <span class="keyword">in</span> array){    需要执行的代码;}&lt;!--￼<span class="number">6</span>--&gt;</code></pre></li></ul></li><li><p>do..while循环</p><ul><li><pre><code class="js"><span class="keyword">do</span>{    需要执行的代码;}<span class="keyword">while</span>(条件表达式);&lt;!--￼<span class="number">7</span>--&gt;</code></pre></li></ul></li></ul><h3 id="2-7-扩展"><a href="#2-7-扩展" class="headerlink" title="2.7 扩展"></a>2.7 扩展</h3><p>在ES6之前，js定义变量使用var关键字定义。</p><ul><li>而var声明的变量没有块级作用域</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 使用var声明的变量没有块级作用域</span></span><br><span class="line">    <span class="keyword">let</span> a = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">let</span> a = <span class="number">15</span>;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">console</span>.log(a); <span class="comment">//10</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span> ; i  &lt; <span class="number">5</span> ; i++)&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"haha"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">console</span>.log(i); <span class="comment">//5</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> j = <span class="number">0</span>; j &lt; <span class="number">5</span>; j++) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'hehe'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">console</span>.log(j);<span class="comment">//报错，j is not defined</span></span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>上述代码，除出了for循环仍可以获取i的值，值为5</p></blockquote><h2 id="三、JS函数"><a href="#三、JS函数" class="headerlink" title="三、JS函数"></a>三、JS函数</h2><p>js函数是执行特定功能的代码块.也可以称为js方法</p><h3 id="3-1-普通函数"><a href="#3-1-普通函数" class="headerlink" title="3.1 普通函数"></a>3.1 普通函数</h3><p>格式：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> 函数名(<span class="params">参数<span class="number">1</span>,参数<span class="number">2</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> xxx;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>调用：<code>函数名(实际参数1，实际参数2...);</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 二个数求和</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">sum</span>(<span class="params">a, b</span>) </span>&#123;</span><br><span class="line">        <span class="comment">// console.log(a + b);</span></span><br><span class="line">        <span class="keyword">return</span> a + b;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 三个数求和</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">sum</span>(<span class="params">a, b, c</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="built_in">arguments</span>);</span><br><span class="line">        <span class="keyword">return</span> a + b + c;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 求N个数的和</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">sum</span>(<span class="params">...args</span>)</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(args);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> result = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> arg <span class="keyword">of</span> args) &#123;</span><br><span class="line">            result+= arg;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// NaN not a number 这不是一个数</span></span><br><span class="line">    <span class="keyword">let</span> result = sum(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>);</span><br><span class="line">    <span class="built_in">console</span>.log(result);</span><br><span class="line"></span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>js函数特点：</p><ul><li>声明的函数不需要定义返回值</li><li>声明的函数形参不需要使用变量修饰符声明</li><li>如果有返回值就加上return</li><li>js没有方法重载，重名的会被覆盖…</li><li>js的函数参数个数不太严谨【了解】</li><li>所有的函数体内置了arguments数组，用于接收调用时传递的实际参数</li><li>js函数支持可变参数</li></ul></blockquote><h3 id="3-2-匿名函数"><a href="#3-2-匿名函数" class="headerlink" title="3.2 匿名函数"></a>3.2 匿名函数</h3><p>格式：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> (<span class="params">a,b</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a+b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="四、事件"><a href="#四、事件" class="headerlink" title="四、事件"></a>四、事件</h2><p>事件：JS可以监听用户的行为,并调用函数来完成用户交互功能.</p><h3 id="4-1-常用事件"><a href="#4-1-常用事件" class="headerlink" title="4.1 常用事件"></a>4.1 常用事件</h3><p>点击事件：</p><ul><li>onclick：单击事件</li><li>ondbclick：双击事件</li></ul><p>焦点事件：</p><ul><li>onblur：失去焦点</li><li>onfocus：元素获得焦点</li></ul><p>加载事件：</p><ul><li>onload：页面加载完成后立即发生</li></ul><p>鼠标事件：</p><ul><li>onmousedown    鼠标按钮被按下。</li><li>onmouseup    鼠标按键被松开。</li><li>onmousemove    鼠标被移动。</li><li>onmouseover    鼠标移到某元素之上。</li><li>onmouseout    鼠标从某元素移开。</li></ul><p>键盘事件：</p><ul><li><p>onkeydown    某个键盘按键被按下。    </p></li><li><p>onkeyup        某个键盘按键被松开。</p></li><li><p>onkeypress    某个键盘按键被按下并松开。</p></li></ul><p>改变事件：</p><ul><li>onchange    域的内容被改变。</li></ul><p>表单事件：</p><ul><li>onsubmit    提交按钮被点击。</li></ul><h3 id="4-2-事件绑定"><a href="#4-2-事件绑定" class="headerlink" title="4.2 事件绑定"></a>4.2 事件绑定</h3><p>将事件与HTML标签进行绑定，实现交互功能。</p><p>代码示例</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>08-事件绑定<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"普通函数"</span> <span class="attr">onclick</span>=<span class="string">"fun1()"</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"匿名函数"</span> <span class="attr">id</span>=<span class="string">"btn"</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 普通函数</span></span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">fun1</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">        alert(<span class="string">'我是普通函数...'</span>)</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 匿名函数</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 1.获取button按钮的js对象</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> btn = <span class="built_in">document</span>.getElementById(<span class="string">'btn'</span>);</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 2.给onclick属性绑定匿名函数</span></span></span><br><span class="line"><span class="actionscript">    btn.onclick=<span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">        alert(<span class="string">'我是匿名函数'</span>)</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.getElementById(<span class="string">'btn'</span>).onclick=<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">        alert(<span class="string">'我是匿名函数'</span>)</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="4-3-案例：页面交互"><a href="#4-3-案例：页面交互" class="headerlink" title="4.3 案例：页面交互"></a>4.3 案例：页面交互</h3><p>需求：给页面表单控件绑定对应事件，实现交互功能</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>案例：页面交互<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">姓名 <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"username"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">学历</span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">"edu"</span> <span class="attr">id</span>=<span class="string">"edu"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"0"</span>&gt;</span>请选择<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"1"</span>&gt;</span>本科<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"2"</span>&gt;</span>大专<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"btn"</span>&gt;</span>按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"#"</span> <span class="attr">method</span>=<span class="string">"get"</span> <span class="attr">id</span>=<span class="string">"myForm"</span>&gt;</span></span><br><span class="line">    文本框：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"text"</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"注册"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">//1. onload 页面加载完成</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;  <span class="comment">// 当前窗口加载完毕后，触发的事件，执行函数完成某些功能</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//  alert('页面加载完毕。。。')</span></span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// alert('haha')</span></span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">//2. onfocus 获取焦点</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.getElementById(<span class="string">'username'</span>).onfocus = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//  document.getElementById('username').value='哈哈';</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// js对象绑定事件时，也有this的概念，this表示当前的js对象</span></span></span><br><span class="line"><span class="actionscript">        <span class="keyword">this</span>.value = <span class="string">'呵呵'</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">//3. onblur 失去焦点</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.getElementById(<span class="string">'username'</span>).onblur = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">this</span>.value = <span class="string">''</span></span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">//4. onchange 表单控件的值改变时</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.getElementById(<span class="string">'edu'</span>).onchange = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">        alert(<span class="keyword">this</span>.value)</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">//5. onclick 鼠标单击</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.getElementById(<span class="string">'btn'</span>).ondblclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">        alert(<span class="string">'哎呀妈呀，我被点了》。。'</span>)</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 6. onsubmit 表单事件</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.getElementById(<span class="string">'myForm'</span>).onsubmit=<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="actionscript">       <span class="comment">// return true; // 表单正常提交</span></span></span><br><span class="line"><span class="actionscript">        <span class="keyword">return</span> <span class="literal">false</span>;<span class="comment">// 表单拦截</span></span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="五、JS内置对象"><a href="#五、JS内置对象" class="headerlink" title="五、JS内置对象"></a>五、JS内置对象</h2><h3 id="5-1-string对象"><a href="#5-1-string对象" class="headerlink" title="5.1 string对象"></a>5.1 string对象</h3><p>字符串对象</p><ul><li>js构造字符串对象可以使用单引号(<code>&#39;&#39;</code>)，双引号(<code>&quot;&quot;</code>)，反引号<code>(``)</code>三种方式</li></ul><p>字符串的常用方法：</p><ul><li>substring(startIndex,endIndex) [start,end)  字符串截取</li><li>trim()  去掉左右空格</li><li>split()  切割字符串，变为数组</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line">    <span class="comment">//构造字符串对象可以使用  双引号,单引号,反引号</span></span><br><span class="line">    <span class="comment">// 双引号</span></span><br><span class="line">    <span class="keyword">let</span> str1 = <span class="string">"哈哈"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 单引号</span></span><br><span class="line">    <span class="keyword">let</span> str2 = <span class="string">'呵呵'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 反引号：通过 $&#123;变量占位符&#125; ，帮助我们快速实现字符串拼接</span></span><br><span class="line">    <span class="keyword">let</span> str3 = <span class="string">`hello`</span>;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">typeof</span> str3);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 举个栗子</span></span><br><span class="line">    <span class="keyword">let</span> hero = <span class="string">"蔡文姬"</span>;</span><br><span class="line">    <span class="keyword">let</span> winRate = <span class="number">70</span>;</span><br><span class="line">    <span class="comment">// let str = "您选择的英雄是：" + hero + ",它的历史胜率为：" + winRate + "%";</span></span><br><span class="line">    <span class="keyword">let</span> str=<span class="string">`您选择的英雄是：<span class="subst">$&#123;hero&#125;</span>,</span></span><br><span class="line"><span class="string">            它的历史胜</span></span><br><span class="line"><span class="string">            率为<span class="subst">$&#123;winRate&#125;</span>%`</span>;</span><br><span class="line">    <span class="built_in">console</span>.log(str);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ------------ 2. 字符串常用方法</span></span><br><span class="line">    <span class="keyword">let</span> test = <span class="string">`     你好啊！`</span>;</span><br><span class="line">    <span class="built_in">console</span>.log(test.substring(<span class="number">5</span>, <span class="number">7</span>));</span><br><span class="line">    <span class="built_in">console</span>.log(test.trim());</span><br><span class="line">    <span class="built_in">console</span>.log(test.split(<span class="string">','</span>));</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><h3 id="5-2-array对象"><a href="#5-2-array对象" class="headerlink" title="5.2 array对象"></a>5.2 array对象</h3><p>数组对象：</p><p>构造数组对象有两种方式</p><ul><li><code>let arr = [ele1,ele2,ele3];</code></li><li><code>let arr = new Array(ele1,ele2,ele3);</code></li></ul><blockquote><p>特点：js数组长度和类型可以任意，所以我们可以简单理解为数组就是java中的list集合</p></blockquote><p>数组的常用方法：</p><ul><li><p>添加元素</p><ul><li>push() 向尾部添加</li><li>unshift() 向头部添加</li></ul></li><li><p>删除元素</p><ul><li>pop() 弹出最后一个元素</li><li>shift() 弹出第一个元素</li></ul></li><li><p>合并数组</p><ul><li>concat()</li></ul></li><li><p>数组排序</p><ul><li>sort()</li></ul></li><li><p>将数组转为字符串  （与字符串对象.split()方法相反 ）</p><ul><li>join()</li></ul></li><li><p>数组反转</p><ul><li>reverse()</li></ul></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">//1. 创建数组</span></span><br><span class="line">    <span class="keyword">let</span> arr1 = [<span class="number">1</span>,<span class="number">3</span>,<span class="number">7</span>,<span class="string">'a'</span>,<span class="literal">true</span>,<span class="keyword">new</span> <span class="built_in">Date</span>()];</span><br><span class="line"></span><br><span class="line">    <span class="built_in">console</span>.log(arr1);</span><br><span class="line">    <span class="keyword">let</span> arr2= <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="string">'a'</span>,<span class="string">'c'</span>,<span class="string">'d'</span>);</span><br><span class="line">    <span class="built_in">console</span>.log(arr2);</span><br><span class="line">    <span class="comment">//2. 数组合并</span></span><br><span class="line">    <span class="keyword">let</span> newArray = arr1.concat(arr2);</span><br><span class="line">    <span class="built_in">console</span>.log(newArray);</span><br><span class="line">    <span class="comment">//3. 添加元素</span></span><br><span class="line">    newArray.push(<span class="string">'hehe'</span>);</span><br><span class="line">    <span class="built_in">console</span>.log(newArray);</span><br><span class="line">    <span class="comment">//4. 删除元素</span></span><br><span class="line">    <span class="keyword">let</span> result = newArray.pop();</span><br><span class="line">    <span class="built_in">console</span>.log(newArray);</span><br><span class="line">    <span class="comment">//5. 数组元素拼接为字符串</span></span><br><span class="line">    <span class="keyword">let</span> str = newArray.join(<span class="string">'-'</span>)</span><br><span class="line">    <span class="built_in">console</span>.log(str);</span><br><span class="line">    <span class="comment">//6. 排序数组元素 【了解】</span></span><br><span class="line">    <span class="keyword">let</span> array = [<span class="string">'a'</span>,<span class="string">'e'</span>,<span class="string">'c'</span>,<span class="string">'w'</span>]</span><br><span class="line">    <span class="built_in">console</span>.log(array.sort()); <span class="comment">// 升序</span></span><br><span class="line">    <span class="built_in">console</span>.log(array.sort().reverse()); <span class="comment">// 降序</span></span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><h3 id="5-3-Date对象"><a href="#5-3-Date对象" class="headerlink" title="5.3 Date对象"></a>5.3 Date对象</h3><p>日期对象：<code>let date = new Date();</code></p><p>常用方法：</p><ul><li><p>获取年份：<code>getFullYear()</code></p></li><li><p>获取月份：<code>getMonth()</code></p></li><li><p>获取几号：<code>getDate()</code></p></li><li><p>获取1970-至今的毫秒值：<code>getTime()</code></p></li><li><p>等等….</p></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">let</span> date = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">    <span class="built_in">console</span>.log(date);</span><br><span class="line">    <span class="built_in">console</span>.log(date.toLocaleString()); <span class="comment">// 转为本地时间格式字符串</span></span><br><span class="line">    <span class="built_in">console</span>.log(date.getFullYear());<span class="comment">// 获取4位年份</span></span><br><span class="line">    <span class="built_in">console</span>.log(date.getMonth()+<span class="number">1</span>); <span class="comment">// 获取月份  （0~11）  需要+1</span></span><br><span class="line">    <span class="built_in">console</span>.log(date.getDate()); <span class="comment">// 获取几号</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> nowDate = <span class="string">`<span class="subst">$&#123;date.getFullYear()&#125;</span>年<span class="subst">$&#123;date.getMonth()+<span class="number">1</span>&#125;</span>月<span class="subst">$&#123;date.getDate()&#125;</span>日`</span>;</span><br><span class="line">    <span class="built_in">console</span>.log(nowDate);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">console</span>.log(date.getTime()); <span class="comment">// 获取1970-今 的毫秒值 （时间戳 唯一性...）</span></span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><h3 id="5-4-Math对象"><a href="#5-4-Math对象" class="headerlink" title="5.4 Math对象"></a>5.4 Math对象</h3><p>数学运算对象：</p><ul><li>四舍五入：<code>round()</code></li><li>向下取整：<code>floor()</code></li><li>向上取整：<code>ceil()</code></li><li>产生随机数：<code>random()</code>【返回[0,1])之间的随机数，左闭右开，包含0不包含1】</li></ul><blockquote><p>可以理解为Math对象为Java中的数学工具类Math,里面的方法直接通过<code>Math.方法名</code>调用即可.</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;script &gt;</span><br><span class="line">    <span class="keyword">let</span> n = <span class="number">1234.567</span>;</span><br><span class="line">    <span class="comment">//1. 四舍五入取整</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="built_in">Math</span>.round(n));</span><br><span class="line">    <span class="comment">//2. 向下取整</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="built_in">Math</span>.floor(n));</span><br><span class="line">    <span class="comment">//3. 向上取整</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="built_in">Math</span>.ceil(n));</span><br><span class="line">    <span class="comment">//4. 产生随机数</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="built_in">Math</span>.random());</span><br><span class="line">    <span class="comment">//5.练习生成[1-10] 随机数</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="built_in">Math</span>.floor((<span class="built_in">Math</span>.random() * <span class="number">10</span>) + <span class="number">1</span>));</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><h3 id="5-5-全局函数"><a href="#5-5-全局函数" class="headerlink" title="5.5 全局函数"></a>5.5 全局函数</h3><p>全局函数：不需要创建对象，可以直接调用的函数，称为全局函数。</p><p>常用：</p><ul><li><p>字符串转为数字、</p><ul><li><p><code>parseInt()</code>  转为整型</p></li><li><p><code>parseFloat()</code>转为浮点型</p><blockquote><p>注意：从第一个字符开始转换，遇到非数值字符停止转换</p></blockquote></li></ul></li><li><p>对字符串编码和解码</p><ul><li><code>encodeURI()</code>编码</li><li><code>decodeURI()</code> 解码</li></ul></li><li><p>把字符串当作js表达式来执行</p><ul><li><code>eval(&quot;js代码&quot;)</code></li></ul></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;script &gt;</span><br><span class="line">    <span class="comment">// 字符串转为数值</span></span><br><span class="line">    <span class="keyword">let</span> str = <span class="string">'a13a14.5a21'</span>;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="built_in">parseInt</span>(str));</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="built_in">parseFloat</span>(str));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 中文及特殊符号编码和解码</span></span><br><span class="line">    <span class="keyword">let</span> encode = <span class="built_in">encodeURI</span>(<span class="string">'全局函数'</span>);</span><br><span class="line">    <span class="built_in">console</span>.log(encode);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> decode = <span class="built_in">decodeURI</span>(<span class="string">'%E5%85%A8%E5%B1%80%E5%87%BD%E6%95%B0'</span>);</span><br><span class="line">    <span class="built_in">console</span>.log(decode);</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    <span class="string">"alert('1')"</span></span><br><span class="line">    <span class="comment">// 执行js字符串的语句</span></span><br><span class="line">    <span class="built_in">eval</span>(<span class="string">"alert('1')"</span>);</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><h2 id="六、BOM对象"><a href="#六、BOM对象" class="headerlink" title="六、BOM对象"></a>六、BOM对象</h2><p>浏览器对象模型：Browser Object Model</p><p>作用：把浏览器抽象成为一个对象模型,我们可以使用js模拟浏览器的一些功能。</p><h3 id="6-1-window对象"><a href="#6-1-window对象" class="headerlink" title="6.1 window对象"></a>6.1 window对象</h3><p> window对象：是当前窗口的一个顶级对象</p><h4 id="6-1-1-三种弹框"><a href="#6-1-1-三种弹框" class="headerlink" title="6.1.1 三种弹框"></a>6.1.1 三种弹框</h4><p>警告(提示)框：<code>alert()</code></p><p>确认框：<code>confirm()</code></p><ul><li>点击确定 返回true，点击取消 返回false</li></ul><p>输入框：<code>prompt()</code></p><ul><li>点击确定返回 用户输入值，点击取消返回 null</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">// 1.警告框</span></span><br><span class="line">    alert(<span class="string">'xxxxx'</span>);</span><br><span class="line">    <span class="comment">// 2.确认框</span></span><br><span class="line">    <span class="built_in">console</span>.log(confirm(<span class="string">'您确定要删除吗？'</span>));</span><br><span class="line">    <span class="comment">// 3.输入框</span></span><br><span class="line">    <span class="built_in">console</span>.log(prompt(<span class="string">'请输入你要搜索的内容？'</span>));</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><h4 id="6-1-2-二种定时器"><a href="#6-1-2-二种定时器" class="headerlink" title="6.1.2 二种定时器"></a>6.1.2 二种定时器</h4><p>周期性定时器：</p><ul><li>创建：<code>let interval = setInterval(&#39;js代码&#39;,毫秒值)</code></li><li>销毁：<code>clearInterval(interval);</code></li></ul><p>一次性定时器</p><ul><li>创建：<code>let timeout = setTimeout(&#39;js代码&#39;,毫秒值);</code></li><li>销毁：<code>clearTimeout(timeout);</code></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>02-js二个定时器<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"btn1"</span>&gt;</span>取消打印时间<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"btn2"</span>&gt;</span>取消打印自然数<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 1. 定时3秒之后在警告框打印当前时间</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> timeout = setTimeout(<span class="string">'alert(new Date().toLocaleString())'</span>,<span class="number">3000</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 2. 点击按钮取消打印时间</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.getElementById(<span class="string">'btn1'</span>).onclick=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line">        clearTimeout(timeout)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 3. 每隔2秒在控制台打印递增自然数</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> num = <span class="number">1</span>;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> interval = setInterval(<span class="string">'console.log(num++)'</span>,<span class="number">2000</span>);</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 4. 点击按钮取消打印自然数</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.getElementById(<span class="string">'btn2'</span>).onclick=<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line">        clearInterval(interval)</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="6-2-Location对象"><a href="#6-2-Location对象" class="headerlink" title="6.2 Location对象"></a>6.2 Location对象</h3><blockquote><p>把浏览器的地址栏封装为location对象</p></blockquote><p>Location地址</p><ul><li>获取当前窗口地址<ul><li><code>ocation.href</code></li></ul></li><li>刷新当前窗口<ul><li><code>location.reload()</code></li></ul></li><li>当前页跳转<ul><li><code>location.href=&#39;新地址&#39;</code></li></ul></li></ul><p>扩展：如果想打开一个新标签页，跳转新的页面</p><ul><li><code>window.open(&#39;新地址&#39;)</code></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>03-location对象<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">"addr()"</span>&gt;</span>获取当前浏览器地址<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">"refresh()"</span>&gt;</span>刷新当前页面<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">"jump()"</span>&gt;</span> 跳转页面(重点)<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">"toOpen()"</span>&gt;</span> 打开新窗口<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 获取当前浏览器地址</span></span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">addr</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="built_in">window</span>.location.href);</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 刷新当前页面</span></span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">refresh</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line">        location.reload()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 跳转页面(重点)</span></span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">jump</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">        location.href=<span class="string">'https://taobao.com'</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 打开新窗口</span></span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">toOpen</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">window</span>.open(<span class="string">'https://baidu.com'</span>);</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="七、DOM对象"><a href="#七、DOM对象" class="headerlink" title="七、DOM对象"></a>七、DOM对象</h2><p>文档对象模型：Document Object Model</p><p>作用：把页面中所有标签抽象为一个Document对象，然后通过JS动态修改标签及属性内容。</p><h3 id="7-1-DOM获取元素"><a href="#7-1-DOM获取元素" class="headerlink" title="7.1 DOM获取元素"></a>7.1 DOM获取元素</h3><p>第一种方式(ES6之前)：</p><ul><li>获取一个：<code>document.getElementById(id属性值)</code></li><li>获取多个：<ul><li><code>document.getElementsByTagName(标签名)</code>：返回数组</li><li><code>document.getElementsByClassName(class属性值)</code>：返回数组</li><li><code>document.getElementsByName(name属性值)</code>：返回数组</li></ul></li></ul><p>第二种方式：</p><ul><li>获取一个：<code>document.querySelector(id选择器)</code></li><li>获取多个：<code>document.querySelectorAll(css选择器)</code>：返回数组    </li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>dom获取元素<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"#"</span> <span class="attr">method</span>=<span class="string">"get"</span>&gt;</span></span><br><span class="line">    姓名 <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">id</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"德玛西亚"</span>/&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    密码 <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"password"</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    生日 <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"date"</span> <span class="attr">name</span>=<span class="string">"birthday"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    性别</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"gender"</span> <span class="attr">value</span>=<span class="string">"male"</span> <span class="attr">class</span>=<span class="string">"radio"</span>&gt;</span>男<span class="symbol">&amp;emsp;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"gender"</span> <span class="attr">value</span>=<span class="string">"female"</span> <span class="attr">class</span>=<span class="string">"radio"</span>/&gt;</span>女<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    爱好</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"hobby"</span> <span class="attr">value</span>=<span class="string">"smoke"</span>&gt;</span>抽烟</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"hobby"</span> <span class="attr">value</span>=<span class="string">"drink"</span>&gt;</span>喝酒</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"hobby"</span> <span class="attr">value</span>=<span class="string">"perm"</span>&gt;</span>烫头<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    头像 <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">name</span>=<span class="string">"pic"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    学历</span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">"edu"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"0"</span>&gt;</span>请选择<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"1"</span>&gt;</span>入门<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"2"</span>&gt;</span>精通<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"3"</span>&gt;</span>放弃<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    简介</span><br><span class="line">    <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">name</span>=<span class="string">"userIntro"</span> <span class="attr">cols</span>=<span class="string">"30"</span> <span class="attr">rows</span>=<span class="string">"10"</span>&gt;</span>默认值<span class="tag">&lt;/<span class="name">textarea</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"reset"</span> <span class="attr">value</span>=<span class="string">"清空按钮"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"提交按钮"</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 1.获取id="username"的标签对象</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="built_in">document</span>.getElementById(<span class="string">'username'</span>));</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="built_in">document</span>.querySelector(<span class="string">"#username"</span>));</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 2.获取class="radio"的标签对象数组</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="built_in">document</span>.getElementsByClassName(<span class="string">'radio'</span>));</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="built_in">document</span>.querySelectorAll(<span class="string">'.radio'</span>));</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 3.获取所有的option标签对象数组</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="built_in">document</span>.getElementsByTagName(<span class="string">"option"</span>));</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="built_in">document</span>.querySelectorAll(<span class="string">'option'</span>));</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 4.获取name="hobby"的input标签对象数组</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="built_in">document</span>.getElementsByName(<span class="string">"hobby"</span>));</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="built_in">document</span>.querySelectorAll(<span class="string">'input[name="hobby"]'</span>));</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 5.获取文件上传选择框</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="built_in">document</span>.querySelectorAll(<span class="string">'form input[name="pic"]'</span>));</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>获取一个推荐使用getElementById，获取多个推荐使用ES6的语法。</p></blockquote><h3 id="7-2-DOM操作内容"><a href="#7-2-DOM操作内容" class="headerlink" title="7.2 DOM操作内容"></a>7.2 DOM操作内容</h3><ol><li><p>获取或者修改元素的   纯文本内容</p><ul><li>语法：js（元素）对象.innerText; </li></ul></li><li><p>获取或者修改元素的    html内容（可以解析标签）</p><ul><li>语法：js（元素）对象.innerHTML; </li></ul></li><li><p>获取或者修改包含自身的html内容（了解）</p><ul><li>语法：js（元素）对象.outerHTML; </li></ul></li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>dom操作内容<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-id">#myDiv</span>&#123;</span></span><br><span class="line">            border: 1px solid red;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"myDiv"</span>&gt;</span>程序猿最讨厌的四件事：<span class="tag">&lt;<span class="name">br</span>&gt;</span>写注释、写文档…… <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> myDiv = <span class="built_in">document</span>.getElementById(<span class="string">'myDiv'</span>);</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 1.innerText操作div内容</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 1.1获取纯文本内容</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(myDiv.innerText);</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 1.2 覆盖原来的纯文本</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// myDiv.innerText='别人不写注释 &lt;br&gt; 别人不写文档';</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 1.3 追加纯文本</span></span></span><br><span class="line"><span class="actionscript">   <span class="comment">// myDiv.innerText+='别人不写注释 &lt;br&gt; 别人不写文档';</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 2.innerHTML操作div内容</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 2.1获取超文本内容</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(myDiv.innerHTML);</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 2.2 覆盖原来的超文本</span></span></span><br><span class="line"><span class="actionscript">   <span class="comment">// myDiv.innerHTML='别人不写注释 &lt;br&gt; 别人不写文档';</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 2.3 追加超文本</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">    myDiv.innerHTML+='<span class="tag">&lt;<span class="name">br</span>&gt;</span>别人不写注释 <span class="tag">&lt;<span class="name">br</span>&gt;</span> 别人不写文档';</span></span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 3.outerHTML操作div本身</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">    myDiv.outerHTML='<span class="tag">&lt;<span class="name">p</span>&gt;</span>我原本是div，现在变成了p<span class="tag">&lt;/<span class="name">p</span>&gt;</span>'</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="7-3-DOM操作属性"><a href="#7-3-DOM操作属性" class="headerlink" title="7.3 DOM操作属性"></a>7.3 DOM操作属性</h3><ol><li><p>获取文本框的值,单选框或复选框的选中状态</p><ul><li>语法: <ul><li><code>js对象.属性名</code> 获取指定属性值</li><li><code>js对象.属性名=&#39;xxx&#39;</code> 设置指定属性的新值</li></ul></li></ul></li><li><p>给元素设置自定义属性使用: </p><ul><li>语法: <code>js对象.setAttribute(属性名,属性值)</code></li></ul></li><li><p>获取元素的自定义属性值<br> 语法: <code>js对象.getAttribute(属性名)</code></p></li><li><p>移除元素的自定义属性（了解）<br> 语法:<code>js对象.removeAttribute(属性名)</code></p></li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>dom操作属性<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"#"</span> <span class="attr">method</span>=<span class="string">"get"</span>&gt;</span></span><br><span class="line">    姓名 <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">id</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"德玛西亚"</span>/&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    爱好</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"hobby"</span> <span class="attr">value</span>=<span class="string">"smoke"</span>&gt;</span>抽烟</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"hobby"</span> <span class="attr">value</span>=<span class="string">"drink"</span>&gt;</span>喝酒</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"hobby"</span> <span class="attr">value</span>=<span class="string">"perm"</span> &gt;</span>烫头<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"reset"</span> <span class="attr">value</span>=<span class="string">"清空按钮"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"提交按钮"</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 1.获取文本框预定义的属性值</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="built_in">document</span>.getElementById(<span class="string">'username'</span>).value);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.getElementById(<span class="string">'username'</span>).value = <span class="string">'草丛伦'</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 2.给文本框设置自定义属性</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.getElementById(<span class="string">'username'</span>).setAttribute(<span class="string">"data-msg"</span>, <span class="string">'喜欢大宝剑...'</span>)</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 3.获取文本框自定义属性</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="built_in">document</span>.getElementById(<span class="string">'username'</span>).getAttribute(<span class="string">"data-msg"</span>));</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 4.移出文本框自定义属性</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.getElementById(<span class="string">'username'</span>).removeAttribute(<span class="string">"data-msg"</span>);</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="7-4-DOM操作样式"><a href="#7-4-DOM操作样式" class="headerlink" title="7.4 DOM操作样式"></a>7.4 DOM操作样式</h3><ol><li><p>给标签的style属性设置一个css样式</p><ul><li>语法: <code>js对象.style.样式名=&#39;样式值&#39;</code></li><li>js的样式名：fontSize</li></ul></li><li><p>给标签的style属性批量设置css样式</p><ul><li>语法:<code>js对象.style.cssText=&#39;css样式&#39;</code><ul><li>css的样式名：font-size</li></ul></li></ul></li><li><p>给标签绑定class的类选择器</p><ul><li>语法: <code>js对象.className=&#39;class选择器名&#39;</code></li></ul></li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>dom操作样式<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-id">#p1</span>&#123; <span class="attribute">background-color</span>: red;&#125;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.mp</span> &#123;</span></span><br><span class="line">            color: green</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.mpp</span> &#123;</span></span><br><span class="line">            background-color: lightgray;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"p1"</span> <span class="attr">style</span>=<span class="string">""</span>&gt;</span>1. 设置一个css样式<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"p2"</span>&gt;</span>2. 批量设置css样式<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"p3"</span> &gt;</span>3. 通过class设置样式<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> p1 = <span class="built_in">document</span>.getElementById(<span class="string">"p1"</span>);<span class="comment">//获取段落标签</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> p2 = <span class="built_in">document</span>.getElementById(<span class="string">"p2"</span>);<span class="comment">//获取段落标签</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> p3 = <span class="built_in">document</span>.getElementById(<span class="string">"p3"</span>);<span class="comment">//获取段落标签</span></span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 1. 设置一个css样式</span></span></span><br><span class="line"><span class="actionscript">    p1.style.backgroundColor=<span class="string">'skyblue'</span>;</span></span><br><span class="line"><span class="actionscript">    p1.style.border=<span class="string">'1px solid red'</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 1.1.获取第一个p标签 style属性 的背景css样式</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(p1.style.backgroundColor);</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 2. 批量设置css样式</span></span></span><br><span class="line"><span class="actionscript">    p2.style.cssText=<span class="string">'background-color:red;border:2px double black'</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 3. 通过class设置样式</span></span></span><br><span class="line"><span class="actionscript">    p3.className=<span class="string">"mp mpp"</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="7-5-DOM操作元素"><a href="#7-5-DOM操作元素" class="headerlink" title="7.5 DOM操作元素"></a>7.5 DOM操作元素</h3><ol><li><p>创建一个标签对象</p><ul><li>语法：<code>document.createElement(&#39;标签名称&#39;)</code></li></ul></li><li><p>给父标签添加一个子标签</p><ul><li>语法：<code>父标签对象.appendChild(子标签对象)</code></li></ul></li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>dom操作元素<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">id</span>=<span class="string">"star"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>古力娜扎<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>迪丽热巴<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 需求：添加一个新列表项</span></span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 方式一：</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 1.创建 li标签</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> li = <span class="built_in">document</span>.createElement(<span class="string">'li'</span>);</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 2.设置文本</span></span></span><br><span class="line"><span class="actionscript">    li.innerText=<span class="string">'萨瓦快递'</span>;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 3.挂靠在 dom的 ul下面</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.getElementById(<span class="string">'star'</span>).appendChild(li);</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 方式二： 推荐</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.getElementById(<span class="string">'star'</span>).innerHTML+=<span class="string">'&lt;li&gt;马尔扎哈&lt;/li&gt;'</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="八、JS正则"><a href="#八、JS正则" class="headerlink" title="八、JS正则"></a>八、JS正则</h2><p>作用：根据定义好的规则，过滤文本内容；这里我们用于校验表单</p><p>JS中的正则：</p><ul><li>创建：<ul><li><code>let rege = new RegExp(“正则表达式字符串”);</code></li><li><code>let rege = /正则表达式/;</code></li></ul></li><li>验证方法<ul><li><code>正则对象.test(要验证的字符串)</code><ul><li>符合正则规则就返回true，否则false</li></ul></li></ul></li></ul><blockquote><p>小扩展：</p><ul><li>在线正则表达式网站：<a href="https://tool.oschina.net/regex/#" target="_blank" rel="noopener">https://tool.oschina.net/regex/#</a></li></ul></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>09-正则表达式<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">//创建一个校验手机号的正则表达式，要求：11位、1开头，第二位：3456789</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// let reg = new RegExp('^1[3456789]\\d&#123;9&#125;$')</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> reg = <span class="regexp">/^1[3456789]\d&#123;9&#125;$/</span>;<span class="comment">//推荐这种方式创建正则对象</span></span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">   <span class="comment">//校验用户输入的值</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> value = <span class="string">'15933016675'</span>;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(reg.test(value));</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 以邮箱举例</span></span></span><br><span class="line">    /*</span><br><span class="line">        mm@qqcn</span><br><span class="line">        jj@163.com</span><br><span class="line">        ...</span><br><span class="line">邮箱后缀</span><br><span class="line">            com</span><br><span class="line">            cn</span><br><span class="line">            com.cn</span><br><span class="line">     */</span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> emailReg = <span class="regexp">/^([a-z0-9\_.-]+)@([\da-z\.-]+)\.([a-z\.]&#123;2,6&#125;)$/</span>;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(emailReg.test(<span class="string">'jj@126.cn'</span>));</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="九、练习案例"><a href="#九、练习案例" class="headerlink" title="九、练习案例"></a>九、练习案例</h2><h3 id="9-1-表单校验"><a href="#9-1-表单校验" class="headerlink" title="9.1 表单校验"></a>9.1 表单校验</h3><p>代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>注册页面<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        span&#123;</span><br><span class="line">            color: red;</span><br><span class="line">            font-size: 12px;</span><br><span class="line">            display: none;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"#"</span> <span class="attr">method</span>=<span class="string">"get"</span> <span class="attr">id</span>=<span class="string">"myForm"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">"td_left"</span>&gt;</span>用户名<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"username"</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">placeholder</span>=<span class="string">"请输入账号"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"userInfo"</span>&gt;</span>用户名不合法<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">"td_left"</span>&gt;</span>手机号<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"telephone"</span> <span class="attr">name</span>=<span class="string">"telephone"</span> <span class="attr">placeholder</span>=<span class="string">"请输入手机号"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"telInfo"</span>&gt;</span>手机号不合法<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">"td_left"</span>&gt;</span>密码<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">id</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">placeholder</span>=<span class="string">"请输入密码"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"pwdInfo"</span>&gt;</span>密码不合法<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">"td_left"</span>&gt;</span>验证码<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"smsCode"</span> <span class="attr">id</span>=<span class="string">"smsCode"</span> <span class="attr">placeholder</span>=<span class="string">"请输入验证码"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>发送手机验证码<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"codeInfo"</span>&gt;</span>验证码不合法<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">"2"</span> <span class="attr">align</span>=<span class="string">"center"</span> <span class="attr">width</span>=<span class="string">"373"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"注册"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line">    /*</span><br><span class="line">        用户名正则，4到16位（字母，数字，下划线，减号）：/^[a-zA-Z0-9_-]&#123;4,16&#125;$/</span><br><span class="line">        必须是包含大小写字母和数字的组合，不能使用特殊字符，长度在6-10之间：/^(?=.*\d)(?=.*[a-z])(?=.*[A-Z]).&#123;6,10&#125;$/</span><br><span class="line">        手机号正则：/^1[3456789]\d&#123;9&#125;$/</span><br><span class="line">        验证码正则：/^\d&#123;6&#125;$/</span><br><span class="line">    */</span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> userInput = <span class="built_in">document</span>.getElementById(<span class="string">'username'</span>);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> phoneInput = <span class="built_in">document</span>.getElementById(<span class="string">'telephone'</span>);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> pswInput = <span class="built_in">document</span>.getElementById(<span class="string">'password'</span>);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> smsCode = <span class="built_in">document</span>.getElementById(<span class="string">'smsCode'</span>);</span></span><br><span class="line">    /**</span><br><span class="line">     * 验证用户名</span><br><span class="line">     */</span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">checkUser</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//定义正则</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> userReg = <span class="regexp">/^[a-zA-Z0-9_-]&#123;4,16&#125;$/</span>;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> flag = userReg.test(userInput.value);</span></span><br><span class="line"><span class="actionscript">        noneOfInline(<span class="string">'userInfo'</span>,flag);</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">return</span> flag;</span></span><br><span class="line">    &#125;</span><br><span class="line">    /**</span><br><span class="line">     * 验证手机号</span><br><span class="line">     */</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">checkPhone</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//定义正则</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> phoneReg = <span class="regexp">/^1[3456789]\d&#123;9&#125;$/</span>;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> flag = phoneReg.test(phoneInput.value);</span></span><br><span class="line"><span class="actionscript">        noneOfInline(<span class="string">'telInfo'</span>,flag);</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">return</span> flag;</span></span><br><span class="line">    &#125;</span><br><span class="line">    /**</span><br><span class="line">     * 验证密码</span><br><span class="line">     */</span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">checkPsw</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//定义正则</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> pswReg = <span class="regexp">/^(?=.*\d)(?=.*[a-z])(?=.*[A-Z]).&#123;6,10&#125;$/</span>;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> flag = pswReg.test(pswInput.value);</span></span><br><span class="line"><span class="actionscript">        noneOfInline(<span class="string">'pwdInfo'</span>,flag);</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">return</span> flag;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 验证验证码</span><br><span class="line">     */</span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">checkCode</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> codeReg = <span class="regexp">/^\d&#123;6&#125;$/</span>;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> flag = codeReg.test(smsCode.value);</span></span><br><span class="line"><span class="actionscript">        noneOfInline(<span class="string">'codeInfo'</span>,flag);</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">return</span> flag;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 定义函数，控制span标签的显示与隐藏</span><br><span class="line">     */</span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">noneOfInline</span><span class="params">(info, flag)</span> </span>&#123;</span></span><br><span class="line">        if (flag)&#123;</span><br><span class="line"><span class="javascript">            <span class="built_in">document</span>.getElementById(info).style.display = <span class="string">'none'</span>;</span></span><br><span class="line"><span class="actionscript">        &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">document</span>.getElementById(info).style.display = <span class="string">'inline'</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    userInput.onblur = checkUser;</span><br><span class="line">    phoneInput.onblur = checkPhone;</span><br><span class="line">    pswInput.onblur = checkPsw;</span><br><span class="line">    smsCode.onblur = checkCode;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">    * 表单提交时验证全部是否都合法</span><br><span class="line">    */</span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.getElementById(<span class="string">'myForm'</span>).onsubmit = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">return</span> checkCode() &amp;&amp; checkPhone() &amp;&amp; checkPsw() &amp;&amp; checkUser();</span></span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="9-2-商品全选"><a href="#9-2-商品全选" class="headerlink" title="9.2 商品全选"></a>9.2 商品全选</h3><p>代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>案例-商品全选<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">商品全选</span></span><br><span class="line"><span class="comment">    1. 全选 点击全选按钮,所有复选框都被选中</span></span><br><span class="line"><span class="comment">    2. 反选 点击反选按钮,所有复选框状态取反</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"btn1"</span>&gt;</span>1. 全选<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"btn2"</span>&gt;</span>2. 反选<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span>&gt;</span>电脑</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span>&gt;</span>手机</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span>&gt;</span>汽车</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span>&gt;</span>别墅</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">checked</span>=<span class="string">"checked"</span>&gt;</span>笔记本</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> &gt;</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.getElementById(<span class="string">'btn1'</span>).onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> boxs = <span class="built_in">document</span>.querySelectorAll(<span class="string">'input[type="checkbox"]'</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; boxs.length; i++) &#123;</span></span><br><span class="line"><span class="actionscript">            boxs[i].checked = <span class="literal">true</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.getElementById(<span class="string">'btn2'</span>).onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> boxs = <span class="built_in">document</span>.querySelectorAll(<span class="string">'input[type="checkbox"]'</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; boxs.length; i++) &#123;</span></span><br><span class="line">            boxs[i].checked = !boxs[i].checked;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="9-3-省市联动"><a href="#9-3-省市联动" class="headerlink" title="9.3 省市联动"></a>9.3 省市联动</h3><p>代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>案例-省市级联<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"provinceId"</span> <span class="attr">style</span>=<span class="string">"width:150px"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">""</span>&gt;</span>----请-选-择-省----<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"0"</span>&gt;</span>北京<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"1"</span>&gt;</span>河北<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"2"</span>&gt;</span>辽宁<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"3"</span>&gt;</span>天津<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"cityId"</span> <span class="attr">style</span>=<span class="string">"width:150px"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">""</span>&gt;</span>----请-选-择-市----<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line">    /*</span><br><span class="line">省市级联</span><br><span class="line">1. 页面加载完成后自动装载省数据</span><br><span class="line">2. 当选中省时,装载该省的市数据</span><br><span class="line">*/</span><br><span class="line">    </span><br><span class="line"><span class="actionscript">    <span class="comment">// 准备数据</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> data = <span class="keyword">new</span> <span class="built_in">Array</span>();</span></span><br><span class="line"><span class="actionscript">    data[<span class="number">0</span>] = [<span class="string">'顺义区'</span>, <span class="string">'昌平区'</span>, <span class="string">'朝阳区'</span>];</span></span><br><span class="line"><span class="actionscript">    data[<span class="number">1</span>] = [<span class="string">"保定"</span>, <span class="string">"石家庄"</span>, <span class="string">"廊坊"</span>];</span></span><br><span class="line"><span class="actionscript">    data[<span class="number">2</span>] = [<span class="string">"沈阳"</span>, <span class="string">"铁岭"</span>, <span class="string">"抚顺"</span>];</span></span><br><span class="line"><span class="actionscript">    data[<span class="number">3</span>] = [<span class="string">"滨海新区"</span>, <span class="string">"宝坻区"</span>, <span class="string">"南开区"</span>];</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> provinceSelect = <span class="built_in">document</span>.getElementById(<span class="string">"provinceId"</span>);<span class="comment">//获取省下拉列表</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> citySelect = <span class="built_in">document</span>.getElementById(<span class="string">"cityId"</span>);<span class="comment">//获取市下拉列表</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    provinceSelect.onchange=<span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//每次先复原</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">        citySelect.innerHTML='<span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">""</span>&gt;</span>----请-选-择-市----<span class="tag">&lt;/<span class="name">option</span>&gt;</span>';</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//获取对应数组</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> citys=data[<span class="keyword">this</span>.value];</span></span><br><span class="line"><span class="javascript">        <span class="keyword">for</span> (<span class="keyword">let</span> city <span class="keyword">of</span> citys) &#123;</span></span><br><span class="line"><span class="javascript">            citySelect.innerHTML+=<span class="string">`&lt;option value="<span class="subst">$&#123;city&#125;</span>"&gt;<span class="subst">$&#123;city&#125;</span>&lt;/option&gt;`</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="9-4-隔行换色"><a href="#9-4-隔行换色" class="headerlink" title="9.4 隔行换色"></a>9.4 隔行换色</h3><p>代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>案例-隔行变色<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">id</span>=<span class="string">"tab1"</span> <span class="attr">border</span>=<span class="string">"1"</span> <span class="attr">width</span>=<span class="string">"800"</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span> <span class="attr">width</span>=<span class="string">"100px"</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"allCheck"</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"check"</span>&gt;</span>全/<span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"reCheck"</span> <span class="attr">name</span>=<span class="string">"check"</span> <span class="attr">type</span>=<span class="string">"radio"</span>&gt;</span>反选<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>分类ID<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>分类名称<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>分类描述<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>操作<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">class</span>=<span class="string">"checkbox"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>手机数码<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>手机数码类商品<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>修改<span class="tag">&lt;/<span class="name">a</span>&gt;</span>|<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">class</span>=<span class="string">"checkbox"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>电脑办公<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>电脑办公类商品<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>修改<span class="tag">&lt;/<span class="name">a</span>&gt;</span>|<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">class</span>=<span class="string">"checkbox"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>3<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>鞋靴箱包<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>鞋靴箱包类商品<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>修改<span class="tag">&lt;/<span class="name">a</span>&gt;</span>|<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">class</span>=<span class="string">"checkbox"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>4<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>家居饰品<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>家居饰品类商品<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>修改<span class="tag">&lt;/<span class="name">a</span>&gt;</span>|<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">class</span>=<span class="string">"checkbox"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>5<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>牛奶制品<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>牛奶制品类商品<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>修改<span class="tag">&lt;/<span class="name">a</span>&gt;</span>|<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">class</span>=<span class="string">"checkbox"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>6<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>大豆制品<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>大豆制品类商品<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>修改<span class="tag">&lt;/<span class="name">a</span>&gt;</span>|<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">隔行变色</span></span><br><span class="line"><span class="comment">1. 表格奇偶行颜色不同</span></span><br><span class="line"><span class="comment">2. 鼠标移入颜色高亮</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> trs = <span class="built_in">document</span>.querySelectorAll(<span class="string">'tr'</span>);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> oldColor;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; trs.length; i++) &#123;</span></span><br><span class="line">        if (i%2===0)&#123;</span><br><span class="line"><span class="actionscript">            trs[i].style.backgroundColor = <span class="string">'pink'</span>;</span></span><br><span class="line"><span class="actionscript">        &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="actionscript">            trs[i].style.backgroundColor = <span class="string">'lightgray'</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="actionscript">        <span class="comment">//鼠标移入改变背景色</span></span></span><br><span class="line"><span class="actionscript">        trs[i].onmouseover = <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">//记录旧的颜色</span></span></span><br><span class="line">            oldColor = trs[i].style.backgroundColor;</span><br><span class="line"><span class="actionscript">            trs[i].style.backgroundColor = <span class="string">'gold'</span>;</span></span><br><span class="line">        &#125;;</span><br><span class="line"><span class="actionscript">        <span class="comment">//移出鼠标复原颜色</span></span></span><br><span class="line"><span class="actionscript">        trs[i].onmouseout = <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line">            trs[i].style.backgroundColor = oldColor;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> all = <span class="built_in">document</span>.getElementById(<span class="string">'allCheck'</span>);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> reverse = <span class="built_in">document</span>.getElementById(<span class="string">'reCheck'</span>);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> boxs = <span class="built_in">document</span>.querySelectorAll(<span class="string">'.checkbox'</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    all.onclick = <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">for</span> (<span class="keyword">let</span> box <span class="keyword">of</span> boxs) &#123;</span></span><br><span class="line"><span class="actionscript">            box.checked = <span class="literal">true</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"><span class="actionscript">    reverse.onclick = <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">for</span> (<span class="keyword">let</span> box <span class="keyword">of</span> boxs) &#123;</span></span><br><span class="line">            box.checked = !box.checked;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;JavaScript&quot;&gt;&lt;a href=&quot;#JavaScript&quot; class=&quot;headerlink&quot; title=&quot;JavaScript&quot;&gt;&lt;/a&gt;JavaScript&lt;/h1&gt;&lt;h2 id=&quot;一、概述&quot;&gt;&lt;a href=&quot;#一、概述&quot; class=&quot;headerlink&quot; title=&quot;一、概述&quot;&gt;&lt;/a&gt;一、概述&lt;/h2&gt;&lt;h3 id=&quot;1-1-概念&quot;&gt;&lt;a href=&quot;#1-1-概念&quot; class=&quot;headerlink&quot; title=&quot;1.1 概念&quot;&gt;&lt;/a&gt;1.1 概念&lt;/h3&gt;&lt;p&gt;概念：一门客户端脚本语言。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;运行在客户端浏览器中的，每一个浏览器都有JavaScript的解析引擎&lt;/li&gt;
&lt;li&gt;脚本语言：不需要编译，直接就可以被浏览器解析执行。&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="JavaWeb" scheme="http://sunmoon.com/categories/JavaWeb/"/>
    
    
      <category term="前端" scheme="http://sunmoon.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="JS" scheme="http://sunmoon.com/tags/JS/"/>
    
  </entry>
  
  <entry>
    <title>CSS入门</title>
    <link href="http://sunmoon.com/2020/08/16/CSS%E5%85%A5%E9%97%A8/"/>
    <id>http://sunmoon.com/2020/08/16/CSS%E5%85%A5%E9%97%A8/</id>
    <published>2020-08-16T11:50:45.000Z</published>
    <updated>2020-08-16T11:53:27.432Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、CSS概述"><a href="#一、CSS概述" class="headerlink" title="一、CSS概述"></a>一、CSS概述</h2><p>概念：层叠样式表（Cascading Style Sheet）</p><blockquote><p>层叠样式: 对同一个标签添加多个不同的样式,所有样式会叠加在一起展示出效果</p></blockquote><p>作用：页面美化和控制布局</p><p>CSS的优点：</p><ul><li>实现了样式和内容的分离，提高了显示效果和样式的复用性。</li><li>降低耦合性，分工更加明确，CSS专门用于美化，HTML专门用于结构搭建。</li></ul><a id="more"></a><h2 id="二、CSS入门"><a href="#二、CSS入门" class="headerlink" title="二、CSS入门"></a>二、CSS入门</h2><h3 id="2-1-HTML引入CSS"><a href="#2-1-HTML引入CSS" class="headerlink" title="2.1 HTML引入CSS"></a>2.1 HTML引入CSS</h3><p>HTML有三种引入CSS的方式分别是：</p><ul><li><p>行内样式</p><ul><li>在标签中使用<strong>style</strong>属性指定css代码</li><li>如：<code>&lt;div style=&quot;color:red;&quot;&gt;hello,world&lt;/div&gt;</code></li></ul></li><li><p>内部样式</p><ul><li><p>在head标签内，定义style标签，在style标签体内写css代码</p></li><li><pre><code class="html"><span class="tag">&lt;<span class="name">style</span>&gt;</span>    div{<span class="css">        <span class="selector-tag">color</span><span class="selector-pseudo">:red</span>;</span>    }<span class="tag">&lt;/<span class="name">style</span>&gt;</span><span class="comment"><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">+ 外部样式</span><br><span class="line"></span><br><span class="line">+ 通过link标签引入外部css文件</span><br><span class="line"></span><br><span class="line">+ ```html</span><br><span class="line">&lt;link <span class="attribute">rel</span>=<span class="string">"stylesheet"</span>  <span class="attribute">href</span>=<span class="string">"外部css文件"</span>/&gt;</span><br><span class="line"><span class="attribute">rel</span>=<span class="string">"stylesheet"</span> :告知浏览器引入的外部文件为css样式表</span><br></pre></td></tr></table></figure></span></code></pre></li></ul></li></ul><h3 id="2-2-CSS书写规范"><a href="#2-2-CSS书写规范" class="headerlink" title="2.2 CSS书写规范"></a>2.2 CSS书写规范</h3><p>注释：<code>/*注释内容*/</code></p><p>语法：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">选择器&#123;</span><br><span class="line">样式名:样式值;</span><br><span class="line">样式名:样式值;</span><br><span class="line">...</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">例如：</span><br><span class="line"><span class="selector-tag">span</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>:red;</span><br><span class="line">    <span class="attribute">font-size</span>:<span class="number">20px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-3-基本选择器"><a href="#2-3-基本选择器" class="headerlink" title="2.3 基本选择器"></a>2.3 基本选择器</h3><p>选择器作用：找出页面一组特定的标签</p><ul><li>标签选择器：<ul><li>语法：<code>标签名{css样式}</code></li><li>特点：指定标签</li></ul></li><li>类选择器：<ul><li><code>.class名{css样式}</code></li><li>特点：分组设置样式</li></ul></li><li>ID选择器：<ul><li><code>#id名{css样式}</code></li><li>特点：唯一</li></ul></li></ul><p>代码示例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>基本选择器<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        span&#123;</span><br><span class="line">            font-size: 20px;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.female</span>&#123;</span></span><br><span class="line">            color: pink;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.male</span>&#123;</span></span><br><span class="line">            color: skyblue;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.hero</span>&#123;</span></span><br><span class="line">            font-weight: bold;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-id">#boss</span>&#123;</span></span><br><span class="line">            font-size: 40px;</span><br><span class="line"><span class="css">            <span class="selector-tag">color</span>: <span class="selector-id">#9900FF</span>;</span></span><br><span class="line">            font-style: italic;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"female"</span>&gt;</span>古力娜扎<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"female"</span>&gt;</span>迪丽热巴<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"female hero"</span>&gt;</span>黑寡妇<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"male hero"</span>&gt;</span>钢铁侠<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"male hero"</span>&gt;</span>超人<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"boss"</span> <span class="attr">class</span>=<span class="string">"male"</span>&gt;</span>灭霸<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>选择器优先级：id &gt; class &gt; 标签</p></blockquote><h3 id="2-4-扩展选择器"><a href="#2-4-扩展选择器" class="headerlink" title="2.4 扩展选择器"></a>2.4 扩展选择器</h3><p>选择所有元素：</p><ul><li>语法：<code>*{css样式}</code></li></ul><p>并集选择器：</p><ul><li>语法：<code>选择器1,选择器2,选择器3....{css样式}</code></li></ul><p>父子选择器：</p><ul><li>语法：<code>父选择器 &gt; 子选择器{css样式}</code></li></ul><p>后代选择器：</p><ul><li>语法：<code>父选择器 后代选择器{css样式}</code></li></ul><p>属性选择器：</p><ul><li>语法：<code>标签[属性名=&quot;属性值&quot;]{css样式}</code></li></ul><p>伪类选择器：选择一些元素具有的状态</p><ul><li>语法： 元素:状态{}</li><li>如： <code>&lt;a&gt;:状态{}</code><ul><li>状态：<ul><li>link：初始化的状态</li><li>visited：被访问过的状态</li><li>active：正在访问状态</li><li>hover：鼠标悬浮状态</li></ul></li></ul></li></ul><p>代码示例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>04-扩展选择器<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        span,label&#123;</span><br><span class="line">            font-size: 20px;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        div&gt;span&#123;</span><br><span class="line">            color: red;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        div span&#123;</span><br><span class="line">            border: 1px solid black;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-tag">input</span><span class="selector-attr">[name=<span class="string">"username"</span>]</span>&#123;</span></span><br><span class="line">            background-color: gold;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>烟幕弹<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"gbl"</span>&gt;</span>高爆雷<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"jjx"</span>&gt;</span>急救箱<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span>&gt;</span>姓名<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"Jack"</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span>&gt;</span>密码<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"123456"</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-5-CSS属性介绍"><a href="#2-5-CSS属性介绍" class="headerlink" title="2.5 CSS属性介绍"></a>2.5 CSS属性介绍</h3><p>字体、文本</p><ul><li>font-size：字体大小<ul><li>color：文本颜色</li><li>text-align：对其方式</li><li>line-height：行高 </li></ul></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>字体和文本属性<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        p&#123;</span><br><span class="line"><span class="css">            <span class="selector-tag">color</span>: <span class="selector-tag">green</span>; <span class="comment">/*1.p段落文字绿色*/</span></span></span><br><span class="line"><span class="css">            <span class="selector-tag">font-size</span>: 20<span class="selector-tag">px</span>; <span class="comment">/*2.p段落文字大小20px*/</span></span></span><br><span class="line"><span class="css">            <span class="selector-tag">line-height</span>: 40<span class="selector-tag">px</span>; <span class="comment">/*3.p段落行高40px*/</span></span></span><br><span class="line"><span class="css">            <span class="selector-tag">font-weight</span>: <span class="selector-tag">bold</span>; <span class="comment">/*4.p段落字体加粗*/</span></span></span><br><span class="line"><span class="css">            <span class="selector-tag">font-family</span>: 楷体; <span class="comment">/*5.p段落字体楷体*/</span></span></span><br><span class="line"><span class="css">            <span class="selector-tag">font-style</span>: <span class="selector-tag">italic</span>; <span class="comment">/*6.p段落文字倾斜*/</span></span></span><br><span class="line"><span class="css">            <span class="selector-tag">text-indent</span>: 40<span class="selector-tag">px</span>; <span class="comment">/*设置段落的首行缩进*/</span></span></span><br><span class="line">        &#125;</span><br><span class="line">        a&#123;</span><br><span class="line">            text-decoration: none;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span> 学习的误区：<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">        眼睛：看了一遍记住了<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">        耳朵：听了一遍明白了<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">        脑子：想了一遍搞懂了<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">        手：你们会个屁！^_^ <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>背景</p><ul><li>background</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>背景属性<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        div&#123;</span><br><span class="line">            width: 100%;</span><br><span class="line">            height: 200px;</span><br><span class="line">            border: 1px solid red;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-id">#div1</span>&#123;</span></span><br><span class="line">            background-color: lightpink;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-id">#div2</span>&#123;</span></span><br><span class="line">            background-image: url("../img/girl.jpg");</span><br><span class="line">            background-repeat: no-repeat;</span><br><span class="line"><span class="css">            <span class="selector-tag">background-position</span>: <span class="selector-tag">center</span>; <span class="comment">/* center center */</span></span></span><br><span class="line">            background-color: antiquewhite;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"div1"</span>&gt;</span></span><br><span class="line">    我可以输入一切内容。。。。</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"div2"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>边框</p><ul><li>border：设置边框属性</li></ul><p>尺寸</p><ul><li>width：宽度</li><li>height：高度</li></ul><p>盒子模型：控制布局</p><ul><li><p>margin：外边距</p></li><li><p>padding：内边距</p><ul><li>默认情况下内边距会影响整个盒子的大小</li><li>box-sizing: border-box;  设置盒子的属性，让width和height就是最终盒子的大小</li></ul></li><li><p>float：浮动</p><ul><li>left</li><li>right</li></ul></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>盒子模型<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.box</span>&#123;</span></span><br><span class="line">            width: 300px;</span><br><span class="line">            height: 300px;</span><br><span class="line"><span class="css">            <span class="selector-tag">border</span>: 10<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-tag">red</span>; <span class="comment">/*同时指定四个边框*/</span></span></span><br><span class="line"><span class="css">            <span class="selector-tag">padding</span>: 30<span class="selector-tag">px</span>;<span class="comment">/*同时指定四个内边距为30px*/</span></span></span><br><span class="line"><span class="css">            <span class="selector-tag">margin</span><span class="selector-pseudo">:auto</span>;</span></span><br><span class="line">            margin-top: 50px;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    盒子模型：</span></span><br><span class="line"><span class="comment">        边框：border</span></span><br><span class="line"><span class="comment">            top、right、bottom、left</span></span><br><span class="line"><span class="comment">        内边距：padding</span></span><br><span class="line"><span class="comment">            top、right、bottom、left</span></span><br><span class="line"><span class="comment">        外边距：margin</span></span><br><span class="line"><span class="comment">             top、right、bottom、left</span></span><br><span class="line"><span class="comment">        盒子水平居中：margin:auto;</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../img/girl.jpg"</span> <span class="attr">width</span>=<span class="string">"300px"</span> <span class="attr">height</span>=<span class="string">"300px"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>显示属性</p><ul><li>display<ul><li>block：指定标签为块级元素</li><li>inline：指定标签为行内元素</li><li>none：隐藏元素</li></ul></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>显示属性<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        div,span&#123;</span><br><span class="line">            background-color: red;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        span&#123;</span><br><span class="line"><span class="css">            <span class="selector-tag">display</span>: <span class="selector-tag">block</span>; <span class="comment">/*指定标签为块级元素*/</span></span></span><br><span class="line">            text-align: center;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        div&#123;</span><br><span class="line"><span class="css">            <span class="selector-tag">display</span>: <span class="selector-tag">none</span>; <span class="comment">/*指定标签为行内元素*/</span></span></span><br><span class="line">            text-align: center;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        ul li&#123;</span><br><span class="line">            display: inline;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>内联标签span1<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>内联标签span2<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>内联标签span3<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>块级标签div1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>块级标签div2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>块级标签div3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>萨瓦迪卡<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>鼓励娜扎<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>马尔扎哈<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、CSS概述&quot;&gt;&lt;a href=&quot;#一、CSS概述&quot; class=&quot;headerlink&quot; title=&quot;一、CSS概述&quot;&gt;&lt;/a&gt;一、CSS概述&lt;/h2&gt;&lt;p&gt;概念：层叠样式表（Cascading Style Sheet）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;层叠样式: 对同一个标签添加多个不同的样式,所有样式会叠加在一起展示出效果&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;作用：页面美化和控制布局&lt;/p&gt;
&lt;p&gt;CSS的优点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;实现了样式和内容的分离，提高了显示效果和样式的复用性。&lt;/li&gt;
&lt;li&gt;降低耦合性，分工更加明确，CSS专门用于美化，HTML专门用于结构搭建。&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="JavaWeb" scheme="http://sunmoon.com/categories/JavaWeb/"/>
    
    
      <category term="前端" scheme="http://sunmoon.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="CSS" scheme="http://sunmoon.com/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>HTML入门</title>
    <link href="http://sunmoon.com/2020/08/16/HTML%E5%85%A5%E9%97%A8/"/>
    <id>http://sunmoon.com/2020/08/16/HTML%E5%85%A5%E9%97%A8/</id>
    <published>2020-08-16T11:50:11.000Z</published>
    <updated>2020-08-16T11:54:59.873Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、HTML概述"><a href="#一、HTML概述" class="headerlink" title="一、HTML概述"></a>一、HTML概述</h2><p>HTML: (Hyper Text Markup Language)超文本标记语言。</p><ul><li>超文本:不仅可以展示文字,还可以显示超链接,图片,音乐,视频等丰富内容.</li><li>标记语言:描述特定功能的标签。</li><li>W3C(World Wide Web Consortium)世界万维网联盟给我们定义好了这套标签。</li></ul><blockquote><p>html和xml：</p><ul><li><p>xml（EXtensible Markup Language）：</p><ul><li>特点：标签自定义，存储数据</li></ul></li><li><p>html（Hyper Text Markup Language）：</p><ul><li>特点：标签预定义（语义，功能）、展示数据</li></ul></li></ul></blockquote><a id="more"></a><h2 id="二、HTML基础"><a href="#二、HTML基础" class="headerlink" title="二、HTML基础"></a>二、HTML基础</h2><h3 id="2-1-入门案例"><a href="#2-1-入门案例" class="headerlink" title="2.1 入门案例"></a>2.1 入门案例</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span> <span class="comment">&lt;!--文档声明：声明当前的html是5的这个版本--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span> <span class="comment">&lt;!--声明当前页面的字符集--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>标题<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    hello，world！！！</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-2-HTML组成和规范"><a href="#2-2-HTML组成和规范" class="headerlink" title="2.2 HTML组成和规范"></a>2.2 HTML组成和规范</h3><ol><li><p>html文档声明：<code>&lt;!DOCTYPE html&gt;</code></p><ul><li>要求：必须在页面的第一行，固定值</li></ul></li><li><p>html预定义标签</p><ul><li>双标签：<code>&lt;html&gt;&lt;/HTML&gt;</code></li><li>单标签：<code>&lt;img&gt;</code></li><li>特点：html语法比较松散</li></ul></li><li><p>html属性</p><ul><li>语法：<code>&lt;html 属性名=&quot;属性值&quot; 属性名=&#39;属性值&#39;&gt;&lt;/HTML&gt;</code></li><li>特点：属性必须在开始标签</li></ul></li><li><p>html文本</p><ul><li>特点：写在指定的标签体中</li></ul></li><li><p>html注释</p><ul><li><code>&lt;!-- 注释内容 --&gt;</code></li></ul></li></ol><h2 id="三、HTML常用标签"><a href="#三、HTML常用标签" class="headerlink" title="三、HTML常用标签"></a>三、HTML常用标签</h2><p>标题标签：h1~h6</p><ul><li><code>&lt;h1&gt;&lt;/h1&gt; | &lt;h2&gt;&lt;/h2&gt; | ....</code></li></ul><p>水平线：<code>&lt;hr&gt;</code></p><p>段落：<code>&lt;p&gt;&lt;/p&gt;</code></p><p>换行：<code>&lt;br&gt;</code></p><p>超链接：<code>&lt;a href=&quot;跳转路径&quot; target=&quot;跳转方式&quot;&gt;&lt;/a&gt;</code></p><ul><li>href<ul><li>绝对地址</li><li>相对地址<ul><li><code>./</code>当前目录</li><li><code>../</code>上一级目录</li></ul></li></ul></li><li>target<ul><li><code>_self</code>：<strong>默认值</strong>，在当前页跳转</li><li><code>_blank</code>：打开一个新标签页</li></ul></li></ul><p>img：<code>&lt;img src=&quot;图片地址&quot; width=&quot;图片宽度,单位px(像素)&quot; alt=&quot;图片加载失败显示的文字&quot;&gt;</code></p><p>列表：</p><ul><li><code>ul</code>：无序列表</li><li><code>ol</code>：有序列表</li><li><code>li</code>：列表项</li></ul><p>容器：</p><ul><li>div：<code>&lt;div&gt;内容&lt;/div&gt;</code><ul><li>块级元素，占一行</li></ul></li><li>span：<code>&lt;span&gt;内容&lt;/span&gt;</code><ul><li>行内元素，根据内容自适应大小</li></ul></li></ul><p>转义字符：</p><ul><li><code>&amp;nbsp;</code>：英文空格</li><li><code>&amp;emsp;</code>：中文空格</li></ul><p>表格：</p><ul><li>table：定义表格<ul><li>width：宽度</li><li>border：边框</li><li>cellpadding：定义内容和单元格的距离</li><li>cellspacing：定义单元格之间的距离。如果指定为0，则单元格的线会合为一条、</li><li>bgcolor：背景色</li><li>align：对齐方式</li></ul></li><li>tr：定义行<ul><li>bgcolor：背景色</li><li>align：对齐方式</li></ul></li><li>td：定义单元格<ul><li>colspan：合并列</li><li>rowspan：合并行</li></ul></li><li>th：定义表头单元格</li><li><code>&lt;caption&gt;</code>：表格标题</li><li><code>&lt;thead&gt;</code>：表示表格的头部分</li><li><code>&lt;tbody&gt;</code>：表示表格的体部分</li><li><code>&lt;tfoot&gt;</code>：表示表格的脚部分</li></ul><h2 id="四、HTML表单"><a href="#四、HTML表单" class="headerlink" title="四、HTML表单"></a>四、HTML表单</h2><p>表单：</p><ul><li><code>&lt;form&gt;&lt;/form&gt;</code> ：它只是一个容器（我们看不到），所有的表单项必须被它包裹，才能采集和发送…</li></ul><p>常用属性：</p><ul><li>action：表单的提交地址，暂时使用#代替（#：表示当前页面）</li><li>method：表单的提交方式，有二种：get（默认值）  | post<ul><li>get<ul><li>格式：页面地址?参数名=参数值 &amp; 参数名=参数值<ul><li>请求参数在地址栏拼接</li><li>请求方式不太安全</li><li>请求大小是有限制</li></ul></li></ul></li><li>post<ul><li>格式：在http协议请求体；参数名=参数值 &amp; 参数名=参数值<ul><li>参数不在地址拼接</li><li>请求方式相对安全</li><li>请求大小是没有限制</li></ul></li></ul></li></ul></li></ul><p>表单项：</p><ul><li><p>文本框</p><ul><li><p><code>&lt;input type=&quot;&quot; name=&quot;&quot; value=&quot;&quot;/&gt;</code></p></li><li><p>type 类型，有很多种，不同类型有不同的功能和展示效果</p><ul><li>text：普通文本框</li><li>password：密码框 特点：掩码</li><li>date：日期选择框</li><li>radio：单选框<ul><li>特点：name属性相同分为一组，完成互斥效果</li><li>默认选中：checked</li></ul></li><li>checkbox：复选框<ul><li>特点：name属性相同分为一组，不会出现互斥的效果</li><li>默认选中：checked</li></ul></li><li>file：文件上传<ul><li>要求：表单的提交方式必须为post</li></ul></li><li>submit：提交按钮<ul><li>功能：将表单提交到服务器</li><li>注意：此按钮不需要name属性，value是按钮显示名称</li></ul></li><li>reset：重置按钮<ul><li>功能：将表单元素重置</li></ul></li><li>button：普通按钮，通常与js结合使用</li></ul><blockquote><p>注意：</p><ul><li>name 文本框名称，必须存在，不然此表单的不会被提交</li><li>value 文本框的值 （1.用户输入  2.用户选择）</li></ul></blockquote></li></ul></li><li><p>下拉框</p><ul><li>语法：<code>&lt;select name=&quot;&quot; multiple&gt;&lt;select&gt;</code><ul><li>multiple ：多选</li><li>下拉选项：<code>&lt;option value=&quot;&quot;&gt;&lt;/option&gt;</code><ul><li>默认选中：selected</li></ul></li></ul></li></ul></li><li><p>文本域</p><ul><li>语法：<code>&lt;textarea name=&quot;&quot;&gt; &lt;/textarea&gt;</code></li><li>常用属性：<ul><li>rows：行高</li><li>cols：列宽</li></ul></li></ul></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>11-表单控件<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"#"</span> <span class="attr">method</span>=<span class="string">"get"</span>&gt;</span></span><br><span class="line">    用户：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">placeholder</span>=<span class="string">"请输入用户名"</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    密码：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">placeholder</span>=<span class="string">"请输入密码"</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    生日：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"date"</span> <span class="attr">name</span>=<span class="string">"birthday"</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    性别：</span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"male"</span>&gt;</span>男<span class="tag">&lt;/<span class="name">label</span>&gt;</span> <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"male"</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"gender"</span> <span class="attr">value</span>=<span class="string">"男"</span> <span class="attr">checked</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"female"</span>&gt;</span>女<span class="tag">&lt;/<span class="name">label</span>&gt;</span> <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"female"</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"gender"</span> <span class="attr">value</span>=<span class="string">"女"</span> &gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    爱好：</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"hobby"</span> <span class="attr">value</span>=<span class="string">"somke"</span>&gt;</span> 抽烟</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"hobby"</span> <span class="attr">value</span>=<span class="string">"drink"</span> <span class="attr">checked</span>&gt;</span> 喝酒</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"hobby"</span> <span class="attr">value</span>=<span class="string">"perm"</span>&gt;</span>  烫头 <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    头像：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">name</span>=<span class="string">"pic"</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    学历：</span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">"edu"</span> <span class="attr">multiple</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"1"</span>&gt;</span>小学<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"2"</span>&gt;</span>初中<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"3"</span> &gt;</span>高中<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"4"</span> <span class="attr">selected</span>&gt;</span>大学<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    介绍：</span><br><span class="line">    <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">name</span>=<span class="string">"intro"</span> <span class="attr">rows</span>=<span class="string">"10"</span> <span class="attr">cols</span>=<span class="string">"30"</span>&gt;</span> <span class="tag">&lt;/<span class="name">textarea</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"注册 | 登录 | 提交"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"reset"</span> <span class="attr">value</span>=<span class="string">"重置"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"我是普通按钮，在表单中没啥卵用"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、HTML概述&quot;&gt;&lt;a href=&quot;#一、HTML概述&quot; class=&quot;headerlink&quot; title=&quot;一、HTML概述&quot;&gt;&lt;/a&gt;一、HTML概述&lt;/h2&gt;&lt;p&gt;HTML: (Hyper Text Markup Language)超文本标记语言。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;超文本:不仅可以展示文字,还可以显示超链接,图片,音乐,视频等丰富内容.&lt;/li&gt;
&lt;li&gt;标记语言:描述特定功能的标签。&lt;/li&gt;
&lt;li&gt;W3C(World Wide Web Consortium)世界万维网联盟给我们定义好了这套标签。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;html和xml：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;xml（EXtensible Markup Language）：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;特点：标签自定义，存储数据&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;html（Hyper Text Markup Language）：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;特点：标签预定义（语义，功能）、展示数据&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="JavaWeb" scheme="http://sunmoon.com/categories/JavaWeb/"/>
    
    
      <category term="前端" scheme="http://sunmoon.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="HTML" scheme="http://sunmoon.com/tags/HTML/"/>
    
  </entry>
  
</feed>
